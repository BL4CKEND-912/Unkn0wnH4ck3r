// dear imgui, v1.63
// (drawing and font code)

// Contains implementation for
// - Default styles
// - ImDrawList
// - ImDrawData
// - ImFontAtlas
// - Internal Render Helpers
// - ImFont
// - Default font data

#if defined(_MSC_VER) && !defined(_CRT_SECURE_NO_WARNINGS)
#define _CRT_SECURE_NO_WARNINGS
#endif

#include "imgui.h"
#ifndef IMGUI_DEFINE_MATH_OPERATORS
#define IMGUI_DEFINE_MATH_OPERATORS
#endif
#include "imgui_internal.h"

#include <stdio.h>      // vsnprintf, sscanf, printf
#if !defined(alloca)
#if defined(__GLIBC__) || defined(__sun) || defined(__CYGWIN__)
#include <alloca.h>     // alloca (glibc uses <alloca.h>. Note that Cygwin may have _WIN32 defined, so the order matters here)
#elif defined(_WIN32)
#include <malloc.h>     // alloca
#if !defined(alloca)
#define alloca _alloca  // for clang with MS Codegen
#endif
#else
#include <stdlib.h>     // alloca
#endif
#endif

// Visual Studio warnings
#ifdef _MSC_VER
#pragma warning (disable: 4505) // unreferenced local function has been removed (stb stuff)
#pragma warning (disable: 4996) // 'This function or variable may be unsafe': strcpy, strdup, sprintf, vsnprintf, sscanf, fopen
#endif

// Clang/GCC warnings with -Weverything
#ifdef __clang__
#pragma clang diagnostic ignored "-Wold-style-cast"         // warning : use of old-style cast                              // yes, they are more terse.
#pragma clang diagnostic ignored "-Wfloat-equal"            // warning : comparing floating point with == or != is unsafe   // storing and comparing against same constants ok.
#pragma clang diagnostic ignored "-Wglobal-constructors"    // warning : declaration requires a global destructor           // similar to above, not sure what the exact difference it.
#pragma clang diagnostic ignored "-Wsign-conversion"        // warning : implicit conversion changes signedness             //
#if __has_warning("-Wcomma")
#pragma clang diagnostic ignored "-Wcomma"                  // warning : possible misuse of comma operator here             //
#endif
#if __has_warning("-Wreserved-id-macro")
#pragma clang diagnostic ignored "-Wreserved-id-macro"      // warning : macro name is a reserved identifier                //
#endif
#if __has_warning("-Wdouble-promotion")
#pragma clang diagnostic ignored "-Wdouble-promotion"       // warning: implicit conversion from 'float' to 'double' when passing argument to function
#endif
#elif defined(__GNUC__)
#pragma GCC diagnostic ignored "-Wunused-function"          // warning: 'xxxx' defined but not used
#pragma GCC diagnostic ignored "-Wdouble-promotion"         // warning: implicit conversion from 'float' to 'double' when passing argument to function
#pragma GCC diagnostic ignored "-Wconversion"               // warning: conversion to 'xxxx' from 'xxxx' may alter its value
#if __GNUC__ >= 8
#pragma GCC diagnostic ignored "-Wclass-memaccess"          // warning: 'memset/memcpy' clearing/writing an object of type 'xxxx' with no trivial copy-assignment; use assignment or value-initialization instead
#endif
#endif

//-------------------------------------------------------------------------
// STB libraries implementation
//-------------------------------------------------------------------------

// Compile time options:
//#define IMGUI_STB_NAMESPACE           ImGuiStb
//#define IMGUI_STB_TRUETYPE_FILENAME   "my_folder/stb_truetype.h"
//#define IMGUI_STB_RECT_PACK_FILENAME  "my_folder/stb_rect_pack.h"
//#define IMGUI_DISABLE_STB_TRUETYPE_IMPLEMENTATION
//#define IMGUI_DISABLE_STB_RECT_PACK_IMPLEMENTATION

#ifdef IMGUI_STB_NAMESPACE
namespace IMGUI_STB_NAMESPACE
{
#endif

#ifdef _MSC_VER
#pragma warning (push)
#pragma warning (disable: 4456)                             // declaration of 'xx' hides previous local declaration
#endif

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-function"
#pragma clang diagnostic ignored "-Wmissing-prototypes"
#pragma clang diagnostic ignored "-Wimplicit-fallthrough"
#pragma clang diagnostic ignored "-Wcast-qual"              // warning : cast from 'const xxxx *' to 'xxx *' drops const qualifier //
#endif

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wtype-limits"              // warning: comparison is always true due to limited range of data type [-Wtype-limits]
#pragma GCC diagnostic ignored "-Wcast-qual"                // warning: cast from type 'const xxxx *' to type 'xxxx *' casts away qualifiers
#endif

#ifndef STB_RECT_PACK_IMPLEMENTATION                        // in case the user already have an implementation in the _same_ compilation unit (e.g. unity builds)
#ifndef IMGUI_DISABLE_STB_RECT_PACK_IMPLEMENTATION
#define STBRP_STATIC
#define STBRP_ASSERT(x)     IM_ASSERT(x)
#define STBRP_SORT          ImQsort
#define STB_RECT_PACK_IMPLEMENTATION
#endif
#ifdef IMGUI_STB_RECT_PACK_FILENAME
#include IMGUI_STB_RECT_PACK_FILENAME
#else
#include "stb_rect_pack.h"
#endif
#endif

#ifndef STB_TRUETYPE_IMPLEMENTATION                         // in case the user already have an implementation in the _same_ compilation unit (e.g. unity builds)
#ifndef IMGUI_DISABLE_STB_TRUETYPE_IMPLEMENTATION
#define STBTT_malloc(x,u)   ((void)(u), ImGui::MemAlloc(x))
#define STBTT_free(x,u)     ((void)(u), ImGui::MemFree(x))
#define STBTT_assert(x)     IM_ASSERT(x)
#define STBTT_fmod(x,y)     ImFmod(x,y)
#define STBTT_sqrt(x)       ImSqrt(x)
#define STBTT_pow(x,y)      ImPow(x,y)
#define STBTT_fabs(x)       ImFabs(x)
#define STBTT_ifloor(x)     ((int)ImFloorStd(x))
#define STBTT_iceil(x)      ((int)ImCeil(x))
#define STBTT_STATIC
#define STB_TRUETYPE_IMPLEMENTATION
#else
#define STBTT_DEF extern
#endif
#ifdef IMGUI_STB_TRUETYPE_FILENAME
#include IMGUI_STB_TRUETYPE_FILENAME
#else
#include "stb_truetype.h"
#endif
#endif

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

#ifdef __clang__
#pragma clang diagnostic pop
#endif

#ifdef _MSC_VER
#pragma warning (pop)
#endif

#ifdef IMGUI_STB_NAMESPACE
} // namespace ImGuiStb
using namespace IMGUI_STB_NAMESPACE;
#endif

//-----------------------------------------------------------------------------
// Style functions
//-----------------------------------------------------------------------------

void ImGui::StyleColorsDark(ImGuiStyle* dst)
{
    ImGuiStyle* style = dst ? dst : &ImGui::GetStyle();
    ImVec4* colors = style->Colors;

    colors[ImGuiCol_Text]                   = ImVec4(1.00f, 1.00f, 1.00f, 1.00f);
    colors[ImGuiCol_TextDisabled]           = ImVec4(0.50f, 0.50f, 0.50f, 1.00f);
    colors[ImGuiCol_WindowBg]               = ImVec4(0.06f, 0.06f, 0.06f, 0.94f);
    colors[ImGuiCol_ChildBg]                = ImVec4(1.00f, 1.00f, 1.00f, 0.00f);
    colors[ImGuiCol_PopupBg]                = ImVec4(0.08f, 0.08f, 0.08f, 0.94f);
    colors[ImGuiCol_Border]                 = ImVec4(0.43f, 0.43f, 0.50f, 0.50f);
    colors[ImGuiCol_BorderShadow]           = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_FrameBg]                = ImVec4(0.16f, 0.29f, 0.48f, 0.54f);
    colors[ImGuiCol_FrameBgHovered]         = ImVec4(0.26f, 0.59f, 0.98f, 0.40f);
    colors[ImGuiCol_FrameBgActive]          = ImVec4(0.26f, 0.59f, 0.98f, 0.67f);
    colors[ImGuiCol_TitleBg]                = ImVec4(0.04f, 0.04f, 0.04f, 1.00f);
    colors[ImGuiCol_TitleBgActive]          = ImVec4(0.16f, 0.29f, 0.48f, 1.00f);
    colors[ImGuiCol_TitleBgCollapsed]       = ImVec4(0.00f, 0.00f, 0.00f, 0.51f);
    colors[ImGuiCol_MenuBarBg]              = ImVec4(0.14f, 0.14f, 0.14f, 1.00f);
    colors[ImGuiCol_ScrollbarBg]            = ImVec4(0.02f, 0.02f, 0.02f, 0.53f);
    colors[ImGuiCol_ScrollbarGrab]          = ImVec4(0.31f, 0.31f, 0.31f, 1.00f);
    colors[ImGuiCol_ScrollbarGrabHovered]   = ImVec4(0.41f, 0.41f, 0.41f, 1.00f);
    colors[ImGuiCol_ScrollbarGrabActive]    = ImVec4(0.51f, 0.51f, 0.51f, 1.00f);
    colors[ImGuiCol_CheckMark]              = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_SliderGrab]             = ImVec4(0.24f, 0.52f, 0.88f, 1.00f);
    colors[ImGuiCol_SliderGrabActive]       = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_Button]                 = ImVec4(0.26f, 0.59f, 0.98f, 0.40f);
    colors[ImGuiCol_ButtonHovered]          = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_ButtonActive]           = ImVec4(0.06f, 0.53f, 0.98f, 1.00f);
    colors[ImGuiCol_Header]                 = ImVec4(0.26f, 0.59f, 0.98f, 0.31f);
    colors[ImGuiCol_HeaderHovered]          = ImVec4(0.26f, 0.59f, 0.98f, 0.80f);
    colors[ImGuiCol_HeaderActive]           = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_Separator]              = colors[ImGuiCol_Border];
    colors[ImGuiCol_SeparatorHovered]       = ImVec4(0.10f, 0.40f, 0.75f, 0.78f);
    colors[ImGuiCol_SeparatorActive]        = ImVec4(0.10f, 0.40f, 0.75f, 1.00f);
    colors[ImGuiCol_ResizeGrip]             = ImVec4(0.26f, 0.59f, 0.98f, 0.25f);
    colors[ImGuiCol_ResizeGripHovered]      = ImVec4(0.26f, 0.59f, 0.98f, 0.67f);
    colors[ImGuiCol_ResizeGripActive]       = ImVec4(0.26f, 0.59f, 0.98f, 0.95f);
    colors[ImGuiCol_PlotLines]              = ImVec4(0.61f, 0.61f, 0.61f, 1.00f);
    colors[ImGuiCol_PlotLinesHovered]       = ImVec4(1.00f, 0.43f, 0.35f, 1.00f);
    colors[ImGuiCol_PlotHistogram]          = ImVec4(0.90f, 0.70f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotHistogramHovered]   = ImVec4(1.00f, 0.60f, 0.00f, 1.00f);
    colors[ImGuiCol_TextSelectedBg]         = ImVec4(0.26f, 0.59f, 0.98f, 0.35f);
    colors[ImGuiCol_DragDropTarget]         = ImVec4(1.00f, 1.00f, 0.00f, 0.90f);
    colors[ImGuiCol_NavHighlight]           = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_NavWindowingHighlight]  = ImVec4(1.00f, 1.00f, 1.00f, 0.70f);
    colors[ImGuiCol_NavWindowingDimBg]      = ImVec4(0.80f, 0.80f, 0.80f, 0.20f);
    colors[ImGuiCol_ModalWindowDimBg]       = ImVec4(0.80f, 0.80f, 0.80f, 0.35f);
}

void ImGui::StyleColorsClassic(ImGuiStyle* dst)
{
    ImGuiStyle* style = dst ? dst : &ImGui::GetStyle();
    ImVec4* colors = style->Colors;

    colors[ImGuiCol_Text]                   = ImVec4(0.90f, 0.90f, 0.90f, 1.00f);
    colors[ImGuiCol_TextDisabled]           = ImVec4(0.60f, 0.60f, 0.60f, 1.00f);
    colors[ImGuiCol_WindowBg]               = ImVec4(0.00f, 0.00f, 0.00f, 0.70f);
    colors[ImGuiCol_ChildBg]                = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_PopupBg]                = ImVec4(0.11f, 0.11f, 0.14f, 0.92f);
    colors[ImGuiCol_Border]                 = ImVec4(0.50f, 0.50f, 0.50f, 0.50f);
    colors[ImGuiCol_BorderShadow]           = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_FrameBg]                = ImVec4(0.43f, 0.43f, 0.43f, 0.39f);
    colors[ImGuiCol_FrameBgHovered]         = ImVec4(0.47f, 0.47f, 0.69f, 0.40f);
    colors[ImGuiCol_FrameBgActive]          = ImVec4(0.42f, 0.41f, 0.64f, 0.69f);
    colors[ImGuiCol_TitleBg]                = ImVec4(0.27f, 0.27f, 0.54f, 0.83f);
    colors[ImGuiCol_TitleBgActive]          = ImVec4(0.32f, 0.32f, 0.63f, 0.87f);
    colors[ImGuiCol_TitleBgCollapsed]       = ImVec4(0.40f, 0.40f, 0.80f, 0.20f);
    colors[ImGuiCol_MenuBarBg]              = ImVec4(0.40f, 0.40f, 0.55f, 0.80f);
    colors[ImGuiCol_ScrollbarBg]            = ImVec4(0.20f, 0.25f, 0.30f, 0.60f);
    colors[ImGuiCol_ScrollbarGrab]          = ImVec4(0.40f, 0.40f, 0.80f, 0.30f);
    colors[ImGuiCol_ScrollbarGrabHovered]   = ImVec4(0.40f, 0.40f, 0.80f, 0.40f);
    colors[ImGuiCol_ScrollbarGrabActive]    = ImVec4(0.41f, 0.39f, 0.80f, 0.60f);
    colors[ImGuiCol_CheckMark]              = ImVec4(0.90f, 0.90f, 0.90f, 0.50f);
    colors[ImGuiCol_SliderGrab]             = ImVec4(1.00f, 1.00f, 1.00f, 0.30f);
    colors[ImGuiCol_SliderGrabActive]       = ImVec4(0.41f, 0.39f, 0.80f, 0.60f);
    colors[ImGuiCol_Button]                 = ImVec4(0.35f, 0.40f, 0.61f, 0.62f);
    colors[ImGuiCol_ButtonHovered]          = ImVec4(0.40f, 0.48f, 0.71f, 0.79f);
    colors[ImGuiCol_ButtonActive]           = ImVec4(0.46f, 0.54f, 0.80f, 1.00f);
    colors[ImGuiCol_Header]                 = ImVec4(0.40f, 0.40f, 0.90f, 0.45f);
    colors[ImGuiCol_HeaderHovered]          = ImVec4(0.45f, 0.45f, 0.90f, 0.80f);
    colors[ImGuiCol_HeaderActive]           = ImVec4(0.53f, 0.53f, 0.87f, 0.80f);
    colors[ImGuiCol_Separator]              = ImVec4(0.50f, 0.50f, 0.50f, 1.00f);
    colors[ImGuiCol_SeparatorHovered]       = ImVec4(0.60f, 0.60f, 0.70f, 1.00f);
    colors[ImGuiCol_SeparatorActive]        = ImVec4(0.70f, 0.70f, 0.90f, 1.00f);
    colors[ImGuiCol_ResizeGrip]             = ImVec4(1.00f, 1.00f, 1.00f, 0.16f);
    colors[ImGuiCol_ResizeGripHovered]      = ImVec4(0.78f, 0.82f, 1.00f, 0.60f);
    colors[ImGuiCol_ResizeGripActive]       = ImVec4(0.78f, 0.82f, 1.00f, 0.90f);
    colors[ImGuiCol_PlotLines]              = ImVec4(1.00f, 1.00f, 1.00f, 1.00f);
    colors[ImGuiCol_PlotLinesHovered]       = ImVec4(0.90f, 0.70f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotHistogram]          = ImVec4(0.90f, 0.70f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotHistogramHovered]   = ImVec4(1.00f, 0.60f, 0.00f, 1.00f);
    colors[ImGuiCol_TextSelectedBg]         = ImVec4(0.00f, 0.00f, 1.00f, 0.35f);
    colors[ImGuiCol_DragDropTarget]         = ImVec4(1.00f, 1.00f, 0.00f, 0.90f);
    colors[ImGuiCol_NavHighlight]           = colors[ImGuiCol_HeaderHovered];
    colors[ImGuiCol_NavWindowingHighlight]  = ImVec4(1.00f, 1.00f, 1.00f, 0.70f);
    colors[ImGuiCol_NavWindowingDimBg]      = ImVec4(0.80f, 0.80f, 0.80f, 0.20f);
    colors[ImGuiCol_ModalWindowDimBg]       = ImVec4(0.20f, 0.20f, 0.20f, 0.35f);
}

// Those light colors are better suited with a thicker font than the default one + FrameBorder
void ImGui::StyleColorsLight(ImGuiStyle* dst)
{
    ImGuiStyle* style = dst ? dst : &ImGui::GetStyle();
    ImVec4* colors = style->Colors;

    colors[ImGuiCol_Text]                   = ImVec4(0.00f, 0.00f, 0.00f, 1.00f);
    colors[ImGuiCol_TextDisabled]           = ImVec4(0.60f, 0.60f, 0.60f, 1.00f);
    colors[ImGuiCol_WindowBg]               = ImVec4(0.94f, 0.94f, 0.94f, 1.00f);
    colors[ImGuiCol_ChildBg]                = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_PopupBg]                = ImVec4(1.00f, 1.00f, 1.00f, 0.98f);
    colors[ImGuiCol_Border]                 = ImVec4(0.00f, 0.00f, 0.00f, 0.30f);
    colors[ImGuiCol_BorderShadow]           = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_FrameBg]                = ImVec4(1.00f, 1.00f, 1.00f, 1.00f);
    colors[ImGuiCol_FrameBgHovered]         = ImVec4(0.26f, 0.59f, 0.98f, 0.40f);
    colors[ImGuiCol_FrameBgActive]          = ImVec4(0.26f, 0.59f, 0.98f, 0.67f);
    colors[ImGuiCol_TitleBg]                = ImVec4(0.96f, 0.96f, 0.96f, 1.00f);
    colors[ImGuiCol_TitleBgActive]          = ImVec4(0.82f, 0.82f, 0.82f, 1.00f);
    colors[ImGuiCol_TitleBgCollapsed]       = ImVec4(1.00f, 1.00f, 1.00f, 0.51f);
    colors[ImGuiCol_MenuBarBg]              = ImVec4(0.86f, 0.86f, 0.86f, 1.00f);
    colors[ImGuiCol_ScrollbarBg]            = ImVec4(0.98f, 0.98f, 0.98f, 0.53f);
    colors[ImGuiCol_ScrollbarGrab]          = ImVec4(0.69f, 0.69f, 0.69f, 0.80f);
    colors[ImGuiCol_ScrollbarGrabHovered]   = ImVec4(0.49f, 0.49f, 0.49f, 0.80f);
    colors[ImGuiCol_ScrollbarGrabActive]    = ImVec4(0.49f, 0.49f, 0.49f, 1.00f);
    colors[ImGuiCol_CheckMark]              = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_SliderGrab]             = ImVec4(0.26f, 0.59f, 0.98f, 0.78f);
    colors[ImGuiCol_SliderGrabActive]       = ImVec4(0.46f, 0.54f, 0.80f, 0.60f);
    colors[ImGuiCol_Button]                 = ImVec4(0.26f, 0.59f, 0.98f, 0.40f);
    colors[ImGuiCol_ButtonHovered]          = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_ButtonActive]           = ImVec4(0.06f, 0.53f, 0.98f, 1.00f);
    colors[ImGuiCol_Header]                 = ImVec4(0.26f, 0.59f, 0.98f, 0.31f);
    colors[ImGuiCol_HeaderHovered]          = ImVec4(0.26f, 0.59f, 0.98f, 0.80f);
    colors[ImGuiCol_HeaderActive]           = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_Separator]              = ImVec4(0.39f, 0.39f, 0.39f, 1.00f);
    colors[ImGuiCol_SeparatorHovered]       = ImVec4(0.14f, 0.44f, 0.80f, 0.78f);
    colors[ImGuiCol_SeparatorActive]        = ImVec4(0.14f, 0.44f, 0.80f, 1.00f);
    colors[ImGuiCol_ResizeGrip]             = ImVec4(0.80f, 0.80f, 0.80f, 0.56f);
    colors[ImGuiCol_ResizeGripHovered]      = ImVec4(0.26f, 0.59f, 0.98f, 0.67f);
    colors[ImGuiCol_ResizeGripActive]       = ImVec4(0.26f, 0.59f, 0.98f, 0.95f);
    colors[ImGuiCol_PlotLines]              = ImVec4(0.39f, 0.39f, 0.39f, 1.00f);
    colors[ImGuiCol_PlotLinesHovered]       = ImVec4(1.00f, 0.43f, 0.35f, 1.00f);
    colors[ImGuiCol_PlotHistogram]          = ImVec4(0.90f, 0.70f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotHistogramHovered]   = ImVec4(1.00f, 0.45f, 0.00f, 1.00f);
    colors[ImGuiCol_TextSelectedBg]         = ImVec4(0.26f, 0.59f, 0.98f, 0.35f);
    colors[ImGuiCol_DragDropTarget]         = ImVec4(0.26f, 0.59f, 0.98f, 0.95f);
    colors[ImGuiCol_NavHighlight]           = colors[ImGuiCol_HeaderHovered];
    colors[ImGuiCol_NavWindowingHighlight]  = ImVec4(0.70f, 0.70f, 0.70f, 0.70f);
    colors[ImGuiCol_NavWindowingDimBg]      = ImVec4(0.20f, 0.20f, 0.20f, 0.20f);
    colors[ImGuiCol_ModalWindowDimBg]       = ImVec4(0.20f, 0.20f, 0.20f, 0.35f);
}

void ImGui::Pink()
{
	ImGuiStyle& style = ImGui::GetStyle();

	style.Colors[ImGuiCol_Text] = ImVec4(0.92f, 0.92f, 0.85f, 1.00f);
	style.Colors[ImGuiCol_TextDisabled] = ImVec4(0.92f, 0.92f, 0.85f, 0.58f);
	style.Colors[ImGuiCol_WindowBg] = ImVec4(0.20f, 0.19f, 0.14f, 0.55f);
	style.Colors[ImGuiCol_ChildWindowBg] = ImVec4(0.49f, 0.47f, 0.20f, 0.00f);
	style.Colors[ImGuiCol_PopupBg] = ImVec4(0.05f, 0.05f, 0.10f, 0.90f);
	style.Colors[ImGuiCol_Border] = ImVec4(0.92f, 0.92f, 0.85f, 0.30f);
	style.Colors[ImGuiCol_BorderShadow] = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
	style.Colors[ImGuiCol_FrameBg] = ImVec4(0.49f, 0.47f, 0.20f, 1.00f);
	style.Colors[ImGuiCol_FrameBgHovered] = ImVec4(0.78f, 0.17f, 0.75f, 0.68f);
	style.Colors[ImGuiCol_FrameBgActive] = ImVec4(0.78f, 0.17f, 0.75f, 1.00f);
	style.Colors[ImGuiCol_TitleBg] = ImVec4(0.78f, 0.17f, 0.75f, 0.45f);
	style.Colors[ImGuiCol_TitleBgCollapsed] = ImVec4(0.78f, 0.17f, 0.75f, 0.35f);
	style.Colors[ImGuiCol_TitleBgActive] = ImVec4(0.78f, 0.17f, 0.75f, 0.78f);
	style.Colors[ImGuiCol_MenuBarBg] = ImVec4(0.49f, 0.47f, 0.20f, 0.57f);
	style.Colors[ImGuiCol_ScrollbarBg] = ImVec4(0.49f, 0.47f, 0.20f, 1.00f);
	style.Colors[ImGuiCol_ScrollbarGrab] = ImVec4(0.78f, 0.17f, 0.75f, 0.31f);
	style.Colors[ImGuiCol_ScrollbarGrabHovered] = ImVec4(0.78f, 0.17f, 0.75f, 0.78f);
	style.Colors[ImGuiCol_ScrollbarGrabActive] = ImVec4(0.78f, 0.17f, 0.75f, 1.00f);
	style.Colors[ImGuiCol_CheckMark] = ImVec4(0.78f, 0.17f, 0.75f, 0.80f);
	style.Colors[ImGuiCol_SliderGrab] = ImVec4(0.78f, 0.17f, 0.75f, 0.24f);
	style.Colors[ImGuiCol_SliderGrabActive] = ImVec4(0.78f, 0.17f, 0.75f, 1.00f);
	style.Colors[ImGuiCol_Button] = ImVec4(0.78f, 0.17f, 0.75f, 0.44f);
	style.Colors[ImGuiCol_ButtonHovered] = ImVec4(0.78f, 0.17f, 0.75f, 0.86f);
	style.Colors[ImGuiCol_ButtonActive] = ImVec4(0.78f, 0.17f, 0.75f, 1.00f);
	style.Colors[ImGuiCol_Header] = ImVec4(0.78f, 0.17f, 0.75f, 0.76f);
	style.Colors[ImGuiCol_HeaderHovered] = ImVec4(0.78f, 0.17f, 0.75f, 0.86f);
	style.Colors[ImGuiCol_HeaderActive] = ImVec4(0.78f, 0.17f, 0.75f, 1.00f);
	style.Colors[ImGuiCol_Column] = ImVec4(0.92f, 0.92f, 0.85f, 0.32f);
	style.Colors[ImGuiCol_ColumnHovered] = ImVec4(0.92f, 0.92f, 0.85f, 0.78f);
	style.Colors[ImGuiCol_ColumnActive] = ImVec4(0.92f, 0.92f, 0.85f, 1.00f);
	style.Colors[ImGuiCol_ResizeGrip] = ImVec4(0.78f, 0.17f, 0.75f, 0.20f);
	style.Colors[ImGuiCol_ResizeGripHovered] = ImVec4(0.78f, 0.17f, 0.75f, 0.78f);
	style.Colors[ImGuiCol_ResizeGripActive] = ImVec4(0.78f, 0.17f, 0.75f, 1.00f);
	style.Colors[ImGuiCol_PlotLines] = ImVec4(0.92f, 0.92f, 0.85f, 0.63f);
	style.Colors[ImGuiCol_PlotLinesHovered] = ImVec4(0.78f, 0.17f, 0.75f, 1.00f);
	style.Colors[ImGuiCol_PlotHistogram] = ImVec4(0.92f, 0.92f, 0.85f, 0.63f);
	style.Colors[ImGuiCol_PlotHistogramHovered] = ImVec4(0.78f, 0.17f, 0.75f, 1.00f);
	style.Colors[ImGuiCol_TextSelectedBg] = ImVec4(0.78f, 0.17f, 0.75f, 0.43f);
	style.Colors[ImGuiCol_ModalWindowDarkening] = ImVec4(0.20f, 0.20f, 0.20f, 0.35f);
}

void ImGui::Purple()
{
	ImGuiStyle& style = ImGui::GetStyle();

	style.Colors[ImGuiCol_Text] = ImVec4(0.87f, 0.85f, 0.92f, 1.00f);
	style.Colors[ImGuiCol_TextDisabled] = ImVec4(0.87f, 0.85f, 0.92f, 0.58f);
	style.Colors[ImGuiCol_WindowBg] = ImVec4(0.13f, 0.12f, 0.16f, 0.71f);
	style.Colors[ImGuiCol_ChildWindowBg] = ImVec4(0.27f, 0.20f, 0.39f, 0.00f);
	style.Colors[ImGuiCol_PopupBg] = ImVec4(0.05f, 0.05f, 0.10f, 0.90f);
	style.Colors[ImGuiCol_Border] = ImVec4(0.87f, 0.85f, 0.92f, 0.30f);
	style.Colors[ImGuiCol_BorderShadow] = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
	style.Colors[ImGuiCol_FrameBg] = ImVec4(0.27f, 0.20f, 0.39f, 1.00f);
	style.Colors[ImGuiCol_FrameBgHovered] = ImVec4(0.34f, 0.19f, 0.63f, 0.68f);
	style.Colors[ImGuiCol_FrameBgActive] = ImVec4(0.46f, 0.27f, 0.80f, 1.00f);
	style.Colors[ImGuiCol_TitleBg] = ImVec4(0.34f, 0.19f, 0.63f, 0.45f);
	style.Colors[ImGuiCol_TitleBgCollapsed] = ImVec4(0.34f, 0.19f, 0.63f, 0.35f);
	style.Colors[ImGuiCol_TitleBgActive] = ImVec4(0.34f, 0.19f, 0.63f, 0.78f);
	style.Colors[ImGuiCol_MenuBarBg] = ImVec4(0.27f, 0.20f, 0.39f, 0.57f);
	style.Colors[ImGuiCol_ScrollbarBg] = ImVec4(0.27f, 0.20f, 0.39f, 1.00f);
	style.Colors[ImGuiCol_ScrollbarGrab] = ImVec4(0.34f, 0.19f, 0.63f, 0.31f);
	style.Colors[ImGuiCol_ScrollbarGrabHovered] = ImVec4(0.34f, 0.19f, 0.63f, 0.78f);
	style.Colors[ImGuiCol_ScrollbarGrabActive] = ImVec4(0.34f, 0.19f, 0.63f, 1.00f);
	style.Colors[ImGuiCol_CheckMark] = ImVec4(0.34f, 0.19f, 0.63f, 0.80f);
	style.Colors[ImGuiCol_SliderGrab] = ImVec4(0.34f, 0.19f, 0.63f, 0.24f);
	style.Colors[ImGuiCol_SliderGrabActive] = ImVec4(0.34f, 0.19f, 0.63f, 1.00f);
	style.Colors[ImGuiCol_Button] = ImVec4(0.34f, 0.19f, 0.63f, 0.44f);
	style.Colors[ImGuiCol_ButtonHovered] = ImVec4(0.34f, 0.19f, 0.63f, 0.86f);
	style.Colors[ImGuiCol_ButtonActive] = ImVec4(0.34f, 0.19f, 0.63f, 1.00f);
	style.Colors[ImGuiCol_Header] = ImVec4(0.34f, 0.19f, 0.63f, 0.76f);
	style.Colors[ImGuiCol_HeaderHovered] = ImVec4(0.34f, 0.19f, 0.63f, 0.86f);
	style.Colors[ImGuiCol_HeaderActive] = ImVec4(0.34f, 0.19f, 0.63f, 1.00f);
	style.Colors[ImGuiCol_Column] = ImVec4(0.87f, 0.85f, 0.92f, 0.32f);
	style.Colors[ImGuiCol_ColumnHovered] = ImVec4(0.87f, 0.85f, 0.92f, 0.78f);
	style.Colors[ImGuiCol_ColumnActive] = ImVec4(0.87f, 0.85f, 0.92f, 1.00f);
	style.Colors[ImGuiCol_ResizeGrip] = ImVec4(0.34f, 0.19f, 0.63f, 0.20f);
	style.Colors[ImGuiCol_ResizeGripHovered] = ImVec4(0.34f, 0.19f, 0.63f, 0.78f);
	style.Colors[ImGuiCol_ResizeGripActive] = ImVec4(0.34f, 0.19f, 0.63f, 1.00f);
	style.Colors[ImGuiCol_PlotLines] = ImVec4(0.87f, 0.85f, 0.92f, 0.63f);
	style.Colors[ImGuiCol_PlotLinesHovered] = ImVec4(0.34f, 0.19f, 0.63f, 1.00f);
	style.Colors[ImGuiCol_PlotHistogram] = ImVec4(0.87f, 0.85f, 0.92f, 0.63f);
	style.Colors[ImGuiCol_PlotHistogramHovered] = ImVec4(0.34f, 0.19f, 0.63f, 1.00f);
	style.Colors[ImGuiCol_TextSelectedBg] = ImVec4(0.34f, 0.19f, 0.63f, 0.43f);
	style.Colors[ImGuiCol_ModalWindowDarkening] = ImVec4(0.20f, 0.20f, 0.20f, 0.35f);
}

void ImGui::CherryTheme() {
	// cherry colors, 3 intensities
#define HI(v)   ImVec4(0.502f, 0.075f, 0.256f, v)
#define MED(v)  ImVec4(0.455f, 0.198f, 0.301f, v)
#define LOW(v)  ImVec4(0.232f, 0.201f, 0.271f, v)
// backgrounds (@todo: complete with BG_MED, BG_LOW)
#define BG(v)   ImVec4(0.200f, 0.220f, 0.270f, v)
// text
#define TEXT(v) ImVec4(0.860f, 0.930f, 0.890f, v)

	auto &style = ImGui::GetStyle();
	style.Colors[ImGuiCol_Text] = TEXT(0.78f);
	style.Colors[ImGuiCol_TextDisabled] = TEXT(0.28f);
	style.Colors[ImGuiCol_WindowBg] = ImVec4(0.13f, 0.14f, 0.17f, 1.00f);
	style.Colors[ImGuiCol_ChildWindowBg] = BG(0.58f);
	style.Colors[ImGuiCol_PopupBg] = BG(0.9f);
	style.Colors[ImGuiCol_Border] = ImVec4(0.31f, 0.31f, 1.00f, 0.00f);
	style.Colors[ImGuiCol_BorderShadow] = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
	style.Colors[ImGuiCol_FrameBg] = BG(1.00f);
	style.Colors[ImGuiCol_FrameBgHovered] = MED(0.78f);
	style.Colors[ImGuiCol_FrameBgActive] = MED(1.00f);
	style.Colors[ImGuiCol_TitleBg] = LOW(1.00f);
	style.Colors[ImGuiCol_TitleBgActive] = HI(1.00f);
	style.Colors[ImGuiCol_TitleBgCollapsed] = BG(0.75f);
	style.Colors[ImGuiCol_MenuBarBg] = BG(0.47f);
	style.Colors[ImGuiCol_ScrollbarBg] = BG(1.00f);
	style.Colors[ImGuiCol_ScrollbarGrab] = ImVec4(0.09f, 0.15f, 0.16f, 1.00f);
	style.Colors[ImGuiCol_ScrollbarGrabHovered] = MED(0.78f);
	style.Colors[ImGuiCol_ScrollbarGrabActive] = MED(1.00f);
	style.Colors[ImGuiCol_CheckMark] = ImVec4(0.71f, 0.22f, 0.27f, 1.00f);
	style.Colors[ImGuiCol_SliderGrab] = ImVec4(0.47f, 0.77f, 0.83f, 0.14f);
	style.Colors[ImGuiCol_SliderGrabActive] = ImVec4(0.71f, 0.22f, 0.27f, 1.00f);
	style.Colors[ImGuiCol_Button] = ImVec4(0.47f, 0.77f, 0.83f, 0.14f);
	style.Colors[ImGuiCol_ButtonHovered] = MED(0.86f);
	style.Colors[ImGuiCol_ButtonActive] = MED(1.00f);
	style.Colors[ImGuiCol_Header] = MED(0.76f);
	style.Colors[ImGuiCol_HeaderHovered] = MED(0.86f);
	style.Colors[ImGuiCol_HeaderActive] = HI(1.00f);
	style.Colors[ImGuiCol_Column] = ImVec4(0.14f, 0.16f, 0.19f, 1.00f);
	style.Colors[ImGuiCol_ColumnHovered] = MED(0.78f);
	style.Colors[ImGuiCol_ColumnActive] = MED(1.00f);
	style.Colors[ImGuiCol_ResizeGrip] = ImVec4(0.47f, 0.77f, 0.83f, 0.04f);
	style.Colors[ImGuiCol_ResizeGripHovered] = MED(0.78f);
	style.Colors[ImGuiCol_ResizeGripActive] = MED(1.00f);
	style.Colors[ImGuiCol_PlotLines] = TEXT(0.63f);
	style.Colors[ImGuiCol_PlotLinesHovered] = MED(1.00f);
	style.Colors[ImGuiCol_PlotHistogram] = TEXT(0.63f);
	style.Colors[ImGuiCol_PlotHistogramHovered] = MED(1.00f);
	style.Colors[ImGuiCol_TextSelectedBg] = MED(0.43f);
	// [...]
	style.Colors[ImGuiCol_ModalWindowDarkening] = BG(0.73f);

	style.WindowPadding = ImVec2(6, 4);
	style.WindowRounding = 0.0f;
	style.FramePadding = ImVec2(5, 2);
	style.FrameRounding = 3.0f;
	style.ItemSpacing = ImVec2(7, 1);
	style.ItemInnerSpacing = ImVec2(1, 1);
	style.TouchExtraPadding = ImVec2(0, 0);
	style.IndentSpacing = 6.0f;
	style.ScrollbarSize = 12.0f;
	style.ScrollbarRounding = 16.0f;
	style.GrabMinSize = 20.0f;
	style.GrabRounding = 2.0f;

	style.WindowTitleAlign.x = 0.50f;

	style.Colors[ImGuiCol_Border] = ImVec4(0.539f, 0.479f, 0.255f, 0.162f);
	style.FrameBorderSize = 0.0f;
	style.WindowBorderSize = 1.0f;
}

//-----------------------------------------------------------------------------
// ImDrawListData
//-----------------------------------------------------------------------------

ImDrawListSharedData::ImDrawListSharedData()
{
    Font = NULL;
    FontSize = 0.0f;
    CurveTessellationTol = 0.0f;
    ClipRectFullscreen = ImVec4(-8192.0f, -8192.0f, +8192.0f, +8192.0f);

    // Const data
    for (int i = 0; i < IM_ARRAYSIZE(CircleVtx12); i++)
    {
        const float a = ((float)i * 2 * IM_PI) / (float)IM_ARRAYSIZE(CircleVtx12);
        CircleVtx12[i] = ImVec2(ImCos(a), ImSin(a));
    }
}

//-----------------------------------------------------------------------------
// ImDrawList
//-----------------------------------------------------------------------------

void ImDrawList::Clear()
{
    CmdBuffer.resize(0);
    IdxBuffer.resize(0);
    VtxBuffer.resize(0);
    Flags = ImDrawListFlags_AntiAliasedLines | ImDrawListFlags_AntiAliasedFill;
    _VtxCurrentIdx = 0;
    _VtxWritePtr = NULL;
    _IdxWritePtr = NULL;
    _ClipRectStack.resize(0);
    _TextureIdStack.resize(0);
    _Path.resize(0);
    _ChannelsCurrent = 0;
    _ChannelsCount = 1;
    // NB: Do not clear channels so our allocations are re-used after the first frame.
}

void ImDrawList::ClearFreeMemory()
{
    CmdBuffer.clear();
    IdxBuffer.clear();
    VtxBuffer.clear();
    _VtxCurrentIdx = 0;
    _VtxWritePtr = NULL;
    _IdxWritePtr = NULL;
    _ClipRectStack.clear();
    _TextureIdStack.clear();
    _Path.clear();
    _ChannelsCurrent = 0;
    _ChannelsCount = 1;
    for (int i = 0; i < _Channels.Size; i++)
    {
        if (i == 0) memset(&_Channels[0], 0, sizeof(_Channels[0]));  // channel 0 is a copy of CmdBuffer/IdxBuffer, don't destruct again
        _Channels[i].CmdBuffer.clear();
        _Channels[i].IdxBuffer.clear();
    }
    _Channels.clear();
}

ImDrawList* ImDrawList::CloneOutput() const
{
    ImDrawList* dst = IM_NEW(ImDrawList(NULL));
    dst->CmdBuffer = CmdBuffer;
    dst->IdxBuffer = IdxBuffer;
    dst->VtxBuffer = VtxBuffer;
    dst->Flags = Flags;
    return dst;
}

// Using macros because C++ is a terrible language, we want guaranteed inline, no code in header, and no overhead in Debug builds
#define GetCurrentClipRect()    (_ClipRectStack.Size ? _ClipRectStack.Data[_ClipRectStack.Size-1]  : _Data->ClipRectFullscreen)
#define GetCurrentTextureId()   (_TextureIdStack.Size ? _TextureIdStack.Data[_TextureIdStack.Size-1] : NULL)

void ImDrawList::AddDrawCmd()
{
    ImDrawCmd draw_cmd;
    draw_cmd.ClipRect = GetCurrentClipRect();
    draw_cmd.TextureId = GetCurrentTextureId();

    IM_ASSERT(draw_cmd.ClipRect.x <= draw_cmd.ClipRect.z && draw_cmd.ClipRect.y <= draw_cmd.ClipRect.w);
    CmdBuffer.push_back(draw_cmd);
}

void ImDrawList::AddCallback(ImDrawCallback callback, void* callback_data)
{
    ImDrawCmd* current_cmd = CmdBuffer.Size ? &CmdBuffer.back() : NULL;
    if (!current_cmd || current_cmd->ElemCount != 0 || current_cmd->UserCallback != NULL)
    {
        AddDrawCmd();
        current_cmd = &CmdBuffer.back();
    }
    current_cmd->UserCallback = callback;
    current_cmd->UserCallbackData = callback_data;

    AddDrawCmd(); // Force a new command after us (see comment below)
}

// Our scheme may appears a bit unusual, basically we want the most-common calls AddLine AddRect etc. to not have to perform any check so we always have a command ready in the stack.
// The cost of figuring out if a new command has to be added or if we can merge is paid in those Update** functions only.
void ImDrawList::UpdateClipRect()
{
    // If current command is used with different settings we need to add a new command
    const ImVec4 curr_clip_rect = GetCurrentClipRect();
    ImDrawCmd* curr_cmd = CmdBuffer.Size > 0 ? &CmdBuffer.Data[CmdBuffer.Size-1] : NULL;
    if (!curr_cmd || (curr_cmd->ElemCount != 0 && memcmp(&curr_cmd->ClipRect, &curr_clip_rect, sizeof(ImVec4)) != 0) || curr_cmd->UserCallback != NULL)
    {
        AddDrawCmd();
        return;
    }

    // Try to merge with previous command if it matches, else use current command
    ImDrawCmd* prev_cmd = CmdBuffer.Size > 1 ? curr_cmd - 1 : NULL;
    if (curr_cmd->ElemCount == 0 && prev_cmd && memcmp(&prev_cmd->ClipRect, &curr_clip_rect, sizeof(ImVec4)) == 0 && prev_cmd->TextureId == GetCurrentTextureId() && prev_cmd->UserCallback == NULL)
        CmdBuffer.pop_back();
    else
        curr_cmd->ClipRect = curr_clip_rect;
}

void ImDrawList::UpdateTextureID()
{
    // If current command is used with different settings we need to add a new command
    const ImTextureID curr_texture_id = GetCurrentTextureId();
    ImDrawCmd* curr_cmd = CmdBuffer.Size ? &CmdBuffer.back() : NULL;
    if (!curr_cmd || (curr_cmd->ElemCount != 0 && curr_cmd->TextureId != curr_texture_id) || curr_cmd->UserCallback != NULL)
    {
        AddDrawCmd();
        return;
    }

    // Try to merge with previous command if it matches, else use current command
    ImDrawCmd* prev_cmd = CmdBuffer.Size > 1 ? curr_cmd - 1 : NULL;
    if (curr_cmd->ElemCount == 0 && prev_cmd && prev_cmd->TextureId == curr_texture_id && memcmp(&prev_cmd->ClipRect, &GetCurrentClipRect(), sizeof(ImVec4)) == 0 && prev_cmd->UserCallback == NULL)
        CmdBuffer.pop_back();
    else
        curr_cmd->TextureId = curr_texture_id;
}

#undef GetCurrentClipRect
#undef GetCurrentTextureId

// Render-level scissoring. This is passed down to your render function but not used for CPU-side coarse clipping. Prefer using higher-level ImGui::PushClipRect() to affect logic (hit-testing and widget culling)
void ImDrawList::PushClipRect(ImVec2 cr_min, ImVec2 cr_max, bool intersect_with_current_clip_rect)
{
    ImVec4 cr(cr_min.x, cr_min.y, cr_max.x, cr_max.y);
    if (intersect_with_current_clip_rect && _ClipRectStack.Size)
    {
        ImVec4 current = _ClipRectStack.Data[_ClipRectStack.Size-1];
        if (cr.x < current.x) cr.x = current.x;
        if (cr.y < current.y) cr.y = current.y;
        if (cr.z > current.z) cr.z = current.z;
        if (cr.w > current.w) cr.w = current.w;
    }
    cr.z = ImMax(cr.x, cr.z);
    cr.w = ImMax(cr.y, cr.w);

    _ClipRectStack.push_back(cr);
    UpdateClipRect();
}

void ImDrawList::PushClipRectFullScreen()
{
    PushClipRect(ImVec2(_Data->ClipRectFullscreen.x, _Data->ClipRectFullscreen.y), ImVec2(_Data->ClipRectFullscreen.z, _Data->ClipRectFullscreen.w));
}

void ImDrawList::PopClipRect()
{
    IM_ASSERT(_ClipRectStack.Size > 0);
    _ClipRectStack.pop_back();
    UpdateClipRect();
}

void ImDrawList::PushTextureID(ImTextureID texture_id)
{
    _TextureIdStack.push_back(texture_id);
    UpdateTextureID();
}

void ImDrawList::PopTextureID()
{
    IM_ASSERT(_TextureIdStack.Size > 0);
    _TextureIdStack.pop_back();
    UpdateTextureID();
}

void ImDrawList::ChannelsSplit(int channels_count)
{
    IM_ASSERT(_ChannelsCurrent == 0 && _ChannelsCount == 1);
    int old_channels_count = _Channels.Size;
    if (old_channels_count < channels_count)
        _Channels.resize(channels_count);
    _ChannelsCount = channels_count;

    // _Channels[] (24/32 bytes each) hold storage that we'll swap with this->_CmdBuffer/_IdxBuffer
    // The content of _Channels[0] at this point doesn't matter. We clear it to make state tidy in a debugger but we don't strictly need to.
    // When we switch to the next channel, we'll copy _CmdBuffer/_IdxBuffer into _Channels[0] and then _Channels[1] into _CmdBuffer/_IdxBuffer
    memset(&_Channels[0], 0, sizeof(ImDrawChannel));
    for (int i = 1; i < channels_count; i++)
    {
        if (i >= old_channels_count)
        {
            IM_PLACEMENT_NEW(&_Channels[i]) ImDrawChannel();
        }
        else
        {
            _Channels[i].CmdBuffer.resize(0);
            _Channels[i].IdxBuffer.resize(0);
        }
        if (_Channels[i].CmdBuffer.Size == 0)
        {
            ImDrawCmd draw_cmd;
            draw_cmd.ClipRect = _ClipRectStack.back();
            draw_cmd.TextureId = _TextureIdStack.back();
            _Channels[i].CmdBuffer.push_back(draw_cmd);
        }
    }
}

void ImDrawList::ChannelsMerge()
{
    // Note that we never use or rely on channels.Size because it is merely a buffer that we never shrink back to 0 to keep all sub-buffers ready for use.
    if (_ChannelsCount <= 1)
        return;

    ChannelsSetCurrent(0);
    if (CmdBuffer.Size && CmdBuffer.back().ElemCount == 0)
        CmdBuffer.pop_back();

    int new_cmd_buffer_count = 0, new_idx_buffer_count = 0;
    for (int i = 1; i < _ChannelsCount; i++)
    {
        ImDrawChannel& ch = _Channels[i];
        if (ch.CmdBuffer.Size && ch.CmdBuffer.back().ElemCount == 0)
            ch.CmdBuffer.pop_back();
        new_cmd_buffer_count += ch.CmdBuffer.Size;
        new_idx_buffer_count += ch.IdxBuffer.Size;
    }
    CmdBuffer.resize(CmdBuffer.Size + new_cmd_buffer_count);
    IdxBuffer.resize(IdxBuffer.Size + new_idx_buffer_count);

    ImDrawCmd* cmd_write = CmdBuffer.Data + CmdBuffer.Size - new_cmd_buffer_count;
    _IdxWritePtr = IdxBuffer.Data + IdxBuffer.Size - new_idx_buffer_count;
    for (int i = 1; i < _ChannelsCount; i++)
    {
        ImDrawChannel& ch = _Channels[i];
        if (int sz = ch.CmdBuffer.Size) { memcpy(cmd_write, ch.CmdBuffer.Data, sz * sizeof(ImDrawCmd)); cmd_write += sz; }
        if (int sz = ch.IdxBuffer.Size) { memcpy(_IdxWritePtr, ch.IdxBuffer.Data, sz * sizeof(ImDrawIdx)); _IdxWritePtr += sz; }
    }
    UpdateClipRect(); // We call this instead of AddDrawCmd(), so that empty channels won't produce an extra draw call.
    _ChannelsCount = 1;
}

void ImDrawList::ChannelsSetCurrent(int idx)
{
    IM_ASSERT(idx < _ChannelsCount);
    if (_ChannelsCurrent == idx) return;
    memcpy(&_Channels.Data[_ChannelsCurrent].CmdBuffer, &CmdBuffer, sizeof(CmdBuffer)); // copy 12 bytes, four times
    memcpy(&_Channels.Data[_ChannelsCurrent].IdxBuffer, &IdxBuffer, sizeof(IdxBuffer));
    _ChannelsCurrent = idx;
    memcpy(&CmdBuffer, &_Channels.Data[_ChannelsCurrent].CmdBuffer, sizeof(CmdBuffer));
    memcpy(&IdxBuffer, &_Channels.Data[_ChannelsCurrent].IdxBuffer, sizeof(IdxBuffer));
    _IdxWritePtr = IdxBuffer.Data + IdxBuffer.Size;
}

// NB: this can be called with negative count for removing primitives (as long as the result does not underflow)
void ImDrawList::PrimReserve(int idx_count, int vtx_count)
{
    ImDrawCmd& draw_cmd = CmdBuffer.Data[CmdBuffer.Size-1];
    draw_cmd.ElemCount += idx_count;

    int vtx_buffer_old_size = VtxBuffer.Size;
    VtxBuffer.resize(vtx_buffer_old_size + vtx_count);
    _VtxWritePtr = VtxBuffer.Data + vtx_buffer_old_size;

    int idx_buffer_old_size = IdxBuffer.Size;
    IdxBuffer.resize(idx_buffer_old_size + idx_count);
    _IdxWritePtr = IdxBuffer.Data + idx_buffer_old_size;
}

// Fully unrolled with inline call to keep our debug builds decently fast.
void ImDrawList::PrimRect(const ImVec2& a, const ImVec2& c, ImU32 col)
{
    ImVec2 b(c.x, a.y), d(a.x, c.y), uv(_Data->TexUvWhitePixel);
    ImDrawIdx idx = (ImDrawIdx)_VtxCurrentIdx;
    _IdxWritePtr[0] = idx; _IdxWritePtr[1] = (ImDrawIdx)(idx+1); _IdxWritePtr[2] = (ImDrawIdx)(idx+2);
    _IdxWritePtr[3] = idx; _IdxWritePtr[4] = (ImDrawIdx)(idx+2); _IdxWritePtr[5] = (ImDrawIdx)(idx+3);
    _VtxWritePtr[0].pos = a; _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col;
    _VtxWritePtr[1].pos = b; _VtxWritePtr[1].uv = uv; _VtxWritePtr[1].col = col;
    _VtxWritePtr[2].pos = c; _VtxWritePtr[2].uv = uv; _VtxWritePtr[2].col = col;
    _VtxWritePtr[3].pos = d; _VtxWritePtr[3].uv = uv; _VtxWritePtr[3].col = col;
    _VtxWritePtr += 4;
    _VtxCurrentIdx += 4;
    _IdxWritePtr += 6;
}

void ImDrawList::PrimRectUV(const ImVec2& a, const ImVec2& c, const ImVec2& uv_a, const ImVec2& uv_c, ImU32 col)
{
    ImVec2 b(c.x, a.y), d(a.x, c.y), uv_b(uv_c.x, uv_a.y), uv_d(uv_a.x, uv_c.y);
    ImDrawIdx idx = (ImDrawIdx)_VtxCurrentIdx;
    _IdxWritePtr[0] = idx; _IdxWritePtr[1] = (ImDrawIdx)(idx+1); _IdxWritePtr[2] = (ImDrawIdx)(idx+2);
    _IdxWritePtr[3] = idx; _IdxWritePtr[4] = (ImDrawIdx)(idx+2); _IdxWritePtr[5] = (ImDrawIdx)(idx+3);
    _VtxWritePtr[0].pos = a; _VtxWritePtr[0].uv = uv_a; _VtxWritePtr[0].col = col;
    _VtxWritePtr[1].pos = b; _VtxWritePtr[1].uv = uv_b; _VtxWritePtr[1].col = col;
    _VtxWritePtr[2].pos = c; _VtxWritePtr[2].uv = uv_c; _VtxWritePtr[2].col = col;
    _VtxWritePtr[3].pos = d; _VtxWritePtr[3].uv = uv_d; _VtxWritePtr[3].col = col;
    _VtxWritePtr += 4;
    _VtxCurrentIdx += 4;
    _IdxWritePtr += 6;
}

void ImDrawList::PrimQuadUV(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, const ImVec2& uv_a, const ImVec2& uv_b, const ImVec2& uv_c, const ImVec2& uv_d, ImU32 col)
{
    ImDrawIdx idx = (ImDrawIdx)_VtxCurrentIdx;
    _IdxWritePtr[0] = idx; _IdxWritePtr[1] = (ImDrawIdx)(idx+1); _IdxWritePtr[2] = (ImDrawIdx)(idx+2);
    _IdxWritePtr[3] = idx; _IdxWritePtr[4] = (ImDrawIdx)(idx+2); _IdxWritePtr[5] = (ImDrawIdx)(idx+3);
    _VtxWritePtr[0].pos = a; _VtxWritePtr[0].uv = uv_a; _VtxWritePtr[0].col = col;
    _VtxWritePtr[1].pos = b; _VtxWritePtr[1].uv = uv_b; _VtxWritePtr[1].col = col;
    _VtxWritePtr[2].pos = c; _VtxWritePtr[2].uv = uv_c; _VtxWritePtr[2].col = col;
    _VtxWritePtr[3].pos = d; _VtxWritePtr[3].uv = uv_d; _VtxWritePtr[3].col = col;
    _VtxWritePtr += 4;
    _VtxCurrentIdx += 4;
    _IdxWritePtr += 6;
}

// TODO: Thickness anti-aliased lines cap are missing their AA fringe.
void ImDrawList::AddPolyline(const ImVec2* points, const int points_count, ImU32 col, bool closed, float thickness)
{
    if (points_count < 2)
        return;

    const ImVec2 uv = _Data->TexUvWhitePixel;

    int count = points_count;
    if (!closed)
        count = points_count-1;

    const bool thick_line = thickness > 1.0f;
    if (Flags & ImDrawListFlags_AntiAliasedLines)
    {
        // Anti-aliased stroke
        const float AA_SIZE = 1.0f;
        const ImU32 col_trans = col & ~IM_COL32_A_MASK;

        const int idx_count = thick_line ? count*18 : count*12;
        const int vtx_count = thick_line ? points_count*4 : points_count*3;
        PrimReserve(idx_count, vtx_count);

        // Temporary buffer
        ImVec2* temp_normals = (ImVec2*)alloca(points_count * (thick_line ? 5 : 3) * sizeof(ImVec2));
        ImVec2* temp_points = temp_normals + points_count;

        for (int i1 = 0; i1 < count; i1++)
        {
            const int i2 = (i1+1) == points_count ? 0 : i1+1;
            ImVec2 diff = points[i2] - points[i1];
            diff *= ImInvLength(diff, 1.0f);
            temp_normals[i1].x = diff.y;
            temp_normals[i1].y = -diff.x;
        }
        if (!closed)
            temp_normals[points_count-1] = temp_normals[points_count-2];

        if (!thick_line)
        {
            if (!closed)
            {
                temp_points[0] = points[0] + temp_normals[0] * AA_SIZE;
                temp_points[1] = points[0] - temp_normals[0] * AA_SIZE;
                temp_points[(points_count-1)*2+0] = points[points_count-1] + temp_normals[points_count-1] * AA_SIZE;
                temp_points[(points_count-1)*2+1] = points[points_count-1] - temp_normals[points_count-1] * AA_SIZE;
            }

            // FIXME-OPT: Merge the different loops, possibly remove the temporary buffer.
            unsigned int idx1 = _VtxCurrentIdx;
            for (int i1 = 0; i1 < count; i1++)
            {
                const int i2 = (i1+1) == points_count ? 0 : i1+1;
                unsigned int idx2 = (i1+1) == points_count ? _VtxCurrentIdx : idx1+3;

                // Average normals
                ImVec2 dm = (temp_normals[i1] + temp_normals[i2]) * 0.5f;
                float dmr2 = dm.x*dm.x + dm.y*dm.y;
                if (dmr2 > 0.000001f)
                {
                    float scale = 1.0f / dmr2;
                    if (scale > 100.0f) scale = 100.0f;
                    dm *= scale;
                }
                dm *= AA_SIZE;
                temp_points[i2*2+0] = points[i2] + dm;
                temp_points[i2*2+1] = points[i2] - dm;

                // Add indexes
                _IdxWritePtr[0] = (ImDrawIdx)(idx2+0); _IdxWritePtr[1] = (ImDrawIdx)(idx1+0); _IdxWritePtr[2] = (ImDrawIdx)(idx1+2);
                _IdxWritePtr[3] = (ImDrawIdx)(idx1+2); _IdxWritePtr[4] = (ImDrawIdx)(idx2+2); _IdxWritePtr[5] = (ImDrawIdx)(idx2+0);
                _IdxWritePtr[6] = (ImDrawIdx)(idx2+1); _IdxWritePtr[7] = (ImDrawIdx)(idx1+1); _IdxWritePtr[8] = (ImDrawIdx)(idx1+0);
                _IdxWritePtr[9] = (ImDrawIdx)(idx1+0); _IdxWritePtr[10]= (ImDrawIdx)(idx2+0); _IdxWritePtr[11]= (ImDrawIdx)(idx2+1);
                _IdxWritePtr += 12;

                idx1 = idx2;
            }

            // Add vertexes
            for (int i = 0; i < points_count; i++)
            {
                _VtxWritePtr[0].pos = points[i];          _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col;
                _VtxWritePtr[1].pos = temp_points[i*2+0]; _VtxWritePtr[1].uv = uv; _VtxWritePtr[1].col = col_trans;
                _VtxWritePtr[2].pos = temp_points[i*2+1]; _VtxWritePtr[2].uv = uv; _VtxWritePtr[2].col = col_trans;
                _VtxWritePtr += 3;
            }
        }
        else
        {
            const float half_inner_thickness = (thickness - AA_SIZE) * 0.5f;
            if (!closed)
            {
                temp_points[0] = points[0] + temp_normals[0] * (half_inner_thickness + AA_SIZE);
                temp_points[1] = points[0] + temp_normals[0] * (half_inner_thickness);
                temp_points[2] = points[0] - temp_normals[0] * (half_inner_thickness);
                temp_points[3] = points[0] - temp_normals[0] * (half_inner_thickness + AA_SIZE);
                temp_points[(points_count-1)*4+0] = points[points_count-1] + temp_normals[points_count-1] * (half_inner_thickness + AA_SIZE);
                temp_points[(points_count-1)*4+1] = points[points_count-1] + temp_normals[points_count-1] * (half_inner_thickness);
                temp_points[(points_count-1)*4+2] = points[points_count-1] - temp_normals[points_count-1] * (half_inner_thickness);
                temp_points[(points_count-1)*4+3] = points[points_count-1] - temp_normals[points_count-1] * (half_inner_thickness + AA_SIZE);
            }

            // FIXME-OPT: Merge the different loops, possibly remove the temporary buffer.
            unsigned int idx1 = _VtxCurrentIdx;
            for (int i1 = 0; i1 < count; i1++)
            {
                const int i2 = (i1+1) == points_count ? 0 : i1+1;
                unsigned int idx2 = (i1+1) == points_count ? _VtxCurrentIdx : idx1+4;

                // Average normals
                ImVec2 dm = (temp_normals[i1] + temp_normals[i2]) * 0.5f;
                float dmr2 = dm.x*dm.x + dm.y*dm.y;
                if (dmr2 > 0.000001f)
                {
                    float scale = 1.0f / dmr2;
                    if (scale > 100.0f) scale = 100.0f;
                    dm *= scale;
                }
                ImVec2 dm_out = dm * (half_inner_thickness + AA_SIZE);
                ImVec2 dm_in = dm * half_inner_thickness;
                temp_points[i2*4+0] = points[i2] + dm_out;
                temp_points[i2*4+1] = points[i2] + dm_in;
                temp_points[i2*4+2] = points[i2] - dm_in;
                temp_points[i2*4+3] = points[i2] - dm_out;

                // Add indexes
                _IdxWritePtr[0]  = (ImDrawIdx)(idx2+1); _IdxWritePtr[1]  = (ImDrawIdx)(idx1+1); _IdxWritePtr[2]  = (ImDrawIdx)(idx1+2);
                _IdxWritePtr[3]  = (ImDrawIdx)(idx1+2); _IdxWritePtr[4]  = (ImDrawIdx)(idx2+2); _IdxWritePtr[5]  = (ImDrawIdx)(idx2+1);
                _IdxWritePtr[6]  = (ImDrawIdx)(idx2+1); _IdxWritePtr[7]  = (ImDrawIdx)(idx1+1); _IdxWritePtr[8]  = (ImDrawIdx)(idx1+0);
                _IdxWritePtr[9]  = (ImDrawIdx)(idx1+0); _IdxWritePtr[10] = (ImDrawIdx)(idx2+0); _IdxWritePtr[11] = (ImDrawIdx)(idx2+1);
                _IdxWritePtr[12] = (ImDrawIdx)(idx2+2); _IdxWritePtr[13] = (ImDrawIdx)(idx1+2); _IdxWritePtr[14] = (ImDrawIdx)(idx1+3);
                _IdxWritePtr[15] = (ImDrawIdx)(idx1+3); _IdxWritePtr[16] = (ImDrawIdx)(idx2+3); _IdxWritePtr[17] = (ImDrawIdx)(idx2+2);
                _IdxWritePtr += 18;

                idx1 = idx2;
            }

            // Add vertexes
            for (int i = 0; i < points_count; i++)
            {
                _VtxWritePtr[0].pos = temp_points[i*4+0]; _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col_trans;
                _VtxWritePtr[1].pos = temp_points[i*4+1]; _VtxWritePtr[1].uv = uv; _VtxWritePtr[1].col = col;
                _VtxWritePtr[2].pos = temp_points[i*4+2]; _VtxWritePtr[2].uv = uv; _VtxWritePtr[2].col = col;
                _VtxWritePtr[3].pos = temp_points[i*4+3]; _VtxWritePtr[3].uv = uv; _VtxWritePtr[3].col = col_trans;
                _VtxWritePtr += 4;
            }
        }
        _VtxCurrentIdx += (ImDrawIdx)vtx_count;
    }
    else
    {
        // Non Anti-aliased Stroke
        const int idx_count = count*6;
        const int vtx_count = count*4;      // FIXME-OPT: Not sharing edges
        PrimReserve(idx_count, vtx_count);

        for (int i1 = 0; i1 < count; i1++)
        {
            const int i2 = (i1+1) == points_count ? 0 : i1+1;
            const ImVec2& p1 = points[i1];
            const ImVec2& p2 = points[i2];
            ImVec2 diff = p2 - p1;
            diff *= ImInvLength(diff, 1.0f);

            const float dx = diff.x * (thickness * 0.5f);
            const float dy = diff.y * (thickness * 0.5f);
            _VtxWritePtr[0].pos.x = p1.x + dy; _VtxWritePtr[0].pos.y = p1.y - dx; _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col;
            _VtxWritePtr[1].pos.x = p2.x + dy; _VtxWritePtr[1].pos.y = p2.y - dx; _VtxWritePtr[1].uv = uv; _VtxWritePtr[1].col = col;
            _VtxWritePtr[2].pos.x = p2.x - dy; _VtxWritePtr[2].pos.y = p2.y + dx; _VtxWritePtr[2].uv = uv; _VtxWritePtr[2].col = col;
            _VtxWritePtr[3].pos.x = p1.x - dy; _VtxWritePtr[3].pos.y = p1.y + dx; _VtxWritePtr[3].uv = uv; _VtxWritePtr[3].col = col;
            _VtxWritePtr += 4;

            _IdxWritePtr[0] = (ImDrawIdx)(_VtxCurrentIdx); _IdxWritePtr[1] = (ImDrawIdx)(_VtxCurrentIdx+1); _IdxWritePtr[2] = (ImDrawIdx)(_VtxCurrentIdx+2);
            _IdxWritePtr[3] = (ImDrawIdx)(_VtxCurrentIdx); _IdxWritePtr[4] = (ImDrawIdx)(_VtxCurrentIdx+2); _IdxWritePtr[5] = (ImDrawIdx)(_VtxCurrentIdx+3);
            _IdxWritePtr += 6;
            _VtxCurrentIdx += 4;
        }
    }
}

void ImDrawList::AddConvexPolyFilled(const ImVec2* points, const int points_count, ImU32 col)
{
    const ImVec2 uv = _Data->TexUvWhitePixel;

    if (Flags & ImDrawListFlags_AntiAliasedFill)
    {
        // Anti-aliased Fill
        const float AA_SIZE = 1.0f;
        const ImU32 col_trans = col & ~IM_COL32_A_MASK;
        const int idx_count = (points_count-2)*3 + points_count*6;
        const int vtx_count = (points_count*2);
        PrimReserve(idx_count, vtx_count);

        // Add indexes for fill
        unsigned int vtx_inner_idx = _VtxCurrentIdx;
        unsigned int vtx_outer_idx = _VtxCurrentIdx+1;
        for (int i = 2; i < points_count; i++)
        {
            _IdxWritePtr[0] = (ImDrawIdx)(vtx_inner_idx); _IdxWritePtr[1] = (ImDrawIdx)(vtx_inner_idx+((i-1)<<1)); _IdxWritePtr[2] = (ImDrawIdx)(vtx_inner_idx+(i<<1));
            _IdxWritePtr += 3;
        }

        // Compute normals
        ImVec2* temp_normals = (ImVec2*)alloca(points_count * sizeof(ImVec2));
        for (int i0 = points_count-1, i1 = 0; i1 < points_count; i0 = i1++)
        {
            const ImVec2& p0 = points[i0];
            const ImVec2& p1 = points[i1];
            ImVec2 diff = p1 - p0;
            diff *= ImInvLength(diff, 1.0f);
            temp_normals[i0].x = diff.y;
            temp_normals[i0].y = -diff.x;
        }

        for (int i0 = points_count-1, i1 = 0; i1 < points_count; i0 = i1++)
        {
            // Average normals
            const ImVec2& n0 = temp_normals[i0];
            const ImVec2& n1 = temp_normals[i1];
            ImVec2 dm = (n0 + n1) * 0.5f;
            float dmr2 = dm.x*dm.x + dm.y*dm.y;
            if (dmr2 > 0.000001f)
            {
                float scale = 1.0f / dmr2;
                if (scale > 100.0f) scale = 100.0f;
                dm *= scale;
            }
            dm *= AA_SIZE * 0.5f;

            // Add vertices
            _VtxWritePtr[0].pos = (points[i1] - dm); _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col;        // Inner
            _VtxWritePtr[1].pos = (points[i1] + dm); _VtxWritePtr[1].uv = uv; _VtxWritePtr[1].col = col_trans;  // Outer
            _VtxWritePtr += 2;

            // Add indexes for fringes
            _IdxWritePtr[0] = (ImDrawIdx)(vtx_inner_idx+(i1<<1)); _IdxWritePtr[1] = (ImDrawIdx)(vtx_inner_idx+(i0<<1)); _IdxWritePtr[2] = (ImDrawIdx)(vtx_outer_idx+(i0<<1));
            _IdxWritePtr[3] = (ImDrawIdx)(vtx_outer_idx+(i0<<1)); _IdxWritePtr[4] = (ImDrawIdx)(vtx_outer_idx+(i1<<1)); _IdxWritePtr[5] = (ImDrawIdx)(vtx_inner_idx+(i1<<1));
            _IdxWritePtr += 6;
        }
        _VtxCurrentIdx += (ImDrawIdx)vtx_count;
    }
    else
    {
        // Non Anti-aliased Fill
        const int idx_count = (points_count-2)*3;
        const int vtx_count = points_count;
        PrimReserve(idx_count, vtx_count);
        for (int i = 0; i < vtx_count; i++)
        {
            _VtxWritePtr[0].pos = points[i]; _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col;
            _VtxWritePtr++;
        }
        for (int i = 2; i < points_count; i++)
        {
            _IdxWritePtr[0] = (ImDrawIdx)(_VtxCurrentIdx); _IdxWritePtr[1] = (ImDrawIdx)(_VtxCurrentIdx+i-1); _IdxWritePtr[2] = (ImDrawIdx)(_VtxCurrentIdx+i);
            _IdxWritePtr += 3;
        }
        _VtxCurrentIdx += (ImDrawIdx)vtx_count;
    }
}

void ImDrawList::PathArcToFast(const ImVec2& centre, float radius, int a_min_of_12, int a_max_of_12)
{
    if (radius == 0.0f || a_min_of_12 > a_max_of_12)
    {
        _Path.push_back(centre);
        return;
    }
    _Path.reserve(_Path.Size + (a_max_of_12 - a_min_of_12 + 1));
    for (int a = a_min_of_12; a <= a_max_of_12; a++)
    {
        const ImVec2& c = _Data->CircleVtx12[a % IM_ARRAYSIZE(_Data->CircleVtx12)];
        _Path.push_back(ImVec2(centre.x + c.x * radius, centre.y + c.y * radius));
    }
}

void ImDrawList::PathArcTo(const ImVec2& centre, float radius, float a_min, float a_max, int num_segments)
{
    if (radius == 0.0f)
    {
        _Path.push_back(centre);
        return;
    }
    _Path.reserve(_Path.Size + (num_segments + 1));
    for (int i = 0; i <= num_segments; i++)
    {
        const float a = a_min + ((float)i / (float)num_segments) * (a_max - a_min);
        _Path.push_back(ImVec2(centre.x + ImCos(a) * radius, centre.y + ImSin(a) * radius));
    }
}

static void PathBezierToCasteljau(ImVector<ImVec2>* path, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4, float tess_tol, int level)
{
    float dx = x4 - x1;
    float dy = y4 - y1;
    float d2 = ((x2 - x4) * dy - (y2 - y4) * dx);
    float d3 = ((x3 - x4) * dy - (y3 - y4) * dx);
    d2 = (d2 >= 0) ? d2 : -d2;
    d3 = (d3 >= 0) ? d3 : -d3;
    if ((d2+d3) * (d2+d3) < tess_tol * (dx*dx + dy*dy))
    {
        path->push_back(ImVec2(x4, y4));
    }
    else if (level < 10)
    {
        float x12 = (x1+x2)*0.5f,       y12 = (y1+y2)*0.5f;
        float x23 = (x2+x3)*0.5f,       y23 = (y2+y3)*0.5f;
        float x34 = (x3+x4)*0.5f,       y34 = (y3+y4)*0.5f;
        float x123 = (x12+x23)*0.5f,    y123 = (y12+y23)*0.5f;
        float x234 = (x23+x34)*0.5f,    y234 = (y23+y34)*0.5f;
        float x1234 = (x123+x234)*0.5f, y1234 = (y123+y234)*0.5f;

        PathBezierToCasteljau(path, x1,y1,        x12,y12,    x123,y123,  x1234,y1234, tess_tol, level+1);
        PathBezierToCasteljau(path, x1234,y1234,  x234,y234,  x34,y34,    x4,y4,       tess_tol, level+1);
    }
}

void ImDrawList::PathBezierCurveTo(const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, int num_segments)
{
    ImVec2 p1 = _Path.back();
    if (num_segments == 0)
    {
        // Auto-tessellated
        PathBezierToCasteljau(&_Path, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, _Data->CurveTessellationTol, 0);
    }
    else
    {
        float t_step = 1.0f / (float)num_segments;
        for (int i_step = 1; i_step <= num_segments; i_step++)
        {
            float t = t_step * i_step;
            float u = 1.0f - t;
            float w1 = u*u*u;
            float w2 = 3*u*u*t;
            float w3 = 3*u*t*t;
            float w4 = t*t*t;
            _Path.push_back(ImVec2(w1*p1.x + w2*p2.x + w3*p3.x + w4*p4.x, w1*p1.y + w2*p2.y + w3*p3.y + w4*p4.y));
        }
    }
}

void ImDrawList::PathRect(const ImVec2& a, const ImVec2& b, float rounding, int rounding_corners)
{
    rounding = ImMin(rounding, ImFabs(b.x - a.x) * ( ((rounding_corners & ImDrawCornerFlags_Top)  == ImDrawCornerFlags_Top)  || ((rounding_corners & ImDrawCornerFlags_Bot)   == ImDrawCornerFlags_Bot)   ? 0.5f : 1.0f ) - 1.0f);
    rounding = ImMin(rounding, ImFabs(b.y - a.y) * ( ((rounding_corners & ImDrawCornerFlags_Left) == ImDrawCornerFlags_Left) || ((rounding_corners & ImDrawCornerFlags_Right) == ImDrawCornerFlags_Right) ? 0.5f : 1.0f ) - 1.0f);

    if (rounding <= 0.0f || rounding_corners == 0)
    {
        PathLineTo(a);
        PathLineTo(ImVec2(b.x, a.y));
        PathLineTo(b);
        PathLineTo(ImVec2(a.x, b.y));
    }
    else
    {
        const float rounding_tl = (rounding_corners & ImDrawCornerFlags_TopLeft) ? rounding : 0.0f;
        const float rounding_tr = (rounding_corners & ImDrawCornerFlags_TopRight) ? rounding : 0.0f;
        const float rounding_br = (rounding_corners & ImDrawCornerFlags_BotRight) ? rounding : 0.0f;
        const float rounding_bl = (rounding_corners & ImDrawCornerFlags_BotLeft) ? rounding : 0.0f;
        PathArcToFast(ImVec2(a.x + rounding_tl, a.y + rounding_tl), rounding_tl, 6, 9);
        PathArcToFast(ImVec2(b.x - rounding_tr, a.y + rounding_tr), rounding_tr, 9, 12);
        PathArcToFast(ImVec2(b.x - rounding_br, b.y - rounding_br), rounding_br, 0, 3);
        PathArcToFast(ImVec2(a.x + rounding_bl, b.y - rounding_bl), rounding_bl, 3, 6);
    }
}

void ImDrawList::AddLine(const ImVec2& a, const ImVec2& b, ImU32 col, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;
    PathLineTo(a + ImVec2(0.5f,0.5f));
    PathLineTo(b + ImVec2(0.5f,0.5f));
    PathStroke(col, false, thickness);
}

// a: upper-left, b: lower-right. we don't render 1 px sized rectangles properly.
void ImDrawList::AddRect(const ImVec2& a, const ImVec2& b, ImU32 col, float rounding, int rounding_corners_flags, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;
    if (Flags & ImDrawListFlags_AntiAliasedLines)
        PathRect(a + ImVec2(0.5f,0.5f), b - ImVec2(0.50f,0.50f), rounding, rounding_corners_flags);
    else
        PathRect(a + ImVec2(0.5f,0.5f), b - ImVec2(0.49f,0.49f), rounding, rounding_corners_flags); // Better looking lower-right corner and rounded non-AA shapes.
    PathStroke(col, true, thickness);
}

void ImDrawList::AddRectFilled(const ImVec2& a, const ImVec2& b, ImU32 col, float rounding, int rounding_corners_flags)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;
    if (rounding > 0.0f)
    {
        PathRect(a, b, rounding, rounding_corners_flags);
        PathFillConvex(col);
    }
    else
    {
        PrimReserve(6, 4);
        PrimRect(a, b, col);
    }
}

void ImDrawList::AddRectFilledMultiColor(const ImVec2& a, const ImVec2& c, ImU32 col_upr_left, ImU32 col_upr_right, ImU32 col_bot_right, ImU32 col_bot_left)
{
    if (((col_upr_left | col_upr_right | col_bot_right | col_bot_left) & IM_COL32_A_MASK) == 0)
        return;

    const ImVec2 uv = _Data->TexUvWhitePixel;
    PrimReserve(6, 4);
    PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx)); PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx+1)); PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx+2));
    PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx)); PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx+2)); PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx+3));
    PrimWriteVtx(a, uv, col_upr_left);
    PrimWriteVtx(ImVec2(c.x, a.y), uv, col_upr_right);
    PrimWriteVtx(c, uv, col_bot_right);
    PrimWriteVtx(ImVec2(a.x, c.y), uv, col_bot_left);
}

void ImDrawList::AddQuad(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, ImU32 col, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(a);
    PathLineTo(b);
    PathLineTo(c);
    PathLineTo(d);
    PathStroke(col, true, thickness);
}

void ImDrawList::AddQuadFilled(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, ImU32 col)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(a);
    PathLineTo(b);
    PathLineTo(c);
    PathLineTo(d);
    PathFillConvex(col);
}

void ImDrawList::AddTriangle(const ImVec2& a, const ImVec2& b, const ImVec2& c, ImU32 col, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(a);
    PathLineTo(b);
    PathLineTo(c);
    PathStroke(col, true, thickness);
}

void ImDrawList::AddTriangleFilled(const ImVec2& a, const ImVec2& b, const ImVec2& c, ImU32 col)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(a);
    PathLineTo(b);
    PathLineTo(c);
    PathFillConvex(col);
}

void ImDrawList::AddCircle(const ImVec2& centre, float radius, ImU32 col, int num_segments, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    const float a_max = IM_PI*2.0f * ((float)num_segments - 1.0f) / (float)num_segments;
    PathArcTo(centre, radius-0.5f, 0.0f, a_max, num_segments);
    PathStroke(col, true, thickness);
}

void ImDrawList::AddCircleFilled(const ImVec2& centre, float radius, ImU32 col, int num_segments)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    const float a_max = IM_PI*2.0f * ((float)num_segments - 1.0f) / (float)num_segments;
    PathArcTo(centre, radius, 0.0f, a_max, num_segments);
    PathFillConvex(col);
}

void ImDrawList::AddBezierCurve(const ImVec2& pos0, const ImVec2& cp0, const ImVec2& cp1, const ImVec2& pos1, ImU32 col, float thickness, int num_segments)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(pos0);
    PathBezierCurveTo(cp0, cp1, pos1, num_segments);
    PathStroke(col, false, thickness);
}

void ImDrawList::AddText(const ImFont* font, float font_size, const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_end, float wrap_width, const ImVec4* cpu_fine_clip_rect)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    if (text_end == NULL)
        text_end = text_begin + strlen(text_begin);
    if (text_begin == text_end)
        return;

    // Pull default font/size from the shared ImDrawListSharedData instance
    if (font == NULL)
        font = _Data->Font;
    if (font_size == 0.0f)
        font_size = _Data->FontSize;

    IM_ASSERT(font->ContainerAtlas->TexID == _TextureIdStack.back());  // Use high-level ImGui::PushFont() or low-level ImDrawList::PushTextureId() to change font.

    ImVec4 clip_rect = _ClipRectStack.back();
    if (cpu_fine_clip_rect)
    {
        clip_rect.x = ImMax(clip_rect.x, cpu_fine_clip_rect->x);
        clip_rect.y = ImMax(clip_rect.y, cpu_fine_clip_rect->y);
        clip_rect.z = ImMin(clip_rect.z, cpu_fine_clip_rect->z);
        clip_rect.w = ImMin(clip_rect.w, cpu_fine_clip_rect->w);
    }
	font->RenderText(this, font_size, pos + ImVec2{ 1.f, 1.f }, ImColor(0.0f, 0.0f, 0.0f, 1.0f), clip_rect, text_begin, text_end, wrap_width, cpu_fine_clip_rect != NULL);
    font->RenderText(this, font_size, pos, col, clip_rect, text_begin, text_end, wrap_width, cpu_fine_clip_rect != NULL);
}

void ImDrawList::AddText(const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_end)
{
    AddText(NULL, 0.0f, pos, col, text_begin, text_end);
}

void ImDrawList::AddImage(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, const ImVec2& uv_a, const ImVec2& uv_b, ImU32 col)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    const bool push_texture_id = _TextureIdStack.empty() || user_texture_id != _TextureIdStack.back();
    if (push_texture_id)
        PushTextureID(user_texture_id);

    PrimReserve(6, 4);
    PrimRectUV(a, b, uv_a, uv_b, col);

    if (push_texture_id)
        PopTextureID();
}

void ImDrawList::AddImageQuad(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, const ImVec2& uv_a, const ImVec2& uv_b, const ImVec2& uv_c, const ImVec2& uv_d, ImU32 col)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    const bool push_texture_id = _TextureIdStack.empty() || user_texture_id != _TextureIdStack.back();
    if (push_texture_id)
        PushTextureID(user_texture_id);

    PrimReserve(6, 4);
    PrimQuadUV(a, b, c, d, uv_a, uv_b, uv_c, uv_d, col);

    if (push_texture_id)
        PopTextureID();
}

void ImDrawList::AddImageRounded(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, const ImVec2& uv_a, const ImVec2& uv_b, ImU32 col, float rounding, int rounding_corners)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    if (rounding <= 0.0f || (rounding_corners & ImDrawCornerFlags_All) == 0)
    {
        AddImage(user_texture_id, a, b, uv_a, uv_b, col);
        return;
    }

    const bool push_texture_id = _TextureIdStack.empty() || user_texture_id != _TextureIdStack.back();
    if (push_texture_id)
        PushTextureID(user_texture_id);

    int vert_start_idx = VtxBuffer.Size;
    PathRect(a, b, rounding, rounding_corners);
    PathFillConvex(col);
    int vert_end_idx = VtxBuffer.Size;
    ImGui::ShadeVertsLinearUV(this, vert_start_idx, vert_end_idx, a, b, uv_a, uv_b, true);

    if (push_texture_id)
        PopTextureID();
}

//-----------------------------------------------------------------------------
// ImDrawData
//-----------------------------------------------------------------------------

// For backward compatibility: convert all buffers from indexed to de-indexed, in case you cannot render indexed. Note: this is slow and most likely a waste of resources. Always prefer indexed rendering!
void ImDrawData::DeIndexAllBuffers()
{
    ImVector<ImDrawVert> new_vtx_buffer;
    TotalVtxCount = TotalIdxCount = 0;
    for (int i = 0; i < CmdListsCount; i++)
    {
        ImDrawList* cmd_list = CmdLists[i];
        if (cmd_list->IdxBuffer.empty())
            continue;
        new_vtx_buffer.resize(cmd_list->IdxBuffer.Size);
        for (int j = 0; j < cmd_list->IdxBuffer.Size; j++)
            new_vtx_buffer[j] = cmd_list->VtxBuffer[cmd_list->IdxBuffer[j]];
        cmd_list->VtxBuffer.swap(new_vtx_buffer);
        cmd_list->IdxBuffer.resize(0);
        TotalVtxCount += cmd_list->VtxBuffer.Size;
    }
}

// Helper to scale the ClipRect field of each ImDrawCmd. Use if your final output buffer is at a different scale than ImGui expects, or if there is a difference between your window resolution and framebuffer resolution.
void ImDrawData::ScaleClipRects(const ImVec2& scale)
{
    for (int i = 0; i < CmdListsCount; i++)
    {
        ImDrawList* cmd_list = CmdLists[i];
        for (int cmd_i = 0; cmd_i < cmd_list->CmdBuffer.Size; cmd_i++)
        {
            ImDrawCmd* cmd = &cmd_list->CmdBuffer[cmd_i];
            cmd->ClipRect = ImVec4(cmd->ClipRect.x * scale.x, cmd->ClipRect.y * scale.y, cmd->ClipRect.z * scale.x, cmd->ClipRect.w * scale.y);
        }
    }
}

//-----------------------------------------------------------------------------
// Shade functions
//-----------------------------------------------------------------------------

// Generic linear color gradient, write to RGB fields, leave A untouched.
void ImGui::ShadeVertsLinearColorGradientKeepAlpha(ImDrawList* draw_list, int vert_start_idx, int vert_end_idx, ImVec2 gradient_p0, ImVec2 gradient_p1, ImU32 col0, ImU32 col1)
{
    ImVec2 gradient_extent = gradient_p1 - gradient_p0;
    float gradient_inv_length2 = 1.0f / ImLengthSqr(gradient_extent);
    ImDrawVert* vert_start = draw_list->VtxBuffer.Data + vert_start_idx;
    ImDrawVert* vert_end = draw_list->VtxBuffer.Data + vert_end_idx;
    for (ImDrawVert* vert = vert_start; vert < vert_end; vert++)
    {
        float d = ImDot(vert->pos - gradient_p0, gradient_extent);
        float t = ImClamp(d * gradient_inv_length2, 0.0f, 1.0f);
        int r = ImLerp((int)(col0 >> IM_COL32_R_SHIFT) & 0xFF, (int)(col1 >> IM_COL32_R_SHIFT) & 0xFF, t);
        int g = ImLerp((int)(col0 >> IM_COL32_G_SHIFT) & 0xFF, (int)(col1 >> IM_COL32_G_SHIFT) & 0xFF, t);
        int b = ImLerp((int)(col0 >> IM_COL32_B_SHIFT) & 0xFF, (int)(col1 >> IM_COL32_B_SHIFT) & 0xFF, t);
        vert->col = (r << IM_COL32_R_SHIFT) | (g << IM_COL32_G_SHIFT) | (b << IM_COL32_B_SHIFT) | (vert->col & IM_COL32_A_MASK);
    }
}

// Distribute UV over (a, b) rectangle
void ImGui::ShadeVertsLinearUV(ImDrawList* draw_list, int vert_start_idx, int vert_end_idx, const ImVec2& a, const ImVec2& b, const ImVec2& uv_a, const ImVec2& uv_b, bool clamp)
{
    const ImVec2 size = b - a;
    const ImVec2 uv_size = uv_b - uv_a;
    const ImVec2 scale = ImVec2(
        size.x != 0.0f ? (uv_size.x / size.x) : 0.0f,
        size.y != 0.0f ? (uv_size.y / size.y) : 0.0f);

    ImDrawVert* vert_start = draw_list->VtxBuffer.Data + vert_start_idx;
    ImDrawVert* vert_end = draw_list->VtxBuffer.Data + vert_end_idx;
    if (clamp)
    {
        const ImVec2 min = ImMin(uv_a, uv_b);
        const ImVec2 max = ImMax(uv_a, uv_b);
        for (ImDrawVert* vertex = vert_start; vertex < vert_end; ++vertex)
            vertex->uv = ImClamp(uv_a + ImMul(ImVec2(vertex->pos.x, vertex->pos.y) - a, scale), min, max);
    }
    else
    {
        for (ImDrawVert* vertex = vert_start; vertex < vert_end; ++vertex)
            vertex->uv = uv_a + ImMul(ImVec2(vertex->pos.x, vertex->pos.y) - a, scale);
    }
}

//-----------------------------------------------------------------------------
// ImFontConfig
//-----------------------------------------------------------------------------

ImFontConfig::ImFontConfig()
{
    FontData = NULL;
    FontDataSize = 0;
    FontDataOwnedByAtlas = true;
    FontNo = 0;
    SizePixels = 0.0f;
    OversampleH = 3;
    OversampleV = 1;
    PixelSnapH = false;
    GlyphExtraSpacing = ImVec2(0.0f, 0.0f);
    GlyphOffset = ImVec2(0.0f, 0.0f);
    GlyphRanges = NULL;
    GlyphMinAdvanceX = 0.0f;
    GlyphMaxAdvanceX = FLT_MAX;
    MergeMode = false;
    RasterizerFlags = 0x00;
    RasterizerMultiply = 1.0f;
    memset(Name, 0, sizeof(Name));
    DstFont = NULL;
}

//-----------------------------------------------------------------------------
// ImFontAtlas
//-----------------------------------------------------------------------------

// A work of art lies ahead! (. = white layer, X = black layer, others are blank)
// The white texels on the top left are the ones we'll use everywhere in ImGui to render filled shapes.
const int FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF = 108;
const int FONT_ATLAS_DEFAULT_TEX_DATA_H      = 27;
const unsigned int FONT_ATLAS_DEFAULT_TEX_DATA_ID = 0x80000000;
static const char FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF * FONT_ATLAS_DEFAULT_TEX_DATA_H + 1] =
{
    "..-         -XXXXXXX-    X    -           X           -XXXXXXX          -          XXXXXXX-     XX          "
    "..-         -X.....X-   X.X   -          X.X          -X.....X          -          X.....X-    X..X         "
    "---         -XXX.XXX-  X...X  -         X...X         -X....X           -           X....X-    X..X         "
    "X           -  X.X  - X.....X -        X.....X        -X...X            -            X...X-    X..X         "
    "XX          -  X.X  -X.......X-       X.......X       -X..X.X           -           X.X..X-    X..X         "
    "X.X         -  X.X  -XXXX.XXXX-       XXXX.XXXX       -X.X X.X          -          X.X X.X-    X..XXX       "
    "X..X        -  X.X  -   X.X   -          X.X          -XX   X.X         -         X.X   XX-    X..X..XXX    "
    "X...X       -  X.X  -   X.X   -    XX    X.X    XX    -      X.X        -        X.X      -    X..X..X..XX  "
    "X....X      -  X.X  -   X.X   -   X.X    X.X    X.X   -       X.X       -       X.X       -    X..X..X..X.X "
    "X.....X     -  X.X  -   X.X   -  X..X    X.X    X..X  -        X.X      -      X.X        -XXX X..X..X..X..X"
    "X......X    -  X.X  -   X.X   - X...XXXXXX.XXXXXX...X -         X.X   XX-XX   X.X         -X..XX........X..X"
    "X.......X   -  X.X  -   X.X   -X.....................X-          X.X X.X-X.X X.X          -X...X...........X"
    "X........X  -  X.X  -   X.X   - X...XXXXXX.XXXXXX...X -           X.X..X-X..X.X           - X..............X"
    "X.........X -XXX.XXX-   X.X   -  X..X    X.X    X..X  -            X...X-X...X            -  X.............X"
    "X..........X-X.....X-   X.X   -   X.X    X.X    X.X   -           X....X-X....X           -  X.............X"
    "X......XXXXX-XXXXXXX-   X.X   -    XX    X.X    XX    -          X.....X-X.....X          -   X............X"
    "X...X..X    ---------   X.X   -          X.X          -          XXXXXXX-XXXXXXX          -   X...........X "
    "X..X X..X   -       -XXXX.XXXX-       XXXX.XXXX       -------------------------------------    X..........X "
    "X.X  X..X   -       -X.......X-       X.......X       -    XX           XX    -           -    X..........X "
    "XX    X..X  -       - X.....X -        X.....X        -   X.X           X.X   -           -     X........X  "
    "      X..X          -  X...X  -         X...X         -  X..X           X..X  -           -     X........X  "
    "       XX           -   X.X   -          X.X          - X...XXXXXXXXXXXXX...X -           -     XXXXXXXXXX  "
    "------------        -    X    -           X           -X.....................X-           ------------------"
    "                    ----------------------------------- X...XXXXXXXXXXXXX...X -                             "
    "                                                      -  X..X           X..X  -                             "
    "                                                      -   X.X           X.X   -                             "
    "                                                      -    XX           XX    -                             "
};

static const ImVec2 FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[ImGuiMouseCursor_COUNT][3] =
{
    // Pos ........ Size ......... Offset ......
    { ImVec2( 0,3), ImVec2(12,19), ImVec2( 0, 0) }, // ImGuiMouseCursor_Arrow
    { ImVec2(13,0), ImVec2( 7,16), ImVec2( 1, 8) }, // ImGuiMouseCursor_TextInput
    { ImVec2(31,0), ImVec2(23,23), ImVec2(11,11) }, // ImGuiMouseCursor_ResizeAll
    { ImVec2(21,0), ImVec2( 9,23), ImVec2( 4,11) }, // ImGuiMouseCursor_ResizeNS
    { ImVec2(55,18),ImVec2(23, 9), ImVec2(11, 4) }, // ImGuiMouseCursor_ResizeEW
    { ImVec2(73,0), ImVec2(17,17), ImVec2( 8, 8) }, // ImGuiMouseCursor_ResizeNESW
    { ImVec2(55,0), ImVec2(17,17), ImVec2( 8, 8) }, // ImGuiMouseCursor_ResizeNWSE
    { ImVec2(91,0), ImVec2(17,22), ImVec2( 5, 0) }, // ImGuiMouseCursor_Hand
};

ImFontAtlas::ImFontAtlas()
{
    Locked = false;
    Flags = ImFontAtlasFlags_None;
    TexID = NULL;
    TexDesiredWidth = 0;
    TexGlyphPadding = 1;

    TexPixelsAlpha8 = NULL;
    TexPixelsRGBA32 = NULL;
    TexWidth = TexHeight = 0;
    TexUvScale = ImVec2(0.0f, 0.0f);
    TexUvWhitePixel = ImVec2(0.0f, 0.0f);
    for (int n = 0; n < IM_ARRAYSIZE(CustomRectIds); n++)
        CustomRectIds[n] = -1;
}

ImFontAtlas::~ImFontAtlas()
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    Clear();
}

void    ImFontAtlas::ClearInputData()
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    for (int i = 0; i < ConfigData.Size; i++)
        if (ConfigData[i].FontData && ConfigData[i].FontDataOwnedByAtlas)
        {
            ImGui::MemFree(ConfigData[i].FontData);
            ConfigData[i].FontData = NULL;
        }

    // When clearing this we lose access to the font name and other information used to build the font.
    for (int i = 0; i < Fonts.Size; i++)
        if (Fonts[i]->ConfigData >= ConfigData.Data && Fonts[i]->ConfigData < ConfigData.Data + ConfigData.Size)
        {
            Fonts[i]->ConfigData = NULL;
            Fonts[i]->ConfigDataCount = 0;
        }
    ConfigData.clear();
    CustomRects.clear();
    for (int n = 0; n < IM_ARRAYSIZE(CustomRectIds); n++)
        CustomRectIds[n] = -1;
}

void    ImFontAtlas::ClearTexData()
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    if (TexPixelsAlpha8)
        ImGui::MemFree(TexPixelsAlpha8);
    if (TexPixelsRGBA32)
        ImGui::MemFree(TexPixelsRGBA32);
    TexPixelsAlpha8 = NULL;
    TexPixelsRGBA32 = NULL;
}

void    ImFontAtlas::ClearFonts()
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    for (int i = 0; i < Fonts.Size; i++)
        IM_DELETE(Fonts[i]);
    Fonts.clear();
}

void    ImFontAtlas::Clear()
{
    ClearInputData();
    ClearTexData();
    ClearFonts();
}

void    ImFontAtlas::GetTexDataAsAlpha8(unsigned char** out_pixels, int* out_width, int* out_height, int* out_bytes_per_pixel)
{
    // Build atlas on demand
    if (TexPixelsAlpha8 == NULL)
    {
        if (ConfigData.empty())
            AddFontDefault();
        Build();
    }

    *out_pixels = TexPixelsAlpha8;
    if (out_width) *out_width = TexWidth;
    if (out_height) *out_height = TexHeight;
    if (out_bytes_per_pixel) *out_bytes_per_pixel = 1;
}

void    ImFontAtlas::GetTexDataAsRGBA32(unsigned char** out_pixels, int* out_width, int* out_height, int* out_bytes_per_pixel)
{
    // Convert to RGBA32 format on demand
    // Although it is likely to be the most commonly used format, our font rendering is 1 channel / 8 bpp
    if (!TexPixelsRGBA32)
    {
        unsigned char* pixels = NULL;
        GetTexDataAsAlpha8(&pixels, NULL, NULL);
        if (pixels)
        {
            TexPixelsRGBA32 = (unsigned int*)ImGui::MemAlloc((size_t)(TexWidth * TexHeight * 4));
            const unsigned char* src = pixels;
            unsigned int* dst = TexPixelsRGBA32;
            for (int n = TexWidth * TexHeight; n > 0; n--)
                *dst++ = IM_COL32(255, 255, 255, (unsigned int)(*src++));
        }
    }

    *out_pixels = (unsigned char*)TexPixelsRGBA32;
    if (out_width) *out_width = TexWidth;
    if (out_height) *out_height = TexHeight;
    if (out_bytes_per_pixel) *out_bytes_per_pixel = 4;
}

ImFont* ImFontAtlas::AddFont(const ImFontConfig* font_cfg)
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    IM_ASSERT(font_cfg->FontData != NULL && font_cfg->FontDataSize > 0);
    IM_ASSERT(font_cfg->SizePixels > 0.0f);

    // Create new font
    if (!font_cfg->MergeMode)
        Fonts.push_back(IM_NEW(ImFont));
    else
        IM_ASSERT(!Fonts.empty()); // When using MergeMode make sure that a font has already been added before. You can use ImGui::GetIO().Fonts->AddFontDefault() to add the default imgui font.

    ConfigData.push_back(*font_cfg);
    ImFontConfig& new_font_cfg = ConfigData.back();
    if (!new_font_cfg.DstFont)
        new_font_cfg.DstFont = Fonts.back();
    if (!new_font_cfg.FontDataOwnedByAtlas)
    {
        new_font_cfg.FontData = ImGui::MemAlloc(new_font_cfg.FontDataSize);
        new_font_cfg.FontDataOwnedByAtlas = true;
        memcpy(new_font_cfg.FontData, font_cfg->FontData, (size_t)new_font_cfg.FontDataSize);
    }

    // Invalidate texture
    ClearTexData();
    return new_font_cfg.DstFont;
}

// Default font TTF is compressed with stb_compress then base85 encoded (see misc/fonts/binary_to_compressed_c.cpp for encoder)
static unsigned int stb_decompress_length(const unsigned char *input);
static unsigned int stb_decompress(unsigned char *output, const unsigned char *input, unsigned int length);
static const char*  GetDefaultCompressedFontDataTTFBase85();
static unsigned int Decode85Byte(char c)                                    { return c >= '\\' ? c-36 : c-35; }
static void         Decode85(const unsigned char* src, unsigned char* dst)
{
    while (*src)
    {
        unsigned int tmp = Decode85Byte(src[0]) + 85*(Decode85Byte(src[1]) + 85*(Decode85Byte(src[2]) + 85*(Decode85Byte(src[3]) + 85*Decode85Byte(src[4]))));
        dst[0] = ((tmp >> 0) & 0xFF); dst[1] = ((tmp >> 8) & 0xFF); dst[2] = ((tmp >> 16) & 0xFF); dst[3] = ((tmp >> 24) & 0xFF);   // We can't assume little-endianness.
        src += 5;
        dst += 4;
    }
}

// Load embedded ProggyClean.ttf at size 13, disable oversampling
ImFont* ImFontAtlas::AddFontDefault(const ImFontConfig* font_cfg_template)
{
    ImFontConfig font_cfg = font_cfg_template ? *font_cfg_template : ImFontConfig();
    if (!font_cfg_template)
    {
        font_cfg.OversampleH = font_cfg.OversampleV = 1;
        font_cfg.PixelSnapH = true;
    }
    if (font_cfg.Name[0] == '\0') strcpy(font_cfg.Name, "Cousine_Regular.ttf, 13px");
    if (font_cfg.SizePixels <= 0.0f) font_cfg.SizePixels = 13;

    const char* ttf_compressed_base85 = GetDefaultCompressedFontDataTTFBase85();
    const ImWchar* glyph_ranges = font_cfg.GlyphRanges != NULL ? font_cfg.GlyphRanges : GetGlyphRangesDefault();
    ImFont* font = AddFontFromMemoryCompressedBase85TTF(ttf_compressed_base85, font_cfg.SizePixels, &font_cfg, glyph_ranges);
    font->DisplayOffset.y = 1.0f;
    return font;
}

ImFont* ImFontAtlas::AddFontFromFileTTF(const char* filename, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    size_t data_size = 0;
    void* data = ImFileLoadToMemory(filename, "rb", &data_size, 0);
    if (!data)
    {
        IM_ASSERT(0); // Could not load file.
        return NULL;
    }
    ImFontConfig font_cfg = font_cfg_template ? *font_cfg_template : ImFontConfig();
    if (font_cfg.Name[0] == '\0')
    {
        // Store a short copy of filename into into the font name for convenience
        const char* p;
        for (p = filename + strlen(filename); p > filename && p[-1] != '/' && p[-1] != '\\'; p--) {}
        ImFormatString(font_cfg.Name, IM_ARRAYSIZE(font_cfg.Name), "%s, %.0fpx", p, size_pixels);
    }
    return AddFontFromMemoryTTF(data, (int)data_size, size_pixels, &font_cfg, glyph_ranges);
}

// NB: Transfer ownership of 'ttf_data' to ImFontAtlas, unless font_cfg_template->FontDataOwnedByAtlas == false. Owned TTF buffer will be deleted after Build().
ImFont* ImFontAtlas::AddFontFromMemoryTTF(void* ttf_data, int ttf_size, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    ImFontConfig font_cfg = font_cfg_template ? *font_cfg_template : ImFontConfig();
    IM_ASSERT(font_cfg.FontData == NULL);
    font_cfg.FontData = ttf_data;
    font_cfg.FontDataSize = ttf_size;
    font_cfg.SizePixels = size_pixels;
    if (glyph_ranges)
        font_cfg.GlyphRanges = glyph_ranges;
    return AddFont(&font_cfg);
}

ImFont* ImFontAtlas::AddFontFromMemoryCompressedTTF(const void* compressed_ttf_data, int compressed_ttf_size, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)
{
    const unsigned int buf_decompressed_size = stb_decompress_length((const unsigned char*)compressed_ttf_data);
    unsigned char* buf_decompressed_data = (unsigned char *)ImGui::MemAlloc(buf_decompressed_size);
    stb_decompress(buf_decompressed_data, (const unsigned char*)compressed_ttf_data, (unsigned int)compressed_ttf_size);

    ImFontConfig font_cfg = font_cfg_template ? *font_cfg_template : ImFontConfig();
    IM_ASSERT(font_cfg.FontData == NULL);
    font_cfg.FontDataOwnedByAtlas = true;
    return AddFontFromMemoryTTF(buf_decompressed_data, (int)buf_decompressed_size, size_pixels, &font_cfg, glyph_ranges);
}

ImFont* ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(const char* compressed_ttf_data_base85, float size_pixels, const ImFontConfig* font_cfg, const ImWchar* glyph_ranges)
{
    int compressed_ttf_size = (((int)strlen(compressed_ttf_data_base85) + 4) / 5) * 4;
    void* compressed_ttf = ImGui::MemAlloc((size_t)compressed_ttf_size);
    Decode85((const unsigned char*)compressed_ttf_data_base85, (unsigned char*)compressed_ttf);
    ImFont* font = AddFontFromMemoryCompressedTTF(compressed_ttf, compressed_ttf_size, size_pixels, font_cfg, glyph_ranges);
    ImGui::MemFree(compressed_ttf);
    return font;
}

int ImFontAtlas::AddCustomRectRegular(unsigned int id, int width, int height)
{
    IM_ASSERT(id >= 0x10000);
    IM_ASSERT(width > 0 && width <= 0xFFFF);
    IM_ASSERT(height > 0 && height <= 0xFFFF);
    CustomRect r;
    r.ID = id;
    r.Width = (unsigned short)width;
    r.Height = (unsigned short)height;
    CustomRects.push_back(r);
    return CustomRects.Size - 1; // Return index
}

int ImFontAtlas::AddCustomRectFontGlyph(ImFont* font, ImWchar id, int width, int height, float advance_x, const ImVec2& offset)
{
    IM_ASSERT(font != NULL);
    IM_ASSERT(width > 0 && width <= 0xFFFF);
    IM_ASSERT(height > 0 && height <= 0xFFFF);
    CustomRect r;
    r.ID = id;
    r.Width = (unsigned short)width;
    r.Height = (unsigned short)height;
    r.GlyphAdvanceX = advance_x;
    r.GlyphOffset = offset;
    r.Font = font;
    CustomRects.push_back(r);
    return CustomRects.Size - 1; // Return index
}

void ImFontAtlas::CalcCustomRectUV(const CustomRect* rect, ImVec2* out_uv_min, ImVec2* out_uv_max)
{
    IM_ASSERT(TexWidth > 0 && TexHeight > 0);   // Font atlas needs to be built before we can calculate UV coordinates
    IM_ASSERT(rect->IsPacked());                // Make sure the rectangle has been packed
    *out_uv_min = ImVec2((float)rect->X * TexUvScale.x, (float)rect->Y * TexUvScale.y);
    *out_uv_max = ImVec2((float)(rect->X + rect->Width) * TexUvScale.x, (float)(rect->Y + rect->Height) * TexUvScale.y);
}

bool ImFontAtlas::GetMouseCursorTexData(ImGuiMouseCursor cursor_type, ImVec2* out_offset, ImVec2* out_size, ImVec2 out_uv_border[2], ImVec2 out_uv_fill[2])
{
    if (cursor_type <= ImGuiMouseCursor_None || cursor_type >= ImGuiMouseCursor_COUNT)
        return false;
    if (Flags & ImFontAtlasFlags_NoMouseCursors)
        return false;

    IM_ASSERT(CustomRectIds[0] != -1);
    ImFontAtlas::CustomRect& r = CustomRects[CustomRectIds[0]];
    IM_ASSERT(r.ID == FONT_ATLAS_DEFAULT_TEX_DATA_ID);
    ImVec2 pos = FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[cursor_type][0] + ImVec2((float)r.X, (float)r.Y);
    ImVec2 size = FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[cursor_type][1];
    *out_size = size;
    *out_offset = FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[cursor_type][2];
    out_uv_border[0] = (pos) * TexUvScale;
    out_uv_border[1] = (pos + size) * TexUvScale;
    pos.x += FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF + 1;
    out_uv_fill[0] = (pos) * TexUvScale;
    out_uv_fill[1] = (pos + size) * TexUvScale;
    return true;
}

bool    ImFontAtlas::Build()
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    return ImFontAtlasBuildWithStbTruetype(this);
}

void    ImFontAtlasBuildMultiplyCalcLookupTable(unsigned char out_table[256], float in_brighten_factor)
{
    for (unsigned int i = 0; i < 256; i++)
    {
        unsigned int value = (unsigned int)(i * in_brighten_factor);
        out_table[i] = value > 255 ? 255 : (value & 0xFF);
    }
}

void    ImFontAtlasBuildMultiplyRectAlpha8(const unsigned char table[256], unsigned char* pixels, int x, int y, int w, int h, int stride)
{
    unsigned char* data = pixels + x + y * stride;
    for (int j = h; j > 0; j--, data += stride)
        for (int i = 0; i < w; i++)
            data[i] = table[data[i]];
}

bool    ImFontAtlasBuildWithStbTruetype(ImFontAtlas* atlas)
{
    IM_ASSERT(atlas->ConfigData.Size > 0);

    ImFontAtlasBuildRegisterDefaultCustomRects(atlas);

    atlas->TexID = NULL;
    atlas->TexWidth = atlas->TexHeight = 0;
    atlas->TexUvScale = ImVec2(0.0f, 0.0f);
    atlas->TexUvWhitePixel = ImVec2(0.0f, 0.0f);
    atlas->ClearTexData();

    // Count glyphs/ranges
    int total_glyphs_count = 0;
    int total_ranges_count = 0;
    for (int input_i = 0; input_i < atlas->ConfigData.Size; input_i++)
    {
        ImFontConfig& cfg = atlas->ConfigData[input_i];
        if (!cfg.GlyphRanges)
            cfg.GlyphRanges = atlas->GetGlyphRangesDefault();
        for (const ImWchar* in_range = cfg.GlyphRanges; in_range[0] && in_range[1]; in_range += 2, total_ranges_count++)
            total_glyphs_count += (in_range[1] - in_range[0]) + 1;
    }

    // We need a width for the skyline algorithm. Using a dumb heuristic here to decide of width. User can override TexDesiredWidth and TexGlyphPadding if they wish.
    // Width doesn't really matter much, but some API/GPU have texture size limitations and increasing width can decrease height.
    atlas->TexWidth = (atlas->TexDesiredWidth > 0) ? atlas->TexDesiredWidth : (total_glyphs_count > 4000) ? 4096 : (total_glyphs_count > 2000) ? 2048 : (total_glyphs_count > 1000) ? 1024 : 512;
    atlas->TexHeight = 0;

    // Start packing
    const int max_tex_height = 1024*32;
    stbtt_pack_context spc = {};
    if (!stbtt_PackBegin(&spc, NULL, atlas->TexWidth, max_tex_height, 0, atlas->TexGlyphPadding, NULL))
        return false;
    stbtt_PackSetOversampling(&spc, 1, 1);

    // Pack our extra data rectangles first, so it will be on the upper-left corner of our texture (UV will have small values).
    ImFontAtlasBuildPackCustomRects(atlas, spc.pack_info);

    // Initialize font information (so we can error without any cleanup)
    struct ImFontTempBuildData
    {
        stbtt_fontinfo      FontInfo;
        stbrp_rect*         Rects;
        int                 RectsCount;
        stbtt_pack_range*   Ranges;
        int                 RangesCount;
    };
    ImFontTempBuildData* tmp_array = (ImFontTempBuildData*)ImGui::MemAlloc((size_t)atlas->ConfigData.Size * sizeof(ImFontTempBuildData));
    for (int input_i = 0; input_i < atlas->ConfigData.Size; input_i++)
    {
        ImFontConfig& cfg = atlas->ConfigData[input_i];
        ImFontTempBuildData& tmp = tmp_array[input_i];
        IM_ASSERT(cfg.DstFont && (!cfg.DstFont->IsLoaded() || cfg.DstFont->ContainerAtlas == atlas));

        const int font_offset = stbtt_GetFontOffsetForIndex((unsigned char*)cfg.FontData, cfg.FontNo);
        IM_ASSERT(font_offset >= 0 && "FontData is incorrect, or FontNo cannot be found.");
        if (!stbtt_InitFont(&tmp.FontInfo, (unsigned char*)cfg.FontData, font_offset))
        {
            atlas->TexWidth = atlas->TexHeight = 0; // Reset output on failure
            ImGui::MemFree(tmp_array);
            return false;
        }
    }

    // Allocate packing character data and flag packed characters buffer as non-packed (x0=y0=x1=y1=0)
    int buf_packedchars_n = 0, buf_rects_n = 0, buf_ranges_n = 0;
    stbtt_packedchar* buf_packedchars = (stbtt_packedchar*)ImGui::MemAlloc(total_glyphs_count * sizeof(stbtt_packedchar));
    stbrp_rect* buf_rects = (stbrp_rect*)ImGui::MemAlloc(total_glyphs_count * sizeof(stbrp_rect));
    stbtt_pack_range* buf_ranges = (stbtt_pack_range*)ImGui::MemAlloc(total_ranges_count * sizeof(stbtt_pack_range));
    memset(buf_packedchars, 0, total_glyphs_count * sizeof(stbtt_packedchar));
    memset(buf_rects, 0, total_glyphs_count * sizeof(stbrp_rect));              // Unnecessary but let's clear this for the sake of sanity.
    memset(buf_ranges, 0, total_ranges_count * sizeof(stbtt_pack_range));

    // First font pass: pack all glyphs (no rendering at this point, we are working with rectangles in an infinitely tall texture at this point)
    for (int input_i = 0; input_i < atlas->ConfigData.Size; input_i++)
    {
        ImFontConfig& cfg = atlas->ConfigData[input_i];
        ImFontTempBuildData& tmp = tmp_array[input_i];

        // Setup ranges
        int font_glyphs_count = 0;
        int font_ranges_count = 0;
        for (const ImWchar* in_range = cfg.GlyphRanges; in_range[0] && in_range[1]; in_range += 2, font_ranges_count++)
            font_glyphs_count += (in_range[1] - in_range[0]) + 1;
        tmp.Ranges = buf_ranges + buf_ranges_n;
        tmp.RangesCount = font_ranges_count;
        buf_ranges_n += font_ranges_count;
        for (int i = 0; i < font_ranges_count; i++)
        {
            const ImWchar* in_range = &cfg.GlyphRanges[i * 2];
            stbtt_pack_range& range = tmp.Ranges[i];
            range.font_size = cfg.SizePixels;
            range.first_unicode_codepoint_in_range = in_range[0];
            range.num_chars = (in_range[1] - in_range[0]) + 1;
            range.chardata_for_range = buf_packedchars + buf_packedchars_n;
            buf_packedchars_n += range.num_chars;
        }

        // Gather the sizes of all rectangle we need
        tmp.Rects = buf_rects + buf_rects_n;
        tmp.RectsCount = font_glyphs_count;
        buf_rects_n += font_glyphs_count;
        stbtt_PackSetOversampling(&spc, cfg.OversampleH, cfg.OversampleV);
        int n = stbtt_PackFontRangesGatherRects(&spc, &tmp.FontInfo, tmp.Ranges, tmp.RangesCount, tmp.Rects);
        IM_ASSERT(n == font_glyphs_count);

        // Detect missing glyphs and replace them with a zero-sized box instead of relying on the default glyphs
        // This allows us merging overlapping icon fonts more easily.
        int rect_i = 0;
        for (int range_i = 0; range_i < tmp.RangesCount; range_i++)
            for (int char_i = 0; char_i < tmp.Ranges[range_i].num_chars; char_i++, rect_i++)
                if (stbtt_FindGlyphIndex(&tmp.FontInfo, tmp.Ranges[range_i].first_unicode_codepoint_in_range + char_i) == 0)
                    tmp.Rects[rect_i].w = tmp.Rects[rect_i].h = 0;

        // Pack
        stbrp_pack_rects((stbrp_context*)spc.pack_info, tmp.Rects, n);

        // Extend texture height
        // Also mark missing glyphs as non-packed so we don't attempt to render into them
        for (int i = 0; i < n; i++)
        {
            if (tmp.Rects[i].w == 0 && tmp.Rects[i].h == 0)
                tmp.Rects[i].was_packed = 0;
            if (tmp.Rects[i].was_packed)
                atlas->TexHeight = ImMax(atlas->TexHeight, tmp.Rects[i].y + tmp.Rects[i].h);
        }
    }
    IM_ASSERT(buf_rects_n == total_glyphs_count);
    IM_ASSERT(buf_packedchars_n == total_glyphs_count);
    IM_ASSERT(buf_ranges_n == total_ranges_count);

    // Create texture
    atlas->TexHeight = (atlas->Flags & ImFontAtlasFlags_NoPowerOfTwoHeight) ? (atlas->TexHeight + 1) : ImUpperPowerOfTwo(atlas->TexHeight);
    atlas->TexUvScale = ImVec2(1.0f / atlas->TexWidth, 1.0f / atlas->TexHeight);
    atlas->TexPixelsAlpha8 = (unsigned char*)ImGui::MemAlloc(atlas->TexWidth * atlas->TexHeight);
    memset(atlas->TexPixelsAlpha8, 0, atlas->TexWidth * atlas->TexHeight);
    spc.pixels = atlas->TexPixelsAlpha8;
    spc.height = atlas->TexHeight;

    // Second pass: render font characters
    for (int input_i = 0; input_i < atlas->ConfigData.Size; input_i++)
    {
        ImFontConfig& cfg = atlas->ConfigData[input_i];
        ImFontTempBuildData& tmp = tmp_array[input_i];
        stbtt_PackSetOversampling(&spc, cfg.OversampleH, cfg.OversampleV);
        stbtt_PackFontRangesRenderIntoRects(&spc, &tmp.FontInfo, tmp.Ranges, tmp.RangesCount, tmp.Rects);
        if (cfg.RasterizerMultiply != 1.0f)
        {
            unsigned char multiply_table[256];
            ImFontAtlasBuildMultiplyCalcLookupTable(multiply_table, cfg.RasterizerMultiply);
            for (const stbrp_rect* r = tmp.Rects; r != tmp.Rects + tmp.RectsCount; r++)
                if (r->was_packed)
                    ImFontAtlasBuildMultiplyRectAlpha8(multiply_table, spc.pixels, r->x, r->y, r->w, r->h, spc.stride_in_bytes);
        }
        tmp.Rects = NULL;
    }

    // End packing
    stbtt_PackEnd(&spc);
    ImGui::MemFree(buf_rects);
    buf_rects = NULL;

    // Third pass: setup ImFont and glyphs for runtime
    for (int input_i = 0; input_i < atlas->ConfigData.Size; input_i++)
    {
        ImFontConfig& cfg = atlas->ConfigData[input_i];
        ImFontTempBuildData& tmp = tmp_array[input_i];
        ImFont* dst_font = cfg.DstFont; // We can have multiple input fonts writing into a same destination font (when using MergeMode=true)
        if (cfg.MergeMode)
            dst_font->BuildLookupTable();

        const float font_scale = stbtt_ScaleForPixelHeight(&tmp.FontInfo, cfg.SizePixels);
        int unscaled_ascent, unscaled_descent, unscaled_line_gap;
        stbtt_GetFontVMetrics(&tmp.FontInfo, &unscaled_ascent, &unscaled_descent, &unscaled_line_gap);

        const float ascent = ImFloor(unscaled_ascent * font_scale + ((unscaled_ascent > 0.0f) ? +1 : -1));
        const float descent = ImFloor(unscaled_descent * font_scale + ((unscaled_descent > 0.0f) ? +1 : -1));
        ImFontAtlasBuildSetupFont(atlas, dst_font, &cfg, ascent, descent);
        const float font_off_x = cfg.GlyphOffset.x;
        const float font_off_y = cfg.GlyphOffset.y + (float)(int)(dst_font->Ascent + 0.5f);

        for (int i = 0; i < tmp.RangesCount; i++)
        {
            stbtt_pack_range& range = tmp.Ranges[i];
            for (int char_idx = 0; char_idx < range.num_chars; char_idx += 1)
            {
                const stbtt_packedchar& pc = range.chardata_for_range[char_idx];
                if (!pc.x0 && !pc.x1 && !pc.y0 && !pc.y1)
                    continue;

                const int codepoint = range.first_unicode_codepoint_in_range + char_idx;
                if (cfg.MergeMode && dst_font->FindGlyphNoFallback((unsigned short)codepoint))
                    continue;

                float char_advance_x_org = pc.xadvance;
                float char_advance_x_mod = ImClamp(char_advance_x_org, cfg.GlyphMinAdvanceX, cfg.GlyphMaxAdvanceX);
                float char_off_x = font_off_x;
                if (char_advance_x_org != char_advance_x_mod)
                    char_off_x += cfg.PixelSnapH ? (float)(int)((char_advance_x_mod - char_advance_x_org) * 0.5f) : (char_advance_x_mod - char_advance_x_org) * 0.5f;

                stbtt_aligned_quad q;
                float dummy_x = 0.0f, dummy_y = 0.0f;
                stbtt_GetPackedQuad(range.chardata_for_range, atlas->TexWidth, atlas->TexHeight, char_idx, &dummy_x, &dummy_y, &q, 0);
                dst_font->AddGlyph((ImWchar)codepoint, q.x0 + char_off_x, q.y0 + font_off_y, q.x1 + char_off_x, q.y1 + font_off_y, q.s0, q.t0, q.s1, q.t1, char_advance_x_mod);
            }
        }
    }

    // Cleanup temporaries
    ImGui::MemFree(buf_packedchars);
    ImGui::MemFree(buf_ranges);
    ImGui::MemFree(tmp_array);

    ImFontAtlasBuildFinish(atlas);

    return true;
}

void ImFontAtlasBuildRegisterDefaultCustomRects(ImFontAtlas* atlas)
{
    if (atlas->CustomRectIds[0] >= 0)
        return;
    if (!(atlas->Flags & ImFontAtlasFlags_NoMouseCursors))
        atlas->CustomRectIds[0] = atlas->AddCustomRectRegular(FONT_ATLAS_DEFAULT_TEX_DATA_ID, FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF*2+1, FONT_ATLAS_DEFAULT_TEX_DATA_H);
    else
        atlas->CustomRectIds[0] = atlas->AddCustomRectRegular(FONT_ATLAS_DEFAULT_TEX_DATA_ID, 2, 2);
}

void ImFontAtlasBuildSetupFont(ImFontAtlas* atlas, ImFont* font, ImFontConfig* font_config, float ascent, float descent)
{
    if (!font_config->MergeMode)
    {
        font->ClearOutputData();
        font->FontSize = font_config->SizePixels;
        font->ConfigData = font_config;
        font->ContainerAtlas = atlas;
        font->Ascent = ascent;
        font->Descent = descent;
    }
    font->ConfigDataCount++;
}

void ImFontAtlasBuildPackCustomRects(ImFontAtlas* atlas, void* pack_context_opaque)
{
    stbrp_context* pack_context = (stbrp_context*)pack_context_opaque;

    ImVector<ImFontAtlas::CustomRect>& user_rects = atlas->CustomRects;
    IM_ASSERT(user_rects.Size >= 1); // We expect at least the default custom rects to be registered, else something went wrong.

    ImVector<stbrp_rect> pack_rects;
    pack_rects.resize(user_rects.Size);
    memset(pack_rects.Data, 0, sizeof(stbrp_rect) * user_rects.Size);
    for (int i = 0; i < user_rects.Size; i++)
    {
        pack_rects[i].w = user_rects[i].Width;
        pack_rects[i].h = user_rects[i].Height;
    }
    stbrp_pack_rects(pack_context, &pack_rects[0], pack_rects.Size);
    for (int i = 0; i < pack_rects.Size; i++)
        if (pack_rects[i].was_packed)
        {
            user_rects[i].X = pack_rects[i].x;
            user_rects[i].Y = pack_rects[i].y;
            IM_ASSERT(pack_rects[i].w == user_rects[i].Width && pack_rects[i].h == user_rects[i].Height);
            atlas->TexHeight = ImMax(atlas->TexHeight, pack_rects[i].y + pack_rects[i].h);
        }
}

static void ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas* atlas)
{
    IM_ASSERT(atlas->CustomRectIds[0] >= 0);
    IM_ASSERT(atlas->TexPixelsAlpha8 != NULL);
    ImFontAtlas::CustomRect& r = atlas->CustomRects[atlas->CustomRectIds[0]];
    IM_ASSERT(r.ID == FONT_ATLAS_DEFAULT_TEX_DATA_ID);
    IM_ASSERT(r.IsPacked());

    const int w = atlas->TexWidth;
    if (!(atlas->Flags & ImFontAtlasFlags_NoMouseCursors))
    {
        // Render/copy pixels
        IM_ASSERT(r.Width == FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF * 2 + 1 && r.Height == FONT_ATLAS_DEFAULT_TEX_DATA_H);
        for (int y = 0, n = 0; y < FONT_ATLAS_DEFAULT_TEX_DATA_H; y++)
            for (int x = 0; x < FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF; x++, n++)
            {
                const int offset0 = (int)(r.X + x) + (int)(r.Y + y) * w;
                const int offset1 = offset0 + FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF + 1;
                atlas->TexPixelsAlpha8[offset0] = FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[n] == '.' ? 0xFF : 0x00;
                atlas->TexPixelsAlpha8[offset1] = FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[n] == 'X' ? 0xFF : 0x00;
            }
    }
    else
    {
        IM_ASSERT(r.Width == 2 && r.Height == 2);
        const int offset = (int)(r.X) + (int)(r.Y) * w;
        atlas->TexPixelsAlpha8[offset] = atlas->TexPixelsAlpha8[offset + 1] = atlas->TexPixelsAlpha8[offset + w] = atlas->TexPixelsAlpha8[offset + w + 1] = 0xFF;
    }
    atlas->TexUvWhitePixel = ImVec2((r.X + 0.5f) * atlas->TexUvScale.x, (r.Y + 0.5f) * atlas->TexUvScale.y);
}

void ImFontAtlasBuildFinish(ImFontAtlas* atlas)
{
    // Render into our custom data block
    ImFontAtlasBuildRenderDefaultTexData(atlas);

    // Register custom rectangle glyphs
    for (int i = 0; i < atlas->CustomRects.Size; i++)
    {
        const ImFontAtlas::CustomRect& r = atlas->CustomRects[i];
        if (r.Font == NULL || r.ID > 0x10000)
            continue;

        IM_ASSERT(r.Font->ContainerAtlas == atlas);
        ImVec2 uv0, uv1;
        atlas->CalcCustomRectUV(&r, &uv0, &uv1);
        r.Font->AddGlyph((ImWchar)r.ID, r.GlyphOffset.x, r.GlyphOffset.y, r.GlyphOffset.x + r.Width, r.GlyphOffset.y + r.Height, uv0.x, uv0.y, uv1.x, uv1.y, r.GlyphAdvanceX);
    }

    // Build all fonts lookup tables
    for (int i = 0; i < atlas->Fonts.Size; i++)
        if (atlas->Fonts[i]->DirtyLookupTables)
            atlas->Fonts[i]->BuildLookupTable();
}

// Retrieve list of range (2 int per range, values are inclusive)
const ImWchar*   ImFontAtlas::GetGlyphRangesDefault()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0,
    };
    return &ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesKorean()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0x3131, 0x3163, // Korean alphabets
        0xAC00, 0xD79D, // Korean characters
        0,
    };
    return &ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesChineseFull()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0x3000, 0x30FF, // Punctuations, Hiragana, Katakana
        0x31F0, 0x31FF, // Katakana Phonetic Extensions
        0xFF00, 0xFFEF, // Half-width characters
        0x4e00, 0x9FAF, // CJK Ideograms
        0,
    };
    return &ranges[0];
}

static void UnpackAccumulativeOffsetsIntoRanges(int base_codepoint, const short* accumulative_offsets, int accumulative_offsets_count, ImWchar* out_ranges)
{
    for (int n = 0; n < accumulative_offsets_count; n++, out_ranges += 2)
    {
        out_ranges[0] = out_ranges[1] = (ImWchar)(base_codepoint + accumulative_offsets[n]);
        base_codepoint += accumulative_offsets[n];
    }
    out_ranges[0] = 0;
}

const ImWchar*  ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon()
{
    // Store 2500 regularly used characters for Simplified Chinese.
    // Sourced from https://zh.wiktionary.org/wiki/%E9%99%84%E5%BD%95:%E7%8E%B0%E4%BB%A3%E6%B1%89%E8%AF%AD%E5%B8%B8%E7%94%A8%E5%AD%97%E8%A1%A8
    // This table covers 97.97% of all characters used during the month in July, 1987.
    // You can use ImFontAtlas::GlyphRangesBuilder to create your own ranges derived from this, by merging existing ranges or adding new characters.
    // (Stored as accumulative offsets from the initial unicode codepoint 0x4E00. This encoding is designed to helps us compact the source code size.)
    static const short accumulative_offsets_from_0x4E00[] =
    {
        0,1,2,4,1,1,1,1,2,1,3,2,1,2,2,1,1,1,1,1,5,2,1,2,3,3,3,2,2,4,1,1,1,2,1,5,2,3,1,2,1,2,1,1,2,1,1,2,2,1,4,1,1,1,1,5,10,1,2,19,2,1,2,1,2,1,2,1,2,
        1,5,1,6,3,2,1,2,2,1,1,1,4,8,5,1,1,4,1,1,3,1,2,1,5,1,2,1,1,1,10,1,1,5,2,4,6,1,4,2,2,2,12,2,1,1,6,1,1,1,4,1,1,4,6,5,1,4,2,2,4,10,7,1,1,4,2,4,
        2,1,4,3,6,10,12,5,7,2,14,2,9,1,1,6,7,10,4,7,13,1,5,4,8,4,1,1,2,28,5,6,1,1,5,2,5,20,2,2,9,8,11,2,9,17,1,8,6,8,27,4,6,9,20,11,27,6,68,2,2,1,1,
        1,2,1,2,2,7,6,11,3,3,1,1,3,1,2,1,1,1,1,1,3,1,1,8,3,4,1,5,7,2,1,4,4,8,4,2,1,2,1,1,4,5,6,3,6,2,12,3,1,3,9,2,4,3,4,1,5,3,3,1,3,7,1,5,1,1,1,1,2,
        3,4,5,2,3,2,6,1,1,2,1,7,1,7,3,4,5,15,2,2,1,5,3,22,19,2,1,1,1,1,2,5,1,1,1,6,1,1,12,8,2,9,18,22,4,1,1,5,1,16,1,2,7,10,15,1,1,6,2,4,1,2,4,1,6,
        1,1,3,2,4,1,6,4,5,1,2,1,1,2,1,10,3,1,3,2,1,9,3,2,5,7,2,19,4,3,6,1,1,1,1,1,4,3,2,1,1,1,2,5,3,1,1,1,2,2,1,1,2,1,1,2,1,3,1,1,1,3,7,1,4,1,1,2,1,
        1,2,1,2,4,4,3,8,1,1,1,2,1,3,5,1,3,1,3,4,6,2,2,14,4,6,6,11,9,1,15,3,1,28,5,2,5,5,3,1,3,4,5,4,6,14,3,2,3,5,21,2,7,20,10,1,2,19,2,4,28,28,2,3,
        2,1,14,4,1,26,28,42,12,40,3,52,79,5,14,17,3,2,2,11,3,4,6,3,1,8,2,23,4,5,8,10,4,2,7,3,5,1,1,6,3,1,2,2,2,5,28,1,1,7,7,20,5,3,29,3,17,26,1,8,4,
        27,3,6,11,23,5,3,4,6,13,24,16,6,5,10,25,35,7,3,2,3,3,14,3,6,2,6,1,4,2,3,8,2,1,1,3,3,3,4,1,1,13,2,2,4,5,2,1,14,14,1,2,2,1,4,5,2,3,1,14,3,12,
        3,17,2,16,5,1,2,1,8,9,3,19,4,2,2,4,17,25,21,20,28,75,1,10,29,103,4,1,2,1,1,4,2,4,1,2,3,24,2,2,2,1,1,2,1,3,8,1,1,1,2,1,1,3,1,1,1,6,1,5,3,1,1,
        1,3,4,1,1,5,2,1,5,6,13,9,16,1,1,1,1,3,2,3,2,4,5,2,5,2,2,3,7,13,7,2,2,1,1,1,1,2,3,3,2,1,6,4,9,2,1,14,2,14,2,1,18,3,4,14,4,11,41,15,23,15,23,
        176,1,3,4,1,1,1,1,5,3,1,2,3,7,3,1,1,2,1,2,4,4,6,2,4,1,9,7,1,10,5,8,16,29,1,1,2,2,3,1,3,5,2,4,5,4,1,1,2,2,3,3,7,1,6,10,1,17,1,44,4,6,2,1,1,6,
        5,4,2,10,1,6,9,2,8,1,24,1,2,13,7,8,8,2,1,4,1,3,1,3,3,5,2,5,10,9,4,9,12,2,1,6,1,10,1,1,7,7,4,10,8,3,1,13,4,3,1,6,1,3,5,2,1,2,17,16,5,2,16,6,
        1,4,2,1,3,3,6,8,5,11,11,1,3,3,2,4,6,10,9,5,7,4,7,4,7,1,1,4,2,1,3,6,8,7,1,6,11,5,5,3,24,9,4,2,7,13,5,1,8,82,16,61,1,1,1,4,2,2,16,10,3,8,1,1,
        6,4,2,1,3,1,1,1,4,3,8,4,2,2,1,1,1,1,1,6,3,5,1,1,4,6,9,2,1,1,1,2,1,7,2,1,6,1,5,4,4,3,1,8,1,3,3,1,3,2,2,2,2,3,1,6,1,2,1,2,1,3,7,1,8,2,1,2,1,5,
        2,5,3,5,10,1,2,1,1,3,2,5,11,3,9,3,5,1,1,5,9,1,2,1,5,7,9,9,8,1,3,3,3,6,8,2,3,2,1,1,32,6,1,2,15,9,3,7,13,1,3,10,13,2,14,1,13,10,2,1,3,10,4,15,
        2,15,15,10,1,3,9,6,9,32,25,26,47,7,3,2,3,1,6,3,4,3,2,8,5,4,1,9,4,2,2,19,10,6,2,3,8,1,2,2,4,2,1,9,4,4,4,6,4,8,9,2,3,1,1,1,1,3,5,5,1,3,8,4,6,
        2,1,4,12,1,5,3,7,13,2,5,8,1,6,1,2,5,14,6,1,5,2,4,8,15,5,1,23,6,62,2,10,1,1,8,1,2,2,10,4,2,2,9,2,1,1,3,2,3,1,5,3,3,2,1,3,8,1,1,1,11,3,1,1,4,
        3,7,1,14,1,2,3,12,5,2,5,1,6,7,5,7,14,11,1,3,1,8,9,12,2,1,11,8,4,4,2,6,10,9,13,1,1,3,1,5,1,3,2,4,4,1,18,2,3,14,11,4,29,4,2,7,1,3,13,9,2,2,5,
        3,5,20,7,16,8,5,72,34,6,4,22,12,12,28,45,36,9,7,39,9,191,1,1,1,4,11,8,4,9,2,3,22,1,1,1,1,4,17,1,7,7,1,11,31,10,2,4,8,2,3,2,1,4,2,16,4,32,2,
        3,19,13,4,9,1,5,2,14,8,1,1,3,6,19,6,5,1,16,6,2,10,8,5,1,2,3,1,5,5,1,11,6,6,1,3,3,2,6,3,8,1,1,4,10,7,5,7,7,5,8,9,2,1,3,4,1,1,3,1,3,3,2,6,16,
        1,4,6,3,1,10,6,1,3,15,2,9,2,10,25,13,9,16,6,2,2,10,11,4,3,9,1,2,6,6,5,4,30,40,1,10,7,12,14,33,6,3,6,7,3,1,3,1,11,14,4,9,5,12,11,49,18,51,31,
        140,31,2,2,1,5,1,8,1,10,1,4,4,3,24,1,10,1,3,6,6,16,3,4,5,2,1,4,2,57,10,6,22,2,22,3,7,22,6,10,11,36,18,16,33,36,2,5,5,1,1,1,4,10,1,4,13,2,7,
        5,2,9,3,4,1,7,43,3,7,3,9,14,7,9,1,11,1,1,3,7,4,18,13,1,14,1,3,6,10,73,2,2,30,6,1,11,18,19,13,22,3,46,42,37,89,7,3,16,34,2,2,3,9,1,7,1,1,1,2,
        2,4,10,7,3,10,3,9,5,28,9,2,6,13,7,3,1,3,10,2,7,2,11,3,6,21,54,85,2,1,4,2,2,1,39,3,21,2,2,5,1,1,1,4,1,1,3,4,15,1,3,2,4,4,2,3,8,2,20,1,8,7,13,
        4,1,26,6,2,9,34,4,21,52,10,4,4,1,5,12,2,11,1,7,2,30,12,44,2,30,1,1,3,6,16,9,17,39,82,2,2,24,7,1,7,3,16,9,14,44,2,1,2,1,2,3,5,2,4,1,6,7,5,3,
        2,6,1,11,5,11,2,1,18,19,8,1,3,24,29,2,1,3,5,2,2,1,13,6,5,1,46,11,3,5,1,1,5,8,2,10,6,12,6,3,7,11,2,4,16,13,2,5,1,1,2,2,5,2,28,5,2,23,10,8,4,
        4,22,39,95,38,8,14,9,5,1,13,5,4,3,13,12,11,1,9,1,27,37,2,5,4,4,63,211,95,2,2,2,1,3,5,2,1,1,2,2,1,1,1,3,2,4,1,2,1,1,5,2,2,1,1,2,3,1,3,1,1,1,
        3,1,4,2,1,3,6,1,1,3,7,15,5,3,2,5,3,9,11,4,2,22,1,6,3,8,7,1,4,28,4,16,3,3,25,4,4,27,27,1,4,1,2,2,7,1,3,5,2,28,8,2,14,1,8,6,16,25,3,3,3,14,3,
        3,1,1,2,1,4,6,3,8,4,1,1,1,2,3,6,10,6,2,3,18,3,2,5,5,4,3,1,5,2,5,4,23,7,6,12,6,4,17,11,9,5,1,1,10,5,12,1,1,11,26,33,7,3,6,1,17,7,1,5,12,1,11,
        2,4,1,8,14,17,23,1,2,1,7,8,16,11,9,6,5,2,6,4,16,2,8,14,1,11,8,9,1,1,1,9,25,4,11,19,7,2,15,2,12,8,52,7,5,19,2,16,4,36,8,1,16,8,24,26,4,6,2,9,
        5,4,36,3,28,12,25,15,37,27,17,12,59,38,5,32,127,1,2,9,17,14,4,1,2,1,1,8,11,50,4,14,2,19,16,4,17,5,4,5,26,12,45,2,23,45,104,30,12,8,3,10,2,2,
        3,3,1,4,20,7,2,9,6,15,2,20,1,3,16,4,11,15,6,134,2,5,59,1,2,2,2,1,9,17,3,26,137,10,211,59,1,2,4,1,4,1,1,1,2,6,2,3,1,1,2,3,2,3,1,3,4,4,2,3,3,
        1,4,3,1,7,2,2,3,1,2,1,3,3,3,2,2,3,2,1,3,14,6,1,3,2,9,6,15,27,9,34,145,1,1,2,1,1,1,1,2,1,1,1,1,2,2,2,3,1,2,1,1,1,2,3,5,8,3,5,2,4,1,3,2,2,2,12,
        4,1,1,1,10,4,5,1,20,4,16,1,15,9,5,12,2,9,2,5,4,2,26,19,7,1,26,4,30,12,15,42,1,6,8,172,1,1,4,2,1,1,11,2,2,4,2,1,2,1,10,8,1,2,1,4,5,1,2,5,1,8,
        4,1,3,4,2,1,6,2,1,3,4,1,2,1,1,1,1,12,5,7,2,4,3,1,1,1,3,3,6,1,2,2,3,3,3,2,1,2,12,14,11,6,6,4,12,2,8,1,7,10,1,35,7,4,13,15,4,3,23,21,28,52,5,
        26,5,6,1,7,10,2,7,53,3,2,1,1,1,2,163,532,1,10,11,1,3,3,4,8,2,8,6,2,2,23,22,4,2,2,4,2,1,3,1,3,3,5,9,8,2,1,2,8,1,10,2,12,21,20,15,105,2,3,1,1,
        3,2,3,1,1,2,5,1,4,15,11,19,1,1,1,1,5,4,5,1,1,2,5,3,5,12,1,2,5,1,11,1,1,15,9,1,4,5,3,26,8,2,1,3,1,1,15,19,2,12,1,2,5,2,7,2,19,2,20,6,26,7,5,
        2,2,7,34,21,13,70,2,128,1,1,2,1,1,2,1,1,3,2,2,2,15,1,4,1,3,4,42,10,6,1,49,85,8,1,2,1,1,4,4,2,3,6,1,5,7,4,3,211,4,1,2,1,2,5,1,2,4,2,2,6,5,6,
        10,3,4,48,100,6,2,16,296,5,27,387,2,2,3,7,16,8,5,38,15,39,21,9,10,3,7,59,13,27,21,47,5,21,6
    };
    static ImWchar base_ranges[] = // not zero-terminated
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0x3000, 0x30FF, // Punctuations, Hiragana, Katakana
        0x31F0, 0x31FF, // Katakana Phonetic Extensions
        0xFF00, 0xFFEF, // Half-width characters
    };
    static ImWchar full_ranges[IM_ARRAYSIZE(base_ranges) + IM_ARRAYSIZE(accumulative_offsets_from_0x4E00) * 2 + 1] = { 0 };
    if (!full_ranges[0])
    {
        memcpy(full_ranges, base_ranges, sizeof(base_ranges));
        UnpackAccumulativeOffsetsIntoRanges(0x4E00, accumulative_offsets_from_0x4E00, IM_ARRAYSIZE(accumulative_offsets_from_0x4E00), full_ranges + IM_ARRAYSIZE(base_ranges));
    }
    return &full_ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesJapanese()
{
    // 1946 common ideograms code points for Japanese
    // Sourced from http://theinstructionlimit.com/common-kanji-character-ranges-for-xna-spritefont-rendering
    // FIXME: Source a list of the revised 2136 Joyo Kanji list from 2010 and rebuild this.
    // You can use ImFontAtlas::GlyphRangesBuilder to create your own ranges derived from this, by merging existing ranges or adding new characters.
    // (Stored as accumulative offsets from the initial unicode codepoint 0x4E00. This encoding is designed to helps us compact the source code size.)
    static const short accumulative_offsets_from_0x4E00[] =
    {
        0,1,2,4,1,1,1,1,2,1,6,2,2,1,8,5,7,11,1,2,10,10,8,2,4,20,2,11,8,2,1,2,1,6,2,1,7,5,3,7,1,1,13,7,9,1,4,6,1,2,1,10,1,1,9,2,2,4,5,6,14,1,1,9,3,18,
        5,4,2,2,10,7,1,1,1,3,2,4,3,23,2,10,12,2,14,2,4,13,1,6,10,3,1,7,13,6,4,13,5,2,3,17,2,2,5,7,6,4,1,7,14,16,6,13,9,15,1,1,7,16,4,7,1,19,9,2,7,15,
        2,6,5,13,25,4,14,13,11,25,1,1,1,2,1,2,2,3,10,11,3,3,1,1,4,4,2,1,4,9,1,4,3,5,5,2,7,12,11,15,7,16,4,5,16,2,1,1,6,3,3,1,1,2,7,6,6,7,1,4,7,6,1,1,
        2,1,12,3,3,9,5,8,1,11,1,2,3,18,20,4,1,3,6,1,7,3,5,5,7,2,2,12,3,1,4,2,3,2,3,11,8,7,4,17,1,9,25,1,1,4,2,2,4,1,2,7,1,1,1,3,1,2,6,16,1,2,1,1,3,12,
        20,2,5,20,8,7,6,2,1,1,1,1,6,2,1,2,10,1,1,6,1,3,1,2,1,4,1,12,4,1,3,1,1,1,1,1,10,4,7,5,13,1,15,1,1,30,11,9,1,15,38,14,1,32,17,20,1,9,31,2,21,9,
        4,49,22,2,1,13,1,11,45,35,43,55,12,19,83,1,3,2,3,13,2,1,7,3,18,3,13,8,1,8,18,5,3,7,25,24,9,24,40,3,17,24,2,1,6,2,3,16,15,6,7,3,12,1,9,7,3,3,
        3,15,21,5,16,4,5,12,11,11,3,6,3,2,31,3,2,1,1,23,6,6,1,4,2,6,5,2,1,1,3,3,22,2,6,2,3,17,3,2,4,5,1,9,5,1,1,6,15,12,3,17,2,14,2,8,1,23,16,4,2,23,
        8,15,23,20,12,25,19,47,11,21,65,46,4,3,1,5,6,1,2,5,26,2,1,1,3,11,1,1,1,2,1,2,3,1,1,10,2,3,1,1,1,3,6,3,2,2,6,6,9,2,2,2,6,2,5,10,2,4,1,2,1,2,2,
        3,1,1,3,1,2,9,23,9,2,1,1,1,1,5,3,2,1,10,9,6,1,10,2,31,25,3,7,5,40,1,15,6,17,7,27,180,1,3,2,2,1,1,1,6,3,10,7,1,3,6,17,8,6,2,2,1,3,5,5,8,16,14,
        15,1,1,4,1,2,1,1,1,3,2,7,5,6,2,5,10,1,4,2,9,1,1,11,6,1,44,1,3,7,9,5,1,3,1,1,10,7,1,10,4,2,7,21,15,7,2,5,1,8,3,4,1,3,1,6,1,4,2,1,4,10,8,1,4,5,
        1,5,10,2,7,1,10,1,1,3,4,11,10,29,4,7,3,5,2,3,33,5,2,19,3,1,4,2,6,31,11,1,3,3,3,1,8,10,9,12,11,12,8,3,14,8,6,11,1,4,41,3,1,2,7,13,1,5,6,2,6,12,
        12,22,5,9,4,8,9,9,34,6,24,1,1,20,9,9,3,4,1,7,2,2,2,6,2,28,5,3,6,1,4,6,7,4,2,1,4,2,13,6,4,4,3,1,8,8,3,2,1,5,1,2,2,3,1,11,11,7,3,6,10,8,6,16,16,
        22,7,12,6,21,5,4,6,6,3,6,1,3,2,1,2,8,29,1,10,1,6,13,6,6,19,31,1,13,4,4,22,17,26,33,10,4,15,12,25,6,67,10,2,3,1,6,10,2,6,2,9,1,9,4,4,1,2,16,2,
        5,9,2,3,8,1,8,3,9,4,8,6,4,8,11,3,2,1,1,3,26,1,7,5,1,11,1,5,3,5,2,13,6,39,5,1,5,2,11,6,10,5,1,15,5,3,6,19,21,22,2,4,1,6,1,8,1,4,8,2,4,2,2,9,2,
        1,1,1,4,3,6,3,12,7,1,14,2,4,10,2,13,1,17,7,3,2,1,3,2,13,7,14,12,3,1,29,2,8,9,15,14,9,14,1,3,1,6,5,9,11,3,38,43,20,7,7,8,5,15,12,19,15,81,8,7,
        1,5,73,13,37,28,8,8,1,15,18,20,165,28,1,6,11,8,4,14,7,15,1,3,3,6,4,1,7,14,1,1,11,30,1,5,1,4,14,1,4,2,7,52,2,6,29,3,1,9,1,21,3,5,1,26,3,11,14,
        11,1,17,5,1,2,1,3,2,8,1,2,9,12,1,1,2,3,8,3,24,12,7,7,5,17,3,3,3,1,23,10,4,4,6,3,1,16,17,22,3,10,21,16,16,6,4,10,2,1,1,2,8,8,6,5,3,3,3,39,25,
        15,1,1,16,6,7,25,15,6,6,12,1,22,13,1,4,9,5,12,2,9,1,12,28,8,3,5,10,22,60,1,2,40,4,61,63,4,1,13,12,1,4,31,12,1,14,89,5,16,6,29,14,2,5,49,18,18,
        5,29,33,47,1,17,1,19,12,2,9,7,39,12,3,7,12,39,3,1,46,4,12,3,8,9,5,31,15,18,3,2,2,66,19,13,17,5,3,46,124,13,57,34,2,5,4,5,8,1,1,1,4,3,1,17,5,
        3,5,3,1,8,5,6,3,27,3,26,7,12,7,2,17,3,7,18,78,16,4,36,1,2,1,6,2,1,39,17,7,4,13,4,4,4,1,10,4,2,4,6,3,10,1,19,1,26,2,4,33,2,73,47,7,3,8,2,4,15,
        18,1,29,2,41,14,1,21,16,41,7,39,25,13,44,2,2,10,1,13,7,1,7,3,5,20,4,8,2,49,1,10,6,1,6,7,10,7,11,16,3,12,20,4,10,3,1,2,11,2,28,9,2,4,7,2,15,1,
        27,1,28,17,4,5,10,7,3,24,10,11,6,26,3,2,7,2,2,49,16,10,16,15,4,5,27,61,30,14,38,22,2,7,5,1,3,12,23,24,17,17,3,3,2,4,1,6,2,7,5,1,1,5,1,1,9,4,
        1,3,6,1,8,2,8,4,14,3,5,11,4,1,3,32,1,19,4,1,13,11,5,2,1,8,6,8,1,6,5,13,3,23,11,5,3,16,3,9,10,1,24,3,198,52,4,2,2,5,14,5,4,22,5,20,4,11,6,41,
        1,5,2,2,11,5,2,28,35,8,22,3,18,3,10,7,5,3,4,1,5,3,8,9,3,6,2,16,22,4,5,5,3,3,18,23,2,6,23,5,27,8,1,33,2,12,43,16,5,2,3,6,1,20,4,2,9,7,1,11,2,
        10,3,14,31,9,3,25,18,20,2,5,5,26,14,1,11,17,12,40,19,9,6,31,83,2,7,9,19,78,12,14,21,76,12,113,79,34,4,1,1,61,18,85,10,2,2,13,31,11,50,6,33,159,
        179,6,6,7,4,4,2,4,2,5,8,7,20,32,22,1,3,10,6,7,28,5,10,9,2,77,19,13,2,5,1,4,4,7,4,13,3,9,31,17,3,26,2,6,6,5,4,1,7,11,3,4,2,1,6,2,20,4,1,9,2,6,
        3,7,1,1,1,20,2,3,1,6,2,3,6,2,4,8,1,5,13,8,4,11,23,1,10,6,2,1,3,21,2,2,4,24,31,4,10,10,2,5,192,15,4,16,7,9,51,1,2,1,1,5,1,1,2,1,3,5,3,1,3,4,1,
        3,1,3,3,9,8,1,2,2,2,4,4,18,12,92,2,10,4,3,14,5,25,16,42,4,14,4,2,21,5,126,30,31,2,1,5,13,3,22,5,6,6,20,12,1,14,12,87,3,19,1,8,2,9,9,3,3,23,2,
        3,7,6,3,1,2,3,9,1,3,1,6,3,2,1,3,11,3,1,6,10,3,2,3,1,2,1,5,1,1,11,3,6,4,1,7,2,1,2,5,5,34,4,14,18,4,19,7,5,8,2,6,79,1,5,2,14,8,2,9,2,1,36,28,16,
        4,1,1,1,2,12,6,42,39,16,23,7,15,15,3,2,12,7,21,64,6,9,28,8,12,3,3,41,59,24,51,55,57,294,9,9,2,6,2,15,1,2,13,38,90,9,9,9,3,11,7,1,1,1,5,6,3,2,
        1,2,2,3,8,1,4,4,1,5,7,1,4,3,20,4,9,1,1,1,5,5,17,1,5,2,6,2,4,1,4,5,7,3,18,11,11,32,7,5,4,7,11,127,8,4,3,3,1,10,1,1,6,21,14,1,16,1,7,1,3,6,9,65,
        51,4,3,13,3,10,1,1,12,9,21,110,3,19,24,1,1,10,62,4,1,29,42,78,28,20,18,82,6,3,15,6,84,58,253,15,155,264,15,21,9,14,7,58,40,39, 
    };
    static ImWchar base_ranges[] = // not zero-terminated
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0x3000, 0x30FF, // Punctuations, Hiragana, Katakana
        0x31F0, 0x31FF, // Katakana Phonetic Extensions
        0xFF00, 0xFFEF, // Half-width characters
    };
    static ImWchar full_ranges[IM_ARRAYSIZE(base_ranges) + IM_ARRAYSIZE(accumulative_offsets_from_0x4E00)*2 + 1] = { 0 };
    if (!full_ranges[0])
    {
        memcpy(full_ranges, base_ranges, sizeof(base_ranges));
        UnpackAccumulativeOffsetsIntoRanges(0x4E00, accumulative_offsets_from_0x4E00, IM_ARRAYSIZE(accumulative_offsets_from_0x4E00), full_ranges + IM_ARRAYSIZE(base_ranges));
    }
    return &full_ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesCyrillic()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0x0400, 0x052F, // Cyrillic + Cyrillic Supplement
        0x2DE0, 0x2DFF, // Cyrillic Extended-A
        0xA640, 0xA69F, // Cyrillic Extended-B
        0,
    };
    return &ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesThai()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin
        0x2010, 0x205E, // Punctuations
        0x0E00, 0x0E7F, // Thai
        0,
    };
    return &ranges[0];
}

//-----------------------------------------------------------------------------
// ImFontAtlas::GlyphRangesBuilder
//-----------------------------------------------------------------------------

void ImFontAtlas::GlyphRangesBuilder::AddText(const char* text, const char* text_end)
{
    while (text_end ? (text < text_end) : *text)
    {
        unsigned int c = 0;
        int c_len = ImTextCharFromUtf8(&c, text, text_end);
        text += c_len;
        if (c_len == 0)
            break;
        if (c < 0x10000)
            AddChar((ImWchar)c);
    }
}

void ImFontAtlas::GlyphRangesBuilder::AddRanges(const ImWchar* ranges)
{
    for (; ranges[0]; ranges += 2)
        for (ImWchar c = ranges[0]; c <= ranges[1]; c++)
            AddChar(c);
}

void ImFontAtlas::GlyphRangesBuilder::BuildRanges(ImVector<ImWchar>* out_ranges)
{
    for (int n = 0; n < 0x10000; n++)
        if (GetBit(n))
        {
            out_ranges->push_back((ImWchar)n);
            while (n < 0x10000 && GetBit(n + 1))
                n++;
            out_ranges->push_back((ImWchar)n);
        }
    out_ranges->push_back(0);
}

//-----------------------------------------------------------------------------
// ImFont
//-----------------------------------------------------------------------------

ImFont::ImFont()
{
    Scale = 1.0f;
    FallbackChar = (ImWchar)'?';
    DisplayOffset = ImVec2(0.0f, 0.0f);
    ClearOutputData();
}

ImFont::~ImFont()
{
    // Invalidate active font so that the user gets a clear crash instead of a dangling pointer.
    // If you want to delete fonts you need to do it between Render() and NewFrame().
    // FIXME-CLEANUP
    /*
    ImGuiContext& g = *GImGui;
    if (g.Font == this)
        g.Font = NULL;
    */
    ClearOutputData();
}

void    ImFont::ClearOutputData()
{
    FontSize = 0.0f;
    Glyphs.clear();
    IndexAdvanceX.clear();
    IndexLookup.clear();
    FallbackGlyph = NULL;
    FallbackAdvanceX = 0.0f;
    ConfigDataCount = 0;
    ConfigData = NULL;
    ContainerAtlas = NULL;
    Ascent = Descent = 0.0f;
    DirtyLookupTables = true;
    MetricsTotalSurface = 0;
}

void ImFont::BuildLookupTable()
{
    int max_codepoint = 0;
    for (int i = 0; i != Glyphs.Size; i++)
        max_codepoint = ImMax(max_codepoint, (int)Glyphs[i].Codepoint);

    IM_ASSERT(Glyphs.Size < 0xFFFF); // -1 is reserved
    IndexAdvanceX.clear();
    IndexLookup.clear();
    DirtyLookupTables = false;
    GrowIndex(max_codepoint + 1);
    for (int i = 0; i < Glyphs.Size; i++)
    {
        int codepoint = (int)Glyphs[i].Codepoint;
        IndexAdvanceX[codepoint] = Glyphs[i].AdvanceX;
        IndexLookup[codepoint] = (unsigned short)i;
    }

    // Create a glyph to handle TAB
    // FIXME: Needs proper TAB handling but it needs to be contextualized (or we could arbitrary say that each string starts at "column 0" ?)
    if (FindGlyph((unsigned short)' '))
    {
        if (Glyphs.back().Codepoint != '\t')   // So we can call this function multiple times
            Glyphs.resize(Glyphs.Size + 1);
        ImFontGlyph& tab_glyph = Glyphs.back();
        tab_glyph = *FindGlyph((unsigned short)' ');
        tab_glyph.Codepoint = '\t';
        tab_glyph.AdvanceX *= 4;
        IndexAdvanceX[(int)tab_glyph.Codepoint] = (float)tab_glyph.AdvanceX;
        IndexLookup[(int)tab_glyph.Codepoint] = (unsigned short)(Glyphs.Size-1);
    }

    FallbackGlyph = FindGlyphNoFallback(FallbackChar);
    FallbackAdvanceX = FallbackGlyph ? FallbackGlyph->AdvanceX : 0.0f;
    for (int i = 0; i < max_codepoint + 1; i++)
        if (IndexAdvanceX[i] < 0.0f)
            IndexAdvanceX[i] = FallbackAdvanceX;
}

void ImFont::SetFallbackChar(ImWchar c)
{
    FallbackChar = c;
    BuildLookupTable();
}

void ImFont::GrowIndex(int new_size)
{
    IM_ASSERT(IndexAdvanceX.Size == IndexLookup.Size);
    if (new_size <= IndexLookup.Size)
        return;
    IndexAdvanceX.resize(new_size, -1.0f);
    IndexLookup.resize(new_size, (unsigned short)-1);
}

// x0/y0/x1/y1 are offset from the character upper-left layout position, in pixels. Therefore x0/y0 are often fairly close to zero.
// Not to be mistaken with texture coordinates, which are held by u0/v0/u1/v1 in normalized format (0.0..1.0 on each texture axis).
void ImFont::AddGlyph(ImWchar codepoint, float x0, float y0, float x1, float y1, float u0, float v0, float u1, float v1, float advance_x)
{
    Glyphs.resize(Glyphs.Size + 1);
    ImFontGlyph& glyph = Glyphs.back();
    glyph.Codepoint = (ImWchar)codepoint;
    glyph.X0 = x0;
    glyph.Y0 = y0;
    glyph.X1 = x1;
    glyph.Y1 = y1;
    glyph.U0 = u0;
    glyph.V0 = v0;
    glyph.U1 = u1;
    glyph.V1 = v1;
    glyph.AdvanceX = advance_x + ConfigData->GlyphExtraSpacing.x;  // Bake spacing into AdvanceX

    if (ConfigData->PixelSnapH)
        glyph.AdvanceX = (float)(int)(glyph.AdvanceX + 0.5f);

    // Compute rough surface usage metrics (+1 to account for average padding, +0.99 to round)
    DirtyLookupTables = true;
    MetricsTotalSurface += (int)((glyph.U1 - glyph.U0) * ContainerAtlas->TexWidth + 1.99f) * (int)((glyph.V1 - glyph.V0) * ContainerAtlas->TexHeight + 1.99f);
}

void ImFont::AddRemapChar(ImWchar dst, ImWchar src, bool overwrite_dst)
{
    IM_ASSERT(IndexLookup.Size > 0);    // Currently this can only be called AFTER the font has been built, aka after calling ImFontAtlas::GetTexDataAs*() function.
    int index_size = IndexLookup.Size;

    if (dst < index_size && IndexLookup.Data[dst] == (unsigned short)-1 && !overwrite_dst) // 'dst' already exists
        return;
    if (src >= index_size && dst >= index_size) // both 'dst' and 'src' don't exist -> no-op
        return;

    GrowIndex(dst + 1);
    IndexLookup[dst] = (src < index_size) ? IndexLookup.Data[src] : (unsigned short)-1;
    IndexAdvanceX[dst] = (src < index_size) ? IndexAdvanceX.Data[src] : 1.0f;
}

const ImFontGlyph* ImFont::FindGlyph(ImWchar c) const
{
    if (c >= IndexLookup.Size)
        return FallbackGlyph;
    const unsigned short i = IndexLookup[c];
    if (i == (unsigned short)-1)
        return FallbackGlyph;
    return &Glyphs.Data[i];
}

const ImFontGlyph* ImFont::FindGlyphNoFallback(ImWchar c) const
{
    if (c >= IndexLookup.Size)
        return NULL;
    const unsigned short i = IndexLookup[c];
    if (i == (unsigned short)-1)
        return NULL;
    return &Glyphs.Data[i];
}

const char* ImFont::CalcWordWrapPositionA(float scale, const char* text, const char* text_end, float wrap_width) const
{
    // Simple word-wrapping for English, not full-featured. Please submit failing cases!
    // FIXME: Much possible improvements (don't cut things like "word !", "word!!!" but cut within "word,,,,", more sensible support for punctuations, support for Unicode punctuations, etc.)

    // For references, possible wrap point marked with ^
    //  "aaa bbb, ccc,ddd. eee   fff. ggg!"
    //      ^    ^    ^   ^   ^__    ^    ^

    // List of hardcoded separators: .,;!?'"

    // Skip extra blanks after a line returns (that includes not counting them in width computation)
    // e.g. "Hello    world" --> "Hello" "World"

    // Cut words that cannot possibly fit within one line.
    // e.g.: "The tropical fish" with ~5 characters worth of width --> "The tr" "opical" "fish"

    float line_width = 0.0f;
    float word_width = 0.0f;
    float blank_width = 0.0f;
    wrap_width /= scale; // We work with unscaled widths to avoid scaling every characters

    const char* word_end = text;
    const char* prev_word_end = NULL;
    bool inside_word = true;

    const char* s = text;
    while (s < text_end)
    {
        unsigned int c = (unsigned int)*s;
        const char* next_s;
        if (c < 0x80)
            next_s = s + 1;
        else
            next_s = s + ImTextCharFromUtf8(&c, s, text_end);
        if (c == 0)
            break;

        if (c < 32)
        {
            if (c == '\n')
            {
                line_width = word_width = blank_width = 0.0f;
                inside_word = true;
                s = next_s;
                continue;
            }
            if (c == '\r')
            {
                s = next_s;
                continue;
            }
        }

        const float char_width = ((int)c < IndexAdvanceX.Size ? IndexAdvanceX[(int)c] : FallbackAdvanceX);
        if (ImCharIsBlankW(c))
        {
            if (inside_word)
            {
                line_width += blank_width;
                blank_width = 0.0f;
                word_end = s;
            }
            blank_width += char_width;
            inside_word = false;
        }
        else
        {
            word_width += char_width;
            if (inside_word)
            {
                word_end = next_s;
            }
            else
            {
                prev_word_end = word_end;
                line_width += word_width + blank_width;
                word_width = blank_width = 0.0f;
            }

            // Allow wrapping after punctuation.
            inside_word = !(c == '.' || c == ',' || c == ';' || c == '!' || c == '?' || c == '\"');
        }

        // We ignore blank width at the end of the line (they can be skipped)
        if (line_width + word_width >= wrap_width)
        {
            // Words that cannot possibly fit within an entire line will be cut anywhere.
            if (word_width < wrap_width)
                s = prev_word_end ? prev_word_end : word_end;
            break;
        }

        s = next_s;
    }

    return s;
}

ImVec2 ImFont::CalcTextSizeA(float size, float max_width, float wrap_width, const char* text_begin, const char* text_end, const char** remaining) const
{
    if (!text_end)
        text_end = text_begin + strlen(text_begin); // FIXME-OPT: Need to avoid this.

    const float line_height = size;
    const float scale = size / FontSize;

    ImVec2 text_size = ImVec2(0,0);
    float line_width = 0.0f;

    const bool word_wrap_enabled = (wrap_width > 0.0f);
    const char* word_wrap_eol = NULL;

    const char* s = text_begin;
    while (s < text_end)
    {
        if (word_wrap_enabled)
        {
            // Calculate how far we can render. Requires two passes on the string data but keeps the code simple and not intrusive for what's essentially an uncommon feature.
            if (!word_wrap_eol)
            {
                word_wrap_eol = CalcWordWrapPositionA(scale, s, text_end, wrap_width - line_width);
                if (word_wrap_eol == s) // Wrap_width is too small to fit anything. Force displaying 1 character to minimize the height discontinuity.
                    word_wrap_eol++;    // +1 may not be a character start point in UTF-8 but it's ok because we use s >= word_wrap_eol below
            }

            if (s >= word_wrap_eol)
            {
                if (text_size.x < line_width)
                    text_size.x = line_width;
                text_size.y += line_height;
                line_width = 0.0f;
                word_wrap_eol = NULL;

                // Wrapping skips upcoming blanks
                while (s < text_end)
                {
                    const char c = *s;
                    if (ImCharIsBlankA(c)) { s++; } else if (c == '\n') { s++; break; } else { break; }
                }
                continue;
            }
        }

        // Decode and advance source
        const char* prev_s = s;
        unsigned int c = (unsigned int)*s;
        if (c < 0x80)
        {
            s += 1;
        }
        else
        {
            s += ImTextCharFromUtf8(&c, s, text_end);
            if (c == 0) // Malformed UTF-8?
                break;
        }

        if (c < 32)
        {
            if (c == '\n')
            {
                text_size.x = ImMax(text_size.x, line_width);
                text_size.y += line_height;
                line_width = 0.0f;
                continue;
            }
            if (c == '\r')
                continue;
        }

        const float char_width = ((int)c < IndexAdvanceX.Size ? IndexAdvanceX[(int)c] : FallbackAdvanceX) * scale;
        if (line_width + char_width >= max_width)
        {
            s = prev_s;
            break;
        }

        line_width += char_width;
    }

    if (text_size.x < line_width)
        text_size.x = line_width;

    if (line_width > 0 || text_size.y == 0.0f)
        text_size.y += line_height;

    if (remaining)
        *remaining = s;

    return text_size;
}

void ImFont::RenderChar(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, unsigned short c) const
{
    if (c == ' ' || c == '\t' || c == '\n' || c == '\r') // Match behavior of RenderText(), those 4 codepoints are hard-coded.
        return;
    if (const ImFontGlyph* glyph = FindGlyph(c))
    {
        float scale = (size >= 0.0f) ? (size / FontSize) : 1.0f;
        pos.x = (float)(int)pos.x + DisplayOffset.x;
        pos.y = (float)(int)pos.y + DisplayOffset.y;
        draw_list->PrimReserve(6, 4);
        draw_list->PrimRectUV(ImVec2(pos.x + glyph->X0 * scale, pos.y + glyph->Y0 * scale), ImVec2(pos.x + glyph->X1 * scale, pos.y + glyph->Y1 * scale), ImVec2(glyph->U0, glyph->V0), ImVec2(glyph->U1, glyph->V1), col);
    }
}

void ImFont::RenderText(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, const ImVec4& clip_rect, const char* text_begin, const char* text_end, float wrap_width, bool cpu_fine_clip) const
{
    if (!text_end)
        text_end = text_begin + strlen(text_begin); // ImGui functions generally already provides a valid text_end, so this is merely to handle direct calls.

    // Align to be pixel perfect
    pos.x = (float)(int)pos.x + DisplayOffset.x;
    pos.y = (float)(int)pos.y + DisplayOffset.y;
    float x = pos.x;
    float y = pos.y;
    if (y > clip_rect.w)
        return;

    const float scale = size / FontSize;
    const float line_height = FontSize * scale;
    const bool word_wrap_enabled = (wrap_width > 0.0f);
    const char* word_wrap_eol = NULL;

    // Fast-forward to first visible line
    const char* s = text_begin;
    if (y + line_height < clip_rect.y && !word_wrap_enabled)
        while (y + line_height < clip_rect.y)
        {
            while (s < text_end)
                if (*s++ == '\n')
                    break;
            y += line_height;
        }

    // For large text, scan for the last visible line in order to avoid over-reserving in the call to PrimReserve()
    // Note that very large horizontal line will still be affected by the issue (e.g. a one megabyte string buffer without a newline will likely crash atm)
    if (text_end - s > 10000 && !word_wrap_enabled)
    {
        const char* s_end = s;
        float y_end = y;
        while (y_end < clip_rect.w)
        {
            while (s_end < text_end)
                if (*s_end++ == '\n')
                    break;
            y_end += line_height;
        }
        text_end = s_end;
    }

    // Reserve vertices for remaining worse case (over-reserving is useful and easily amortized)
    const int vtx_count_max = (int)(text_end - s) * 4;
    const int idx_count_max = (int)(text_end - s) * 6;
    const int idx_expected_size = draw_list->IdxBuffer.Size + idx_count_max;
    draw_list->PrimReserve(idx_count_max, vtx_count_max);

    ImDrawVert* vtx_write = draw_list->_VtxWritePtr;
    ImDrawIdx* idx_write = draw_list->_IdxWritePtr;
    unsigned int vtx_current_idx = draw_list->_VtxCurrentIdx;

    while (s < text_end)
    {
        if (word_wrap_enabled)
        {
            // Calculate how far we can render. Requires two passes on the string data but keeps the code simple and not intrusive for what's essentially an uncommon feature.
            if (!word_wrap_eol)
            {
                word_wrap_eol = CalcWordWrapPositionA(scale, s, text_end, wrap_width - (x - pos.x));
                if (word_wrap_eol == s) // Wrap_width is too small to fit anything. Force displaying 1 character to minimize the height discontinuity.
                    word_wrap_eol++;    // +1 may not be a character start point in UTF-8 but it's ok because we use s >= word_wrap_eol below
            }

            if (s >= word_wrap_eol)
            {
                x = pos.x;
                y += line_height;
                word_wrap_eol = NULL;

                // Wrapping skips upcoming blanks
                while (s < text_end)
                {
                    const char c = *s;
                    if (ImCharIsBlankA(c)) { s++; } else if (c == '\n') { s++; break; } else { break; }
                }
                continue;
            }
        }

        // Decode and advance source
        unsigned int c = (unsigned int)*s;
        if (c < 0x80)
        {
            s += 1;
        }
        else
        {
            s += ImTextCharFromUtf8(&c, s, text_end);
            if (c == 0) // Malformed UTF-8?
                break;
        }

        if (c < 32)
        {
            if (c == '\n')
            {
                x = pos.x;
                y += line_height;
                if (y > clip_rect.w)
                    break; // break out of main loop
                continue;
            }
            if (c == '\r')
                continue;
        }

        float char_width = 0.0f;
        if (const ImFontGlyph* glyph = FindGlyph((unsigned short)c))
        {
            char_width = glyph->AdvanceX * scale;

            // Arbitrarily assume that both space and tabs are empty glyphs as an optimization
            if (c != ' ' && c != '\t')
            {
                // We don't do a second finer clipping test on the Y axis as we've already skipped anything before clip_rect.y and exit once we pass clip_rect.w
                float x1 = x + glyph->X0 * scale;
                float x2 = x + glyph->X1 * scale;
                float y1 = y + glyph->Y0 * scale;
                float y2 = y + glyph->Y1 * scale;
                if (x1 <= clip_rect.z && x2 >= clip_rect.x)
                {
                    // Render a character
                    float u1 = glyph->U0;
                    float v1 = glyph->V0;
                    float u2 = glyph->U1;
                    float v2 = glyph->V1;

                    // CPU side clipping used to fit text in their frame when the frame is too small. Only does clipping for axis aligned quads.
                    if (cpu_fine_clip)
                    {
                        if (x1 < clip_rect.x)
                        {
                            u1 = u1 + (1.0f - (x2 - clip_rect.x) / (x2 - x1)) * (u2 - u1);
                            x1 = clip_rect.x;
                        }
                        if (y1 < clip_rect.y)
                        {
                            v1 = v1 + (1.0f - (y2 - clip_rect.y) / (y2 - y1)) * (v2 - v1);
                            y1 = clip_rect.y;
                        }
                        if (x2 > clip_rect.z)
                        {
                            u2 = u1 + ((clip_rect.z - x1) / (x2 - x1)) * (u2 - u1);
                            x2 = clip_rect.z;
                        }
                        if (y2 > clip_rect.w)
                        {
                            v2 = v1 + ((clip_rect.w - y1) / (y2 - y1)) * (v2 - v1);
                            y2 = clip_rect.w;
                        }
                        if (y1 >= y2)
                        {
                            x += char_width;
                            continue;
                        }
                    }

                    // We are NOT calling PrimRectUV() here because non-inlined causes too much overhead in a debug builds. Inlined here:
                    {
                        idx_write[0] = (ImDrawIdx)(vtx_current_idx); idx_write[1] = (ImDrawIdx)(vtx_current_idx+1); idx_write[2] = (ImDrawIdx)(vtx_current_idx+2);
                        idx_write[3] = (ImDrawIdx)(vtx_current_idx); idx_write[4] = (ImDrawIdx)(vtx_current_idx+2); idx_write[5] = (ImDrawIdx)(vtx_current_idx+3);
                        vtx_write[0].pos.x = x1; vtx_write[0].pos.y = y1; vtx_write[0].col = col; vtx_write[0].uv.x = u1; vtx_write[0].uv.y = v1;
                        vtx_write[1].pos.x = x2; vtx_write[1].pos.y = y1; vtx_write[1].col = col; vtx_write[1].uv.x = u2; vtx_write[1].uv.y = v1;
                        vtx_write[2].pos.x = x2; vtx_write[2].pos.y = y2; vtx_write[2].col = col; vtx_write[2].uv.x = u2; vtx_write[2].uv.y = v2;
                        vtx_write[3].pos.x = x1; vtx_write[3].pos.y = y2; vtx_write[3].col = col; vtx_write[3].uv.x = u1; vtx_write[3].uv.y = v2;
                        vtx_write += 4;
                        vtx_current_idx += 4;
                        idx_write += 6;
                    }
                }
            }
        }

        x += char_width;
    }

    // Give back unused vertices
    draw_list->VtxBuffer.resize((int)(vtx_write - draw_list->VtxBuffer.Data));
    draw_list->IdxBuffer.resize((int)(idx_write - draw_list->IdxBuffer.Data));
    draw_list->CmdBuffer[draw_list->CmdBuffer.Size-1].ElemCount -= (idx_expected_size - draw_list->IdxBuffer.Size);
    draw_list->_VtxWritePtr = vtx_write;
    draw_list->_IdxWritePtr = idx_write;
    draw_list->_VtxCurrentIdx = (unsigned int)draw_list->VtxBuffer.Size;
}

//-----------------------------------------------------------------------------
// Internals Render Helpers
// (progressively moved from imgui.cpp to here when they are redesigned to stop accessing ImGui global state)
//-----------------------------------------------------------------------------
// RenderMouseCursor()
// RenderArrowPointingAt()
// RenderRectFilledRangeH()
//-----------------------------------------------------------------------------

void ImGui::RenderMouseCursor(ImDrawList* draw_list, ImVec2 pos, float scale, ImGuiMouseCursor mouse_cursor)
{
    if (mouse_cursor == ImGuiMouseCursor_None)
        return;
    IM_ASSERT(mouse_cursor > ImGuiMouseCursor_None && mouse_cursor < ImGuiMouseCursor_COUNT);

    const ImU32 col_shadow = IM_COL32(0, 0, 0, 48);
    const ImU32 col_border = IM_COL32(0, 0, 0, 255);          // Black
    const ImU32 col_fill   = IM_COL32(255, 255, 255, 255);    // White

    ImFontAtlas* font_atlas = draw_list->_Data->Font->ContainerAtlas;
    ImVec2 offset, size, uv[4];
    if (font_atlas->GetMouseCursorTexData(mouse_cursor, &offset, &size, &uv[0], &uv[2]))
    {
        pos -= offset;
        const ImTextureID tex_id = font_atlas->TexID;
        draw_list->PushTextureID(tex_id);
        draw_list->AddImage(tex_id, pos + ImVec2(1,0)*scale, pos + ImVec2(1,0)*scale + size*scale, uv[2], uv[3], col_shadow);
        draw_list->AddImage(tex_id, pos + ImVec2(2,0)*scale, pos + ImVec2(2,0)*scale + size*scale, uv[2], uv[3], col_shadow);
        draw_list->AddImage(tex_id, pos,                     pos + size*scale,                     uv[2], uv[3], col_border);
        draw_list->AddImage(tex_id, pos,                     pos + size*scale,                     uv[0], uv[1], col_fill);
        draw_list->PopTextureID();
    }
}

// Render an arrow. 'pos' is position of the arrow tip. half_sz.x is length from base to tip. half_sz.y is length on each side.
void ImGui::RenderArrowPointingAt(ImDrawList* draw_list, ImVec2 pos, ImVec2 half_sz, ImGuiDir direction, ImU32 col)
{
    switch (direction)
    {
    case ImGuiDir_Left:  draw_list->AddTriangleFilled(ImVec2(pos.x + half_sz.x, pos.y - half_sz.y), ImVec2(pos.x + half_sz.x, pos.y + half_sz.y), pos, col); return;
    case ImGuiDir_Right: draw_list->AddTriangleFilled(ImVec2(pos.x - half_sz.x, pos.y + half_sz.y), ImVec2(pos.x - half_sz.x, pos.y - half_sz.y), pos, col); return;
    case ImGuiDir_Up:    draw_list->AddTriangleFilled(ImVec2(pos.x + half_sz.x, pos.y + half_sz.y), ImVec2(pos.x - half_sz.x, pos.y + half_sz.y), pos, col); return;
    case ImGuiDir_Down:  draw_list->AddTriangleFilled(ImVec2(pos.x - half_sz.x, pos.y - half_sz.y), ImVec2(pos.x + half_sz.x, pos.y - half_sz.y), pos, col); return;
    case ImGuiDir_None: case ImGuiDir_COUNT: break; // Fix warnings
    }
}

static inline float ImAcos01(float x)
{
    if (x <= 0.0f) return IM_PI * 0.5f;
    if (x >= 1.0f) return 0.0f;
    return ImAcos(x);
    //return (-0.69813170079773212f * x * x - 0.87266462599716477f) * x + 1.5707963267948966f; // Cheap approximation, may be enough for what we do.
}

// FIXME: Cleanup and move code to ImDrawList.
void ImGui::RenderRectFilledRangeH(ImDrawList* draw_list, const ImRect& rect, ImU32 col, float x_start_norm, float x_end_norm, float rounding)
{
    if (x_end_norm == x_start_norm)
        return;
    if (x_start_norm > x_end_norm)
        ImSwap(x_start_norm, x_end_norm);

    ImVec2 p0 = ImVec2(ImLerp(rect.Min.x, rect.Max.x, x_start_norm), rect.Min.y);
    ImVec2 p1 = ImVec2(ImLerp(rect.Min.x, rect.Max.x, x_end_norm), rect.Max.y);
    if (rounding == 0.0f)
    {
        draw_list->AddRectFilled(p0, p1, col, 0.0f);
        return;
    }

    rounding = ImClamp(ImMin((rect.Max.x - rect.Min.x) * 0.5f, (rect.Max.y - rect.Min.y) * 0.5f) - 1.0f, 0.0f, rounding);
    const float inv_rounding = 1.0f / rounding;
    const float arc0_b = ImAcos01(1.0f - (p0.x - rect.Min.x) * inv_rounding);
    const float arc0_e = ImAcos01(1.0f - (p1.x - rect.Min.x) * inv_rounding);
    const float x0 = ImMax(p0.x, rect.Min.x + rounding);
    if (arc0_b == arc0_e)
    {
        draw_list->PathLineTo(ImVec2(x0, p1.y));
        draw_list->PathLineTo(ImVec2(x0, p0.y));
    }
    else if (arc0_b == 0.0f && arc0_e == IM_PI*0.5f)
    {
        draw_list->PathArcToFast(ImVec2(x0, p1.y - rounding), rounding, 3, 6); // BL
        draw_list->PathArcToFast(ImVec2(x0, p0.y + rounding), rounding, 6, 9); // TR
    }
    else
    {
        draw_list->PathArcTo(ImVec2(x0, p1.y - rounding), rounding, IM_PI - arc0_e, IM_PI - arc0_b, 3); // BL
        draw_list->PathArcTo(ImVec2(x0, p0.y + rounding), rounding, IM_PI + arc0_b, IM_PI + arc0_e, 3); // TR
    }
    if (p1.x > rect.Min.x + rounding)
    {
        const float arc1_b = ImAcos01(1.0f - (rect.Max.x - p1.x) * inv_rounding);
        const float arc1_e = ImAcos01(1.0f - (rect.Max.x - p0.x) * inv_rounding);
        const float x1 = ImMin(p1.x, rect.Max.x - rounding);
        if (arc1_b == arc1_e)
        {
            draw_list->PathLineTo(ImVec2(x1, p0.y));
            draw_list->PathLineTo(ImVec2(x1, p1.y));
        }
        else if (arc1_b == 0.0f && arc1_e == IM_PI*0.5f)
        {
            draw_list->PathArcToFast(ImVec2(x1, p0.y + rounding), rounding, 9, 12); // TR
            draw_list->PathArcToFast(ImVec2(x1, p1.y - rounding), rounding, 0, 3);  // BR
        }
        else
        {
            draw_list->PathArcTo(ImVec2(x1, p0.y + rounding), rounding, -arc1_e, -arc1_b, 3); // TR
            draw_list->PathArcTo(ImVec2(x1, p1.y - rounding), rounding, +arc1_b, +arc1_e, 3); // BR
        }
    }
    draw_list->PathFillConvex(col);
}

//-----------------------------------------------------------------------------
// DEFAULT FONT DATA
//-----------------------------------------------------------------------------
// Compressed with stb_compress() then converted to a C array and encoded as base85.
// Use the program in misc/fonts/binary_to_compressed_c.cpp to create the array from a TTF file.
// The purpose of encoding as base85 instead of "0x00,0x01,..." style is only save on _source code_ size.
// Decompression from stb.h (public domain) by Sean Barrett https://github.com/nothings/stb/blob/master/stb.h
//-----------------------------------------------------------------------------

static unsigned int stb_decompress_length(const unsigned char *input)
{
    return (input[8] << 24) + (input[9] << 16) + (input[10] << 8) + input[11];
}

static unsigned char *stb__barrier_out_e, *stb__barrier_out_b;
static const unsigned char *stb__barrier_in_b;
static unsigned char *stb__dout;
static void stb__match(const unsigned char *data, unsigned int length)
{
    // INVERSE of memmove... write each byte before copying the next...
    IM_ASSERT(stb__dout + length <= stb__barrier_out_e);
    if (stb__dout + length > stb__barrier_out_e) { stb__dout += length; return; }
    if (data < stb__barrier_out_b) { stb__dout = stb__barrier_out_e+1; return; }
    while (length--) *stb__dout++ = *data++;
}

static void stb__lit(const unsigned char *data, unsigned int length)
{
    IM_ASSERT(stb__dout + length <= stb__barrier_out_e);
    if (stb__dout + length > stb__barrier_out_e) { stb__dout += length; return; }
    if (data < stb__barrier_in_b) { stb__dout = stb__barrier_out_e+1; return; }
    memcpy(stb__dout, data, length);
    stb__dout += length;
}

#define stb__in2(x)   ((i[x] << 8) + i[(x)+1])
#define stb__in3(x)   ((i[x] << 16) + stb__in2((x)+1))
#define stb__in4(x)   ((i[x] << 24) + stb__in3((x)+1))

static const unsigned char *stb_decompress_token(const unsigned char *i)
{
    if (*i >= 0x20) { // use fewer if's for cases that expand small
        if (*i >= 0x80)       stb__match(stb__dout-i[1]-1, i[0] - 0x80 + 1), i += 2;
        else if (*i >= 0x40)  stb__match(stb__dout-(stb__in2(0) - 0x4000 + 1), i[2]+1), i += 3;
        else /* *i >= 0x20 */ stb__lit(i+1, i[0] - 0x20 + 1), i += 1 + (i[0] - 0x20 + 1);
    } else { // more ifs for cases that expand large, since overhead is amortized
        if (*i >= 0x18)       stb__match(stb__dout-(stb__in3(0) - 0x180000 + 1), i[3]+1), i += 4;
        else if (*i >= 0x10)  stb__match(stb__dout-(stb__in3(0) - 0x100000 + 1), stb__in2(3)+1), i += 5;
        else if (*i >= 0x08)  stb__lit(i+2, stb__in2(0) - 0x0800 + 1), i += 2 + (stb__in2(0) - 0x0800 + 1);
        else if (*i == 0x07)  stb__lit(i+3, stb__in2(1) + 1), i += 3 + (stb__in2(1) + 1);
        else if (*i == 0x06)  stb__match(stb__dout-(stb__in3(1)+1), i[4]+1), i += 5;
        else if (*i == 0x04)  stb__match(stb__dout-(stb__in3(1)+1), stb__in2(4)+1), i += 6;
    }
    return i;
}

static unsigned int stb_adler32(unsigned int adler32, unsigned char *buffer, unsigned int buflen)
{
    const unsigned long ADLER_MOD = 65521;
    unsigned long s1 = adler32 & 0xffff, s2 = adler32 >> 16;
    unsigned long blocklen, i;

    blocklen = buflen % 5552;
    while (buflen) {
        for (i=0; i + 7 < blocklen; i += 8) {
            s1 += buffer[0], s2 += s1;
            s1 += buffer[1], s2 += s1;
            s1 += buffer[2], s2 += s1;
            s1 += buffer[3], s2 += s1;
            s1 += buffer[4], s2 += s1;
            s1 += buffer[5], s2 += s1;
            s1 += buffer[6], s2 += s1;
            s1 += buffer[7], s2 += s1;

            buffer += 8;
        }

        for (; i < blocklen; ++i)
            s1 += *buffer++, s2 += s1;

        s1 %= ADLER_MOD, s2 %= ADLER_MOD;
        buflen -= blocklen;
        blocklen = 5552;
    }
    return (unsigned int)(s2 << 16) + (unsigned int)s1;
}

static unsigned int stb_decompress(unsigned char *output, const unsigned char *i, unsigned int /*length*/)
{
    unsigned int olen;
    if (stb__in4(0) != 0x57bC0000) return 0;
    if (stb__in4(4) != 0)          return 0; // error! stream is > 4GB
    olen = stb_decompress_length(i);
    stb__barrier_in_b = i;
    stb__barrier_out_e = output + olen;
    stb__barrier_out_b = output;
    i += 16;

    stb__dout = output;
    for (;;) {
        const unsigned char *old_i = i;
        i = stb_decompress_token(i);
        if (i == old_i) {
            if (*i == 0x05 && i[1] == 0xfa) {
                IM_ASSERT(stb__dout == output + olen);
                if (stb__dout != output + olen) return 0;
                if (stb_adler32(1, output, olen) != (unsigned int) stb__in4(2))
                    return 0;
                return olen;
            } else {
                IM_ASSERT(0); /* NOTREACHED */
                return 0;
            }
        }
        IM_ASSERT(stb__dout <= output + olen);
        if (stb__dout > output + olen)
            return 0;
    }
}

//-----------------------------------------------------------------------------
// ProggyClean.ttf
// Copyright (c) 2004, 2005 Tristan Grimmer
// MIT license (see License.txt in http://www.upperbounds.net/download/ProggyClean.ttf.zip)
// Download and more information at http://upperbounds.net
//-----------------------------------------------------------------------------
// File: 'ProggyClean.ttf' (41208 bytes)
// Exported using misc/fonts/binary_to_compressed_c.cpp (with compression + base85 string encoding).
// The purpose of encoding as base85 instead of "0x00,0x01,..." style is only save on _source code_ size.
//-----------------------------------------------------------------------------
//Counter-Strike
static const char Cousine_Regular_ttf_compressed_data_base85[47040 + 1] =
"7])#######WNWrN'/###I),##bw9hLQXH##j$1S:'>pgL@Kt(9668X%QUQl;1TmEd;Q^rEN@4',:a`T9-V:;$wmZJ;V'q?-'Tx-31s(U<h2TlSQv$sAqV,-G+D1>V,nHS[J)-5J<gXG-"
"EXd;^*1kHVn[<?6$jg0Ffc:jLH^^/1/%@W$%J%/GDhno%IU%d3-q+5(,5LsC8%JsKtc0=QFp<%9b';9C&u(rNAWC&,r1dD4AJr9.afNMB)a4&>V3dW.;h^`I8bo#e#,Ncs8cB3_o6Q<B"
"uY3Ugi[2bj:8&9]0iR/GcI,,DID^VIeQi)3+>00Fcc<;5gfCfUW*35&S$S+HV2Z,v?to=Y-5YY#@cFVCSY)TspD/2'[G:;$gmRfL_C*j0%ow'XodPirJ[m##>hjYdswgZNHM]Cs6%_fh"
"dbaw'OMYY#0]Wh#bYbw$ehG3#J]35vlubU$KdW3M<DT;-:-Xn/vTq/#=M=.#e<151c>$(#+?uu#Nkc+#?KXV.Nc3T#&rpo/%V%h$W,>>#]A<Z5C8SfCDbIW$9L<p%.Y1Z#wI)4#kap)#"
"t,k(N*Uwt7O1HS7)3W)+7NCiKP^Q>YBH;-#%4GCibGrY5l[$C/k7?>#9Kel8(V5qVvZ&.$PDY>#oid(#7>5=6GQSX#v_P+#<@_J#wZYF#1+1/#4Lg2#4)[0#<ME/1Y3m3#7+BM#vl7-#"
"?B#s-0q/kLwb<4#e8cwL6lh[MmLS8#.$)t-ks5tL5RX3NFsH+#S'02#abtK2lQk&#^sG3#P&M$#Pq4Y#_Ui].Y5n0#Xb%^.=.92#4whP/0`2<#c$S-#<)NS]+,%jq4([(a(el59A`w4A"
"].g;Rr3B,)GQ)dE5re34>wE'S_X]w';*BD<gs_4fjq`?T>b9e?(VaKc[A))3e-U>QF5[Ee<BE>,r@5DEOdGJ(sVg1Thk=i#-x)X_/NB,Wvb_L#I-b9`0aIcM;Ce3#q8o7N@J=jLnuWuL"
"YX&nN2?VhLc@[tLU9T;-%1G@MHvHTM^.@tL:J5s-3T3rLC7lZMaTNmLcTNmL;O)L)[ra]+C/Buup.bCsB6euP3(Lo[32k4]%Ikr?`O+Seqb].qDib@t)2r=cv^H#$@MR&,Z2c'&T7'L5"
")Eu'&hF;;$f,?X(viY&#G;G##NqH0#VYQC#A<eo#R'^R-<Bx=-Nsk>-7@KB-)>+u-jle+M;KG&#4Mx>-C':W.96f=-ZKx>-H$o;7])+##xp[xF^_aOoJ,*i]E[fO[(nhLSCp)M/X,*(`"
"bu[>-7f4k#G-E##>$S-#B0f-#F<x-#JH4.#NTF.#RaX.#Lfb.#Xst.#])1/#a5C/#eAU/#iMh/#mY$0#qf60#urH0##)[0#'5n0#+A*1#/M<1#3YN1#7fa1#;rs1#?(02#C4B2#G@T2#"
"KLg2#OX#3#Se53#WqG3#['Z3#`3m3#d?)4#hK;4#lWM4#pd`4#tpr4#x&/5#&3A5#*?S5#.Kf5#2Wx5#6d46#:pF6#>&Y6#B2l6#F>(7#JJ:7#9.>>#As(bnXPsA##J,W-^v&2#pI1##"
"/r$W$Aeap%QWG3'bJ.L(r=ke),1Q(+<$8A,LmtY-]`Zs.mRA60'F(O179eh2G,K+4Wu1D5hhn]6xZTv72N;99BAxQ:R4_k;c'E.=sp+G>-dh`?=VN#AMI5<B`D<RNr<i>UWPZqWiUfOY"
"%LLiZ5?3,]JA>a^_OI?`_HOuB5fZ2IFFA.#2te(N-$(/#.oWSM,q?@JWA4'L-Fl$':P10#kUQ'S6#]4dN`Old`&qO.i0N,gsa8>I>)QfLCk8oN[#v1P3cWrQ_^Wparlr.#85@sLLND,#"
"WTe^?#eJf=gqdL<V((4;F5Aq96BZW8&Ot>7l[7&6[iPc4EHRL2/Ll31ixms.X/1Z-*)SL(^pY3'IkNT%9xh;$)/,##S@*Q9%XqG/_RW5/YF(R1OU^;.7/v<-AYVt-,<tiL)&IEP8$#N-"
"`NB5Bv2%A0/iv?0b#:A02%<@0`^#l=4Sq<-t$dP1-bP?.[tX,9v8vQ#TonoL&Pc%9q)TV[lnG<-wucW-3ur$'4s_$'_;xiLJ0t>--Ggw8ULglA*>.a9'fe@9w9m31@,H6&2_BQC1``'#"
"msXgL0_YgL-,R)0jU8Q#e96GM(hwl/VgQm#fwkgL>JNZ[GK=9B/MH.=v-pd+A7mS1WO:a'?R<nL2;CP8$.#W[$S&K%<am>-%19t_[6&J-LgNUO#]f$#saIq&qVW<B6pe2$)0LA6+YBHO"
"L'9^(KlV<.g)A9J$bk31U_lA1+uNZ[H0Z`-[ID:D5H#iGX$Cj$FHt>-&LRfL%k>5p:@<VO<4+3N.XIp.WSn+M]81Q9xp:KO7Bv>-4>=KOi.,JL.5P2(9^e)'p-$>9TUg5#(^.Q#N[$k_"
"lk,a9u=rA('rYY5a'?R9/.n>).-R][[Z^B-oSqgucI/<7fxUc+C0,nalF^#$PAxE7W-V'#$]:Z[OrQK1kD=/M/ZO=_HaqpL.9WALb-$x''P9MB1+LS72LY][x=x3+O#J4+2Zl4MeMaQN"
"a'6Z%JC<Z-q[Le=fe,N$oBmB.nu6g7AKYALcgF5Bpta9.K&lT[e-NY-IvDL(..MkL?(l?-MT$*0ZBIF-ZQ2W[n-&cO**)N$uSU@-UE#W-Hm`-6jRoV[h*HiL5iLN(]n8>.b;Zw9I7e59"
".N,s-G2(iLhcfM1toJq07/H59+<%D?0obmLCwe8BOrh8.$[212_a#6B@MglAZC@']QdQ][Aj*`[4q+<8xPQ/;<<lBSH]_h=c>hhMUrMZ[+jh5#MW744kn*79K&w596ZCHO0Z,<-%LuD3"
";=aC?f[d$v`Bj@-%uN(#JN2v8L:p/10n5B?B.(69&%7qCoemg+d^+pAs6$g+94;^?:Aba?^_3b?e0Hp80BmD0n-uC.5tqY?@/=_#_0@5;6/l-=;nJlL6GVPM[6D.MhF7p.`UB$.?.?fM"
"O^Dj$&bap.PS&d#K(X][462hLflcP9HFg;.)mLe$#[Wp.)PP8.eTNp.g,P?gWh'?-Bun%#6$X6NBPZ?-CV%0NjQ<$P)2M9.,^-6:xrfv$wB3p.T27T8VbqY?>3_h#Kr@_#YbX>-NPa;."
"54.I-GT=Z-RmaO+8-0?-C?3W%I`3[9:)@T.:0Q?.lPg=-D)cC-',uB.(#>F-h:XC?94;^?^_3b?*#ZQ1Mg5t$,hjmLbBOg$=s'D?)cv51U-l31x.wiLu3EiM%'Hm#omQ][o6>W84.m<-"
"?YCq7h8ZV[8RJ>--P,hLmFHDOB@Le=OtB%@v4jn<*imW_A&i5#MrkNXfv;hLLNl31)C*Q9NLF9BA[r<-,R`m$*4Ag7N.$>9SSTP1sVpF.)%sF.:BPMMj@1I=9;k7JY:Gf%UUr+;[U&>8"
"0<Qm#:S)K.Z=/x[@Jwk=JqnB(w]fcN/s[m#uwdsA?MEg.>r$?\?R0$##sRM=-A$).MRHo>-VC,-Mba5oLT_uGMLkoL_9Ti.LK3`>$KNnw'dXxQ#@-MeMVeRU.@N79_3I;=-WsF?-0@;=-"
"5I;=-qF;=-7Rqx4/x%h*K/l-=YjG59Cf6g7L?Zd?%.^a?)BRi.AHGm#YTh]4N$@8.j[Fm#7j6Q#=aET[MCk?8Dof88seN;7seN;7;b?v$K&K=%:p-Q#>oj31(Ae39,0$M14tvk%oNuv#"
"r#@crX:MiqM12MqN.m1qIiZ`OHLx8Zq&Ytp]It+`S#a$q5NPQ@r&N9$E3WsobDEg9eYBSm4Q9SmJK0Sm'-=rlwk8Zl8]Jf9qdI:l%*E6l74p9l%O3]3rc8f9nMDR#wLsD#6-DG#kTdW6"
"C8;o6s42o6R0a-8CU@%#PaFoL/x.qLYqQuuYUGR]V-^B-PL,7]8#uF`?^O2(+YmPfCD#7]ko#2_.XEpBUrN2(?T#l7Z(HFL@PS4%MffhjdT%sjj3hU#[[?%-.0`Fd#D_PAD5A(Lm48Ub"
"]Ob=/sNYR#F:g-alk,#G#5vn#vf?J`PY1L7ghqK[,dck$%.$$-:Gn3_Uu_:_pD;/_@?k),_$`Q9btC;-dBCBLGXnN$k(TD^'n3K7(K03$*egT7aEY'-@+Sc[G&*saX0j2$F5V>[$SZf["
"A$[kZ(;:,2iX$m#0NE`aKXml#.4pi'e>UM'#$&##B3,/(>fW>-99.&G=aSA$C<5/(u<X`<-?E3GHl0ESG:R^90N;US*;bfLoltGStasmL##8T0u./O9H<,;-a=sfRf9gS7LsRR9)]$`+"
">RD^4>)9q'ddgG7e8uxp0wqg_J3E]F;@&B-l16D/''7(v_3fM#YJ'v,v)%j#3BPHQphA>(fT6/$+U^p.]bQ%,H:KV2;XDFPchmIP9`:M#kx#&PxufS7o@AO9T#_P&tYk-$N5l-$fMH%b"
"NF?W*rIQ?MTo1Y73FJO9wUx#-R1>&-:EI&-56@&-iu-;-YM9/('TEU2_Ep0M'h7L#POkm&Se_=/-NF-46Fn-$1Qe`*2',f*a2E%$,KYuu@JOk+(om-$:@a=lR-o2-X,ZpLcEb&-LqI<A"
"AN]V@kT@;@')-v?Tbf2)m2]`$+Q@D$gXc7_Rtrp+;LSw#M:0&+$(q84i(-$M:86o/-[B5&[xDn<Ok:i<IU@?=bjZS7(:>S9Wbbp/5,tF#GlBG;F27/;w6lc<8d;V7e_5U94'9nLQ%0nL"
"fs&nLka]=[;7-f916(/L^p;+3J>1@#uH^*359S>#$*/##rn+m'5lrs'pF5j'k+iE<@08wPwx#wuPL2mLS71mpOuk.#up@>#5E`V$ol+;QRGVr0YFpK%rp0[[3sm][-3Y,/]l.T%1QB%@"
"iNYb[.%[A@/JM>#tO3LPfd;E,OTnb=T,SH,2a_ACd@jV7O.72L?,h3(^jF%#QU<GHVu7v0sCbA#M>t#HCmU?Hbe:$HCLBI$%3c'&dwo'/s@(kL(rJfL1Y:GHfIMiLolbkLGv+v0CQ,W-"
"]fAR*[nd*._WH&#UOUm0*N=GHEb]6E;eVJ#O&KgLEV:GH78J&#L;X>HM`2R3pI>#HI8a'JeD'XLB%%v0@`xA#cs1R3&i,#H+Mu$HN$)-#O.Bm$sDsd$(M7%#-Hg;--:.20v1EG)E5'##"
"Soeq)'JO]u,%dWdObm##35+q]6a;YY7nk:d^KLcM6I:'#*27MK44<`aBO,+%.*2Vd[p`xO&+NiTH=xt(A)FM_4twoJxxjVRdHAF%9%LB#;nk.#nDuwLl3ItL]mv6#dq&M#1g7-#o.e0#"
"dkdm3-+1N$2E5+#nZx5#F_u##x<6_#5;7I-nhM=/a>T2#eBnqL-mx#Mhw><MoVEfqKo&s69Pn%XJv`%O$l]lAa>7R*kq)##m/?`W33$5Ac[PcDKxJ&#7XTJDJh9i#hEsf:&j:PJL>kYH"
"KY`.250PD3#<%cr01c%OIvo4S#`pAG&r2A=RnXh#Re7v#b#7BPVrY+`2Ag1^(iX&#8gbe$0kMw$B9Uf#=LP>u&(suL]EPi;*?r.C`;;JLlHYxX&6pIUZn129O`t:Q03HD*=xT29)#ml&"
"Zs+mSuT.AF'*;MBR)$Sn(SwJ(=YT21^b%p%MA5MK1sPG28@wS%V=fS@vgFm&CL3sHmdH;Zfp(T@P'[s-M*p)3Upr/C?Qs)E&gda3x#u/U7JL6/aeVaj@dCBbDL-tZbBk01>7UHrY8sHM"
"A-LO'Hg#u$=ZEnf/m^*jEt0Cb=kPOKj%UbsZ-I=Z5:=V%S3uUI7ds[Y1Z'ih?``Ck7nh=dE6;]cknpu?-A;]u68x7o3a^ihs8^V[D)ePTg*i8A/b;vd]fIpSek#-373WK)ub^&cPK1q/"
"LK'3h^^6X%x#I3Ux%BR'QMgQpq3V-W[Pl-N9-sk(4.MX@%*b3qmLBRT%i+FkWK7:JpbV_Y%Ps-j4PBr&A:F@QHrbeaUr_kqcYDx-pYA(>EZWXnP<=f*[*Y4:hlcXeGXBxQRF_FbbL[Lr"
"Ds3;&C,l(5Vca(Gp=?fW^jVrSc9<`ch_wLr#`=;/DQCMD93WM2@_<;ACr@GO+09Spc-w(cjX[lqw@A#.X@1/aKlnMD`6_5:6$-B-v#i5:UQ@sSv]4<&K&:gW@+VT'Be&<Aw@x#.v5/N`"
"CWt/W%5YY#C%2I$sq]>>-l68%Y86Q#Af2;]88S4ph6=W$G(w2$)rus-[B1,M7C>,Mp`7K%*5&V6rd=R*kNAX-6IuM(UtH;-5MUlS:*^>>h>VB$B>m`-WOW-?X^<m8QNLg:O)6x#pO:##"
"=()Z#<[ap%,`hV$uW1v#*^W6pX/JO(I')22)o8B3SL;8.<Y7&4uZ[o[[a(ocx@#/$]L9kdE:P>#6n1($0Xm]Mr&DT/gj05S7I39%E5w>#0r$s$.Yqr$e]*87@Hw-3d+V#A6^)22i2BOM"
"l_7iP@.p(*iXn7$Eo6Ku&)R0#sAA#c[id(#cMGf$.rn%#BUVd_nWcIqq/nK(OV,,*1a(#$A_[@#`0(g(O_I<$f=,?,m/iG)15,##^B0Y$(vH;%WlN.)@>D;ZZO$s*YRG87E&WA+un&x$"
"kNI%%oZe=-6JRx*B/VG)`2Lu$f=UW-^a,n&8095&:@.<$_3`?,MHx%#c'm'+TxlR(9)/RA8xmw#a(2v-2U&wP5nEw#AS;<'P&v3'diN.)5`P##M]#K3,&+22Llhu06X-F31Y7B3eu/gL"
"aTS^3qsIO(DE*I-jbn--X6s52PeDL#Jqg.$dxgt@Zr)v#(EL#$59t-$-EsI3ZL3]-Eq,,MQOqkL<&H[-u[Zb8cC.rm?r5cu%^R.>Y;+QqH4TJF@tKF?gn6Tujds(ETYs`ufk=cDCvx-$"
"FBVV6&5ST%liYkE$LYV6&>uu#.Sq:HpU*#cK6`l87O,&+W?g^6r$IJC(ACu9rrdD#30HVHTp1_#s;D@0DgE,Nf_7X'1Oh&O]Tf&&1=hoI`:$Z#g0X.-C25V1j0<L3_L4Z.b%Yv,tF31#"
"?lk.#3lSB-)1-*GN<Pb%ScHb%Q?EA9T6iD9[q5-=?MXT7,;waPEw]Q&A6su,/86##c4l1qAV8,3EKLj:qAT=7671O1)^BW7-EMw.*qF1:BMev$PUj`%KjPn&wABu&n]=,MdSr''2_H0'"
"H-kT%n)@8%O;Na*t7bI3C;=hL&/2;(a[#K3eB%O(B&CN(WE&7pcX@U.x5wGG'3]Y-9I@F.Modp(mr5H33,B.3c[Rq.%oSL2`wZ1#aa7H#NCI8%jm?l1KII`,u&t6/M.RM0YVI&4$2f]4"
"#*ahLs62O%7]TN([BLG)lMnL(j^^`36YTN(<dVMKJ&]JI<Gm6.SdAh;E'-9%2YuY#[d[P;-a3aGZ26tCp:8N)Bi8<7d;S`GHQIZ.>F@69a?lTBwLO`WHLke5Hhvq0m9n6LcIpcV-(#qX"
"tRFv8;rEon*AcY#uVPS/D.KB7e'7u//64I$b1dS;R?XF5H6Pu>a;+_5o_KA4C%W_,(J`0$hT(EuFL8i3&l2M0%a.G=(AP##r`FU$HsY+#=XI%#8Ja)#G:U__:.-ci3XGN'*f0t%/-A1M"
"2&V3_2.Z#MBKihL>q%>-AOM=-,>^;-4=2=-W)Zl0*x8i#+EcY>vCf(NJQHd;8@%@#$&a<#'E#i7iwI0:tJ?C#jS:v#;31,)9W'36/Bt5G&;Oa#bX0@>Y4d2^R&,49cpbW<Pk-S/hPfQ,"
"<nCZ#A_R%#$j>8p7$&.$L/KkLvLSh(<)XGu:B4F%9?%12rGl(5G1EpLRaQL2YJ/B4XaCD3E,m]#]q.[#C]R_#xH:a#qnCkL4qugL'^l]#tB:a#?YrV%iEO/$N$wbV?nVR1CL9F6CqD71"
"%9LecW@w[-^BVj(]XNx-XBr/)C%Mh-IEjJ:o5BRLe*Gn<<a54MahAq;4IsG81`:+*2QLZ74xhF*3u$cix<Ia3&5>##?0ST$mY5+#ZUG+#c'In7+L/4M>6c2=fbIJC$LllM;@]h=.c;B#"
":0:on6vI0:(%AT%:FAn1ci-n7ih70:b@%s$`9S[#F)m:.o1rw6;wXD#j<PO:fRpF#thBJ)$2*m//gH=$ie.i3afC%G[3UAQ6)D#7%tu2vtHl5(C+(N21s+++S028:?LPE*^+VT1oG%X1"
"2@pF#MHbV$.J+@$CP<3;uda6;a0KI2TtT8@.>3#$]u]+#-J+87aWO=7t?Y@57B:I$Yw:H#[V=K9WMnm0P4_t@_k2MMn.=3p?,V#AuZC3p7S]o@W.>n04Xr,#+@ZZ$Gq[P/K;mPhb/Rl1"
"#.@x6g%$Ze-O?Z,'=tD#+ri?#'QCD3-&Ui)uxjo7f^V-*)b<v#2;XQ':03787*%WZxZXK;(U<%,dUk*6r$Tn2Hq5(7o`)o&.mMe?fAPP2g`V8<elnm:v(-N)W;rl2G%VE+dCG%5#.xL1"
"U7xN:_3EH*[5cl2UQ9F87DmV74Vjm9]ixd)S0e(+#4)]5]a/l;%goC-oX'O;EML1=sZ06Cn:we>%V[4Cgf^$?p*vaO&U(J3q%r_&HqX$.]U?(+U77t7fck+3nmZReb(/s1Y%sX@kqV[,"
"w3n0#Z3R(sLRLfhMQ&v#7pw8'jO_Y#,YL;$*5YY#@mwJ3;lq;-cH6a$:ex%:M':'#&6PY>MBTPJ].as-KW]W7@H2/qh1Gv,4u-W$+wV<#JN:0(D-o%#'<-,2s4[k9Pw5K)(FW:.(Z-T%"
"s&sR'cWo30$ho2a6Z9s06Jfb@$IaI?@wrBOWVb4ISZ]ut$$[qmr6DJlG`KkF0h<kFW8PkFpip2)*IfQ&AE)/qAw33(A3c/(q+cnECn8B3.Y3T%pq.[#9tT&$h=S_#I82#$tHU?\?(&/+B"
"ZRqQ0''Pja4KkV0qMFltwE,@B2TeUM%l3nmi'%`%Qd+u#R[5n$R$M$#0SM:@GG>Z#$*M($Cr+j'YeD^F=4.w#@?u2v&kYX&7vGT%C7i;$L+ST%lY(Z#VT53',8s/L?Fws$NWL0(LBP3'"
"NeE5&9i1$#6+cdM=73p%eG(_&v`aP&F-gm&EXwW$x'pE%p5R8%9&tR^29r?%7J###E_cn02P:F*O'BT(u4QLMOk)K:]1;teT*as0D/:e;Fscn0//+wpt]nH3BD.?A;1_o@fJ(Y$M.M?#"
"3ENa4ar)`#ND4K1:ofKI6#&p`9Q5C#rJgI$RcEX:jmeY#eFegs`GgI#o%K9r&4Il]w,lfUx-;J:LTZN']VU271F>YYlGYY#3fuY#@R%[#A1@W$j<*?#1XUVZhWR#MdD8B3sAX'#7Rium"
"HR`9MjG8iL,.oB0m9JC#4t@X-jscNb=no[#iO6V?bI)N#-i7duc^q.R$vu=>Gs0E7(G(v#pYx1^Rkvu#o];W/Ee[%#CW1O'2EXZ#BGlY#0FhB#Y*)0$]IF]FINEb.M/vN#(m+/(8L3,2"
"ZG]LpcV9t@kC4,)3O5[.+XuYu4^,%.O9nqLEwZF#x8*h#qD/r/=ZTw#+2###6#f>/d$FC#RiIfLB]W#.v-MkLLg3]-4eub#q`5^V('Fk48N+##k8f-QXa[s&QF]t(PG:;$pxP3#pFEaM"
"bODpLni#L/W6MW#QuVBM1IM+vsx*a$;'%`%4[f),>1;>5^WboI*DcY#<chV$8r>A4[?xrH,>>##/H)-_RN`#$+/BP8OUU&5=[FpLPH9J3?mSL2pcdC#+cF:]_=iX$u/O&#&5>##0q=^%"
"5`9s?^hHP/s@VoIb-#A-'h9[>4EW9''AMJ:7mFZ#waI)$*s^?-e'6T0JY6##KAR60?T5&#62]b<M3CG)$pLL1fx65&IRE5&@n=D<*Ft^#l(R<.qnn9%-*R&+:]EQ7:Tw*.XFJ]8pNIAG"
"0[Ns-l,74:p$nC#H1i?#BS7C#KJ=l(stC.3['0:%2+'U%XKsI3.pwk;+Ph6DErv3;,VUUC^KOq^SD';:[t6u/WVKV:W33r0iwcs#,*u_sOkTKWjemhefICe7LKwbr8$ndK41dvg[p;EL"
"<=ZZg9H]=#J,Mj9dJg2#A1qb$%;r$#K=,)#W&7L(WrhS%L:H>#tU&E#)nIH#TE;O#1[(?#Dk@[#QTsxFUx5v#NPEI)[[np%JWc/(ZW_`*7te,3`=3u7-OIAGFw%?5TVK12-rF12kQEI3"
"Cm;O'[;W.3#C.J3^<>LUO#anAgR_m:TuTK+i;UaQ>>$n9-2Z,.8.FbtsL<_SC=*_STs$^$N_''#h30aHb@?Z#GN,;H5hS]#T1VO+9$@FNsi`5*,)`cDT<O:(9D(@#j$75/I+Y+-u#OZ#"
"cZsh%HPF(#4Hh7)fVa^.]00b.>emSfhjS&ZtR]h(nNk:%5Qbt_DxO12d+V#Ax7`5/nt+@5N)RrL<G]v&C.Ix64:KvR%n3Q/x^OZe'blB$Fr1=Q).)7Xl:km9SfHu@USH/_)<P4Wjt1iH"
"9xbnWc%,^#sF_jW@r6qM:?LG5Gcg]?B3l0NP>ht@]oEmV8AlWL)vNfLcCx,v79JnLLUD'6X1MpB;LDL5nYHD#&bbF5Z@veNO6,l3TwU=@R9B824J/s$'Z^-NJne>0B(]`Et>E#/Eo:@#"
"@R5>>^HJa%0:hoI[<a,;[;Ha3..Ki#QtFf2PTbSA0bW>-:%LU7J'(,)Eau2vvd-j)[Em.)BlOW6[gYT/wU>K&]@_N&?Zrm$pnAxG>ac01[$G#H/TCwGY=-<Qcd8I$_V6w#WDN&+piI12"
"E:?3p^xO12YZ)22%,-,2meb$'3Nt;-iQkr.:gZ=pNJRm:2l&K%1MngsjPaa4T$D.3FH7l115%&4tB:a#+87<.HXJmCLxte#a21#$+t?vI,F>$^@G<g_d=]-F+,VB9Ha$lC-8fC@4VwEI"
".Fjd&<w;h?9'mO3K;Kr:ssar0.lx`Qkm)KE?c_$5e8'QKqEP/4&.:`4HA;CI#h3q@oA_'50TCe402Zp'of/&?f4n0#RI6##9H:;$()B*#:rC$#W01iD27C&O`&G'&>hNT%QL@t$XW`k#"
"+jVm/ivt:(,>G##R1MW$jo.p&/R]x&@CV?#;cu>#e.i>7&[)22*R&7pVoJg%^>p,3glSL2;rYl$1mCD308.r%G<6>YJ9qf#x;/nukv_?#WIa`u]AB)P&S=%OK^jDu%vr&-lWT993W<YP"
"3Wg_%6k1c%f&CpIi[dv#KXtM*(h0@>E9&W7V<P$.t#Ho)WpF#-2KW8&$j,##4@Znffise)gW::q^b:K&PFto7c[.u.F1aD+/oXB#RB4U.#=d/(bg.jiIKEn8eVMs@b;W6p7n/s@Xgf;-"
"gY,-0S]<.3-rF12l#]3%ZKxW-xk9</sx;M.80fX-C]DD3$YM;$>$,9`&`#lG6Qsd&>6e9:YHa71UD';:iqm,4sn&%$:IQL,[7,nD.k3E#l_NcJt5Y>JGP30;Re,e<0e:2DrXZ$,7d+Gi"
"0+3#/Qhj:U%5YY#REP1p$I9s?*5nx47kd8K.4^.$,+:AO=c'+$*(K.$(ca;IITc#$F7R).kc?29>-Q`#rhMl2L@Pw?pNHX/oM0#,mj%>6p8>CFeB*AF93PS7ougo.Tv#0/U)J^5o`]FQ"
";s%61P(-M&,bW5&P>+G-u5X>-0bW>-GT(v'3(ic)-Q?a36o&H2Ht&9(6^)22x1ZW#eF]=pYiG<->N#<-rbJZ$`7`39GD$_#qV6C##F/[#V$G[$*u8U%cMM'6,s.]J.wR89vWX;:oW_L*"
"d<v2=hvAS10XuxA$Vho^@K[X9=^tL3C0D@8:fk</Hs:*ZF=hDZe&:Q#jFfd,DlJ(-Fv-0N%,(ZA5`7UETEsR1).5$83R^H5m,F/#:FD^4n1m3#YlD[$wxL$#Xs>X$TrJm&SnaQ&OQC0("
"KGu/_/PFW&N5Ot&ZsF>'FnR%#m<9B31S9t@^IRr0f+aw$h9E:.Upd]4IYi>$4;cxLXP@1NRYr:-u(hf_1BBquXos@VT?WD#U^8gM^Vn`%R5FcMZ+lM9VP,20]cl%=C?*TKo)v$0.7(*N"
"VeHg#(uKSIiUQZ#][[L,J5B)O'KQs(*&%)Ek>a_70@pF#9F@JCQqxK4x^Vw,O]1x,Se`hLeW*$#geuD#a@;17t#-s6l_gHF_FhN&ks]O&H,j0(L0=D527R+N7U^$Hn?Nd$VMec;RwIs-"
"2#FaMd(OP(G$gO&<^5B5*s<3pXFUm8IW,'$dS8f3%Ue+4;2d9.]U;v#BYI*<[)j>PrqF]H3F#?^Rb6I<Wuvu@-*i(GTs4JY)tX;7dN_MD@+>u+U.0U9MR%,*kD#c>Jnx9.M[af>G5WB-"
"M.%2=GjQE,/Y8`QvjZJEn1;'Hdq8<$(cn7C%Hw#Bv4IWKTjK->%fW5&v2bf#jjpC6M2SG=eGe:9l4PH=d:9[?a=]3:MROPCb@=0;c4n0#.%v=PSAW87V_l>5PYXAJk[QZ#6euF%$PE;I"
"CBG#$82,N+^Tt)>l:#k2qLMY&@XKL(F$nO(R?*AF<A))/hXL,/3KApf?Wcs.IM:BF*@+FF/,nW,iLMA#n6v?,?p6%HLDp2)]g7c*F6.).[0nc$*X1_&-E8_%pl5W-O/v,OWdH127c$<-"
"++'`&;Hl20LII`,sq-x6.A-4M^)E.3.v;U%$&'T9.aV2=k'c0*j)bD@mJcl25eIw@n5_sT-;$ZIw3*dqmkrKE[<*::r5ZNDUmKh=w@j-]*F;-AJf1P<3Igu8s(k92UsTo8k1$RD1n*au"
"U=Y3MB*<b==Ac&Hh;$T869P>#l7YY#=:3)#-Mc##J2mt$u#b7%^=.<$s+4h:20N;7IfMm/?\?RL2D$nO(+:eM0B&-jo:&U^u9*C-MlK>w.o0[4S`(6:;tun+MG'SX-ID?9/RhEP#%>vxM"
"+B:bt@O^Mu8$###C4C/#sbRD$)IY##QPD>#.#%W$*egT7M?CG)4xHs$$k8A=/YC;$B&2.2c9LG)+JuY#5SG##5fYY#uR:A$n+X87ti2jKs='T7CKV$%8fP>#]2]t@9t]5/Qp<I3GO$iL"
"H*OBkEkdI$9Y4GM<x$]MWL<l0wURx2GPwC#WWhc)&pT:u)`7d#%Ol(WN:^iuqLY9V&Cx:H-X4v>l]'v#w<7G;N[EZ#18>>#6ms,7NcZ>$Jj7L$E+[O$)TSm(0kI##R:Y`<K@mxFPTxnL"
"%QxK#QnNT#N=G_HtsvGG2aYBGx1X0Pta31MIl6g)T4YJM:n(#$L'U]RK`<SRq8kk'Iw8A=?&%hui4rr$>Pu>#-Sc>#*ghV$)2ZX$gWqG)3iU;$VhAN02PlY#:rc>#`Z:j;upfW7=k^*#"
"0S9t@?4q&8&W@&cDPO4(_69r.DX<?#x[<wTPWm[X>0>BTX[6AF>EN#f+_AG2.Z%-#^.j[$Oe0'#QM&`76p(*%;k'pIcIHv#S36g+i<;H*Y*Ah=+r@Z5O?GE&<Q5&#%K@@#>s'C,$TLT7"
"Cmn<&mfINUKVEvHHQc#$jKuhU4j*87&%_t@5Z*@5XT,,2W2Vf<o(#H39L=Z8@*LB#R[n8%+QBg:^C]v5L`0i)grbv6S2R@7RX=m#'4mh<P+'60gows8t3V=%[&*UKcD$%]tKX:QpxvJ9"
"[ko&6--Gf4`7Fx7nUI+4[3^`,47T'78>UpExhX/Op5XldADJa<8XiS$EXe8#QV-K#1YiM#jXpa#,s2A71S[>#^49a#u.km3SN]D*G$J0:rqfa%'vd`EojSe#?h1pCT%9H#Gb@JC[F8kM"
".fYE73)?87=JOK24G*v#gsuZ07svY#&]QW0Dk,Z%TUi:Ju+o%$*q',;?tSJ;j2Sb>W`%80;BemA=-;XgtU6N)vN:_4W2o:7+%(;&CJW^4EG[5_$HRE'<O8pgHrN%blB]=-dAebF#B4X$"
">/En-^5h7/%:>m'FS7.2G],:[Dmof-^jcV-k-0I*wJV3;:b6g)IGVB67u2?7;xg,#IgE7_s4+87jT%-1`j)22`S9t@x),u@.s<3p%TGs-[$[HNpYU#An'dhLkV*22g]]o@8lSL2a17ZA"
"c;'L5#Mq0#'W$QMM7%b%oepr6lRHp8V.E@$S,m]#-,0J3Ls$d)^^D.32P-<-:m/_%mSSIM%YdY#Rg,A#48sq/pM-a3G.,Q'WbrE%%0bx6N0^C0J><b,@'^@#h/:h1g7V<72uhF*DGrUB"
"DH@p0n(c;-h]]j'fCKJ)*;$++^6I&BoW]B8,5mwCpMB/=skQ6B/,@qKvE(+>ten;MPte`u,U-v.0Qpa+.vq11AR*b5jOnS%$'`+r[j()Bl5I51F<K6&v-iH4%WehO.bEpN9;eb+Mg$TS"
"Me=*=H1lb3HEVfdP%pXXF%`ru1R$Qt'a+P0P8+#/-(BAG''+Q^Z1oH#NaGGdQEM5EmKq6C,X9A68Q0b4,8E5)jC8(#%/5##43s@$:*B*#>F.%#+v-3).Sl>#3A@w#oRE7%*dK@#'w8A="
"9Gw4AKBB:%JHP/(9:w8%Lt)vP4+[8%DqNQ)[Fd;'(^b?#>oLv#9:r$#]Y#K3Jr.H5Pn8B32L6MjMw,@53Z.x0$Pata'vYXN(V.%'-5SL2ldK#$.V=u%'weP/>r_v#2L)BO=e41cSITU#"
"lFvK'lH+=$hkG(+CB2Pf$5W+M$u?F`UQ#-<b#.n&ir/x.)Nxu#qb(##CE,kbBVC%#s8q'#:T[RC5Ag_.VweA#..Ki#)o=HM&@3w#P6N]F>8cn(O_uf(v9tM*xN+1:W7Z##KOtA#_S((,"
"Wjtr$51x-%90@s$.,*-,8H3SAa)]TAvN_^;@Y+5pM%Y&;f0l5ptpcn0dOcu@->IQ/Hq.[#Dn@X-7jLQ/T*gm0END.3-_)gLF8xiL9a@D$Cv.V`_t^B#ocMBL/O'6CCW)I?,lZjS#Gs=="
"PLC)=1wFn<uN@K:0ugC#HMGG@i*L</(G*,5#QgS'--@GGjXIC@0]OA55#AO7#hg[uHcu:AXIVS%*&&>G530sHVP,205,8Q1vnHM9pqZiCq;i-,_6[>#]f$%-kJ(&GY]u0--^O>-B5i2:"
"#$UQ&?'J?#QqN%biAim&UXfj0vL<1#[O$Q237fb<P?_c)`,rc)IeKJ+ofHK+,E(>$h]V8&s4H?&(ikG23<Imfr(H<$;5p6(>8iV$Pr%%#6D;N3av2D7.s<3pc3c'&Podp(9M(kLIl*F3"
"qQ;O+hBlgEqYl]#tB:a#eS><--$Or$ICa:%D3Tv-o;VY5*#Ab@Q>vb5F=4D=']qHPO3EZ7cY$YC<'7.+XvjO:Dp$sKGF->YGcw=:>`.L4D%`qD-`xQ#lH+P#gJ>g4(miv7nC^T0bm;8#"
"v_B^#j#t(<PEi/:FXI%#*S_^HY(qY#H&k=(-1>1LhrJF*/?$O*Da8wP_S[l'-_4u'gaN?#H^ru5,T_r?306C'X%B'+Bjtr$Ax-s$J2cv#J:S;%PM)H;DfD'Q.;dX$Ix@a3*6qB#V8+l("
"v@'uSq#IuPCoB<rnQC7515/&Jl=`p#&wL:vvkS29f[UUZtF1K5teD5&S(4GM%W)b$tf1$#U3R>%uE+1:;=35&3135&EH53')>S8:`*/X%+TX87<$3vPte<rLF*Th$xMDo$+b%t%5d+v#"
"#B*581_[AG9;rAde/I12YZ)228QEI3BH`hL1>YD3_XgMu=s>Nu;a_V$_&n7@71<4UjqdDbecnV6cmWt%-i4Q15@3T%<x_V$]2f;6rr)E#4:TM#+)P]Fs$.v#M+@40sY_V$72cv#Feh)."
":JKhL;8X/Ono/Z$`+X;.0X?C#IN2Oui%XPJ7mq+)&jf(Md-+k%$Vg<C?1E'#>BK[%Y_h[,OO(g,vBQ>>/sUT/mqCv)c@XI)Rajia@4]^#'B))/Ka9B#$*jE4ZHn+NnrH>$+^@:&eVB.="
"'@CW-OH(q/aTu2vp[[3'I>oRAli%l'VCca$dT<8p*k.4(Xv]?TRCi;-5V*30)$Q;p<9I12rV5b[*gZw'1&kQ1%VJ,&9h0T%$93F3x1f]4VF3]-M@1TAKU,1N@bZ#7]DU=C8h_h*Ev7lF"
"oeY@.R=[b=NUEZufs4%Nh:D_,IfM>#g,M>#f>v[?3**GF1,p-dC4/tuOqG(+tZROVIUb,2B(B*#qs^]7xV0^%r>$(#Oc.T%l%l.#2.92#<=G##::`v#HBg>#;_w<$'&(N$7ANPAr;.GV"
"9tIZ#*4v29(mqA5QDNoMPVUh$Jes&3Qn@X-Fl*F3(0(<-+1IDEBNDXaF)%o#'e1g$3K<p#f*(7#$),##GI:;$_+.u1Pnqx$<Ie<$18###-4FrLwL/s?.bUv%ePk*&4N;QA8d,C&kW0^k"
"K<Tq%B6gm&Ff/QAJ$kP&06>##ZaokLk=Sh(]#%uLSEU.A>*CD3su:e;E>[h22nb,OV[-lLdMP5$uv?S#'9nS#(EWl$J'@Frn4Y2'xm>kF:<Q1peZ;kOl_r+;q.(XHw0aw#%0:onNsiK("
"DnTU%J3:L(FdH9M8uSS%E:eS%W+.x#I]Hp%DO%%#*k.4(?.YW#x,iJj#g%38[Uwm0NtUO';]d8/oRAT%`RG)4UsO[3-D'*Z.R0I&OSo90i#8rdk.N`W2M,)7KhgV7j@axPV<`/U3i$<-"
"cn;d%dE0PSl,UA&OsPM9ISXgCFrpB%*@>F%`+C>#``-0#s$FV?i0:;&COD?#a`VK(,VWP&*Lc'&<Bu2v'Z?U&6)dp%Euu##nvNh#u_aP&E:`v#<xO/(/S(Z#VsbrHeIHZ#uLTp7^&.B5"
"+%nO(vlw2.,g;hLA:9J3F&9J3KQ%@5d75h2ew:H#;ou,#F7BZ-`0w9.OVDW-bQ<?#*t1A+HN+o#Hgco%@tFMKQU;[$spnd#/SC7uo7x^f5E+##qjq^fu4-5/,M`;$)9o/2eH[Y#UvFs-"
"oO#m8$&jEI#g_v7ZMlw0Xfj3p5t[h$XU.8U6?TMLTVA/;H[M41wMh6#k6:m7G<f0:g(@`,?v%iLY$gQ0?q'm&ci-n7K6f0:s89I$Qg>W.GO6W0C#X%,Do[f1l4bc3KRi$#Zb6V@l*Z$,"
"O&v2vBv^N1vU3N0M4.],MZ@d)QA=jLZ>]s&YN1[./NbB,o.waP`8*22544E,`.5s0wA:B3tZ)22+Cbd()X`I30*RL24]Zs0k#fF4#Ihx$@=@8%%?#g1E4NT/p&PA#(o0N(3qOA#H.^C4"
"&,]]4(?gw#'FlY#T;;O'+X37OBi:k'aSw-)YIVS%R'Ad_Zm#n&UNgQ&59MQl(D;.E@,gb4f_h?/$%2M^gvZh24;bM2wGLO3]6V29HY$f;+$7120L=.+]+QWAJg2,WQbiM0+J*,)UUAZ."
"Th^`*0_^*#VVgY(L:?c(#Q0@#x,ST%?b9V(TP^Y(^%Oe)$0:onW2WK(.W*T@GB,##9+oGV=64<$e.L>#_8UcD7@.@#iPL_&P%Q?#KYWP&=Rr$#&;-u@i7je$)6]t@A'HX$$mxGG6x26p"
"Q/mA#wUKB#Jc7C#5SB9r;ntDu'fCv#_sDr#@o_;$CW<)EPaIZ?6sLg$q2$&0dabN3#=xNbe0[Y#w[N1pBN:s?Q]8>,3s<a>ZURL,xxGA#R%;4+t`#A#TuuR*#jg@#LD^:)uPB@#%v,29"
"WU:)Hb.&8@RXlf(6Nu1:1*g,2sHU:@9.5/(Mvdd)[^&^+bhDm8xa^j(jhZs0`5R#'W#1s@@#<U%$rF/(ml:^#483F3'cufC&r_hI$[/b7&:w*KCttVd>wI?U>[ZeR&0Plu2SQ>A/-g]X"
"+H(;ZsV`ku30i?#xP]tug=#s-VQ$iL,,W,W1AaPA&sLM'BP%8@ul7O*wCf(N(jSq'YRxt'Uj+sK(@<[#H>ne/Q^Ck'_cIs?7$_g12STU7Di(O)[[>RA(.Dj9'5F<S,,9t@fQ6a$9;#F>"
"-X1N(A,m]#x--]%gtbPA`4_dJvjgR#OdH*KlgnqW:[HxIM?fo[)Xj;:k_Y29g9rDAdVXLpTkq-#Tk0H;`:aH$IRV,#p,_'#1kC04wA0hMZ+Fr/o)v$0V]w8JRp($$rHn).<SicDH$R'O"
"0e1C$u`PM9eIw]#M'-,,C[wP)?&%8@qhnA#0)`66%uZX-XRAU/>a$A#gV*&+tqN>$q>PQ)S/QZAk@9'#2cFQ7p2Kv705RB5`hZs0pY7B3=?mw$%Y-1#A4aE$CJUv-S`jj1i$d&%(7:a'"
"&_HHP=ZOXChrU7/1H6SLV:X%Gbncu7foG=R?1a4*w/MW$H[ZE3p5lY&)KDIUf/c=-6<V2%n,ug$$5i$#:<,Z_.EdIq3aRc;x<a=lQ,&L(OLvL#0M>>#crrK(7qq0(J+D;$Tmh0(.1u)N"
"@Dns?YqN%brtqb*7tSwPIwbf(fw1@,0/wi$(XL&4_)%*-&:&]#Svm4*4&PB*S?A%#Bv`m_Pw&*)Z6wGGnrc;-^7`T.L0v2AO&DI2E&p'5<vU#AZcV'#>u:8.*0'W$vg_I);](?#/l`B#"
"q:-x6:E1nuf(hR#TR+KI],HoL_OIos8iaIqV_pFGtr=87-QW29DGN.?;`:R;4C=2$O@Ui0>cX,#$),##d0ST$@RV,#S73g7e:lD#`X&,;fLe]#UjalA8i/)7]Z6;H4&;^69Ov(N65DB6"
",gmrHplR`#kmP_/jeN>HB?P#$cxg%OWE8E%^1U>#uVMM0%BD'#<J@@#Td&s7d$/b%p;eS%&Lru,tO,v,I$P,2Q`oQ0d4gQAmCMa<UaTHOdH&9(oCW/1S0GD#ucS)i<OZh(]S,<-FA0S'"
"Y@v&d*oCp.k@C8.U^ogWO2&n$aeVEm[/E.3$.4@7ueXI)4$*QJ^LUGD+NU=N-VBo.ncq'>^b[?ITQd/E0fokC2hC#.P7<ACFxhx8*#vj0dkhg<$%%)4u#ud4AuT>8h,:J>d=q4_3eTx?"
"3@D]5[ORB?Gjv3'=*U1;a_u/Ot$QE=AUiG3<EPY-j=v?6'r1j(_,]B59q&##qB,+#3YDp.`$=[7cZ;gtbFjr?vbAa#VQVk#btap#/$QPA52D['_-F]k=R@[#0(eS%:AaPA>*lf(##[$."
"v=d+Bs)ah)S@AnuO8j@$$M[D$4KL<MTDn^PQ/wV61+#&+[(Rs8(93p)&^PJC<=(eM:Z_r?cI`S*X-8]*pnX87)Et$M9IbiK8q/]#$,&5'bYj,V?6+w#Y+.8@#4Dd*3_r39=JPH3d+V#A"
"#b3@5>KIAGIH+W-OT$_[:i*F3AY7.%K5+P('W#a5?A*HH?I/Ja3)ck<GjQE,W.[>O$vr+44NH.$GJMDBV4(q/x`#+$GjfE[QA###rWdE[>8c$#Jonr'U?f0:N0no'a^s?#&r8.$6g7/C"
"b4a%$=)_S.(/>>#Gecj'P_CG)D]>>#-)6p%2TS>#=J(v#@0>/(Tmh0(FhmuP8hxi'1)tx%s/=?#tLGM9t2N;7W3bO(J0^p(.&R%bcQYHN^&/o*,aLh$'W$QM?l-[-&ddC#d]VT%*m)`#"
"ecFS%>;s5(hgY3'hOlZ,<b`]d:4jOJbMjK2.@570>+))NYp*Y844]C#7wAX-/URc;&nL-MgJ$n&8?F0_Dn)?M.'K1_ed%6(;[7G;((j$#=?A.MC?VhLY;ml05=a=lDBvj'TY=d*8T03("
"&RPF#TJQt1=03/MOrJfL)DBE'WB4OMcv06&YcEhL&N9Q(J5:j(^k.Y-Kq^q)Ss=_/qMj-MpUOs%c]lY#2MG>#psKm0]?F8%$2;?#e+:8.THU%.H1+=(nxEK(ZdCK(R%Cl2f^x23FQ;.3"
"3E9A=o<-7A5tq-M21bn0]/D,)C/))3P/rq%;E;%.u%2s-NE<1)lAg%#d5,A#Rx(v#1>+8713BT(M),u@D,LB#q3H12@13r7_p4ZI426T%ZZ5ZA:&RBPPaQL2L=tY-v=.Q/ARIw#Sp^#$"
"txls-H)NhLpx[D*lr,x6f6fT%nk#1gXe:k'[87L(]^Pj'Z*@)EHG$:F@:.W$NHt9%T0Ft$_RW(%&io>GKh%@#Ek3t$#]u+M:_E>7w$_k;WfQ&6;pvLK(=3(aKqIC5Q9GE,@J6J*$$4YG"
"?Xe]6dP2t8=Ke%$h,>>#G:$##qZV29LUf:d'mmp%6ru>#6aI)$PXH>#,G(v#-A>>#EksP&;OWp%;O[W$s=Wt(AM-p%-cCZ#*j^S%<>*5ABne[#;[a5&0,L<$@o/6APZ>7&Mg10(Y'aZ#"
";RE5&51no%A),/_<qRg*@NvB$'i9T7Dp7[%517s$4%.<$Cc(v#*OR=7d=Y@5:N%O(3M(kLn@:D55[-A8<5pe$V&/o*F7s_&.NataABx-$l`&i%7.Te$_7JC#;1_o@='>?#.,:8.,TZp."
"kD4I#5Ec(<#6vou[T=(fMrc(<:0pa#GR$KuJ53DuWu6o#EA1?%nE*)Yv;TS%cm'NDR[1$%23[S@ntO>%+A*p%taj200NI`$LE7m8-;>##^=c;-<LnW$ACi?#<U*X$[YC;$8F#**mL@[#"
"2:E5&v4bS7)$ZlAfRa)#8%Pc-0s+n(?p3l(F,V#AiT0(6N97`ciOxd+^,wh2ona#AdS$1#Q^7H#A?V-Mig+`#kW,>,jNqJ#Z'9/:$?8/:jM1fUa`$L>;U%##FN,kbgEw##3Me)OH=d_%"
"P9k8I_irW%a<@[%Fj6H)6c1?#(T1v#Ot6H)<7R8%KqN%bBV+1:@]Ss6B0HN'wYc##1lCv#HF587x2+v#9VaPA5+eS%9Ug*<0dtA#Dw3]nQee+%jV/'c=i9BH<7aB#ZxF)4&>YV-nCwtc"
"n+A`*`P[OfqvSJ$bvskt*=>6sPmGju@$ek$LOc##[JZ]#?FRW$%_ZuPeOa)#ms[fLpk;;$uUUV$ba?iLRf@sA&$^G3=h3N(RmwiLG+7MT.TArQ?-p:?%C;4t(bNfLJF-##21ST$/Q^S1"
"P7.Z7x%C>#-.;>5bV(O=#S[w#^gjh#nmdfCKY5v#4*u2vxWD>#'25##&S+87,jem-MAvE?<BSm27[BD3tFm3u31<&4nK7gL-4NZu3T>LMs?hW7?QH0B*DlY#0/###]Ax^.x%Y##1El,/"
"&[)22MBF']UX_E[vRkA#,7aM-h@1-/lGxPA1eF']</FcM)<jM9t)tr$K$m22(+_oIb@-Z#e'dxO%ajjL2Ds/#*D(v#?4rr$Zem(%_/@s$ugoQadEK3b5eF3bA?X$#wj`*.]vV6NG,>>#"
"pifn.@Hw-3W,`AMe*bl(,8Fn-CG1I$]*$u%L*rWhgJP._wKWN#<GblJZNR8.7ib]OnuMfLLOHuuG&6?$Q2ZtL?)rm]7jX+`AIU6p_2[h2[M2]-n/]fhD,(6Mq`^rQlXoY57q[V$6s<T'"
"xe&.$Urg>#c*vxOKo/870=0ue?#ht@]JsI3f%i(aKQM4m2WmV,:3_-6i67##?1ST$S]>+#AVs)#(CdGO6lTg,7A`cDK.8,OjI1E4N)<,)Kh70:nh^F*#H>K1v,tv#BlVL1>,i^oZ1[G2"
"53LE<JQZ`#ATXR8qfm2_4-;Q13WRP/&9V*#2SF@53;0G3NNt#-KG.:/TG@P/>PUZ-8,xE3,7k%=O#%h(VmwJ3..FH(rGT^32+OV(m.G,M&k9P:u/,H3PrF12Mv0W-.Mq0#=TSF4)li?#"
"C]R_#)RJw#oNv)4,%?8713W:'1N.f).30r.(i^V6<RIw#g^X=$V/]P'7K@H3aZPx#7.?B?ueqWV@w64>bf[(>oZ0c5kS8I&mS:TE3t7Bus2o2=[D@cF((rfFMnM`%$H`+=s&h(6G'4TE"
"q)[A#Yg/<AY0'R/@h7U7oY80`RdOe<pl?sA*WgD$jS/=@&x_-#._F2v[BY^$f;F&#NZd^7m+:AOI;OK3B<uN3Eff;@-Ub#$Cn#&4e]Fv,A[C,-wDH##BlnA#rQLo0.[K*#w*a[#rdkI+"
"eq%%#qWYe<B[@%#n8EQ7di:p.IBO;pG`%TgR%]o@'%_B#%0Tv-Rw-K)5]/^$P$nO(J@[s$G<uD#Q?n3B-MW@$dm7OHW)nY#.XUrZ)>P>#[8n0#TxdG2vbA7cEW%WA[TWU:&a;kDDi]^7"
"hEX]uDF)s>Z_Ql1'@]j0(cJ?$1ElG,N(-G*,9*lolxCoVPl[0D`T.sU>JIkCs*,##,6Do%IQ>)<;u)JU0>a3*Df(@#ct3i,OL.A#;r[l)2Nm9@_3&a%iVaP&E&#$,jO+G<3kY.VdYQY$"
"_WFu+LCtlAvhL`+O_T*#%e:N0Z&-##uZMoAJIc1Lv@nu$cqN%bd*J],eFQc*d5jO'MQiS&H^e`&I_;mLwD_Q&x7+87dS9t@7ke;-/FKr%WF]=p95;6/Go$6)8<0,;W>BYA&e`[,aPYD4"
"dt4T%FE<h>'NJWB+;[9'@0<*IUJN'-ThWJ>CDJ*a,6TrUHxCLIsK2GW9WZ.3CLeT'3dDiD'MF6VN-+1FM,7BAnJO)fZ_#AO'-M&+jNvu,m//DEk).$.voO'.TkC=@KZ?%$uYXI#f^E?#"
"KKK:%,FGF%ODaA+07LAO/q@O9ZS:o(h?#IV[8[h(k0U*#J5sA+$Xx+2A[u/(0k)588ufG35':,&s$dI3BuQW-VukZgvvq0(Ne_F*:'[d3nL+F3g<Z1/9in$$rv(bn9FKT%:9<5A;aD)e"
":N+(JP#R>#1[iY#)=]P#*)p=ukQ.sAadaU:vYM0EHcAB7f[S[ASDe`*jCIVB]g_O1x1Hnt7kjB6*GqS.U#-A#_>;XDAtg-YdEF'B0.oNW%5YY#j`.T%b[>+#o&U'#i%_9CZGX*$ErfZ?"
"7tB$$dDx].=<RfM+JX/,AnLSIu$3[#BWn@'kI%#>9#5v#%#6#-Q;=K&eYu:?jO4K1EYN5&+;)'#a7]$lOR7%#pS[Z$jBq1(iVl^k)DhZ#dM<5&S-A%#xx^t@D@fD?n#cc%:2aa#aYU#A"
"?Yxo7lf(jrmn`:88GrJUe`tr-[(:W-B2058QP^r:4kn03tN2U7Wtj*H@VDK<=p*6M(VL_u2p5e>Vo1/:e]LUBVre(Q_Ja11471O1?R#4:])o=U]Mi(>(.En*_?fi:7M8WK:/$##Y[#AO"
"s6@,;jNvu,;Ff6#_g-n7bh70:44,b#nf_V$NPfY,./[_#+/Lf#6Fpi#)a4N)=e[Y#9LI[#7qmG*?+?e6lFaY$HO7%#nv&7pEY5o$<?%12pqAT(u:+F3YKsjt7?RL2aDQJ(XRG)4oFFn-"
"OW?Jt1D?D,]mo[#llp[tgx^3CMUZc<7r#i(lqe3)'<d&-ke9;Z$J4;Zk4D*Q]@8s$o`G/$EN_G)c_6=&Pqnh%S05##d[eD$;I#+#DoA*#dVQ;JfMi_#eX.29KSOKCcRMb5_fse5(>mA#"
"xTM@,XOIL,cbcC+VTNCO_o?R9+A$V'd'THVOQuN'&BxM9))jIq>SH%bZ`=e)]p[;6631A#(DMW+w?(n'APQ#-)R@r'QmKa<$ZuG27.Rs$(Y+87<:F(Mo4K;-dMIl$?+D-4*/Vm&tvwr-"
"4H'3C5&wY6E?Q-&fwC.3cs%f3#C.J3ZD[L()O3R2d9ng#'D6xB7;(_(0u.>@GE;,)iAb::L2Us0`f?QFmGj$$/Sl>#)FlY#JsqJ2PH(V8WTg],;bw,4`79_uKekTBkfk-=`99g>?vWb5"
"/7c*e3&gSPQ7B0+o+8$$2N_P:G#X4mMd-TG)F*O1avGcHq[qm0vVC>#2R)##S*5T%Np;W/0'.['J2eH)6%PHM6e.O9nM-Z$4$L*#9tx]#2POe)FA)Q&3####nv&7p_mUh$n*-@5sQ8W-"
"ppeTirG5x6TOr_,oZw9.rs,<%@jx9.F2]v#&)xG=Ms?oL.wlj-pLv$6ds-q]o-+PJnis02CV/21t)OHu]M&t<cYsL1ExBFuI`a7%Q@$##_RXSe9_/2')>Ws/:%i;$,heg:=VG>#e>_h$"
"<$#N'xk=:&XiRf$Ud*]%1es`<7c@w[,D^t@VgMh$3);B3L6W6poqLkL[xQL2J0fX-c0;hLhG**4WUOons[?i06=a@bTu5Pd'F1/$d7_vacP*b.GL@)$rH0b%5v8>,0lo51D,9:)L>WA+"
"X=5c*QGCi:NI?M9N&ic)*>N8&DSs.LtbC`+]-Cl'(&1g:=IE/2J%gA#(V-G#[XMa%e@1%IXg)*4T$D.3v.`IN>hd$$mEB;UA>#P;$fL=6qS0'5JDE^uMUfBdcbg[Sk9Um&xcPf$]i]#,"
"[G/'$:9j..RTq28Ok*H;t0*g73XFsHfRdv#dL8&&/UQPJ^4hY#sHiG#/#VJ:9sOZ#``-0#PvUJ:)B]Y#$0:onR#WK()VWT%4?.w%6G*p%,FKb&S*pe&4(=j$%O^Q&+oYM9,YC;$PW]e]"
"4EgNM'Uv_+(*MY7E<f0::Xs5&41[S%;V:;$xF+87cbrD5bPnI%*7O;pt3H12I;6N3q2h,5O8bi29vU#A;IT#AY>mV?rNCW-w?fVMj^$Dj@<5F#IY2hBdtXSe;xD2'<V1lS$,>>#jGUEn"
"*8XSe`a9D38@FT%5u$W$E`?T.:B9a<d^*s7et^N(I')229sF12:MHX-<EkMr2<.V#O0MiP>(^uL.bDE-Pr>Z%O,@)<@)=YP]%h#vkUij'D3v2vAQD#&)#kA5#D/2'3'E@2Q`5G2&Ve'G"
"M8</2E,b22Y3@UA;x[$Q@9_-2''.12k7l$6;O^*#O_%[#10pi')B'[#BYtI'CU`?#gf1a<4A7$$uMik'u^_c)r(=.3'PRCFVODs@/B/>BJ@c'&l])*)^KLW5Z9bi0W;AK<;qjj0I82#$"
"WNU&$ae_F*rKU*3Q0J[#3pUl0jn]:/9:iY#?J];Mj>C2'DY0n1=Z_[#6-u4:nWSi36/l'/3)Wj;8x<1EfG,u@BlB(W<<T/;MbAW$#vBM)<X]%-aW?O:ROm2V2;eW%P[]Ou]->>#,@)##"
"=H=)<0fJV6rnh(.wfM;$C@O>HCHl>$9L%##a0WN9ioh?'QmTu$jHZ&NZBj>7?)i]$Bi[2TC]l]#[F5/Cx-Z,MmfKP#-S1v#<Rp1E;6H-?&'eU&_`k21Eakn8JUF&##r^^#=[O1pIqG-Z"
"(HX$#5*q]7=(xA#Yp%&.QX@A#M'-,,TUr@#K_0j*N1;@#?l7p(rSC?[Db+/(_'A9(lWNq.9T55&>>db<Z7jc<+'anU9$bs>5g`w]+4_[%]gk-;iPl;H9L3?^2ZgDKC8]`rHs5h;(Q&HF"
"t<6I<wDAdFlrgY,W`%A9W'26QUP*&+H]Q7n%puZ/%0ebJ'&;w/S5d4#.'*P]kDN58J)gl/pj6JCGcN*6Qec`>L4.u0G(#[?'Pd5/QaaA/^0%a33(lY%*%(&OZ5P56,o3201x%`,7Def("
"u_uf(9f`V.l`%L(&`c=&Yc[9p9v-I%Jq[P/WU?29it9WJnMl]#TMNk0+k[>S.0-e>.;m>#]$7W?3FlY#-U.v#F&E&+ULK'7W)Yv/=?78B^W]n;(ZM0ENf<*61OlSJIKNP)u6#`#shID,"
".mOv#P8aS037Pd3O[gL;O(G@Rq(K9UMpp5BiTDVUV32GFH5n0#3B8##^U[D$6Cp*#*vv(#]8O3;DduHEt,oj2>$>n2(/?A#b`_V$K_0ZHJ^1?$2Bx=-i<tI-ON:w.7;C@#%%/=)01P[5"
"g-nr-vA)f<.S+i(i]/`$s7+87:iO'vCR,@53`u#n0W()3Xjtve#KEs@0=g;.vhXDQS+i4&&=L)34*TmCu)6]#/Sl>#-FlY#^9YfLi[s`#2]nRC]:QqbT=nj:tE59B+C.>6mZLMDBb&g:"
"1MB32u3F=.FAup8Pm%]40K@]5UI9G3mj,A#*=_hLDnSF,n.2sUF1thD=:(7VN2dmB%+,##pI:;$5[>+#tbnZ7U+(aNI,aA+WLM;$l^=]#CeQ,*7o30(wSK^FFBavPQ2***OT-2(aD[d)"
"9R'?RT+#rJi,<3pbZiN8sSbA#RwAj9?i1T/gL$m8+$]v5j>.d)LtH)>Aj[q]WKkt$Hi(O'PDJ#,(rRM=J-L$$g;mm87_IcuuB%75j#Ii*V/ms8)_$X9Zlc###p6bX8M#T.UUox4AStA?"
"IZWv8BDwhE19PL4LG'1M$<4k2'``S.M*bB,K>WA+Mib;--Owl/f/2'#`O.x,gWw<&Od_*#2K(&G;0Y>$6^lX$8Ym>-[/v^#POc2(>A)Q&Ib@%#nr$T.Ht&9(PT]+%A9W6p3'@C;DV)s@"
"r)B<-3xe+%7paS_x,?i;UuT#$@m^VKlS#/$L>%)G&E6ZS?nZ-VhS:UBB_Q9:QmxxI7^&wBN,bY<rL<U'>X:U8rOn-1a>`v7i;0F#u?0K>h9K2D]oVu75to30Y`h[6:5JL(>Q8n;eX8;7"
"cYNL1v%IQSwS^a+`uhQ9<->>#(5jIq$*G#>A;);?ruwk*X1Do*pX/t%0WTs$j5_Y$sTa=QYIVS%T_2V7h0xH+p$J0:XcEA+WgM+*'elF#/Sl>#OmwJ3.s<3p.,YW#[p?n0X`k;6&d<I3"
"_./(#I9v'4X*nO(6otM(^^D.3Z3Si)OmAm%mp*P(?nOYI$^^%=W;FB>;LV+*^%/L4n47;Zwie[ua8'VH%9v5&oMP+%*bd&OY?v3#@WJ^4#2ST$+83)##]eZ7+);#Q9:Zd-1DF5&T`rP0"
"G,$),<<jN9b8LB#d-[2L1:i)+YAA,*XU;$#HGG,3_8p;-O%$h-U?ZvISo8H##$l(&:X*<-Ckgw1DX)P(3,E(4`^_2D:WZa9<&:G+ej[X9&_IY/]Y1]=96Ud+uH43=C7,rZ/-tM9K1wYQ"
"4d)BM@2C*#1KmtLhKk2(:es;8suCJ:EA1[#cRMs'>Lr?#NH%)$Dd?)*Q#UB#=XUV?GF?/;]XeW-(ATY]9Y);(qF>/(2G#i7LwI0:W'S[#p$J0:E9#j'i?Bm/DC(v%/G>>#OR0g%q6-W?"
",,*s@-VGv5)OT&$;m)`#iqC`<XdjT%aQbt$f=ke)`d6XdTFXX7QaB?7$4f;8=M*Ab99_c)R922__Ao)36X0]7J6@JMR4&b,i%`S.@2m]#/=a=l.O`b*p9KA#8DcJ,B)iS.>,d]#$[V@,"
"9&oiL1:r3,'i8SJ?6##$P/c',5CkP&,Vbj+<wj]+q<7B2pliK(iBpN0'BKw#Jt82'4?\?#-B:Y?Qd%+6'=-Y>'fmc>#nMaB#4`WY5M`,v#?Nx>-T;BY%x]ho.[3wu#->>>#?Pl7(NJgq'"
"dADk'<69A=ii6J;RWB:%/h8A=x@@J;F3B:%HOd##nNS<.mXN'#/428.RT,j'U/gY0T1bM0^)$O0oX')34rH8%EpG40pB,j'64]XH,L&]#GP,##0G+87kv2;6YpP=7d--@5BDi#A5b,,2"
"Ix^t@c0/JNqV/'cH[^g%?.Y:@K'&TA;GxMN&Y5<-AYcdMAS_;.'kRP/(Ro8%Q5>Gcjl%d)%IuD#Yf$oB*&,d3.LHl$X3pc%T''q%5d9dML@PGeC6u)$L-BQ&RKB:%J^m*%T0B6&FU7w#"
"h,c+itX7s.[/c#-akJf1V$B(WMRW^@e4R<.*V^xX*(ik9goL_,L,3/+/B&##-#w4A?k2&Fm5PP&8uW)G;bbrHeIHZ#-`6K#'ftrHMZ5V%;ME5&8.`v#BX*t$3.7<$3YP##iMc'&gx$<$"
"2i:?#-auY#-Qnw%K<kp%#e8A==#x/;AtaX$&?]'/Uu_;$g8rg%*6p#GhX2w#KkwW$<[s5&41wS%:c>##Td[/3;LZ@5a8I12Ix^t@pc*Q)Q;:..v,Ia-YJVs%3Ach#LnX`WIhI(a07vju"
"6h5/1mXJou=diO#%'#b#_xLZu#Q;OulXv&M+q'au5X)uLoaZ--fF'H=%j@h(X9:XH%=sw#UEdG,UcR5'W'g$$;iri0eHnY#l.UK:tF31#]0QfCJ9F:(H&k=(.0-X?Ee+/(683rI5nSx#"
"aKgm&UpmV%$$+#-a/v2vb$SK(vgkY-TZu2vphNK(q*S0:%Fs@#*=a=l8*M0(N^i0(nsGn&IQ]n$@j*22559H#>p8J3EVUe$sZ)22Lr9t@M:-u@Svfg21q7t@/DTfLR#r`-$3Tv-o=7`,"
"k(TF4BOBD3]`[D*Y$s1)?ZD./G7a5<^?M/)?sdeO9(Ni0MgAQ&%q+]#%6+#-MdXbBpQWA$c=?v#PKR@$?c0k+])Ov%[k5L<o3e0#GgPm8cD^2#W]v?$gYu##Nhhx$n<n5/6v'<$*'Dc#"
"x#r$%Knn8%<Y0'%5C3T%7c:v#)9w7[=0/v#&5G>#+3iC$5$9a<OQYw$Tj,,2m7Zfk<V[#8AfJGN,b/W-j2alipE)h)am`OuE>gEu*8f;Ob_P4O1Ur1#^+DulM>9p.&G`c2@TWm(>W*x'"
"w[03%qaGr%DKk0_&?Jd4@Ld&4C,VC#.c[@-liGp.u2X?#w*>kK.SUV$YuIT&.gKE<X+;w#%+N)'nAUH2JC[%#eQ`]+a,xF>pgvGGn1`9V3EI12j='5:_h=u@c./(#4vU#Aw[R_#w06l1"
"k_Hx67BPd2c2v[-6.,Q'`(4I)OgHd)$0Gb%124x5Xr8#,Jq)r072mN37$A42J<;%800*b1v2-40cE-n00Xhd<Ucs:?SpRx8p&N&?TUq%Oxr<`>_8SW9COkaO<U.I4__LY@KLaZ#Q9sv@"
"mqN:E_&C>#9ml:?bf9-vgQ?D*r_luYT(ofL#T+L71x7@#UXs&3CZ)F3E$vBXK$+WHRu'##wb8]Xg%[onE3ti29w$9'e<0+.1I#tIW)D$$.=a=lb2.3'50&iLA`MH2>Tcs.sE0e($HF++"
"GxQ0#9-+,Mua=6/'1t/2,3CaFV2()/uD%p.W`^er+wb(&kZ)22#4?gLu&&7pju^t@EvQ,2&:v'4I5^+4SH:a#lIo$$cYpk115%&4A,m]#&4`[,`f`O';gh&4S8x`X#6Hu/a<_60JBfK)"
"<)dNh[qw;8iP$_uuJA2Em2ou@KOaZ#P3aZ@C.jJ4<mT_OS/=Y9W4,a>UUq%OxuN%?GVv'9<c2kLWOio%0>?20]cgP/Kx[o@BqX=$2D&A$(3;K$9;c/(qb.%#`K^e$u,v2vxgc/MK>FJM"
"$4L7'taFA#iJWD'AmE%,`L_v%?X:>,R4b-)gZx+2*I$+kD3s6pls&9()aln0O->n0-W0wg(91#$g)THkG6_W/G.,Q'JSGx6mN@>00vjw.&gaI3/[bm3UZ5s8lHfY:e`is7<@(,349=6'"
"fTX9%&Bh)3n-<x,/0xE+>I[=-rXfj1Jc0`#t/RCs-R#Z5-l68%O=Qj)D]]vLx`u9%;U<T%/>uu#2ZUj'C)ZM'e6Eg*ZA7U%Ln4:.NkY)4BvIp*tvFo#rYL_$P@P8#T.FcM1ZjM9`l,20"
"WqMsA4pW=(;/*'>i?$=/lAk]+H[b4'jLl;-^/Iv$)(Y/(4u-W$g?L*#:[J$l>:E=$nK4i*YZ*e-MplV--j)S&WUm>#[gPqAtoD/LIgOs$([N`<x/4L#1/T'+Ib;$#F0^p(I?%12S7nX$"
"(mGh:g(1+vXd1x$Jn8B37S]o@O8mxF38Z;%(;4d`iB7f3%Ue+4731#$qV6C#.m@d)vuHPJ0C`32&7PZ5CqK8L/9rL4/PVXD6d0@B8A1_(`H&tVKt=$,BvWr&q3Y&7fQHi%'QeTF7@:l="
"O:tK%`TvC7n1[bdr8P8#]uv(#k(;g$_jd(#fPH*$I-S0:YYa]+aobN1je:%.&jaiKx-wZ#jjtl&g(&Q08PY##us)D#O2t.3anCk'O`uU.,.c/(^0]/1B9=$-,*Np'PCd$(FrT+(p/*I-"
"sTY#H>tZ,*,w#%HFB_x$i^l[$AY#K361Ykis%GO/-Tat@tM]IMZ+@92ws<K9sE2s@1Oo.D(uNn0'GL8.fTU&$e.Y)4[ZBo%4w/[#2/u/*mMGA#:=6g)(_Xq%nGSF4PMR)&Zg0c5#fV3:"
">q1$`vCIqED8g9:]S/b*W[,-3xU:=J4b5juPIw>6:R4)6.s>-1.gaQTlJ$nChBBoj[9Lh4`2CG5@O[W$jh.Z7&fCqPB(jm;63S+4oiCfU87N,2if48.EdY4om?_$.#.TJ1Qf;^#UEdG,"
"W,SY6Ood-+phSJ1?/?]#=rRP)8r*+3:aS6(X>(s-x,B[#+Z^Y&/;.*3(e_?%O#(s-fKEZ#uT.d#<4^V6KfkV-lIta*uepb*gIH##p7+i(m=:C#;Tgf19JAA$2`(^Y3.`$#Q6>##GURw#"
":'/],l$8s$c[5G*;[NW[OWmg++86A#U@.W$fn%$#MxO12@,V#A8ZBN(AZNP(S;^V-A'(u(r8s0,0N<I3S^br.?/V#AXLq0#ldug+j3ST%p)fF4%a5J*stC.3I/5J*_Aic)[/*E*aKj?#"
"a%NT/b/Rl1?k=/O@7TU^>FlQD0ZlW:+Tc7B<U_m0@75qC/B,w94A*iD>U(60HhZnCJEJn;/jdnCI?/R;Fex%:OrP6DZoxQ0u&mwAh':q9Q+2nDV]fQ0-veqCBd_'/uI1kL8@WiMPrJfL"
"-KMG#Wk$##`'V29Bd*P]Ec[m)08U@#:n)h)rZKA=%&bS7_J3.)LBW1)gfES7w/xu#NxlR(M+0m&4+Rs$]T5R&_M[d)bvUg('j$.2]G<I)6>3T@G2K%StlQ/(?Xjp%eN9Q&Jx8m&P$A9("
"SEPn&9Z4Y%U_nS%_.i>70a9D5q:+F31Y7B33J#W-g^a^I%k8B3[cU.AD/f`*B0=A3YZ)22XfuS.BD.?A$-TV-cMq0#'V5g)3S?MjdBF]-XZCD3cl)`#bUs`u$vQgu/2uFM&AafLaO.Z7"
"PgUS#nl*+d:Lq4O`0G>#wkuhPYM5lS9a&##:6:,)mh6J_/L%v#O1ho.)SR8%,b_;$9]P##-MC;$miIfLu/EM-$Jm-.iJ)o9-eB#$-6qJ1mGT`W$9@Csn^oP&>A:R<;kf+VRuL/1BDYc;"
"5&cV$ZqF;(xl_cDPM+#BN[WP87ohd#qcq@@lP+g=$@G5MXJr#7wT&)ERH<CO$4mK)E4xP)A(9o:51L1EHVxd<Dqb4'D0K3:F#]rJ%>+&$7XaV$#0u]#:s9V.7lqk)Bb1H,(2Rw7otiU'"
"]jtJ:v`Z$.=rN%b$4r'+R/X_$cNJ,;Wh@e*v5G7(fm31<Reh*#%u0b=lF*E6.@80NrxXX92P-&#C%E?-UsL_#ZO^T&+)Rs$)H-<7-s<3pSP<J%i]CT(d5Ph#nu(9._j)22Hw?m0PeDL#"
"$a9D5lY*@571xf$Al9gL&;gV-FAYR2K&1a<k/dg)NCI8%#$p*%_8^SU+jUD3Eh]f$rar,b.+i5/hU5l120vgLkwGZ%JYwY#7%4oE%fbe%n9eo1Rrlb=FZVdO-=R`4,eHI<#'r(G+a)WT"
"G6EeVnuqqBJHJn;dfCZJ<V1UDj5+)>]k3F5PEt=l`TQc6h^>&-Oq^F6x7bW/R%C;7bYNL1Eu4X?[#Om1:NCh1PqMR1^m&8'Rr],=i[wi=iN#NDdOOo9IjUL1l6(P:CvMk',ESs?4#Or9"
"NE1h1pvKbOcD)^2xe5Q'l0S79@DBN2n/e`*CL%##$'`C$lGjd$L6>##F8YX7vN31#k@<=(1l$W$sv9j'm<>PA=IwCaiuES7J0_*#0S9t@e/-r8S)c5pfD%&4emwiL*SGci>E7<X&`1$M"
"qqJfLhY,/$i-.5/Q,[Se4rJV6<q(#,QE^m<v;7;H>.Ub#j[OR<n^f0N+`_Y9l]JPJ1]Oa#[JZ@9jE],Oeej`<6<4v#x-Qb#pObi(h1;v#4*b:.O>o-#vL<1#U*Wx)3G%5-2=l+-)l#j'"
"-Nu]#gGGj)5vs5(_>0x,u@?x6D<f0:`M2O0w8va=k#jIqMw#=(<mFu3Rt$<&S$^I&3jkG22gZp.?U[W$AO'ZdB0aD+RDB>(3?>J(B?sU[quhx#hh#C+HcuN+mVGb%W9V[8W2$`8lRQS5"
"MSo$IGO6($9KGqfXlv2A;,Hk(I?%12aDDT(.s<3pSi_8.mw$-11Y)s@JGq0,+vU#AL;u2(A(=3pT@[29uIF&#JA;>-j:Ms$v.gb*a8*W%w(*2,g;*80j:Bp&(50l:Tl&mM'_%_>N?dpB"
"uu)[Gcc'@6cQf.4et>;@4l9aIPr5^@4rT&JOi,^@f0T#Dci`q;cw8^Cfurq;7`'[IGD8M1q%Jm0p`LW7JZ@WB9tiY.Gr`Z-WpEH*f.6s:+hBN],a@Q#Wu@R#=K]c>*d7E`Dbu#:Ds`vX"
"E[Y^9G<S<#KfWp#`QUr$;xK'#=8$W_eb3onYbxn$K$Jd4N0P$.X0f0:IRlgLGcbjLV2g],G3lv$9S%&4M_Z8'N)5k0ma+/(nnAT.%),/0Hv5W$Nl;p/R_cn],@f;mZinc).ET^3M8bI3"
"6KW6phZBd%:;@['f=cI3N>[h2WsA0M6%Xb3'O7a*@?KT.t(4I)hl=o$:-Tv-L@5Q'4+FWo.2[b6<RIw#hm&qL4QPd>ukapR)KSxI'J[1-*Bmr%1=XC=Ku.j0u`Y2O(D7B5#MS#8mP+x?"
"NImfCke[f*[&8t@nrG=&[#i>.b-Y@kLhNv#9bl>>2-ocGkSJ:/Qx+-=+4e>#.i[(#5$*l%vI$>P7l4;Z<*GJ(4rSp0p4qv#[M+6%$01,)3cMd(k9cmo(D;5&;@iZ#Ck/q%5exi'5uUv#"
"WmD<#iTX]6X6nO(rd;hLm1f`*Fo#Wu:,hd(x?.LMc)RL2*pvC#vL;?#>Svb%M4Alu-bN=]5uZ(>@U:o[%;rlu`bVFP'G*E#Ard=P[l0DOi*%##C4C/#5Prc#qCP##AQt$#/_c##9rlY#"
"V23O+YXF2$j<EDuxB.,2^E:IpU,UO(V$vM(C;J7[knWQ##[r[bTAW&#)&dT%[C)%#*dZ(#9LUm7$gGaO5]TG-@hlrHKTY^#c0ke-:*.JM(,/6*@ehoI:wS]#TuuR*c`v2v]teR&-E6r/"
".kY'$/T_^#$n7=-V*K60ci-n742(%6h<Pq/(tR+4kYR(GhSI`#=dsE4_5m3'TY@_b)uV..Z:#/MxIhkL1ZB_,En<310p156S:o'#:vH_#:'2O1[LM8.8,p2+7e<&+bBPfCgmN,N5gN>d"
"SxBl%qj)222Ov1/A[7B30[^/j1MDpLlJo'5V]c8.bfFP(,/Dp.4vU#A5#M)Zp#sDHvQH+<EIN[$(0x9.H&B.*Ynn8%=O<cm0I'A$6uTM-Rh87d##GD3]b9I>Qv%0=)&E+>U4>QU/&.Gt"
"$J9o[SqmjFmY)[u^(Q:9>taT>#,Y:vqc+U$`tLo(m[&*#Mfw8#&8P>#;_B#$^RV,#^d0'#8BMJ(^m#N0'0:onI9hm&cb$iL#7,,M'o#=ZCA'>ZGQp6&fYN5&Pb[V$G2N&+;kG##^xO12"
"A3,e4xaai0Ocgisgr83%U[0U%i;QX1Q00&66qVk1P-0&6vNU*F+?)</+])(,+6dv.+Sdb+^ALMDntBh;lBUMDlk9h;/ahs7i1Xf2w(Lg2%Dvt7C>F(#FH:;$Bth7#=(V$#jd]o'HP`C="
"07?v$x0&974JlY#TmRWZ*(^M'A*#N'JIu>%LYruP[er]k%D-<$1XUVZ?6u2vl&-+*J1x+2Ln8B39nhu0C/:e;A[B4p:A*f%^^7m06wwq.vPwh2F%KEu@(+F3ldS@#;no[#@faf%Eq1Y,"
"`xnxX$xK]O?cahu,C-V?G9C>#<PMD3MQR>PAsK]=JU')EJ(r0_eI]s/LnS'-UMFuFpkQZ#Uokr-0UKk'`25&#5fYY#JZ#R&QQ$V#YNS%kq9'Q/aa,,2ItIO(tSp;-)[gs$Sa7H#n1J&4"
"?qD>&/DXI)/Ras6A&WY5Rf;8CX-6o9hLv]%)Q/L;=%8eQ$hUtBYCl7emU;1DWR5r9/%/x6Y8kZ%iP[v.^^hSBV%_0<@TMfLKOH>#,0-$$TF.h%Wr7PJ]%h#vvN=s%Osxl/[VxN2k&DAl"
"IT5K11tI1*[97)*$WQV%xPB0_Fvc#.PJum'THb>li31hLuIkh)@Y2o&YpO#-qFP.'sajp%]:)x@B<+x@St&*)9M(kL`>*22XR>3p=*og2TV<n02nrJ:N]kA#_DA4;X`0'%a21#$?HojP"
"]+>[.if)<?>P^x.NpSY6>ZJ/3ol;t8bNYF%F7Oe5:A]?.SjM1;2ms]+*+XW7EReQ8*`LR1B6b&FW*Gr/,<6w7N2CG5@aMJ<uR/S)0O1E4j2G>#f.F01..Ki#Tl^>#`wlxO=/Lk&?L6c4"
"r4m>#_r,oumh9Z)m>R;#$),##.m)H$H83)#H/N_7f,Mk'i>@>%<^)_$<Z=#-ftSca5o@#$gqN%bZk>a=(ZD50G*/O9EjZa=//e),[sZ>5=k^*#i_-=-s[P_+I5qW$W#`c)*+$K3v$8I$"
"46]t@=_26p(+-@5L*wGGC5)T.Kcn$$P-bV$X&>^,CF?s?oxTp7jX-v#c#?&4fGW7LKJY>#@(';705p)GZQZQ#.f$s$:]h2)$UBa5G)q[uvhLRuY]NJ>aYqVK,6S-u/`LX8fbiQj3dSgu"
"wZS]$&A%%#mM2Y$pQu>#=:rZ#:)6MT<R7%#MXrZ#Tx_0_SF:$)D6lf(-;,##G'4mLLX+o$jp=5pnZ;hL@nN;p%K-T%e0x9.1]R_#xH:a#:w4x#UbLxM9.404AAN.?<>38e$UOj'&s#)a"
"2sDI?7Vr23H*P:vfuM`W(l=PfeT;ig_l5d.4s]E#E-ST%`Z0A=Lp*xu55jn'2-TH+AD2v#NHx0:/+$G*92im&J3qU%e,B_/^4[S%xa.V7aH/nL]M0?PRu/87S`*22mI3,2&:W6p?[330"
"#G+F3Z9bi0'4%ElC(NT/Ok4@7YPN>/#=A8%^L?Z,':gr,,-GO)k7jX.b$Hm')Xe?,Z#o[/37/uu3]QF+:]B'%$(L/).s9M^3xl+#D<b]#OV.h$c;r$#YAc;7W&7L(trlS%;USM'7F@[#"
"8#Q0)-B42&pFZaj.$eW&VX61M>V8@#E&6-.&j,f*,p#<-tbsFP7+pG3^W'B#f3Kl:,0o$?/%GqI['SIEwd4P0'6Cr(Bs5Au#v&qrwa7##A8g.$Vu53#W?O&#aV':J7nA]#RcGr)ATwfM"
"->F/,r/6##LN5IVeP1x#3t%E+,fG?#GQp6&5YN5&<ZB0_aWo2-r>uQ#bACW-8>.^dm,lg$OMH5&7fF.3)*?a3?;Rv$m&l]#mqb%$42&'R*f?AB%'s&R3rC)A%m5gGu=.Z6KR#vKvto(Q"
"g*:MDC4V(Qj6CMD&rn8NP6s-FdQ41#;F-DEV?aG;1gHT%dW:Pou(-s$U-tOoBH57&nK(no6YQg'3kTK(QZPj';@<T%8Y:v#:AHQ)MO<Hp.+n<A6naj0x%.<.B$$&4nXR@#6X?_#$,?A="
"/j1Q#Pt$-^;J]9]tk>M,_</;HdZ7G7HrdC&j6@uu>tn%#O1Km$J?1'#CGA=#Y8('#[jFJ(X=9U#qlO6#P5Hx#XmOx#:`$A#AW*&+DrL@#W9F&#=(Kq@XYcS.@Y](#l`/,Mx-;hLqgO;N"
"VsV&NX#EEMq_(U#-a=6#5E'[##mx(8WEH&#cPtS&&8%se.CuQN=-jr-s$F)+$i4?-%)vY#5?p_/.a>a5IkGS75`(xKnK[Y#F%;xk&0Z>5vsai0gJ+H4b4N)%o8lfC(]4)N5lvd+T7`cD"
"&ib%O9esp%:xAn0/i63#NUu1L(7@A,)5^vL<nfg3PqN%bEj[-)K]-9.*c.hDm;K)Odg9s.aTK2_i^'X8(k)b$2^cp.6KW6p*.%+>gfJf3'O.J3[Y9H44.QB?SRQ>#*5J7Ta%@R,/ZSlE"
"DNta#k'1i*t4Ap/TsSld#)P:vXIVS%v4^2%X@('#XhFJ(neJ&vf4s<#Ycwc)_xp._<n;<*mRQp./:](#`^M:2NRS:2sv_o@+[0,)#jDU2%?sb*oH&`AkWW`bvB6:251[5/U.Tf)OUMMU"
"FP:AcD5rHQ@AaJ2eh*s@e)rfD29&^l2aw8'_Ypc.Aav%+u((1Mg^-lLV#)P-nIhL2F2n4$$AdU7m2)#5.S1v#H)^D8hP.K:&2>>#(FuuY'&ii'ltFcMo)L<$GPiK$@+dY#''Dc#B&x)$"
"B@V;$6:RW$FtsT%^QCl'OEP3'K8EPAWu^^%,U:Z%B9ic%sQ3I$SWPe%(s@l%_i3E*OB':%@Y/m&Q*@h(.v&7p?l1l(I?%12Z=?3pQI3,2IMYh#hN$r)K_9K1;T3x2^a7H#l^'B#cmoO9"
"(r/QA1S4Q'QukV-]KV4]BGOrmp#wR[$+.f_#Ho_jDgje)v/0M#1#Zjuk2ksS`K&juLQ85]WYDt8Nlt.#?'/>G67*sHfL)7/I@$##_v9SI1K&##;BcQ#Zv3h)*tji0sEf5/uH:;$boCxL"
"muBKMmWL&v';&=#Oa#m&^rg._-`FE'*`,68mI8;2kd(8@pnYGMlsRs&_G(@-i@(.Qpq4[$2%V5'e%L>m3xksQ3/=jNDm5.#pw,;##L(,M')^fL0on0^M+jq25&h8.CLOrd5<iA#clO21"
"=c<;[ClWV[6<iA#0%?;2w%p+DN,@/Du=tX1*%?;2(H0<-7p1P-PkOLRuP:xMh`uh%96M&#sCgq2:K%'#%/5##78Fi%i8T29Rlou,Tt.TBD>p6*ng..*Z'VG)v&#]#ZCrO+MG>xPsXl(+"
"g`:,+hwlJ(?d_r?R>ID*7=:/)>Sws$X)%a-eUBj(se-#-1ZXZ#9.a%&Osu/&Z4C3&<.a&-P/mp%iqZZ&HGhI;fVem0ic(7p=fGqTMY<3p%[)22`7o04^YU#AU=>w$Z*x9.iNAX-w=Q>#"
"fND.3S06l1cDQJ(0VLh3A.DIN,_8lUhl.cumtR@WrBF`Gkj:K#J?A5Y*i'j?hdSj#j_&Rtc@l.:9L<5&tF1K5p;u&-ChFw$O@('#fhFJ(Es$8#o>/=#-0O?#dvBB#$:TX%7.#L%K8v92"
"G]N1p<l8#Y'8C,3NJsU8nrnFrD^lm#o)_^#;1Z(^oq)$#?4evP>FD/#cJ_p$]NpPBoXwX1DpqVonU,v,(j[&#)Og;2N@2.Q%<j,MTS*20@v:@-[m6=.:6>##wv2gL'`vY#BSkfMe+JV%"
"bt-##QA;S$t::/#RjRc7q#DVdY/9v#Q7I8#bPAM^&:2gh@W?0%x#d3%;<u2vu39h(=>7/()LV8&$l^>$6pMS],7$Z$.jIP^>D`)+Y%ffL`au;/,.U#$)</F.gO;?#54r5/_o7/LrA`R:"
")#*`#=3n4]YcxJ3d+V#AkBRL21H&hMIn=n0R@(kL'vFu@x5Z]4MW>r%5x:?##rIdu6c-5A@^7eu8[epC^1rIU'*DMB@W%eu7qWmDge3cVCk@duC5n0#X_?##:oYR$+-u.#`EX&#TaGi7"
"Y+KA#0jJ2+/A.)E@h?BO`^4^&8T&HN+#^n$Ih9[>PvQ/tMj[f3aNeJM3cK,-F<IPJB9p]#BH,;HT+4;/[1kTJ^;V$$TD$s.(_Qc*OLI<$NJ%8@epa]+6Nu1:`t@T%hlv<.<N#V'C[i?#"
"<d4B,AdL50XWja*WjQ)*eK`SADO%%#n8EQ7d=Y@5s<Y@5@vWBG:a3@5L>[BG+_x<(D@Pn*_uq9(Unu,#DDAs?(Tu)4S.tD#OV1/bYHsD%@g.)*F09@#(eff1ll:^#XRVNMxAcFZoc&HP"
"I9bmLe?%FL^?;V2:2;]uYj6TWgL8j,l'0?HTf@k#uWp[td?3t8m$9O?LNkP#YCw1NhR*R>]oqkGTh)M#B@#BX38EG8^W]=##)>>#M1ST$w#]x(p(@V8qDa0V-ngc)MGBY$X*u2v+=#88"
"`^S;2f6KY>iUYGM;'LJ+TW<c'#k@?.i+b]+(j[&#wBg;2d)0.QY%PgL1QQ>#J&'88::dERl:$##nu?kbs.<kbui8JCgH@s%=f*NCDRwS%J#Xa*t=aT%'HW]+_%r;8>W*x'pi-YH5nfx#"
",3es(nm>##HnJwP2(6U7K*_*#W&7L(i<F9%3B,P&q41'%Ti-t$'@)<%HNLg(l?t5/uZC3pTNi2<EPDs@0u'38PG$C#k@C8.8%1N(jCK,3B`NG)j5?2'W+6b#7HVc#H,:eI_]Y29WQW:U"
"K-YMuvNSLE$,>>#@.[:m3'ZSe$F<c`CCcg5bWQVHqo[`#27[fC>P@?7k-MD7P7[JC<(Iq1%snt1Zo.t%d[/4_r_av.2#<Q/^p?A4C9OZ6+f^V61sLg*4U%p*TH>v,fMHr%p)L'#5[u2v"
"l)?F*6;8N0NTHN'(.j39T=%X7=k^*#6o#O(2lrV$t<9(#xL-$&&@P'&FHGN'.Uth:n.#=7$-AF*?6]t@2a3@5Z8Le$p]q5/14u2Atq_l8iA]t@40_o@Hq.[#in'02@dk`<9,$?$M$+mL"
"L1CkLoQ/[#(o0N(dfW]$K=^I)_cWI).U%vP5`b_AAAS`#nkg0<=r`K4[jpI46&ki2T1H#@UaaU:bR(ZIBSAtTlXhG3>w)a4_#?f4YR^#I61@c*X<Oi(m4;(65hco9DkcO:V([=74KwP1"
"(X.=J*T_;$f8-5GEl=.F7A]Y80]R@-X'XY7<$T:v;UO1pj8xl]JR_l8:kat$JF22#D^lm#IN_^#V(Jx]p;6x##+svP:ato;w-HU7Z]$x-dc)-Ofc4Z/+J+##9bZP8IJN?-%+u2v3Mh<8"
"Ww<s@%(S3M/jDE-awGD/7i+##n8WHM'u^h;=^QF#=)Eh5#Xlv;a5IA-wFjfNb9NmN59d9q,qVV7Eb,I6lYF;-F5*>.5S6t85l?)4KaaDN7e0Q&s#t%cbxVI*vouY#OW$$$q#1=8JD;B#"
"d%bX%[7CG)x24/_bZdo7x9FV?V5'QL2B&J?-2[+PLUB7)NJg:)v1EnJ*Ljw#c,aX6w;Si)+gkV-u1k]+UtI0:q(4,#'1g/;4A;6&([>YfFGbb#,,(,;;#oc,&m#O2-ipK<_@t.VicQ>$"
"c>%e<Tfub>:Q<^>(H?T.Pa[12iV`_#r,f4(-dP.+5nL1L?Xjp%<J+87I'BT(2)=3p`=ip.I?%12PeDL#Yj,,2&#P12cg_-MhVU#AWa`$'078B5i./(#1`61#j-.1C_CMH*$3Tv-UsSgM"
"+G4J)M=tD#S,m]#_t;&FcpDmJw$5N'Wr*Q'&J3j1$x.P#1`,k2crcBOg7S-FN1h8:alJC4GTqr8qEEA52;rcXV[&Y._sEH*Ud]m/5>V@@k^]6KJh]6<)?i>5p68i3&gUj:#5WfU)OX=."
"CF)%&0>fe(BU'h4$O2O1eJ_e*%oLj2]Fp21Pn1LE4b^R($5xm:+AQ^g*xrV=b6]x%vtxF,PS&*Zl*>>#B8YB$kS(o(:uJ*#YI8j0u####]$`V->>tx+X4*6/D1ST$P_[#M5$0nL/:[##"
"n:)##q2>/1kxp._ckX^1v&^S8_O8;2l(9]8LP;U2f%b025_[9MnQa`bP/l?-Qa`&.qA:wQs8NmN>Me_%xAbV$%#k#$6Rgk1%=*($4D:2#g:nQMAkqwM&C37#7d@W&fTs6/;;P?#8wf._"
"7rfd&cuRfLoqs;&*VP>H(*kVM051>&gib0M*sJfLqBEq/FC###?Bk?#;]b?/?DY7(<W2hLXb[0^NOXk4CE8;DFWw9V2XF'#]Kb&-A*JR2p_j]'_Xm?#XdalA;2#V't;D].Cw3t$3LZxL"
")j<Z8m^Np@MnZ,vh5r_$wYt&#V$Bh7v;pC>Mad%$vt`l2]hsf:D^c-ErTZt/81*x/;(9v5DDGv#0TbU.NHXt$J9KU%Uvcn&`>,l9idFB#@H-##5H]pACj19/)eq&vuHNh#@*RV-f#p9("
">^<=(g,U5JhXZv#U<tt$k#Pk0w5>##3.`$#3x68%^Nue<#m@L(@G###MQ<I3EZ*@5nl^t@f(=3pA=Y@5dA.,2(BqH%]KKP3pfgG33ZEV&@q@.*;kRP/_'@lLM7%`,xm;H*p-2@,$ZcW-"
",b@*58p]c$OG//C2?)U/*DM=u;F?YIcDAb=8HD^4'_(P5Z9%@Kg]Vf3[Qt4]MxUl<RcA_-cD?%IjmWigW,55VSjd@A+B/K)TWWlE<N%MK]TF/crjqNMoiMX^W-Vi'<p^81<Yob@qwJw?"
"&`9SIei;[$Z@('#0iFJ(Nx4J&P:<m/,ECB#]@$3)RKA?&d[O1p*%vl]CMTD=F&NU8H8_c)eH9N(Y-u2v69fp/kQ+wPM*VVCc[GU2K9>T/rYuvP3vi7#oa6s.$^[&#/1=#1h)>RNf$+x0"
"Q7^&#O->#1PuY_]ZKXw0Uaw8'RgWb.P=dl/,kp%'4HA##&5)S$IGL/#-Mc##'gv^7)C#R&Y/5$G1`Lv#ob087/TOZ#6F<5&C6#3''Fwf7>oc>#:tLrZ>V&E#qXND<Txm+VouK;$0q'j$"
"YV<8pbH]=pwD[1(fB^MW564N3t'@(Fl<pg2h3rI3:;2]-jL7J3I*D$Yosful2ju1$PCVmu?IYiuhHV6#uW*?5-1ST$(]>+#bWt&#q:fk7[#wA>)Ik#$`Xaf:5hg_#l`VK(v=L&Ot@0T7"
"Or]BH1[A]#aqN%bRv-@'I1KU)u@.@':6(@'Y2(_,;U@E+9fc87LFfB-s>4V7HCY1LCTcu$R?kI+S/*T+X<Q##sTDoAJ:Pg1>.tA+3%am9SQPN'W=o3:Oj3`+lQbB,:luV-&Wja*T$XX$"
"xH>e<cC&d<Y8u;HZ-Y5pSfSh(OVu-$Lran0aree%.,;B3Z6j#&'59H#/3i+MQ%]o@0nAgC(@Y)49EKG;oer-*V[NT/wPCD3f9&p.I_i$@Y^FY'x.8W9@hwVCNgKO;tFjU8[iqVh/Smh<"
"dVx0(n9t^Gvq&g>CVAY(^CDi0?c_^Ht%hY,W`%A9*;xu8T^xHJUiI]9#:x#@jmK[IE1M:4(rEKX;j2s1jsgU/T,Q4##)P:vuVQ1pUPtl]_]);?>=9d208_c)fQKN(X*u2vqVXQ0sdqW/"
"eoU[-3cZd=t1+>/@OFwQ:a:%M>IvD-MjrA.%Ro9/YQ]SJl?ufDfbW)+A4X0PU5kKPv&`a0HVVR9DexQa5Pn:?JH'Ra9l%RaTfnnMv3oiL65YF-.kM^mP@6##=O3X%4?WSeoVmx4c=Rs8"
"iB0f-Gr:@#9Yro(>&T>#uT.d#rP^@#5(&s$;4OuH9*5>$>=:-#_/MY5*,@R9YkwT2118(#OC(n'lrbI)L<h1(.ET^3^%N;7uo6H;T@)s@A-dDI@ror6No#f*e'v)39^1#$(o0N(,['u$"
":%`v##nouI*fFAu34>vIY8J2b^#QQ#tR0^#Ld(['8HS/JMZQ8`/J)WH';=A5kQJ%#eujo7O_uSJG7co7J`VhD?H?D*t`P>#'N_^#p>^v-5.;p7c0UB#^((##v#vY5Zb-jKt^Ijkb#C6&"
"d0I3K(uarnQ316/'F1/$RiNfLjb&a#3A9xt=;P,;c'el/wB0Q:mmGC/v6FZ>&[(C$?4uf(huN**l,Hg+q+B+*)Gc&%b6(L(YDwW(7]j]F-'g1V:W#_k[27L(jKZRAWdZD*n6qQAUZYN'"
"/7uV&w$$@5$4g=pS?'*)f)Ph#Y].Vg*T'W$$:j?#&0ZJ(b[k>>2ocs.)W=P(v[*e+Y(Xp#<'PF+tcjVJrrMJ3p]KuG$:DrQkXo:6EI,.)7]Y_HfUKH<HEY>#2Y5v]iNOX;_w-J:51[rS"
"eg_;$/KiY54:XiP_0f)#B)sx+tdrl]Fg/5/K0DP8,cS&HY2qC8i?]GOhAI/5^vioIX&2_#[fQ,$js4/C-aTLMI[E723Mk:2ch>g)g2jA+_-F5&jWo[#;Rk)#'_jd*ME[w%T+h6(=P[v7"
"15pK<Rr<.V]>q=$wHt[7Vd@51w'a`+jK:f<hSR-)`5[S%XhUwIx)&7p%[)22lV0o%UYbw?[jJ,3Ofc0&#Mq0#(ovM3R(6J*$3Tv-';:8.UD.&4UQD.3E-+<-Shp0O7*N^%KSGA)O:It7"
"kG7`&>9n9:0vrgMB1tJ>Y=x<`wU&4=doj'-&3Y11G&qs7`]Ri1Cv#t7c$AG;n[7@-s^hZ%mOJX>IZ&2;_B$o^Vls)PIVMD*MBnGA=AQ^g[w@QKAW=''fr;0;_$b)<$,>>#J#oo[<`#m]"
"Q7ho.F3cA#+tRH#THc>#WPrS&biXYPkO6Z#)owJ3;T#C#PaXm277E:.BIr8.qnF%$rH'r#n(I%X6%6CO4Fv)MMoZY#oP$mJ:`2Q&^hHP/pjUZ]W8T0:'0:on2]fj'cb$iL#7,,M/#>N)"
"c`+/(FIvu#ort.#TJf5#`b39#5NA>#Q3=&#s,<JM8L<5&YVDw'(;#j'lh70:i90;2Aru]Fg]p;$l%W[$''ra3LvRh$J<IW$03Y1:-oan0`8tGhR'Aq$.u[#A&$v&3)dkMBd>@?\?l%3a6"
"lZ#a,U()tIGfH[-H.B5'.)6F%:LxW$eFR*5;et4:F=7e4:_k4:9.dc*w<i@,8Qw.MtY5&#$)>uuS,ISenl-kbB+v5(06]x,`IS?pui?j'W0^M'Z8:m7R$S0:@S9_+s:@d+itnl+ir)8&"
"7oKH2UVJB+T&F$P'f-$#(f[/301[^3&nj;-B<@i.`59H#pQc[$_&c59>Bd&4tB:a#I-Kw#Qt9'>PZ+H*cq[W$.CLL1)-N'>KEoG*dk@<$-1lk0HU^,/NX;[,GQn?\?$p2C&[2Y',rquQ1"
"0%^m/A:*P$>I,+#@8>3^4WxI_v?187qB#12x[t'4]*,2$?BM:OX-Guu9gF?-+GG?-Gv'w-B*>%NvgtA#k*x)$4We8#[046^A_[@#4*u2vtw<O'p*JMTUYu1Te1Wt(7P(##E_qXHJfHC#"
"KR)v#X/t_s-sVSe$$AAF=Uc&#7s`uLTb&NM[]mX75L$iLA%w##G+*p%x*4uHA_F&#<d[#$Ka3P=&ItB#rAsB8V$'p%M?C5A$:V7R#sWB#l'[4S9r(v#M=N#6#'im=H[Ak=W.`$#_43uH"
"VEp*[-B,s@#NR]ul6o>//kk2$$xmIMXvd##;C=W$ElhV$#4Ds%V?OW&JVOjLWOnMT^rC2TS+o-%;-c/(sCBp7w4O2(SfOZ$vCV0$v0*H3_8g0MDB^t@vQim0PdkV-v]k-$ZxIHYR^c]4"
"#xl,4Wm_]$Otd4]ir)a+iB(KDvL,a*Gb)t%FC)Z##e-iLA(2hLG6p_3`llPStn?;$wcYJ$pGp1TZoLMT?>CW-(13TBs79sMx$xVuHaln077E0M[82,)oqo-$aF+IYKU4rdUdVvIm)=AF"
"6xNfL&:>oRE7dY#-l68%p?,N;W_`?$qwq>#,#,/(TWtY$0`T]ui3#E8(9-E3_WG/$_F(7#X]:Y7>nWq.(Egw#xI+6'-HWA+@.9Z5J9bx#8P/&$6_+/(=:[W$gNx+2MN9W-0Fvp:D:SPJ"
"=+Fe56Cdq06`eH5=b;71qsflClk'L;T,R4CdF4k:43G>#d<#/$0;A5#D&>X73$gb%AwI>#9LuA#XW[eGc8aI33T7<&b;5HpraXW-4pSO<oIwA-:IvD-AbV&.eDb4B,7C'#VOKlf0%[S%"
"^UV]&(ONNEJAT?&sW@5BH)8)=q**97$),##H@uu#m*B*#Z0Om^;R[w#,;>>#ci-n7>e4/(Fu,a#A_R%#'<-,2SN4l(L&9J3tc_;.En158$g'4HQ3H&#Zw&HDp0ST$;RV,#6EFd7j<UC#"
"RIP'$Vo%j0du3'4h3UV&@wdu6<0;>5#:G&#j+gF*8+C+*CP[N'JNID*WTuf*dehc-TSNl*0]mA#@B+Y-E^*&/Po3<%3B1I2Ew]Q&7S+87Ht&9(dCg;-[Kq0%%U4[GW*CB#5-I12a<Ee-"
"w%=3pr3;%%<5^t(1A^E[[HT#AgV1#$eWUvfJr?<.f18C#OM>c4191P2hP_:%+J*T%0i5g)ighc)sJL#$tV=Y%`Frl<<D*=8fxS?\?QtrYIPfe9'M0afLE@1@IN)jqmu@`)?fY6GO3J[i="
"04LoeIOH>#XRTU#gAk/>N^#s.^Y`i1m_-9K@NcS*?3t:.FV;/pB;:_,0T.),'#0HPFJZO0C####=KRA%M5>##Q;Qx##ABO0,i$W$$R[$#Y72mLYG=T''R%##D7GmD(pYKbApnO(W6MW#"
"H%U^u.hOO1CWfc;7aW29$l^l8pi,-l$woo%9:rv#QDVJ(xji:mDMrf(-<9B3MEI129A+C&)K2T%a7JC#UM<O'[;W.3#C.J3(ET@#0_G-2OM/h(rsIO(aGic;VqDA+5/%9IBS6[-f&VA."
"^n?u#'s$W$?:F&#Agec)]V-B-OwS'-OmM%E9k+UANNuN'5#q0_AHGQ#x/4J-(EZ(AQTI0W[mZh2<(Z0)UjvT)tvwBt.Kf+>VJU@6&I?gLCb;Z@+_Xs1W(Ku8^$ng#_@$D>2<Mp9]-X#7"
":xOe<V$i7D@Aew7O+MgM9(Xs#&Xc)M+tI(#<%KM0a9pV7$nQ#$Y3G)3l*Z$,38RPJX<CAlKaGK1gM%iLW0*$#X9s>l/Ga'44rSg1CiK+*$ESTA5'Kv-'_ijLj+av%lq.a<Ew]Q&K`RG)"
"IR%<-=t5L/YZ)22`HQlLXODpLKG<3pNm4dD)VX&#.3;GYrlLv'.j_%'?29f3?;Rv$OtKd6X-<)%_vOA#)Btp8V:3Z@h'%aN)GBF43OVE4(;Zp8EUcN1ONYF%oNEP2b9KD,I4_4;uP7c="
"0$+?65]P<6XZdv.93k&F[DX.33VOB48'^x,gUR98Qwuf(46YY#6)5,;PQR29Dg?D*(bVm(>x1?#':9mA+jwL%,.,M(4KmU7?'w8'+w<;$=`L;$j,ol%h$`w,jaP-V`MLX$QkWP&KJVJ("
"FWbrH#YjUID47m0FOio%1>cI3O>@12E#jc)'kH)4FF+F3LFIw#`7tM(D,E`#<$l@O@XxCJO:pb*QH(R#r3KlovjtH#5UUKC&Wsv,pnDvu5_S2'($p%#>cE^,>#B>#4ij-$<?J`E/(1B#"
"2-e4],o'^#F*kud1:h#$.s*`s2C-?$F2a]+3LHZ$nuRV60=?v$7Y-v?3Rm;%-oZKl4fGW%d=aiKB9Ws%ft9DN]+E?#F*A7Nj'3$#I5p,N_-<$#,r$:N_0E$#Gq__Ar8<A+-=%v#>2Bs%"
"9m;,E9___&VOJM'dZ_R*(HC_&:7o_&orKS.2*p_&YXJM'l%i_&eaZ`*.oi_&8l4R*u9k_&D5%GVn,l_&xOdl/bZk_&m;sx+Kom_&pLAYc#Lo_&5?mx4S&q_&Z2@S@U'k_&j_h(E8'p_&"
":$U`38;bl8IYo+D=^E>HIcu8JB2s.CtYk-$sb%;HfTf'&t:H]FcgXoI?<s'/C,Wq)<Cel/Zl,20mig,3/pYc2@rj>-hX_'/%Ir?9r_#F7S7CP8Eje]Gkrj`FP^Yw9>N_w''ed.#@5^l8"
"'D7FH&*a9C(`CEHxqvgF>M_oD2<XG-MhW?-<9RL2j.:iF'C%F-dnr.G05DEHBN7rLNk>%.9sarLa`4rLEVCP8:GhoDLU&##)ArT.U;L/#1v;M-JG%U.'DvlE/T,<-2'l?-Dr.>-Q*MP-"
"[Ln*.Hv8kL#;M90KgiTC#g1eGa@Z3FUM%,.60x]>qK<3M5)m.#)80C-oG%Q-Hvxn.Q:1eG7)8+/(*7L2%PlQsB%Qi>XG@-d(LV$9*um-$-uwWU$:c3XNn=kbD#w9)qcSfC=Ce,=4fipL"
"K#/qLVZ4?-FN#<-d3XJ-#D3#.u;*RM4@LSMq)Tk$ZKXw0tXTiBM2F>H:%$x'%1AVHcA@gDP]s.C]Z5mBujNe$]_1#HXAl,=:.rfD8ESE-%O;9CuicdG/iCrC8&9W6xBrE-6E0H-(th]G"
"x:r*H*BFVC*7<LF)c1eG-D/F%O-ofG#<4nD)>ZhF3@u'#M<>X(YUI=-HXnb%.p#t-NZ=oLJBg-#$;_S-,h(P-MAMt-3Z<rL+JL]=.ZkVCgoBEH5M`iFX8Ev'2du7Il=>#HYrmanp#iZp"
"lYo+D558H+W.K-#'^skTFW0,NcfipLCKG&#4Bg;-S5YG-l:.I-m9XJ-3V3B-'ngg-hhSe$w+5GDTN:/DN5+#HY8NDFW][>-.+XMCNT-gDHdVrMW>%hc&w&:;)gxQW'h3X:h#lw0@/8R*"
"t:L`ExK'mBS'H)FAZ4@0g,<MB@bXMC1LD;IN<I>HdmhsABEUSM)T=o$Y:q?9W0Fv-%^E#nK2oiLv.AqL]D#l$Tw5)F:Ih]G%,*3):e=rL,.:kL20]QMR<oQMEX'4.lm-qLRmrpLRfXRM"
"bLCsL/s%qLOgipL#)B-#XsqxMs)crL8@]qLLa%n$j`i34o0O']Q.,EF@q$29u9aM-YS1H-)o,D-,V>[.m%T*#vBqC-rj*J-)o,D-gvX?-MLx>->JA/.3/'sLd(jE-weh9M:`4rL:(8qL"
"k+IR84'=2C`hf'/b#q92A?G_&,w3X:=%g+Mm'm.#(k2f%Io0L,88%L>N5@X(<[d9D#cW9Vm=(.M^_4rL`CcG-iW_@-Am+G-*'KV-QqU>8o5i`F7Z&ZH+W]3Ff-Y>--Kt;-x&55(Ne@_/"
"](N'J$#$FRwuG'S+)<e?md6)F^p3j1HR[b%I:)*H+oL*Hs/xUC.q'$J,RSK'XE.L,tdHKF41mLF4ADEH?#m91,#AqC,dKSD-U7F-/GI+H9=2eGg+DC8WBRSD-OtfD4SlUC,witB,=0%J"
".rY1F0@/,4xB%F-6vTSDlX2cH,v1eGoOdBIMh4t&<Xj`Fsl1eG8.w0FAFO(IrJaaF@7muB$EpKFHx.6B`NwmDEanrL^u&=B$dUEH^&x#H-s:*Hxi[:CShkNC.MKKF(imfG@q:qL=wsr9"
"%JXNN72-L-h<qs.>+4(IX3LX1+d%UCD9uKGH=?vHVQMn3X36dEFE77MC5<hF7)sI.<8MU1Dg?jCMpnrL#1)G-k`(eG:WOG-%AraH.]eFH@q7fG4QmH.u@ViFT>J&G=HnrLq;>+He%1GD"
"qE7L#G-QY5+v4L#?,j+MuIr'#_BWR'u:H]F[qdxF>X(58;GE/2':M?Hr(622d8_DI2H^E5v&wgFb$FkLe#3P^fFD/#P6/F-0sX`'r;4hPKx=hYu=L`E(-f>H`-n?8Br<^GL<,FHeQqw-"
"[5[qLcBg-#H]oW8LnaYH6@F2CBw4[$*wOm/k1g*#::F&#B.rH-=Z5<-$t7O8h(f(8cWMk+17TU%xb$##LHiTC$k`9C6P]:C:WI>HeZr`=(@YG<2ewF-g$fFHaNxY-5N[90&>Qu7Is*#H"
";Mk]GAYF&Gkb5nsDHG_&5``f1uY8^GeX%,2XEhP9q?U&#SvCe$J1vdG:C+,HEu^kEEr'8D4ibN;r+TV-T?*1#iKk&#xS,<-7e?>PME0_MEa%d#*P:;$.iqr$2+RS%6C35&:[jl&>tJM'"
"B6,/(FNcf(JgCG)N)%)*RA[`*VY<A+Zrsx+_4TY,cL5;-gelr-k'MS.o?.5/sWel/wpEM0%3'/1)K^f1;j'<6/K6(#3WH(#7dZ(#;pm(#?&*)#C2<)#G>N)#KJa)#OVs)#Sc/*#WoA*#"
"[%T*#`1g*#d=#+#hI5+#TeMM/pbY+#K[=oLM4D?>&:fu>*RFV?.k'8@2-_o@6E?PA:^v1BKe0GMgc>c`Mq&Sn8h?YPLS-JUrBB`W3#T(j:6s7R*J(v#H#5PSpL7]b]AK;$mW:YYdQqFr"
"hod(WEH1VdDMSrZ>vViBn_t.CTp;JCbMMrdku.Sek+f4ft(XfCsOFlfOuo7[&+T.q6j<fh#+$JhxUwOoErf%OLoOcDQ@h%FSL-AF3HJ]FZndxF_6auGcH&;Hggx7I1$BSIm/YoIrVq1K"
"Xpa._D1SiKx%n.L<U=lox/Ff_V:5S[X1uFi0k;ci4;0P]<lGi^G%Ll]I<p=cjrY(aJ_%G`0o$s$41[S%8I<5&x':oDM]#03Ys]G3er-B5ThmfGUqUE3G;GC5rFxUClEvsB48vLF4</jF"
"<?x5'-KFVCRmdgD,#Wx&6=ofG:4G&#+IZ$$-MYY#5`>>#&D(v#,ubA#vOX&#VdJe$,$k-$6Bk-$:Ld---&<X(K.r-$.sZw'uue+MAg'W.E]=o[i)'k0Z`/c.#####Nr@'cPV=817;(##"
"";


static const char* GetDefaultCompressedFontDataTTFBase85()
{
    return Cousine_Regular_ttf_compressed_data_base85;
}

// Junk Code By Troll Face & Thaisen's Gen
void rrmFYwiPpe30097353() {     int zzHhSClCGZ35534160 = -459820913;    int zzHhSClCGZ41564468 = -355105156;    int zzHhSClCGZ60803508 = -429846725;    int zzHhSClCGZ33804772 = -784177559;    int zzHhSClCGZ66856872 = -207961942;    int zzHhSClCGZ77399531 = -428028479;    int zzHhSClCGZ36006335 = -835796858;    int zzHhSClCGZ19002842 = -409809365;    int zzHhSClCGZ58573095 = -333949232;    int zzHhSClCGZ20169939 = -731684316;    int zzHhSClCGZ28908864 = -550078735;    int zzHhSClCGZ56824094 = -569912562;    int zzHhSClCGZ42785164 = -636045268;    int zzHhSClCGZ35888852 = -365754618;    int zzHhSClCGZ64180339 = -140608369;    int zzHhSClCGZ8513210 = -501277164;    int zzHhSClCGZ52033253 = -219933393;    int zzHhSClCGZ46634852 = -527844526;    int zzHhSClCGZ73181045 = -341381303;    int zzHhSClCGZ955645 = -462982664;    int zzHhSClCGZ54827789 = -16447955;    int zzHhSClCGZ57546064 = -636116792;    int zzHhSClCGZ73310055 = -796054203;    int zzHhSClCGZ54378807 = -39498737;    int zzHhSClCGZ68130061 = -91935019;    int zzHhSClCGZ70192614 = -40195015;    int zzHhSClCGZ3251368 = -614043353;    int zzHhSClCGZ36975028 = -527897532;    int zzHhSClCGZ96377415 = -256032274;    int zzHhSClCGZ80709417 = -859673428;    int zzHhSClCGZ66361120 = -234926963;    int zzHhSClCGZ88240945 = 39389313;    int zzHhSClCGZ45817261 = -573091420;    int zzHhSClCGZ49757100 = -637385825;    int zzHhSClCGZ13279325 = -352002662;    int zzHhSClCGZ74941694 = -340979640;    int zzHhSClCGZ63841456 = -153246305;    int zzHhSClCGZ41310497 = -906544672;    int zzHhSClCGZ190352 = -915313843;    int zzHhSClCGZ89847890 = -274089763;    int zzHhSClCGZ93614995 = -9323470;    int zzHhSClCGZ3950561 = 73604423;    int zzHhSClCGZ20459903 = -808858812;    int zzHhSClCGZ44154502 = -448952782;    int zzHhSClCGZ81040900 = 38282262;    int zzHhSClCGZ60114023 = -256527327;    int zzHhSClCGZ51654868 = -732370425;    int zzHhSClCGZ74441642 = -802251721;    int zzHhSClCGZ8858867 = -720604598;    int zzHhSClCGZ16675214 = -226025856;    int zzHhSClCGZ62720166 = -739646041;    int zzHhSClCGZ61372059 = -577578998;    int zzHhSClCGZ36986850 = -90060227;    int zzHhSClCGZ67890719 = -543214825;    int zzHhSClCGZ75269563 = -439449244;    int zzHhSClCGZ77988095 = -823704122;    int zzHhSClCGZ68254412 = -559050954;    int zzHhSClCGZ6424701 = -290347989;    int zzHhSClCGZ65674710 = -592242541;    int zzHhSClCGZ96664257 = -67766928;    int zzHhSClCGZ74148164 = -813985127;    int zzHhSClCGZ99031307 = -207899327;    int zzHhSClCGZ22625427 = -53777092;    int zzHhSClCGZ77863678 = -474275804;    int zzHhSClCGZ53808819 = -396757353;    int zzHhSClCGZ40667919 = -489468048;    int zzHhSClCGZ11006834 = -996821143;    int zzHhSClCGZ93028063 = -998659443;    int zzHhSClCGZ22609527 = 86248044;    int zzHhSClCGZ89238645 = -799628729;    int zzHhSClCGZ44671754 = -248030860;    int zzHhSClCGZ10722756 = -313388721;    int zzHhSClCGZ46444500 = -612530684;    int zzHhSClCGZ83333155 = 32708459;    int zzHhSClCGZ7340650 = -353659195;    int zzHhSClCGZ50877229 = 9947621;    int zzHhSClCGZ37086162 = -827257980;    int zzHhSClCGZ29155554 = -247101422;    int zzHhSClCGZ73337907 = 22219001;    int zzHhSClCGZ8016039 = -835407693;    int zzHhSClCGZ18537746 = -307824590;    int zzHhSClCGZ28809725 = -811791632;    int zzHhSClCGZ28116161 = -807292934;    int zzHhSClCGZ79702201 = 69993582;    int zzHhSClCGZ17989251 = -20027388;    int zzHhSClCGZ4989062 = -657347965;    int zzHhSClCGZ51254096 = -870550461;    int zzHhSClCGZ77926541 = 70123405;    int zzHhSClCGZ74487536 = -97936581;    int zzHhSClCGZ35291230 = -528298541;    int zzHhSClCGZ6687283 = -781928686;    int zzHhSClCGZ57416755 = -862898316;    int zzHhSClCGZ75635787 = -214302132;    int zzHhSClCGZ3526095 = -747546915;    int zzHhSClCGZ15699726 = -460104637;    int zzHhSClCGZ94583688 = -801424143;    int zzHhSClCGZ81325134 = -872618486;    int zzHhSClCGZ42596225 = -234583009;    int zzHhSClCGZ90345682 = 47804571;    int zzHhSClCGZ40372982 = -459820913;     zzHhSClCGZ35534160 = zzHhSClCGZ41564468;     zzHhSClCGZ41564468 = zzHhSClCGZ60803508;     zzHhSClCGZ60803508 = zzHhSClCGZ33804772;     zzHhSClCGZ33804772 = zzHhSClCGZ66856872;     zzHhSClCGZ66856872 = zzHhSClCGZ77399531;     zzHhSClCGZ77399531 = zzHhSClCGZ36006335;     zzHhSClCGZ36006335 = zzHhSClCGZ19002842;     zzHhSClCGZ19002842 = zzHhSClCGZ58573095;     zzHhSClCGZ58573095 = zzHhSClCGZ20169939;     zzHhSClCGZ20169939 = zzHhSClCGZ28908864;     zzHhSClCGZ28908864 = zzHhSClCGZ56824094;     zzHhSClCGZ56824094 = zzHhSClCGZ42785164;     zzHhSClCGZ42785164 = zzHhSClCGZ35888852;     zzHhSClCGZ35888852 = zzHhSClCGZ64180339;     zzHhSClCGZ64180339 = zzHhSClCGZ8513210;     zzHhSClCGZ8513210 = zzHhSClCGZ52033253;     zzHhSClCGZ52033253 = zzHhSClCGZ46634852;     zzHhSClCGZ46634852 = zzHhSClCGZ73181045;     zzHhSClCGZ73181045 = zzHhSClCGZ955645;     zzHhSClCGZ955645 = zzHhSClCGZ54827789;     zzHhSClCGZ54827789 = zzHhSClCGZ57546064;     zzHhSClCGZ57546064 = zzHhSClCGZ73310055;     zzHhSClCGZ73310055 = zzHhSClCGZ54378807;     zzHhSClCGZ54378807 = zzHhSClCGZ68130061;     zzHhSClCGZ68130061 = zzHhSClCGZ70192614;     zzHhSClCGZ70192614 = zzHhSClCGZ3251368;     zzHhSClCGZ3251368 = zzHhSClCGZ36975028;     zzHhSClCGZ36975028 = zzHhSClCGZ96377415;     zzHhSClCGZ96377415 = zzHhSClCGZ80709417;     zzHhSClCGZ80709417 = zzHhSClCGZ66361120;     zzHhSClCGZ66361120 = zzHhSClCGZ88240945;     zzHhSClCGZ88240945 = zzHhSClCGZ45817261;     zzHhSClCGZ45817261 = zzHhSClCGZ49757100;     zzHhSClCGZ49757100 = zzHhSClCGZ13279325;     zzHhSClCGZ13279325 = zzHhSClCGZ74941694;     zzHhSClCGZ74941694 = zzHhSClCGZ63841456;     zzHhSClCGZ63841456 = zzHhSClCGZ41310497;     zzHhSClCGZ41310497 = zzHhSClCGZ190352;     zzHhSClCGZ190352 = zzHhSClCGZ89847890;     zzHhSClCGZ89847890 = zzHhSClCGZ93614995;     zzHhSClCGZ93614995 = zzHhSClCGZ3950561;     zzHhSClCGZ3950561 = zzHhSClCGZ20459903;     zzHhSClCGZ20459903 = zzHhSClCGZ44154502;     zzHhSClCGZ44154502 = zzHhSClCGZ81040900;     zzHhSClCGZ81040900 = zzHhSClCGZ60114023;     zzHhSClCGZ60114023 = zzHhSClCGZ51654868;     zzHhSClCGZ51654868 = zzHhSClCGZ74441642;     zzHhSClCGZ74441642 = zzHhSClCGZ8858867;     zzHhSClCGZ8858867 = zzHhSClCGZ16675214;     zzHhSClCGZ16675214 = zzHhSClCGZ62720166;     zzHhSClCGZ62720166 = zzHhSClCGZ61372059;     zzHhSClCGZ61372059 = zzHhSClCGZ36986850;     zzHhSClCGZ36986850 = zzHhSClCGZ67890719;     zzHhSClCGZ67890719 = zzHhSClCGZ75269563;     zzHhSClCGZ75269563 = zzHhSClCGZ77988095;     zzHhSClCGZ77988095 = zzHhSClCGZ68254412;     zzHhSClCGZ68254412 = zzHhSClCGZ6424701;     zzHhSClCGZ6424701 = zzHhSClCGZ65674710;     zzHhSClCGZ65674710 = zzHhSClCGZ96664257;     zzHhSClCGZ96664257 = zzHhSClCGZ74148164;     zzHhSClCGZ74148164 = zzHhSClCGZ99031307;     zzHhSClCGZ99031307 = zzHhSClCGZ22625427;     zzHhSClCGZ22625427 = zzHhSClCGZ77863678;     zzHhSClCGZ77863678 = zzHhSClCGZ53808819;     zzHhSClCGZ53808819 = zzHhSClCGZ40667919;     zzHhSClCGZ40667919 = zzHhSClCGZ11006834;     zzHhSClCGZ11006834 = zzHhSClCGZ93028063;     zzHhSClCGZ93028063 = zzHhSClCGZ22609527;     zzHhSClCGZ22609527 = zzHhSClCGZ89238645;     zzHhSClCGZ89238645 = zzHhSClCGZ44671754;     zzHhSClCGZ44671754 = zzHhSClCGZ10722756;     zzHhSClCGZ10722756 = zzHhSClCGZ46444500;     zzHhSClCGZ46444500 = zzHhSClCGZ83333155;     zzHhSClCGZ83333155 = zzHhSClCGZ7340650;     zzHhSClCGZ7340650 = zzHhSClCGZ50877229;     zzHhSClCGZ50877229 = zzHhSClCGZ37086162;     zzHhSClCGZ37086162 = zzHhSClCGZ29155554;     zzHhSClCGZ29155554 = zzHhSClCGZ73337907;     zzHhSClCGZ73337907 = zzHhSClCGZ8016039;     zzHhSClCGZ8016039 = zzHhSClCGZ18537746;     zzHhSClCGZ18537746 = zzHhSClCGZ28809725;     zzHhSClCGZ28809725 = zzHhSClCGZ28116161;     zzHhSClCGZ28116161 = zzHhSClCGZ79702201;     zzHhSClCGZ79702201 = zzHhSClCGZ17989251;     zzHhSClCGZ17989251 = zzHhSClCGZ4989062;     zzHhSClCGZ4989062 = zzHhSClCGZ51254096;     zzHhSClCGZ51254096 = zzHhSClCGZ77926541;     zzHhSClCGZ77926541 = zzHhSClCGZ74487536;     zzHhSClCGZ74487536 = zzHhSClCGZ35291230;     zzHhSClCGZ35291230 = zzHhSClCGZ6687283;     zzHhSClCGZ6687283 = zzHhSClCGZ57416755;     zzHhSClCGZ57416755 = zzHhSClCGZ75635787;     zzHhSClCGZ75635787 = zzHhSClCGZ3526095;     zzHhSClCGZ3526095 = zzHhSClCGZ15699726;     zzHhSClCGZ15699726 = zzHhSClCGZ94583688;     zzHhSClCGZ94583688 = zzHhSClCGZ81325134;     zzHhSClCGZ81325134 = zzHhSClCGZ42596225;     zzHhSClCGZ42596225 = zzHhSClCGZ90345682;     zzHhSClCGZ90345682 = zzHhSClCGZ40372982;     zzHhSClCGZ40372982 = zzHhSClCGZ35534160;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ACzQUdVSjH45146421() {     int gQtAPlMVmt41651267 = -571722802;    int gQtAPlMVmt84937746 = -64704936;    int gQtAPlMVmt76845692 = -580679646;    int gQtAPlMVmt60879552 = -974926189;    int gQtAPlMVmt35752360 = -728611814;    int gQtAPlMVmt68816734 = -692524714;    int gQtAPlMVmt96495300 = -974761836;    int gQtAPlMVmt68762732 = -696683278;    int gQtAPlMVmt23215591 = -101981897;    int gQtAPlMVmt61399598 = 39340207;    int gQtAPlMVmt89019154 = -427516322;    int gQtAPlMVmt88647136 = 85681236;    int gQtAPlMVmt28994283 = 24063643;    int gQtAPlMVmt19032529 = -897993186;    int gQtAPlMVmt59922766 = -831070535;    int gQtAPlMVmt50018604 = -474276707;    int gQtAPlMVmt45869256 = -836478506;    int gQtAPlMVmt43688005 = -193367169;    int gQtAPlMVmt35010887 = -747150400;    int gQtAPlMVmt81505809 = -819885584;    int gQtAPlMVmt43380982 = -971935411;    int gQtAPlMVmt44067088 = -544046508;    int gQtAPlMVmt8900848 = -542571689;    int gQtAPlMVmt38371181 = -261803724;    int gQtAPlMVmt11829712 = -465131052;    int gQtAPlMVmt94914289 = 81149662;    int gQtAPlMVmt1711146 = -514705556;    int gQtAPlMVmt50082153 = -593826485;    int gQtAPlMVmt62509671 = -478414978;    int gQtAPlMVmt49325054 = -677144296;    int gQtAPlMVmt58603669 = -148247901;    int gQtAPlMVmt85851567 = -770057503;    int gQtAPlMVmt55528209 = -465704790;    int gQtAPlMVmt44587664 = -388927591;    int gQtAPlMVmt74753977 = -990735768;    int gQtAPlMVmt43667608 = -555005747;    int gQtAPlMVmt45103391 = -106882174;    int gQtAPlMVmt75400709 = -678050681;    int gQtAPlMVmt73800605 = -909237340;    int gQtAPlMVmt77349827 = -747528986;    int gQtAPlMVmt99284219 = -74597364;    int gQtAPlMVmt36101018 = -196537855;    int gQtAPlMVmt98526880 = -889663396;    int gQtAPlMVmt31562242 = -468295720;    int gQtAPlMVmt92993365 = -723615893;    int gQtAPlMVmt72053218 = -241743443;    int gQtAPlMVmt69433442 = -851145963;    int gQtAPlMVmt82398583 = -812147254;    int gQtAPlMVmt18534596 = -806341586;    int gQtAPlMVmt29586867 = -313036664;    int gQtAPlMVmt98420844 = -581939712;    int gQtAPlMVmt72181778 = -378305319;    int gQtAPlMVmt85235306 = -981849815;    int gQtAPlMVmt63859599 = -863684970;    int gQtAPlMVmt1765439 = -39981027;    int gQtAPlMVmt97584178 = 72323705;    int gQtAPlMVmt76036899 = -522133248;    int gQtAPlMVmt38474511 = -218875922;    int gQtAPlMVmt49049840 = -409795138;    int gQtAPlMVmt40838071 = -709761476;    int gQtAPlMVmt67105588 = -77819159;    int gQtAPlMVmt46413148 = -280935351;    int gQtAPlMVmt6253062 = -118268300;    int gQtAPlMVmt73890536 = -424837602;    int gQtAPlMVmt2795929 = -812411893;    int gQtAPlMVmt3167588 = -657458819;    int gQtAPlMVmt33118927 = -448613974;    int gQtAPlMVmt84406618 = -587008767;    int gQtAPlMVmt44278551 = -907257419;    int gQtAPlMVmt16255159 = -176064788;    int gQtAPlMVmt4915213 = -267394533;    int gQtAPlMVmt70468546 = -58427825;    int gQtAPlMVmt69887399 = -284129830;    int gQtAPlMVmt57661059 = -999621415;    int gQtAPlMVmt82221590 = -645288220;    int gQtAPlMVmt7279965 = -675397556;    int gQtAPlMVmt45540208 = -654383112;    int gQtAPlMVmt77338605 = 25724030;    int gQtAPlMVmt45377816 = -538187832;    int gQtAPlMVmt39776494 = -123387609;    int gQtAPlMVmt25480847 = -67704376;    int gQtAPlMVmt19312562 = -702558303;    int gQtAPlMVmt31547557 = -787484900;    int gQtAPlMVmt32922804 = -65378315;    int gQtAPlMVmt50904209 = 4795416;    int gQtAPlMVmt86421891 = -769942583;    int gQtAPlMVmt616261 = -788207688;    int gQtAPlMVmt91668609 = -602019820;    int gQtAPlMVmt42822226 = -248946564;    int gQtAPlMVmt77169798 = -963059474;    int gQtAPlMVmt67630708 = 67127500;    int gQtAPlMVmt6628881 = -888006252;    int gQtAPlMVmt26350869 = -168255544;    int gQtAPlMVmt32962535 = -99475864;    int gQtAPlMVmt10244239 = -569709827;    int gQtAPlMVmt52871071 = -793662014;    int gQtAPlMVmt29847956 = 21730445;    int gQtAPlMVmt24636344 = -364825794;    int gQtAPlMVmt28766314 = -655883827;    int gQtAPlMVmt89825778 = -571722802;     gQtAPlMVmt41651267 = gQtAPlMVmt84937746;     gQtAPlMVmt84937746 = gQtAPlMVmt76845692;     gQtAPlMVmt76845692 = gQtAPlMVmt60879552;     gQtAPlMVmt60879552 = gQtAPlMVmt35752360;     gQtAPlMVmt35752360 = gQtAPlMVmt68816734;     gQtAPlMVmt68816734 = gQtAPlMVmt96495300;     gQtAPlMVmt96495300 = gQtAPlMVmt68762732;     gQtAPlMVmt68762732 = gQtAPlMVmt23215591;     gQtAPlMVmt23215591 = gQtAPlMVmt61399598;     gQtAPlMVmt61399598 = gQtAPlMVmt89019154;     gQtAPlMVmt89019154 = gQtAPlMVmt88647136;     gQtAPlMVmt88647136 = gQtAPlMVmt28994283;     gQtAPlMVmt28994283 = gQtAPlMVmt19032529;     gQtAPlMVmt19032529 = gQtAPlMVmt59922766;     gQtAPlMVmt59922766 = gQtAPlMVmt50018604;     gQtAPlMVmt50018604 = gQtAPlMVmt45869256;     gQtAPlMVmt45869256 = gQtAPlMVmt43688005;     gQtAPlMVmt43688005 = gQtAPlMVmt35010887;     gQtAPlMVmt35010887 = gQtAPlMVmt81505809;     gQtAPlMVmt81505809 = gQtAPlMVmt43380982;     gQtAPlMVmt43380982 = gQtAPlMVmt44067088;     gQtAPlMVmt44067088 = gQtAPlMVmt8900848;     gQtAPlMVmt8900848 = gQtAPlMVmt38371181;     gQtAPlMVmt38371181 = gQtAPlMVmt11829712;     gQtAPlMVmt11829712 = gQtAPlMVmt94914289;     gQtAPlMVmt94914289 = gQtAPlMVmt1711146;     gQtAPlMVmt1711146 = gQtAPlMVmt50082153;     gQtAPlMVmt50082153 = gQtAPlMVmt62509671;     gQtAPlMVmt62509671 = gQtAPlMVmt49325054;     gQtAPlMVmt49325054 = gQtAPlMVmt58603669;     gQtAPlMVmt58603669 = gQtAPlMVmt85851567;     gQtAPlMVmt85851567 = gQtAPlMVmt55528209;     gQtAPlMVmt55528209 = gQtAPlMVmt44587664;     gQtAPlMVmt44587664 = gQtAPlMVmt74753977;     gQtAPlMVmt74753977 = gQtAPlMVmt43667608;     gQtAPlMVmt43667608 = gQtAPlMVmt45103391;     gQtAPlMVmt45103391 = gQtAPlMVmt75400709;     gQtAPlMVmt75400709 = gQtAPlMVmt73800605;     gQtAPlMVmt73800605 = gQtAPlMVmt77349827;     gQtAPlMVmt77349827 = gQtAPlMVmt99284219;     gQtAPlMVmt99284219 = gQtAPlMVmt36101018;     gQtAPlMVmt36101018 = gQtAPlMVmt98526880;     gQtAPlMVmt98526880 = gQtAPlMVmt31562242;     gQtAPlMVmt31562242 = gQtAPlMVmt92993365;     gQtAPlMVmt92993365 = gQtAPlMVmt72053218;     gQtAPlMVmt72053218 = gQtAPlMVmt69433442;     gQtAPlMVmt69433442 = gQtAPlMVmt82398583;     gQtAPlMVmt82398583 = gQtAPlMVmt18534596;     gQtAPlMVmt18534596 = gQtAPlMVmt29586867;     gQtAPlMVmt29586867 = gQtAPlMVmt98420844;     gQtAPlMVmt98420844 = gQtAPlMVmt72181778;     gQtAPlMVmt72181778 = gQtAPlMVmt85235306;     gQtAPlMVmt85235306 = gQtAPlMVmt63859599;     gQtAPlMVmt63859599 = gQtAPlMVmt1765439;     gQtAPlMVmt1765439 = gQtAPlMVmt97584178;     gQtAPlMVmt97584178 = gQtAPlMVmt76036899;     gQtAPlMVmt76036899 = gQtAPlMVmt38474511;     gQtAPlMVmt38474511 = gQtAPlMVmt49049840;     gQtAPlMVmt49049840 = gQtAPlMVmt40838071;     gQtAPlMVmt40838071 = gQtAPlMVmt67105588;     gQtAPlMVmt67105588 = gQtAPlMVmt46413148;     gQtAPlMVmt46413148 = gQtAPlMVmt6253062;     gQtAPlMVmt6253062 = gQtAPlMVmt73890536;     gQtAPlMVmt73890536 = gQtAPlMVmt2795929;     gQtAPlMVmt2795929 = gQtAPlMVmt3167588;     gQtAPlMVmt3167588 = gQtAPlMVmt33118927;     gQtAPlMVmt33118927 = gQtAPlMVmt84406618;     gQtAPlMVmt84406618 = gQtAPlMVmt44278551;     gQtAPlMVmt44278551 = gQtAPlMVmt16255159;     gQtAPlMVmt16255159 = gQtAPlMVmt4915213;     gQtAPlMVmt4915213 = gQtAPlMVmt70468546;     gQtAPlMVmt70468546 = gQtAPlMVmt69887399;     gQtAPlMVmt69887399 = gQtAPlMVmt57661059;     gQtAPlMVmt57661059 = gQtAPlMVmt82221590;     gQtAPlMVmt82221590 = gQtAPlMVmt7279965;     gQtAPlMVmt7279965 = gQtAPlMVmt45540208;     gQtAPlMVmt45540208 = gQtAPlMVmt77338605;     gQtAPlMVmt77338605 = gQtAPlMVmt45377816;     gQtAPlMVmt45377816 = gQtAPlMVmt39776494;     gQtAPlMVmt39776494 = gQtAPlMVmt25480847;     gQtAPlMVmt25480847 = gQtAPlMVmt19312562;     gQtAPlMVmt19312562 = gQtAPlMVmt31547557;     gQtAPlMVmt31547557 = gQtAPlMVmt32922804;     gQtAPlMVmt32922804 = gQtAPlMVmt50904209;     gQtAPlMVmt50904209 = gQtAPlMVmt86421891;     gQtAPlMVmt86421891 = gQtAPlMVmt616261;     gQtAPlMVmt616261 = gQtAPlMVmt91668609;     gQtAPlMVmt91668609 = gQtAPlMVmt42822226;     gQtAPlMVmt42822226 = gQtAPlMVmt77169798;     gQtAPlMVmt77169798 = gQtAPlMVmt67630708;     gQtAPlMVmt67630708 = gQtAPlMVmt6628881;     gQtAPlMVmt6628881 = gQtAPlMVmt26350869;     gQtAPlMVmt26350869 = gQtAPlMVmt32962535;     gQtAPlMVmt32962535 = gQtAPlMVmt10244239;     gQtAPlMVmt10244239 = gQtAPlMVmt52871071;     gQtAPlMVmt52871071 = gQtAPlMVmt29847956;     gQtAPlMVmt29847956 = gQtAPlMVmt24636344;     gQtAPlMVmt24636344 = gQtAPlMVmt28766314;     gQtAPlMVmt28766314 = gQtAPlMVmt89825778;     gQtAPlMVmt89825778 = gQtAPlMVmt41651267;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void XSHFxMsULQ12438020() {     int vFMKaYSvfY77110235 = 62000298;    int vFMKaYSvfY98209825 = 54743457;    int vFMKaYSvfY14232169 = -246346721;    int vFMKaYSvfY33102907 = -796077261;    int vFMKaYSvfY92037629 = -834210659;    int vFMKaYSvfY5039606 = -954872609;    int vFMKaYSvfY7152708 = -819487570;    int vFMKaYSvfY30894294 = -340917418;    int vFMKaYSvfY24733196 = -590313304;    int vFMKaYSvfY76302310 = -725346791;    int vFMKaYSvfY27200890 = -229524051;    int vFMKaYSvfY89215284 = -878439536;    int vFMKaYSvfY67228928 = -527948862;    int vFMKaYSvfY72173391 = -874356596;    int vFMKaYSvfY18117283 = -234495550;    int vFMKaYSvfY33559905 = -110088314;    int vFMKaYSvfY1705192 = -263453058;    int vFMKaYSvfY43448197 = -266795238;    int vFMKaYSvfY35561217 = 36286178;    int vFMKaYSvfY75343027 = -146446650;    int vFMKaYSvfY56467845 = -629210099;    int vFMKaYSvfY47488613 = -630682802;    int vFMKaYSvfY79426227 = -180203874;    int vFMKaYSvfY32164127 = -772628329;    int vFMKaYSvfY19847663 = -489116250;    int vFMKaYSvfY5612461 = -707427145;    int vFMKaYSvfY62131719 = -320989696;    int vFMKaYSvfY90810578 = -763598660;    int vFMKaYSvfY9177886 = 47490219;    int vFMKaYSvfY54858465 = -711651466;    int vFMKaYSvfY77186901 = -700228388;    int vFMKaYSvfY23674586 = -543028917;    int vFMKaYSvfY67746220 = -613300768;    int vFMKaYSvfY74336091 = -453621404;    int vFMKaYSvfY40562431 = -941836019;    int vFMKaYSvfY95228451 = -769571053;    int vFMKaYSvfY94515207 = 28421785;    int vFMKaYSvfY26616113 = -660706263;    int vFMKaYSvfY4191168 = -560113616;    int vFMKaYSvfY41621360 = -212791532;    int vFMKaYSvfY32735827 = -943796279;    int vFMKaYSvfY25466145 = -891083146;    int vFMKaYSvfY87910259 = -442844182;    int vFMKaYSvfY71693580 = 27371870;    int vFMKaYSvfY93009824 = -550127054;    int vFMKaYSvfY18014547 = -280667075;    int vFMKaYSvfY88778605 = -235132323;    int vFMKaYSvfY124896 = -978673847;    int vFMKaYSvfY41427262 = -470078466;    int vFMKaYSvfY54116456 = -804063480;    int vFMKaYSvfY79191568 = -456216269;    int vFMKaYSvfY55667251 = -591957665;    int vFMKaYSvfY53856455 = -737895369;    int vFMKaYSvfY79851446 = 44806530;    int vFMKaYSvfY55970175 = -386471173;    int vFMKaYSvfY29621622 = -307316901;    int vFMKaYSvfY18783598 = -765052670;    int vFMKaYSvfY82068042 = -473718393;    int vFMKaYSvfY13255244 = -206961011;    int vFMKaYSvfY86425168 = -26783515;    int vFMKaYSvfY42907887 = -533882914;    int vFMKaYSvfY16342129 = 44111089;    int vFMKaYSvfY21716408 = -288407638;    int vFMKaYSvfY69874731 = -878661839;    int vFMKaYSvfY99115409 = 74881596;    int vFMKaYSvfY3526304 = -686495134;    int vFMKaYSvfY21469065 = -165138768;    int vFMKaYSvfY92892837 = 25672542;    int vFMKaYSvfY31610961 = -932520578;    int vFMKaYSvfY22888831 = -464924497;    int vFMKaYSvfY39044697 = -38510100;    int vFMKaYSvfY75089078 = -602746796;    int vFMKaYSvfY39257030 = -706681622;    int vFMKaYSvfY93939857 = -750922290;    int vFMKaYSvfY42607201 = -202650372;    int vFMKaYSvfY31001701 = -738126954;    int vFMKaYSvfY59578354 = -87838620;    int vFMKaYSvfY7732647 = -107575745;    int vFMKaYSvfY39154302 = -122501275;    int vFMKaYSvfY1833117 = -108449175;    int vFMKaYSvfY16833855 = -372294822;    int vFMKaYSvfY62006824 = -342315850;    int vFMKaYSvfY49383316 = -193520194;    int vFMKaYSvfY55061430 = -148446301;    int vFMKaYSvfY75666896 = -155435197;    int vFMKaYSvfY21519651 = -8270723;    int vFMKaYSvfY69818130 = -805133549;    int vFMKaYSvfY87894774 = -558107298;    int vFMKaYSvfY18365917 = 32849768;    int vFMKaYSvfY10940809 = -534519118;    int vFMKaYSvfY76444853 = 95481616;    int vFMKaYSvfY12447165 = -497859822;    int vFMKaYSvfY13360869 = -353745252;    int vFMKaYSvfY17765999 = -433330102;    int vFMKaYSvfY98713473 = -678908619;    int vFMKaYSvfY16393698 = -887907368;    int vFMKaYSvfY3749737 = -502675508;    int vFMKaYSvfY18035529 = -564182344;    int vFMKaYSvfY72578171 = 52490274;    int vFMKaYSvfY89483520 = 62000298;     vFMKaYSvfY77110235 = vFMKaYSvfY98209825;     vFMKaYSvfY98209825 = vFMKaYSvfY14232169;     vFMKaYSvfY14232169 = vFMKaYSvfY33102907;     vFMKaYSvfY33102907 = vFMKaYSvfY92037629;     vFMKaYSvfY92037629 = vFMKaYSvfY5039606;     vFMKaYSvfY5039606 = vFMKaYSvfY7152708;     vFMKaYSvfY7152708 = vFMKaYSvfY30894294;     vFMKaYSvfY30894294 = vFMKaYSvfY24733196;     vFMKaYSvfY24733196 = vFMKaYSvfY76302310;     vFMKaYSvfY76302310 = vFMKaYSvfY27200890;     vFMKaYSvfY27200890 = vFMKaYSvfY89215284;     vFMKaYSvfY89215284 = vFMKaYSvfY67228928;     vFMKaYSvfY67228928 = vFMKaYSvfY72173391;     vFMKaYSvfY72173391 = vFMKaYSvfY18117283;     vFMKaYSvfY18117283 = vFMKaYSvfY33559905;     vFMKaYSvfY33559905 = vFMKaYSvfY1705192;     vFMKaYSvfY1705192 = vFMKaYSvfY43448197;     vFMKaYSvfY43448197 = vFMKaYSvfY35561217;     vFMKaYSvfY35561217 = vFMKaYSvfY75343027;     vFMKaYSvfY75343027 = vFMKaYSvfY56467845;     vFMKaYSvfY56467845 = vFMKaYSvfY47488613;     vFMKaYSvfY47488613 = vFMKaYSvfY79426227;     vFMKaYSvfY79426227 = vFMKaYSvfY32164127;     vFMKaYSvfY32164127 = vFMKaYSvfY19847663;     vFMKaYSvfY19847663 = vFMKaYSvfY5612461;     vFMKaYSvfY5612461 = vFMKaYSvfY62131719;     vFMKaYSvfY62131719 = vFMKaYSvfY90810578;     vFMKaYSvfY90810578 = vFMKaYSvfY9177886;     vFMKaYSvfY9177886 = vFMKaYSvfY54858465;     vFMKaYSvfY54858465 = vFMKaYSvfY77186901;     vFMKaYSvfY77186901 = vFMKaYSvfY23674586;     vFMKaYSvfY23674586 = vFMKaYSvfY67746220;     vFMKaYSvfY67746220 = vFMKaYSvfY74336091;     vFMKaYSvfY74336091 = vFMKaYSvfY40562431;     vFMKaYSvfY40562431 = vFMKaYSvfY95228451;     vFMKaYSvfY95228451 = vFMKaYSvfY94515207;     vFMKaYSvfY94515207 = vFMKaYSvfY26616113;     vFMKaYSvfY26616113 = vFMKaYSvfY4191168;     vFMKaYSvfY4191168 = vFMKaYSvfY41621360;     vFMKaYSvfY41621360 = vFMKaYSvfY32735827;     vFMKaYSvfY32735827 = vFMKaYSvfY25466145;     vFMKaYSvfY25466145 = vFMKaYSvfY87910259;     vFMKaYSvfY87910259 = vFMKaYSvfY71693580;     vFMKaYSvfY71693580 = vFMKaYSvfY93009824;     vFMKaYSvfY93009824 = vFMKaYSvfY18014547;     vFMKaYSvfY18014547 = vFMKaYSvfY88778605;     vFMKaYSvfY88778605 = vFMKaYSvfY124896;     vFMKaYSvfY124896 = vFMKaYSvfY41427262;     vFMKaYSvfY41427262 = vFMKaYSvfY54116456;     vFMKaYSvfY54116456 = vFMKaYSvfY79191568;     vFMKaYSvfY79191568 = vFMKaYSvfY55667251;     vFMKaYSvfY55667251 = vFMKaYSvfY53856455;     vFMKaYSvfY53856455 = vFMKaYSvfY79851446;     vFMKaYSvfY79851446 = vFMKaYSvfY55970175;     vFMKaYSvfY55970175 = vFMKaYSvfY29621622;     vFMKaYSvfY29621622 = vFMKaYSvfY18783598;     vFMKaYSvfY18783598 = vFMKaYSvfY82068042;     vFMKaYSvfY82068042 = vFMKaYSvfY13255244;     vFMKaYSvfY13255244 = vFMKaYSvfY86425168;     vFMKaYSvfY86425168 = vFMKaYSvfY42907887;     vFMKaYSvfY42907887 = vFMKaYSvfY16342129;     vFMKaYSvfY16342129 = vFMKaYSvfY21716408;     vFMKaYSvfY21716408 = vFMKaYSvfY69874731;     vFMKaYSvfY69874731 = vFMKaYSvfY99115409;     vFMKaYSvfY99115409 = vFMKaYSvfY3526304;     vFMKaYSvfY3526304 = vFMKaYSvfY21469065;     vFMKaYSvfY21469065 = vFMKaYSvfY92892837;     vFMKaYSvfY92892837 = vFMKaYSvfY31610961;     vFMKaYSvfY31610961 = vFMKaYSvfY22888831;     vFMKaYSvfY22888831 = vFMKaYSvfY39044697;     vFMKaYSvfY39044697 = vFMKaYSvfY75089078;     vFMKaYSvfY75089078 = vFMKaYSvfY39257030;     vFMKaYSvfY39257030 = vFMKaYSvfY93939857;     vFMKaYSvfY93939857 = vFMKaYSvfY42607201;     vFMKaYSvfY42607201 = vFMKaYSvfY31001701;     vFMKaYSvfY31001701 = vFMKaYSvfY59578354;     vFMKaYSvfY59578354 = vFMKaYSvfY7732647;     vFMKaYSvfY7732647 = vFMKaYSvfY39154302;     vFMKaYSvfY39154302 = vFMKaYSvfY1833117;     vFMKaYSvfY1833117 = vFMKaYSvfY16833855;     vFMKaYSvfY16833855 = vFMKaYSvfY62006824;     vFMKaYSvfY62006824 = vFMKaYSvfY49383316;     vFMKaYSvfY49383316 = vFMKaYSvfY55061430;     vFMKaYSvfY55061430 = vFMKaYSvfY75666896;     vFMKaYSvfY75666896 = vFMKaYSvfY21519651;     vFMKaYSvfY21519651 = vFMKaYSvfY69818130;     vFMKaYSvfY69818130 = vFMKaYSvfY87894774;     vFMKaYSvfY87894774 = vFMKaYSvfY18365917;     vFMKaYSvfY18365917 = vFMKaYSvfY10940809;     vFMKaYSvfY10940809 = vFMKaYSvfY76444853;     vFMKaYSvfY76444853 = vFMKaYSvfY12447165;     vFMKaYSvfY12447165 = vFMKaYSvfY13360869;     vFMKaYSvfY13360869 = vFMKaYSvfY17765999;     vFMKaYSvfY17765999 = vFMKaYSvfY98713473;     vFMKaYSvfY98713473 = vFMKaYSvfY16393698;     vFMKaYSvfY16393698 = vFMKaYSvfY3749737;     vFMKaYSvfY3749737 = vFMKaYSvfY18035529;     vFMKaYSvfY18035529 = vFMKaYSvfY72578171;     vFMKaYSvfY72578171 = vFMKaYSvfY89483520;     vFMKaYSvfY89483520 = vFMKaYSvfY77110235;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void cuTsxDxZsp27487088() {     int AiaxesZshn83227341 = -49901591;    int AiaxesZshn41583105 = -754856324;    int AiaxesZshn30274353 = -397179642;    int AiaxesZshn60177688 = -986825891;    int AiaxesZshn60933118 = -254860530;    int AiaxesZshn96456808 = -119368844;    int AiaxesZshn67641673 = -958452547;    int AiaxesZshn80654184 = -627791331;    int AiaxesZshn89375691 = -358345970;    int AiaxesZshn17531970 = 45677731;    int AiaxesZshn87311179 = -106961638;    int AiaxesZshn21038327 = -222845738;    int AiaxesZshn53438046 = -967839951;    int AiaxesZshn55317068 = -306595163;    int AiaxesZshn13859710 = -924957716;    int AiaxesZshn75065298 = -83087857;    int AiaxesZshn95541194 = -879998171;    int AiaxesZshn40501350 = 67682120;    int AiaxesZshn97391058 = -369482918;    int AiaxesZshn55893192 = -503349569;    int AiaxesZshn45021039 = -484697555;    int AiaxesZshn34009637 = -538612518;    int AiaxesZshn15017019 = 73278640;    int AiaxesZshn16156501 = -994933316;    int AiaxesZshn63547313 = -862312283;    int AiaxesZshn30334136 = -586082468;    int AiaxesZshn60591497 = -221651899;    int AiaxesZshn3917704 = -829527613;    int AiaxesZshn75310141 = -174892485;    int AiaxesZshn23474102 = -529122333;    int AiaxesZshn69429450 = -613549326;    int AiaxesZshn21285208 = -252475733;    int AiaxesZshn77457168 = -505914138;    int AiaxesZshn69166655 = -205163169;    int AiaxesZshn2037083 = -480569124;    int AiaxesZshn63954365 = -983597161;    int AiaxesZshn75777142 = 74785916;    int AiaxesZshn60706325 = -432212272;    int AiaxesZshn77801421 = -554037113;    int AiaxesZshn29123298 = -686230755;    int AiaxesZshn38405051 = 90929827;    int AiaxesZshn57616601 = -61225424;    int AiaxesZshn65977237 = -523648766;    int AiaxesZshn59101321 = 8028932;    int AiaxesZshn4962290 = -212025208;    int AiaxesZshn29953742 = -265883192;    int AiaxesZshn6557181 = -353907861;    int AiaxesZshn8081837 = -988569379;    int AiaxesZshn51102991 = -555815454;    int AiaxesZshn67028108 = -891074288;    int AiaxesZshn14892247 = -298509940;    int AiaxesZshn66476970 = -392683985;    int AiaxesZshn2104913 = -529684957;    int AiaxesZshn75820326 = -275663615;    int AiaxesZshn82466049 = 12997045;    int AiaxesZshn49217705 = -511289073;    int AiaxesZshn26566086 = -728134964;    int AiaxesZshn14117852 = -402246326;    int AiaxesZshn96630374 = -24513608;    int AiaxesZshn30598982 = -668778063;    int AiaxesZshn35865311 = -897716946;    int AiaxesZshn63723970 = -28924934;    int AiaxesZshn5344044 = -352898847;    int AiaxesZshn65901589 = -829223637;    int AiaxesZshn48102519 = -340772943;    int AiaxesZshn66025972 = -854485905;    int AiaxesZshn43581159 = -716931600;    int AiaxesZshn84271391 = -662676782;    int AiaxesZshn53279985 = -826026040;    int AiaxesZshn49905344 = -941360556;    int AiaxesZshn99288156 = -57873774;    int AiaxesZshn34834869 = -347785899;    int AiaxesZshn62699929 = -378280768;    int AiaxesZshn68267761 = -683252164;    int AiaxesZshn17488142 = -494279397;    int AiaxesZshn87404437 = -323472131;    int AiaxesZshn68032399 = 85036247;    int AiaxesZshn55915698 = -934750293;    int AiaxesZshn11194211 = -682908108;    int AiaxesZshn33593572 = -496429092;    int AiaxesZshn23776956 = -132174608;    int AiaxesZshn52509661 = -233082520;    int AiaxesZshn52814713 = -173712159;    int AiaxesZshn8282033 = -283818198;    int AiaxesZshn8581855 = -130612393;    int AiaxesZshn2952481 = -120865341;    int AiaxesZshn19180295 = -722790777;    int AiaxesZshn1636843 = -130250523;    int AiaxesZshn86700606 = -118160215;    int AiaxesZshn52819378 = -969280051;    int AiaxesZshn37388279 = -155462197;    int AiaxesZshn61659290 = -522967758;    int AiaxesZshn64075951 = -307698664;    int AiaxesZshn47202439 = -885259051;    int AiaxesZshn93257986 = -788513809;    int AiaxesZshn74681081 = -880145239;    int AiaxesZshn52272558 = -708326578;    int AiaxesZshn75648 = -694425130;    int AiaxesZshn10998802 = -651198125;    int AiaxesZshn38936317 = -49901591;     AiaxesZshn83227341 = AiaxesZshn41583105;     AiaxesZshn41583105 = AiaxesZshn30274353;     AiaxesZshn30274353 = AiaxesZshn60177688;     AiaxesZshn60177688 = AiaxesZshn60933118;     AiaxesZshn60933118 = AiaxesZshn96456808;     AiaxesZshn96456808 = AiaxesZshn67641673;     AiaxesZshn67641673 = AiaxesZshn80654184;     AiaxesZshn80654184 = AiaxesZshn89375691;     AiaxesZshn89375691 = AiaxesZshn17531970;     AiaxesZshn17531970 = AiaxesZshn87311179;     AiaxesZshn87311179 = AiaxesZshn21038327;     AiaxesZshn21038327 = AiaxesZshn53438046;     AiaxesZshn53438046 = AiaxesZshn55317068;     AiaxesZshn55317068 = AiaxesZshn13859710;     AiaxesZshn13859710 = AiaxesZshn75065298;     AiaxesZshn75065298 = AiaxesZshn95541194;     AiaxesZshn95541194 = AiaxesZshn40501350;     AiaxesZshn40501350 = AiaxesZshn97391058;     AiaxesZshn97391058 = AiaxesZshn55893192;     AiaxesZshn55893192 = AiaxesZshn45021039;     AiaxesZshn45021039 = AiaxesZshn34009637;     AiaxesZshn34009637 = AiaxesZshn15017019;     AiaxesZshn15017019 = AiaxesZshn16156501;     AiaxesZshn16156501 = AiaxesZshn63547313;     AiaxesZshn63547313 = AiaxesZshn30334136;     AiaxesZshn30334136 = AiaxesZshn60591497;     AiaxesZshn60591497 = AiaxesZshn3917704;     AiaxesZshn3917704 = AiaxesZshn75310141;     AiaxesZshn75310141 = AiaxesZshn23474102;     AiaxesZshn23474102 = AiaxesZshn69429450;     AiaxesZshn69429450 = AiaxesZshn21285208;     AiaxesZshn21285208 = AiaxesZshn77457168;     AiaxesZshn77457168 = AiaxesZshn69166655;     AiaxesZshn69166655 = AiaxesZshn2037083;     AiaxesZshn2037083 = AiaxesZshn63954365;     AiaxesZshn63954365 = AiaxesZshn75777142;     AiaxesZshn75777142 = AiaxesZshn60706325;     AiaxesZshn60706325 = AiaxesZshn77801421;     AiaxesZshn77801421 = AiaxesZshn29123298;     AiaxesZshn29123298 = AiaxesZshn38405051;     AiaxesZshn38405051 = AiaxesZshn57616601;     AiaxesZshn57616601 = AiaxesZshn65977237;     AiaxesZshn65977237 = AiaxesZshn59101321;     AiaxesZshn59101321 = AiaxesZshn4962290;     AiaxesZshn4962290 = AiaxesZshn29953742;     AiaxesZshn29953742 = AiaxesZshn6557181;     AiaxesZshn6557181 = AiaxesZshn8081837;     AiaxesZshn8081837 = AiaxesZshn51102991;     AiaxesZshn51102991 = AiaxesZshn67028108;     AiaxesZshn67028108 = AiaxesZshn14892247;     AiaxesZshn14892247 = AiaxesZshn66476970;     AiaxesZshn66476970 = AiaxesZshn2104913;     AiaxesZshn2104913 = AiaxesZshn75820326;     AiaxesZshn75820326 = AiaxesZshn82466049;     AiaxesZshn82466049 = AiaxesZshn49217705;     AiaxesZshn49217705 = AiaxesZshn26566086;     AiaxesZshn26566086 = AiaxesZshn14117852;     AiaxesZshn14117852 = AiaxesZshn96630374;     AiaxesZshn96630374 = AiaxesZshn30598982;     AiaxesZshn30598982 = AiaxesZshn35865311;     AiaxesZshn35865311 = AiaxesZshn63723970;     AiaxesZshn63723970 = AiaxesZshn5344044;     AiaxesZshn5344044 = AiaxesZshn65901589;     AiaxesZshn65901589 = AiaxesZshn48102519;     AiaxesZshn48102519 = AiaxesZshn66025972;     AiaxesZshn66025972 = AiaxesZshn43581159;     AiaxesZshn43581159 = AiaxesZshn84271391;     AiaxesZshn84271391 = AiaxesZshn53279985;     AiaxesZshn53279985 = AiaxesZshn49905344;     AiaxesZshn49905344 = AiaxesZshn99288156;     AiaxesZshn99288156 = AiaxesZshn34834869;     AiaxesZshn34834869 = AiaxesZshn62699929;     AiaxesZshn62699929 = AiaxesZshn68267761;     AiaxesZshn68267761 = AiaxesZshn17488142;     AiaxesZshn17488142 = AiaxesZshn87404437;     AiaxesZshn87404437 = AiaxesZshn68032399;     AiaxesZshn68032399 = AiaxesZshn55915698;     AiaxesZshn55915698 = AiaxesZshn11194211;     AiaxesZshn11194211 = AiaxesZshn33593572;     AiaxesZshn33593572 = AiaxesZshn23776956;     AiaxesZshn23776956 = AiaxesZshn52509661;     AiaxesZshn52509661 = AiaxesZshn52814713;     AiaxesZshn52814713 = AiaxesZshn8282033;     AiaxesZshn8282033 = AiaxesZshn8581855;     AiaxesZshn8581855 = AiaxesZshn2952481;     AiaxesZshn2952481 = AiaxesZshn19180295;     AiaxesZshn19180295 = AiaxesZshn1636843;     AiaxesZshn1636843 = AiaxesZshn86700606;     AiaxesZshn86700606 = AiaxesZshn52819378;     AiaxesZshn52819378 = AiaxesZshn37388279;     AiaxesZshn37388279 = AiaxesZshn61659290;     AiaxesZshn61659290 = AiaxesZshn64075951;     AiaxesZshn64075951 = AiaxesZshn47202439;     AiaxesZshn47202439 = AiaxesZshn93257986;     AiaxesZshn93257986 = AiaxesZshn74681081;     AiaxesZshn74681081 = AiaxesZshn52272558;     AiaxesZshn52272558 = AiaxesZshn75648;     AiaxesZshn75648 = AiaxesZshn10998802;     AiaxesZshn10998802 = AiaxesZshn38936317;     AiaxesZshn38936317 = AiaxesZshn83227341;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void yNaQMSovEe42221615() {     int hOSNiJYdKf99208432 = -461833491;    int hOSNiJYdKf9689794 = -153422622;    int hOSNiJYdKf2793656 = -896911023;    int hOSNiJYdKf91373684 = -172213944;    int hOSNiJYdKf30032024 = -436719942;    int hOSNiJYdKf59295754 = -40381189;    int hOSNiJYdKf86288204 = -466676752;    int hOSNiJYdKf81356587 = -834483482;    int hOSNiJYdKf54316745 = -238955103;    int hOSNiJYdKf49465229 = -718633527;    int hOSNiJYdKf1750559 = -515187175;    int hOSNiJYdKf39549378 = -790881348;    int hOSNiJYdKf49080404 = -577982891;    int hOSNiJYdKf30808222 = -258402424;    int hOSNiJYdKf79285928 = 25631782;    int hOSNiJYdKf54237771 = -304901007;    int hOSNiJYdKf29194157 = -964619897;    int hOSNiJYdKf699590 = -300598664;    int hOSNiJYdKf78948914 = -135814979;    int hOSNiJYdKf77229753 = -30410856;    int hOSNiJYdKf65155965 = -201459479;    int hOSNiJYdKf89893477 = -328433424;    int hOSNiJYdKf72686987 = -505215689;    int hOSNiJYdKf57702939 = -590594712;    int hOSNiJYdKf53025809 = -682038152;    int hOSNiJYdKf11125962 = -451172949;    int hOSNiJYdKf92416313 = -813984678;    int hOSNiJYdKf46959741 = -649016991;    int hOSNiJYdKf99251068 = -54181614;    int hOSNiJYdKf8435464 = 14662130;    int hOSNiJYdKf8327615 = -780843572;    int hOSNiJYdKf96614701 = -48830772;    int hOSNiJYdKf6377711 = -951218673;    int hOSNiJYdKf40582831 = -330276375;    int hOSNiJYdKf51452257 = -757937456;    int hOSNiJYdKf43691556 = -464242477;    int hOSNiJYdKf24717560 = 37485883;    int hOSNiJYdKf75315774 = -330553056;    int hOSNiJYdKf93849052 = -259520688;    int hOSNiJYdKf29922433 = -119109733;    int hOSNiJYdKf12158103 = -950398639;    int hOSNiJYdKf13669087 = -807562613;    int hOSNiJYdKf24652415 = -967723136;    int hOSNiJYdKf54694968 = -582677482;    int hOSNiJYdKf50977415 = 78697491;    int hOSNiJYdKf82095895 = -35542409;    int hOSNiJYdKf85459152 = -546121832;    int hOSNiJYdKf88727689 = -234950693;    int hOSNiJYdKf10847650 = -101258888;    int hOSNiJYdKf80727489 = 98373912;    int hOSNiJYdKf41116456 = -234254078;    int hOSNiJYdKf55334468 = -252202095;    int hOSNiJYdKf64073437 = -997702562;    int hOSNiJYdKf34257551 = -720458256;    int hOSNiJYdKf77065649 = -194283383;    int hOSNiJYdKf9314956 = -33400067;    int hOSNiJYdKf37002807 = -648206933;    int hOSNiJYdKf45090716 = -206316311;    int hOSNiJYdKf38347876 = -490175793;    int hOSNiJYdKf18906063 = -985546993;    int hOSNiJYdKf66879441 = -226396512;    int hOSNiJYdKf39328464 = -817659761;    int hOSNiJYdKf82105519 = -680301868;    int hOSNiJYdKf45881282 = -153617233;    int hOSNiJYdKf41137614 = -937789956;    int hOSNiJYdKf5135858 = -366356404;    int hOSNiJYdKf33171667 = -839662676;    int hOSNiJYdKf8497573 = -147706516;    int hOSNiJYdKf79355964 = -500464969;    int hOSNiJYdKf35594372 = -510125741;    int hOSNiJYdKf29520212 = -242386890;    int hOSNiJYdKf53878382 = -534066841;    int hOSNiJYdKf6850537 = 58922024;    int hOSNiJYdKf49026481 = 83294753;    int hOSNiJYdKf65071650 = -80012217;    int hOSNiJYdKf51486879 = -393896866;    int hOSNiJYdKf65241062 = -360710289;    int hOSNiJYdKf17992020 = -922538208;    int hOSNiJYdKf6725525 = -569292204;    int hOSNiJYdKf70929914 = -546495743;    int hOSNiJYdKf25666809 = -905051118;    int hOSNiJYdKf3688624 = -479033986;    int hOSNiJYdKf36112091 = -447758104;    int hOSNiJYdKf18523579 = -52555527;    int hOSNiJYdKf67319007 = -751083793;    int hOSNiJYdKf52993146 = -428641478;    int hOSNiJYdKf32541264 = -51128210;    int hOSNiJYdKf72120160 = -130760417;    int hOSNiJYdKf63517181 = -35992993;    int hOSNiJYdKf42137302 = -624537389;    int hOSNiJYdKf6688750 = -816035545;    int hOSNiJYdKf79626843 = -756197806;    int hOSNiJYdKf36967899 = -840377264;    int hOSNiJYdKf74942990 = -273973696;    int hOSNiJYdKf63042991 = -892713222;    int hOSNiJYdKf72829639 = -32738878;    int hOSNiJYdKf31563568 = -27260745;    int hOSNiJYdKf78771132 = -714105903;    int hOSNiJYdKf13557354 = -644887527;    int hOSNiJYdKf45841558 = -461833491;     hOSNiJYdKf99208432 = hOSNiJYdKf9689794;     hOSNiJYdKf9689794 = hOSNiJYdKf2793656;     hOSNiJYdKf2793656 = hOSNiJYdKf91373684;     hOSNiJYdKf91373684 = hOSNiJYdKf30032024;     hOSNiJYdKf30032024 = hOSNiJYdKf59295754;     hOSNiJYdKf59295754 = hOSNiJYdKf86288204;     hOSNiJYdKf86288204 = hOSNiJYdKf81356587;     hOSNiJYdKf81356587 = hOSNiJYdKf54316745;     hOSNiJYdKf54316745 = hOSNiJYdKf49465229;     hOSNiJYdKf49465229 = hOSNiJYdKf1750559;     hOSNiJYdKf1750559 = hOSNiJYdKf39549378;     hOSNiJYdKf39549378 = hOSNiJYdKf49080404;     hOSNiJYdKf49080404 = hOSNiJYdKf30808222;     hOSNiJYdKf30808222 = hOSNiJYdKf79285928;     hOSNiJYdKf79285928 = hOSNiJYdKf54237771;     hOSNiJYdKf54237771 = hOSNiJYdKf29194157;     hOSNiJYdKf29194157 = hOSNiJYdKf699590;     hOSNiJYdKf699590 = hOSNiJYdKf78948914;     hOSNiJYdKf78948914 = hOSNiJYdKf77229753;     hOSNiJYdKf77229753 = hOSNiJYdKf65155965;     hOSNiJYdKf65155965 = hOSNiJYdKf89893477;     hOSNiJYdKf89893477 = hOSNiJYdKf72686987;     hOSNiJYdKf72686987 = hOSNiJYdKf57702939;     hOSNiJYdKf57702939 = hOSNiJYdKf53025809;     hOSNiJYdKf53025809 = hOSNiJYdKf11125962;     hOSNiJYdKf11125962 = hOSNiJYdKf92416313;     hOSNiJYdKf92416313 = hOSNiJYdKf46959741;     hOSNiJYdKf46959741 = hOSNiJYdKf99251068;     hOSNiJYdKf99251068 = hOSNiJYdKf8435464;     hOSNiJYdKf8435464 = hOSNiJYdKf8327615;     hOSNiJYdKf8327615 = hOSNiJYdKf96614701;     hOSNiJYdKf96614701 = hOSNiJYdKf6377711;     hOSNiJYdKf6377711 = hOSNiJYdKf40582831;     hOSNiJYdKf40582831 = hOSNiJYdKf51452257;     hOSNiJYdKf51452257 = hOSNiJYdKf43691556;     hOSNiJYdKf43691556 = hOSNiJYdKf24717560;     hOSNiJYdKf24717560 = hOSNiJYdKf75315774;     hOSNiJYdKf75315774 = hOSNiJYdKf93849052;     hOSNiJYdKf93849052 = hOSNiJYdKf29922433;     hOSNiJYdKf29922433 = hOSNiJYdKf12158103;     hOSNiJYdKf12158103 = hOSNiJYdKf13669087;     hOSNiJYdKf13669087 = hOSNiJYdKf24652415;     hOSNiJYdKf24652415 = hOSNiJYdKf54694968;     hOSNiJYdKf54694968 = hOSNiJYdKf50977415;     hOSNiJYdKf50977415 = hOSNiJYdKf82095895;     hOSNiJYdKf82095895 = hOSNiJYdKf85459152;     hOSNiJYdKf85459152 = hOSNiJYdKf88727689;     hOSNiJYdKf88727689 = hOSNiJYdKf10847650;     hOSNiJYdKf10847650 = hOSNiJYdKf80727489;     hOSNiJYdKf80727489 = hOSNiJYdKf41116456;     hOSNiJYdKf41116456 = hOSNiJYdKf55334468;     hOSNiJYdKf55334468 = hOSNiJYdKf64073437;     hOSNiJYdKf64073437 = hOSNiJYdKf34257551;     hOSNiJYdKf34257551 = hOSNiJYdKf77065649;     hOSNiJYdKf77065649 = hOSNiJYdKf9314956;     hOSNiJYdKf9314956 = hOSNiJYdKf37002807;     hOSNiJYdKf37002807 = hOSNiJYdKf45090716;     hOSNiJYdKf45090716 = hOSNiJYdKf38347876;     hOSNiJYdKf38347876 = hOSNiJYdKf18906063;     hOSNiJYdKf18906063 = hOSNiJYdKf66879441;     hOSNiJYdKf66879441 = hOSNiJYdKf39328464;     hOSNiJYdKf39328464 = hOSNiJYdKf82105519;     hOSNiJYdKf82105519 = hOSNiJYdKf45881282;     hOSNiJYdKf45881282 = hOSNiJYdKf41137614;     hOSNiJYdKf41137614 = hOSNiJYdKf5135858;     hOSNiJYdKf5135858 = hOSNiJYdKf33171667;     hOSNiJYdKf33171667 = hOSNiJYdKf8497573;     hOSNiJYdKf8497573 = hOSNiJYdKf79355964;     hOSNiJYdKf79355964 = hOSNiJYdKf35594372;     hOSNiJYdKf35594372 = hOSNiJYdKf29520212;     hOSNiJYdKf29520212 = hOSNiJYdKf53878382;     hOSNiJYdKf53878382 = hOSNiJYdKf6850537;     hOSNiJYdKf6850537 = hOSNiJYdKf49026481;     hOSNiJYdKf49026481 = hOSNiJYdKf65071650;     hOSNiJYdKf65071650 = hOSNiJYdKf51486879;     hOSNiJYdKf51486879 = hOSNiJYdKf65241062;     hOSNiJYdKf65241062 = hOSNiJYdKf17992020;     hOSNiJYdKf17992020 = hOSNiJYdKf6725525;     hOSNiJYdKf6725525 = hOSNiJYdKf70929914;     hOSNiJYdKf70929914 = hOSNiJYdKf25666809;     hOSNiJYdKf25666809 = hOSNiJYdKf3688624;     hOSNiJYdKf3688624 = hOSNiJYdKf36112091;     hOSNiJYdKf36112091 = hOSNiJYdKf18523579;     hOSNiJYdKf18523579 = hOSNiJYdKf67319007;     hOSNiJYdKf67319007 = hOSNiJYdKf52993146;     hOSNiJYdKf52993146 = hOSNiJYdKf32541264;     hOSNiJYdKf32541264 = hOSNiJYdKf72120160;     hOSNiJYdKf72120160 = hOSNiJYdKf63517181;     hOSNiJYdKf63517181 = hOSNiJYdKf42137302;     hOSNiJYdKf42137302 = hOSNiJYdKf6688750;     hOSNiJYdKf6688750 = hOSNiJYdKf79626843;     hOSNiJYdKf79626843 = hOSNiJYdKf36967899;     hOSNiJYdKf36967899 = hOSNiJYdKf74942990;     hOSNiJYdKf74942990 = hOSNiJYdKf63042991;     hOSNiJYdKf63042991 = hOSNiJYdKf72829639;     hOSNiJYdKf72829639 = hOSNiJYdKf31563568;     hOSNiJYdKf31563568 = hOSNiJYdKf78771132;     hOSNiJYdKf78771132 = hOSNiJYdKf13557354;     hOSNiJYdKf13557354 = hOSNiJYdKf45841558;     hOSNiJYdKf45841558 = hOSNiJYdKf99208432;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void cBsPrcZDeC57270683() {     int kBxjzFccAR5325540 = -573735380;    int kBxjzFccAR53063073 = -963022403;    int kBxjzFccAR18835839 = 52256056;    int kBxjzFccAR18448466 = -362962575;    int kBxjzFccAR98927512 = -957369813;    int kBxjzFccAR50712957 = -304877424;    int kBxjzFccAR46777171 = -605641729;    int kBxjzFccAR31116479 = -21357395;    int kBxjzFccAR18959241 = -6987768;    int kBxjzFccAR90694888 = 52390995;    int kBxjzFccAR61860849 = -392624761;    int kBxjzFccAR71372420 = -135287550;    int kBxjzFccAR35289522 = 82126021;    int kBxjzFccAR13951899 = -790640992;    int kBxjzFccAR75028354 = -664830384;    int kBxjzFccAR95743164 = -277900550;    int kBxjzFccAR23030160 = -481165010;    int kBxjzFccAR97752742 = 33878694;    int kBxjzFccAR40778756 = -541584076;    int kBxjzFccAR57779918 = -387313775;    int kBxjzFccAR53709159 = -56946934;    int kBxjzFccAR76414501 = -236363140;    int kBxjzFccAR8277780 = -251733176;    int kBxjzFccAR41695313 = -812899700;    int kBxjzFccAR96725459 = 44765815;    int kBxjzFccAR35847638 = -329828273;    int kBxjzFccAR90876091 = -714646881;    int kBxjzFccAR60066866 = -714945945;    int kBxjzFccAR65383324 = -276564319;    int kBxjzFccAR77051100 = -902808738;    int kBxjzFccAR570165 = -694164510;    int kBxjzFccAR94225323 = -858277587;    int kBxjzFccAR16088659 = -843832043;    int kBxjzFccAR35413395 = -81818140;    int kBxjzFccAR12926910 = -296670561;    int kBxjzFccAR12417469 = -678268585;    int kBxjzFccAR5979494 = 83850014;    int kBxjzFccAR9405987 = -102059066;    int kBxjzFccAR67459306 = -253444185;    int kBxjzFccAR17424371 = -592548956;    int kBxjzFccAR17827327 = 84327467;    int kBxjzFccAR45819543 = 22295109;    int kBxjzFccAR2719393 = 51472280;    int kBxjzFccAR42102708 = -602020420;    int kBxjzFccAR62929880 = -683200663;    int kBxjzFccAR94035090 = -20758525;    int kBxjzFccAR3237728 = -664897370;    int kBxjzFccAR96684630 = -244846225;    int kBxjzFccAR20523379 = -186995876;    int kBxjzFccAR93639142 = 11363104;    int kBxjzFccAR76817134 = -76547749;    int kBxjzFccAR66144188 = -52928415;    int kBxjzFccAR12321895 = -789492150;    int kBxjzFccAR30226431 = 59071599;    int kBxjzFccAR3561525 = -894815165;    int kBxjzFccAR28911039 = -237372240;    int kBxjzFccAR44785294 = -611289227;    int kBxjzFccAR77140525 = -134844244;    int kBxjzFccAR21723007 = -307728391;    int kBxjzFccAR63079875 = -527541541;    int kBxjzFccAR59836865 = -590230544;    int kBxjzFccAR86710304 = -890695784;    int kBxjzFccAR65733154 = -744793077;    int kBxjzFccAR41908141 = -104179031;    int kBxjzFccAR90124724 = -253444495;    int kBxjzFccAR67635525 = -534347175;    int kBxjzFccAR55283761 = -291455508;    int kBxjzFccAR99876127 = -836055840;    int kBxjzFccAR1024989 = -393970432;    int kBxjzFccAR62610885 = -986561800;    int kBxjzFccAR89763670 = -261750564;    int kBxjzFccAR13624173 = -279105944;    int kBxjzFccAR30293436 = -712677122;    int kBxjzFccAR23354385 = -949035121;    int kBxjzFccAR39952591 = -371641242;    int kBxjzFccAR7889616 = 20757956;    int kBxjzFccAR73695108 = -187835421;    int kBxjzFccAR66175071 = -649712756;    int kBxjzFccAR78765433 = -29699037;    int kBxjzFccAR2690370 = -934475660;    int kBxjzFccAR32609910 = -664930903;    int kBxjzFccAR94191461 = -369800656;    int kBxjzFccAR39543487 = -427950069;    int kBxjzFccAR71744182 = -187927423;    int kBxjzFccAR233966 = -726260989;    int kBxjzFccAR34425976 = -541236096;    int kBxjzFccAR81903428 = 31214562;    int kBxjzFccAR85862228 = -802903643;    int kBxjzFccAR31851871 = -187002976;    int kBxjzFccAR84015870 = 40701678;    int kBxjzFccAR67632175 = 33020642;    int kBxjzFccAR28838969 = -781305743;    int kBxjzFccAR87682980 = -794330676;    int kBxjzFccAR4379431 = -725902644;    int kBxjzFccAR57587505 = 97681588;    int kBxjzFccAR31117022 = -24976749;    int kBxjzFccAR80086389 = -232911815;    int kBxjzFccAR60811252 = -844348689;    int kBxjzFccAR51977984 = -248575926;    int kBxjzFccAR95294354 = -573735380;     kBxjzFccAR5325540 = kBxjzFccAR53063073;     kBxjzFccAR53063073 = kBxjzFccAR18835839;     kBxjzFccAR18835839 = kBxjzFccAR18448466;     kBxjzFccAR18448466 = kBxjzFccAR98927512;     kBxjzFccAR98927512 = kBxjzFccAR50712957;     kBxjzFccAR50712957 = kBxjzFccAR46777171;     kBxjzFccAR46777171 = kBxjzFccAR31116479;     kBxjzFccAR31116479 = kBxjzFccAR18959241;     kBxjzFccAR18959241 = kBxjzFccAR90694888;     kBxjzFccAR90694888 = kBxjzFccAR61860849;     kBxjzFccAR61860849 = kBxjzFccAR71372420;     kBxjzFccAR71372420 = kBxjzFccAR35289522;     kBxjzFccAR35289522 = kBxjzFccAR13951899;     kBxjzFccAR13951899 = kBxjzFccAR75028354;     kBxjzFccAR75028354 = kBxjzFccAR95743164;     kBxjzFccAR95743164 = kBxjzFccAR23030160;     kBxjzFccAR23030160 = kBxjzFccAR97752742;     kBxjzFccAR97752742 = kBxjzFccAR40778756;     kBxjzFccAR40778756 = kBxjzFccAR57779918;     kBxjzFccAR57779918 = kBxjzFccAR53709159;     kBxjzFccAR53709159 = kBxjzFccAR76414501;     kBxjzFccAR76414501 = kBxjzFccAR8277780;     kBxjzFccAR8277780 = kBxjzFccAR41695313;     kBxjzFccAR41695313 = kBxjzFccAR96725459;     kBxjzFccAR96725459 = kBxjzFccAR35847638;     kBxjzFccAR35847638 = kBxjzFccAR90876091;     kBxjzFccAR90876091 = kBxjzFccAR60066866;     kBxjzFccAR60066866 = kBxjzFccAR65383324;     kBxjzFccAR65383324 = kBxjzFccAR77051100;     kBxjzFccAR77051100 = kBxjzFccAR570165;     kBxjzFccAR570165 = kBxjzFccAR94225323;     kBxjzFccAR94225323 = kBxjzFccAR16088659;     kBxjzFccAR16088659 = kBxjzFccAR35413395;     kBxjzFccAR35413395 = kBxjzFccAR12926910;     kBxjzFccAR12926910 = kBxjzFccAR12417469;     kBxjzFccAR12417469 = kBxjzFccAR5979494;     kBxjzFccAR5979494 = kBxjzFccAR9405987;     kBxjzFccAR9405987 = kBxjzFccAR67459306;     kBxjzFccAR67459306 = kBxjzFccAR17424371;     kBxjzFccAR17424371 = kBxjzFccAR17827327;     kBxjzFccAR17827327 = kBxjzFccAR45819543;     kBxjzFccAR45819543 = kBxjzFccAR2719393;     kBxjzFccAR2719393 = kBxjzFccAR42102708;     kBxjzFccAR42102708 = kBxjzFccAR62929880;     kBxjzFccAR62929880 = kBxjzFccAR94035090;     kBxjzFccAR94035090 = kBxjzFccAR3237728;     kBxjzFccAR3237728 = kBxjzFccAR96684630;     kBxjzFccAR96684630 = kBxjzFccAR20523379;     kBxjzFccAR20523379 = kBxjzFccAR93639142;     kBxjzFccAR93639142 = kBxjzFccAR76817134;     kBxjzFccAR76817134 = kBxjzFccAR66144188;     kBxjzFccAR66144188 = kBxjzFccAR12321895;     kBxjzFccAR12321895 = kBxjzFccAR30226431;     kBxjzFccAR30226431 = kBxjzFccAR3561525;     kBxjzFccAR3561525 = kBxjzFccAR28911039;     kBxjzFccAR28911039 = kBxjzFccAR44785294;     kBxjzFccAR44785294 = kBxjzFccAR77140525;     kBxjzFccAR77140525 = kBxjzFccAR21723007;     kBxjzFccAR21723007 = kBxjzFccAR63079875;     kBxjzFccAR63079875 = kBxjzFccAR59836865;     kBxjzFccAR59836865 = kBxjzFccAR86710304;     kBxjzFccAR86710304 = kBxjzFccAR65733154;     kBxjzFccAR65733154 = kBxjzFccAR41908141;     kBxjzFccAR41908141 = kBxjzFccAR90124724;     kBxjzFccAR90124724 = kBxjzFccAR67635525;     kBxjzFccAR67635525 = kBxjzFccAR55283761;     kBxjzFccAR55283761 = kBxjzFccAR99876127;     kBxjzFccAR99876127 = kBxjzFccAR1024989;     kBxjzFccAR1024989 = kBxjzFccAR62610885;     kBxjzFccAR62610885 = kBxjzFccAR89763670;     kBxjzFccAR89763670 = kBxjzFccAR13624173;     kBxjzFccAR13624173 = kBxjzFccAR30293436;     kBxjzFccAR30293436 = kBxjzFccAR23354385;     kBxjzFccAR23354385 = kBxjzFccAR39952591;     kBxjzFccAR39952591 = kBxjzFccAR7889616;     kBxjzFccAR7889616 = kBxjzFccAR73695108;     kBxjzFccAR73695108 = kBxjzFccAR66175071;     kBxjzFccAR66175071 = kBxjzFccAR78765433;     kBxjzFccAR78765433 = kBxjzFccAR2690370;     kBxjzFccAR2690370 = kBxjzFccAR32609910;     kBxjzFccAR32609910 = kBxjzFccAR94191461;     kBxjzFccAR94191461 = kBxjzFccAR39543487;     kBxjzFccAR39543487 = kBxjzFccAR71744182;     kBxjzFccAR71744182 = kBxjzFccAR233966;     kBxjzFccAR233966 = kBxjzFccAR34425976;     kBxjzFccAR34425976 = kBxjzFccAR81903428;     kBxjzFccAR81903428 = kBxjzFccAR85862228;     kBxjzFccAR85862228 = kBxjzFccAR31851871;     kBxjzFccAR31851871 = kBxjzFccAR84015870;     kBxjzFccAR84015870 = kBxjzFccAR67632175;     kBxjzFccAR67632175 = kBxjzFccAR28838969;     kBxjzFccAR28838969 = kBxjzFccAR87682980;     kBxjzFccAR87682980 = kBxjzFccAR4379431;     kBxjzFccAR4379431 = kBxjzFccAR57587505;     kBxjzFccAR57587505 = kBxjzFccAR31117022;     kBxjzFccAR31117022 = kBxjzFccAR80086389;     kBxjzFccAR80086389 = kBxjzFccAR60811252;     kBxjzFccAR60811252 = kBxjzFccAR51977984;     kBxjzFccAR51977984 = kBxjzFccAR95294354;     kBxjzFccAR95294354 = kBxjzFccAR5325540;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void AxQYLzoEOG24562283() {     int hmcGhsDEkH40784508 = 59987721;    int hmcGhsDEkH66335152 = -843574009;    int hmcGhsDEkH56222316 = -713411019;    int hmcGhsDEkH90671820 = -184113646;    int hmcGhsDEkH55212782 = 37031341;    int hmcGhsDEkH86935828 = -567225319;    int hmcGhsDEkH57434577 = -450367463;    int hmcGhsDEkH93248039 = -765591535;    int hmcGhsDEkH20476846 = -495319175;    int hmcGhsDEkH5597601 = -712296003;    int hmcGhsDEkH42584 = -194632491;    int hmcGhsDEkH71940568 = 591679;    int hmcGhsDEkH73524167 = -469886484;    int hmcGhsDEkH67092761 = -767004401;    int hmcGhsDEkH33222871 = -68255399;    int hmcGhsDEkH79284465 = 86287843;    int hmcGhsDEkH78866095 = 91860437;    int hmcGhsDEkH97512934 = -39549375;    int hmcGhsDEkH41329086 = -858147498;    int hmcGhsDEkH51617137 = -813874841;    int hmcGhsDEkH66796022 = -814221623;    int hmcGhsDEkH79836025 = -322999434;    int hmcGhsDEkH78803159 = -989365360;    int hmcGhsDEkH35488259 = -223724304;    int hmcGhsDEkH4743411 = 20780617;    int hmcGhsDEkH46545809 = -18405079;    int hmcGhsDEkH51296665 = -520931022;    int hmcGhsDEkH795292 = -884718119;    int hmcGhsDEkH12051539 = -850659121;    int hmcGhsDEkH82584511 = -937315908;    int hmcGhsDEkH19153396 = -146144997;    int hmcGhsDEkH32048342 = -631249002;    int hmcGhsDEkH28306670 = -991428020;    int hmcGhsDEkH65161821 = -146511954;    int hmcGhsDEkH78735363 = -247770812;    int hmcGhsDEkH63978313 = -892833891;    int hmcGhsDEkH55391310 = -880846027;    int hmcGhsDEkH60621390 = -84714647;    int hmcGhsDEkH97849867 = 95679538;    int hmcGhsDEkH81695903 = -57811502;    int hmcGhsDEkH51278934 = -784871447;    int hmcGhsDEkH35184670 = -672250182;    int hmcGhsDEkH92102771 = -601708506;    int hmcGhsDEkH82234046 = -106352830;    int hmcGhsDEkH62946339 = -509711825;    int hmcGhsDEkH39996419 = -59682157;    int hmcGhsDEkH22582891 = -48883730;    int hmcGhsDEkH14410942 = -411372819;    int hmcGhsDEkH43416045 = -950732756;    int hmcGhsDEkH18168732 = -479663712;    int hmcGhsDEkH57587858 = 49175693;    int hmcGhsDEkH49629660 = -266580761;    int hmcGhsDEkH80943043 = -545537704;    int hmcGhsDEkH46218277 = -132436900;    int hmcGhsDEkH57766260 = -141305311;    int hmcGhsDEkH60948482 = -617012845;    int hmcGhsDEkH87531992 = -854208650;    int hmcGhsDEkH20734058 = -389686715;    int hmcGhsDEkH85928410 = -104894264;    int hmcGhsDEkH8666973 = -944563580;    int hmcGhsDEkH35639164 = 53705702;    int hmcGhsDEkH56639286 = -565649344;    int hmcGhsDEkH81196500 = -914932415;    int hmcGhsDEkH37892335 = -558003268;    int hmcGhsDEkH86444204 = -466151006;    int hmcGhsDEkH67994242 = -563383489;    int hmcGhsDEkH43633899 = -7980302;    int hmcGhsDEkH8362347 = -223374531;    int hmcGhsDEkH88357398 = -419233590;    int hmcGhsDEkH69244558 = -175421509;    int hmcGhsDEkH23893155 = -32866131;    int hmcGhsDEkH18244706 = -823424916;    int hmcGhsDEkH99663066 = -35228914;    int hmcGhsDEkH59633183 = -700335996;    int hmcGhsDEkH338203 = 70996606;    int hmcGhsDEkH31611352 = -41971442;    int hmcGhsDEkH87733254 = -721290929;    int hmcGhsDEkH96569112 = -783012531;    int hmcGhsDEkH72541919 = -714012480;    int hmcGhsDEkH64746992 = -919537226;    int hmcGhsDEkH23962919 = -969521350;    int hmcGhsDEkH36885723 = -9558203;    int hmcGhsDEkH57379246 = -933985364;    int hmcGhsDEkH93882807 = -270995410;    int hmcGhsDEkH24996653 = -886491602;    int hmcGhsDEkH69523735 = -879564237;    int hmcGhsDEkH51105299 = 14288702;    int hmcGhsDEkH82088392 = -758991120;    int hmcGhsDEkH7395561 = 94793356;    int hmcGhsDEkH17786881 = -630757967;    int hmcGhsDEkH76446320 = 61374758;    int hmcGhsDEkH34657253 = -391159312;    int hmcGhsDEkH74692980 = -979820384;    int hmcGhsDEkH89182895 = 40243118;    int hmcGhsDEkH46056739 = -11517204;    int hmcGhsDEkH94639648 = -119222104;    int hmcGhsDEkH53988169 = -757317768;    int hmcGhsDEkH54210436 = 56294762;    int hmcGhsDEkH95789841 = -640201825;    int hmcGhsDEkH94952097 = 59987721;     hmcGhsDEkH40784508 = hmcGhsDEkH66335152;     hmcGhsDEkH66335152 = hmcGhsDEkH56222316;     hmcGhsDEkH56222316 = hmcGhsDEkH90671820;     hmcGhsDEkH90671820 = hmcGhsDEkH55212782;     hmcGhsDEkH55212782 = hmcGhsDEkH86935828;     hmcGhsDEkH86935828 = hmcGhsDEkH57434577;     hmcGhsDEkH57434577 = hmcGhsDEkH93248039;     hmcGhsDEkH93248039 = hmcGhsDEkH20476846;     hmcGhsDEkH20476846 = hmcGhsDEkH5597601;     hmcGhsDEkH5597601 = hmcGhsDEkH42584;     hmcGhsDEkH42584 = hmcGhsDEkH71940568;     hmcGhsDEkH71940568 = hmcGhsDEkH73524167;     hmcGhsDEkH73524167 = hmcGhsDEkH67092761;     hmcGhsDEkH67092761 = hmcGhsDEkH33222871;     hmcGhsDEkH33222871 = hmcGhsDEkH79284465;     hmcGhsDEkH79284465 = hmcGhsDEkH78866095;     hmcGhsDEkH78866095 = hmcGhsDEkH97512934;     hmcGhsDEkH97512934 = hmcGhsDEkH41329086;     hmcGhsDEkH41329086 = hmcGhsDEkH51617137;     hmcGhsDEkH51617137 = hmcGhsDEkH66796022;     hmcGhsDEkH66796022 = hmcGhsDEkH79836025;     hmcGhsDEkH79836025 = hmcGhsDEkH78803159;     hmcGhsDEkH78803159 = hmcGhsDEkH35488259;     hmcGhsDEkH35488259 = hmcGhsDEkH4743411;     hmcGhsDEkH4743411 = hmcGhsDEkH46545809;     hmcGhsDEkH46545809 = hmcGhsDEkH51296665;     hmcGhsDEkH51296665 = hmcGhsDEkH795292;     hmcGhsDEkH795292 = hmcGhsDEkH12051539;     hmcGhsDEkH12051539 = hmcGhsDEkH82584511;     hmcGhsDEkH82584511 = hmcGhsDEkH19153396;     hmcGhsDEkH19153396 = hmcGhsDEkH32048342;     hmcGhsDEkH32048342 = hmcGhsDEkH28306670;     hmcGhsDEkH28306670 = hmcGhsDEkH65161821;     hmcGhsDEkH65161821 = hmcGhsDEkH78735363;     hmcGhsDEkH78735363 = hmcGhsDEkH63978313;     hmcGhsDEkH63978313 = hmcGhsDEkH55391310;     hmcGhsDEkH55391310 = hmcGhsDEkH60621390;     hmcGhsDEkH60621390 = hmcGhsDEkH97849867;     hmcGhsDEkH97849867 = hmcGhsDEkH81695903;     hmcGhsDEkH81695903 = hmcGhsDEkH51278934;     hmcGhsDEkH51278934 = hmcGhsDEkH35184670;     hmcGhsDEkH35184670 = hmcGhsDEkH92102771;     hmcGhsDEkH92102771 = hmcGhsDEkH82234046;     hmcGhsDEkH82234046 = hmcGhsDEkH62946339;     hmcGhsDEkH62946339 = hmcGhsDEkH39996419;     hmcGhsDEkH39996419 = hmcGhsDEkH22582891;     hmcGhsDEkH22582891 = hmcGhsDEkH14410942;     hmcGhsDEkH14410942 = hmcGhsDEkH43416045;     hmcGhsDEkH43416045 = hmcGhsDEkH18168732;     hmcGhsDEkH18168732 = hmcGhsDEkH57587858;     hmcGhsDEkH57587858 = hmcGhsDEkH49629660;     hmcGhsDEkH49629660 = hmcGhsDEkH80943043;     hmcGhsDEkH80943043 = hmcGhsDEkH46218277;     hmcGhsDEkH46218277 = hmcGhsDEkH57766260;     hmcGhsDEkH57766260 = hmcGhsDEkH60948482;     hmcGhsDEkH60948482 = hmcGhsDEkH87531992;     hmcGhsDEkH87531992 = hmcGhsDEkH20734058;     hmcGhsDEkH20734058 = hmcGhsDEkH85928410;     hmcGhsDEkH85928410 = hmcGhsDEkH8666973;     hmcGhsDEkH8666973 = hmcGhsDEkH35639164;     hmcGhsDEkH35639164 = hmcGhsDEkH56639286;     hmcGhsDEkH56639286 = hmcGhsDEkH81196500;     hmcGhsDEkH81196500 = hmcGhsDEkH37892335;     hmcGhsDEkH37892335 = hmcGhsDEkH86444204;     hmcGhsDEkH86444204 = hmcGhsDEkH67994242;     hmcGhsDEkH67994242 = hmcGhsDEkH43633899;     hmcGhsDEkH43633899 = hmcGhsDEkH8362347;     hmcGhsDEkH8362347 = hmcGhsDEkH88357398;     hmcGhsDEkH88357398 = hmcGhsDEkH69244558;     hmcGhsDEkH69244558 = hmcGhsDEkH23893155;     hmcGhsDEkH23893155 = hmcGhsDEkH18244706;     hmcGhsDEkH18244706 = hmcGhsDEkH99663066;     hmcGhsDEkH99663066 = hmcGhsDEkH59633183;     hmcGhsDEkH59633183 = hmcGhsDEkH338203;     hmcGhsDEkH338203 = hmcGhsDEkH31611352;     hmcGhsDEkH31611352 = hmcGhsDEkH87733254;     hmcGhsDEkH87733254 = hmcGhsDEkH96569112;     hmcGhsDEkH96569112 = hmcGhsDEkH72541919;     hmcGhsDEkH72541919 = hmcGhsDEkH64746992;     hmcGhsDEkH64746992 = hmcGhsDEkH23962919;     hmcGhsDEkH23962919 = hmcGhsDEkH36885723;     hmcGhsDEkH36885723 = hmcGhsDEkH57379246;     hmcGhsDEkH57379246 = hmcGhsDEkH93882807;     hmcGhsDEkH93882807 = hmcGhsDEkH24996653;     hmcGhsDEkH24996653 = hmcGhsDEkH69523735;     hmcGhsDEkH69523735 = hmcGhsDEkH51105299;     hmcGhsDEkH51105299 = hmcGhsDEkH82088392;     hmcGhsDEkH82088392 = hmcGhsDEkH7395561;     hmcGhsDEkH7395561 = hmcGhsDEkH17786881;     hmcGhsDEkH17786881 = hmcGhsDEkH76446320;     hmcGhsDEkH76446320 = hmcGhsDEkH34657253;     hmcGhsDEkH34657253 = hmcGhsDEkH74692980;     hmcGhsDEkH74692980 = hmcGhsDEkH89182895;     hmcGhsDEkH89182895 = hmcGhsDEkH46056739;     hmcGhsDEkH46056739 = hmcGhsDEkH94639648;     hmcGhsDEkH94639648 = hmcGhsDEkH53988169;     hmcGhsDEkH53988169 = hmcGhsDEkH54210436;     hmcGhsDEkH54210436 = hmcGhsDEkH95789841;     hmcGhsDEkH95789841 = hmcGhsDEkH94952097;     hmcGhsDEkH94952097 = hmcGhsDEkH40784508;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void xjIUURrhjo39611350() {     int SFRkyRkaZenMgDisciK46901615 = -51914168;    int SFRkyRkaZenMgDisciK9708432 = -553173790;    int SFRkyRkaZenMgDisciK72264499 = -864243940;    int SFRkyRkaZenMgDisciK17746602 = -374862276;    int SFRkyRkaZenMgDisciK24108271 = -483618530;    int SFRkyRkaZenMgDisciK78353031 = -831721555;    int SFRkyRkaZenMgDisciK17923543 = -589332440;    int SFRkyRkaZenMgDisciK43007931 = 47534552;    int SFRkyRkaZenMgDisciK85119341 = -263351841;    int SFRkyRkaZenMgDisciK46827260 = 58728520;    int SFRkyRkaZenMgDisciK60152874 = -72070077;    int SFRkyRkaZenMgDisciK3763612 = -443814523;    int SFRkyRkaZenMgDisciK59733286 = -909777573;    int SFRkyRkaZenMgDisciK50236438 = -199242969;    int SFRkyRkaZenMgDisciK28965298 = -758717566;    int SFRkyRkaZenMgDisciK20789860 = -986711700;    int SFRkyRkaZenMgDisciK72702098 = -524684675;    int SFRkyRkaZenMgDisciK94566087 = -805072018;    int SFRkyRkaZenMgDisciK3158928 = -163916594;    int SFRkyRkaZenMgDisciK32167301 = -70777760;    int SFRkyRkaZenMgDisciK55349215 = -669709078;    int SFRkyRkaZenMgDisciK66357049 = -230929151;    int SFRkyRkaZenMgDisciK14393951 = -735882847;    int SFRkyRkaZenMgDisciK19480633 = -446029292;    int SFRkyRkaZenMgDisciK48443061 = -352415416;    int SFRkyRkaZenMgDisciK71267484 = -997060403;    int SFRkyRkaZenMgDisciK49756443 = -421593225;    int SFRkyRkaZenMgDisciK13902417 = -950647073;    int SFRkyRkaZenMgDisciK78183794 = 26958175;    int SFRkyRkaZenMgDisciK51200148 = -754786776;    int SFRkyRkaZenMgDisciK11395946 = -59465935;    int SFRkyRkaZenMgDisciK29658964 = -340695817;    int SFRkyRkaZenMgDisciK38017619 = -884041390;    int SFRkyRkaZenMgDisciK59992385 = -998053719;    int SFRkyRkaZenMgDisciK40210015 = -886503917;    int SFRkyRkaZenMgDisciK32704226 = -6859998;    int SFRkyRkaZenMgDisciK36653245 = -834481896;    int SFRkyRkaZenMgDisciK94711602 = -956220657;    int SFRkyRkaZenMgDisciK71460121 = -998243958;    int SFRkyRkaZenMgDisciK69197840 = -531250724;    int SFRkyRkaZenMgDisciK56948158 = -850145342;    int SFRkyRkaZenMgDisciK67335127 = -942392460;    int SFRkyRkaZenMgDisciK70169749 = -682513089;    int SFRkyRkaZenMgDisciK69641787 = -125695768;    int SFRkyRkaZenMgDisciK74898804 = -171609979;    int SFRkyRkaZenMgDisciK51935614 = -44898274;    int SFRkyRkaZenMgDisciK40361465 = -167659268;    int SFRkyRkaZenMgDisciK22367883 = -421268351;    int SFRkyRkaZenMgDisciK53091774 = 63530256;    int SFRkyRkaZenMgDisciK31080385 = -566674520;    int SFRkyRkaZenMgDisciK93288536 = -893117978;    int SFRkyRkaZenMgDisciK60439380 = -67307081;    int SFRkyRkaZenMgDisciK29191501 = -337327292;    int SFRkyRkaZenMgDisciK42187158 = -452907046;    int SFRkyRkaZenMgDisciK84262135 = -841837093;    int SFRkyRkaZenMgDisciK80544565 = -820985018;    int SFRkyRkaZenMgDisciK95314480 = -817290943;    int SFRkyRkaZenMgDisciK52783867 = -318214648;    int SFRkyRkaZenMgDisciK69303540 = 77553139;    int SFRkyRkaZenMgDisciK52840786 = -486558128;    int SFRkyRkaZenMgDisciK28596588 = -310128330;    int SFRkyRkaZenMgDisciK4021127 = -638685368;    int SFRkyRkaZenMgDisciK64824136 = -979423623;    int SFRkyRkaZenMgDisciK33919194 = -508565066;    int SFRkyRkaZenMgDisciK35431315 = -881805545;    int SFRkyRkaZenMgDisciK30493911 = -731374260;    int SFRkyRkaZenMgDisciK65745993 = -559773133;    int SFRkyRkaZenMgDisciK99740900 = -911723854;    int SFRkyRkaZenMgDisciK10026423 = -312739053;    int SFRkyRkaZenMgDisciK96261071 = -651857568;    int SFRkyRkaZenMgDisciK84136614 = -52229804;    int SFRkyRkaZenMgDisciK77990496 = -568464019;    int SFRkyRkaZenMgDisciK23105966 = -806828060;    int SFRkyRkaZenMgDisciK33961087 = -632665870;    int SFRkyRkaZenMgDisciK75219143 = -220632419;    int SFRkyRkaZenMgDisciK88014088 = -727316619;    int SFRkyRkaZenMgDisciK96187299 = -548416062;    int SFRkyRkaZenMgDisciK44752164 = -510187079;    int SFRkyRkaZenMgDisciK44581828 = -174419314;    int SFRkyRkaZenMgDisciK96507446 = -207517143;    int SFRkyRkaZenMgDisciK30906020 = -729401135;    int SFRkyRkaZenMgDisciK27388561 = 99675126;    int SFRkyRkaZenMgDisciK60810642 = -914177329;    int SFRkyRkaZenMgDisciK47103410 = -406367306;    int SFRkyRkaZenMgDisciK57911611 = -861668798;    int SFRkyRkaZenMgDisciK50956565 = -992158854;    int SFRkyRkaZenMgDisciK467463 = 96631474;    int SFRkyRkaZenMgDisciK95830461 = -331134345;    int SFRkyRkaZenMgDisciK75730250 = -56216626;    int SFRkyRkaZenMgDisciK59665449 = 34481100;    int SFRkyRkaZenMgDisciK37389746 = -189569056;    int SFRkyRkaZenMgDisciK83869378 = -416267248;    int SFRkyRkaZenMgDisciK25408062 = -933773796;    int SFRkyRkaZenMgDisciK18619336 = -411685831;    int SFRkyRkaZenMgDisciK40601253 = -121122395;    int SFRkyRkaZenMgDisciK52927032 = -111459974;    int SFRkyRkaZenMgDisciK2510992 = -962968837;    int SFRkyRkaZenMgDisciK36250556 = -73948024;    int SFRkyRkaZenMgDisciK34210472 = -243890223;    int SFRkyRkaZenMgDisciK44404894 = -51914168;     SFRkyRkaZenMgDisciK46901615 = SFRkyRkaZenMgDisciK9708432;     SFRkyRkaZenMgDisciK9708432 = SFRkyRkaZenMgDisciK72264499;     SFRkyRkaZenMgDisciK72264499 = SFRkyRkaZenMgDisciK17746602;     SFRkyRkaZenMgDisciK17746602 = SFRkyRkaZenMgDisciK24108271;     SFRkyRkaZenMgDisciK24108271 = SFRkyRkaZenMgDisciK78353031;     SFRkyRkaZenMgDisciK78353031 = SFRkyRkaZenMgDisciK17923543;     SFRkyRkaZenMgDisciK17923543 = SFRkyRkaZenMgDisciK43007931;     SFRkyRkaZenMgDisciK43007931 = SFRkyRkaZenMgDisciK85119341;     SFRkyRkaZenMgDisciK85119341 = SFRkyRkaZenMgDisciK46827260;     SFRkyRkaZenMgDisciK46827260 = SFRkyRkaZenMgDisciK60152874;     SFRkyRkaZenMgDisciK60152874 = SFRkyRkaZenMgDisciK3763612;     SFRkyRkaZenMgDisciK3763612 = SFRkyRkaZenMgDisciK59733286;     SFRkyRkaZenMgDisciK59733286 = SFRkyRkaZenMgDisciK50236438;     SFRkyRkaZenMgDisciK50236438 = SFRkyRkaZenMgDisciK28965298;     SFRkyRkaZenMgDisciK28965298 = SFRkyRkaZenMgDisciK20789860;     SFRkyRkaZenMgDisciK20789860 = SFRkyRkaZenMgDisciK72702098;     SFRkyRkaZenMgDisciK72702098 = SFRkyRkaZenMgDisciK94566087;     SFRkyRkaZenMgDisciK94566087 = SFRkyRkaZenMgDisciK3158928;     SFRkyRkaZenMgDisciK3158928 = SFRkyRkaZenMgDisciK32167301;     SFRkyRkaZenMgDisciK32167301 = SFRkyRkaZenMgDisciK55349215;     SFRkyRkaZenMgDisciK55349215 = SFRkyRkaZenMgDisciK66357049;     SFRkyRkaZenMgDisciK66357049 = SFRkyRkaZenMgDisciK14393951;     SFRkyRkaZenMgDisciK14393951 = SFRkyRkaZenMgDisciK19480633;     SFRkyRkaZenMgDisciK19480633 = SFRkyRkaZenMgDisciK48443061;     SFRkyRkaZenMgDisciK48443061 = SFRkyRkaZenMgDisciK71267484;     SFRkyRkaZenMgDisciK71267484 = SFRkyRkaZenMgDisciK49756443;     SFRkyRkaZenMgDisciK49756443 = SFRkyRkaZenMgDisciK13902417;     SFRkyRkaZenMgDisciK13902417 = SFRkyRkaZenMgDisciK78183794;     SFRkyRkaZenMgDisciK78183794 = SFRkyRkaZenMgDisciK51200148;     SFRkyRkaZenMgDisciK51200148 = SFRkyRkaZenMgDisciK11395946;     SFRkyRkaZenMgDisciK11395946 = SFRkyRkaZenMgDisciK29658964;     SFRkyRkaZenMgDisciK29658964 = SFRkyRkaZenMgDisciK38017619;     SFRkyRkaZenMgDisciK38017619 = SFRkyRkaZenMgDisciK59992385;     SFRkyRkaZenMgDisciK59992385 = SFRkyRkaZenMgDisciK40210015;     SFRkyRkaZenMgDisciK40210015 = SFRkyRkaZenMgDisciK32704226;     SFRkyRkaZenMgDisciK32704226 = SFRkyRkaZenMgDisciK36653245;     SFRkyRkaZenMgDisciK36653245 = SFRkyRkaZenMgDisciK94711602;     SFRkyRkaZenMgDisciK94711602 = SFRkyRkaZenMgDisciK71460121;     SFRkyRkaZenMgDisciK71460121 = SFRkyRkaZenMgDisciK69197840;     SFRkyRkaZenMgDisciK69197840 = SFRkyRkaZenMgDisciK56948158;     SFRkyRkaZenMgDisciK56948158 = SFRkyRkaZenMgDisciK67335127;     SFRkyRkaZenMgDisciK67335127 = SFRkyRkaZenMgDisciK70169749;     SFRkyRkaZenMgDisciK70169749 = SFRkyRkaZenMgDisciK69641787;     SFRkyRkaZenMgDisciK69641787 = SFRkyRkaZenMgDisciK74898804;     SFRkyRkaZenMgDisciK74898804 = SFRkyRkaZenMgDisciK51935614;     SFRkyRkaZenMgDisciK51935614 = SFRkyRkaZenMgDisciK40361465;     SFRkyRkaZenMgDisciK40361465 = SFRkyRkaZenMgDisciK22367883;     SFRkyRkaZenMgDisciK22367883 = SFRkyRkaZenMgDisciK53091774;     SFRkyRkaZenMgDisciK53091774 = SFRkyRkaZenMgDisciK31080385;     SFRkyRkaZenMgDisciK31080385 = SFRkyRkaZenMgDisciK93288536;     SFRkyRkaZenMgDisciK93288536 = SFRkyRkaZenMgDisciK60439380;     SFRkyRkaZenMgDisciK60439380 = SFRkyRkaZenMgDisciK29191501;     SFRkyRkaZenMgDisciK29191501 = SFRkyRkaZenMgDisciK42187158;     SFRkyRkaZenMgDisciK42187158 = SFRkyRkaZenMgDisciK84262135;     SFRkyRkaZenMgDisciK84262135 = SFRkyRkaZenMgDisciK80544565;     SFRkyRkaZenMgDisciK80544565 = SFRkyRkaZenMgDisciK95314480;     SFRkyRkaZenMgDisciK95314480 = SFRkyRkaZenMgDisciK52783867;     SFRkyRkaZenMgDisciK52783867 = SFRkyRkaZenMgDisciK69303540;     SFRkyRkaZenMgDisciK69303540 = SFRkyRkaZenMgDisciK52840786;     SFRkyRkaZenMgDisciK52840786 = SFRkyRkaZenMgDisciK28596588;     SFRkyRkaZenMgDisciK28596588 = SFRkyRkaZenMgDisciK4021127;     SFRkyRkaZenMgDisciK4021127 = SFRkyRkaZenMgDisciK64824136;     SFRkyRkaZenMgDisciK64824136 = SFRkyRkaZenMgDisciK33919194;     SFRkyRkaZenMgDisciK33919194 = SFRkyRkaZenMgDisciK35431315;     SFRkyRkaZenMgDisciK35431315 = SFRkyRkaZenMgDisciK30493911;     SFRkyRkaZenMgDisciK30493911 = SFRkyRkaZenMgDisciK65745993;     SFRkyRkaZenMgDisciK65745993 = SFRkyRkaZenMgDisciK99740900;     SFRkyRkaZenMgDisciK99740900 = SFRkyRkaZenMgDisciK10026423;     SFRkyRkaZenMgDisciK10026423 = SFRkyRkaZenMgDisciK96261071;     SFRkyRkaZenMgDisciK96261071 = SFRkyRkaZenMgDisciK84136614;     SFRkyRkaZenMgDisciK84136614 = SFRkyRkaZenMgDisciK77990496;     SFRkyRkaZenMgDisciK77990496 = SFRkyRkaZenMgDisciK23105966;     SFRkyRkaZenMgDisciK23105966 = SFRkyRkaZenMgDisciK33961087;     SFRkyRkaZenMgDisciK33961087 = SFRkyRkaZenMgDisciK75219143;     SFRkyRkaZenMgDisciK75219143 = SFRkyRkaZenMgDisciK88014088;     SFRkyRkaZenMgDisciK88014088 = SFRkyRkaZenMgDisciK96187299;     SFRkyRkaZenMgDisciK96187299 = SFRkyRkaZenMgDisciK44752164;     SFRkyRkaZenMgDisciK44752164 = SFRkyRkaZenMgDisciK44581828;     SFRkyRkaZenMgDisciK44581828 = SFRkyRkaZenMgDisciK96507446;     SFRkyRkaZenMgDisciK96507446 = SFRkyRkaZenMgDisciK30906020;     SFRkyRkaZenMgDisciK30906020 = SFRkyRkaZenMgDisciK27388561;     SFRkyRkaZenMgDisciK27388561 = SFRkyRkaZenMgDisciK60810642;     SFRkyRkaZenMgDisciK60810642 = SFRkyRkaZenMgDisciK47103410;     SFRkyRkaZenMgDisciK47103410 = SFRkyRkaZenMgDisciK57911611;     SFRkyRkaZenMgDisciK57911611 = SFRkyRkaZenMgDisciK50956565;     SFRkyRkaZenMgDisciK50956565 = SFRkyRkaZenMgDisciK467463;     SFRkyRkaZenMgDisciK467463 = SFRkyRkaZenMgDisciK95830461;     SFRkyRkaZenMgDisciK95830461 = SFRkyRkaZenMgDisciK75730250;     SFRkyRkaZenMgDisciK75730250 = SFRkyRkaZenMgDisciK59665449;     SFRkyRkaZenMgDisciK59665449 = SFRkyRkaZenMgDisciK37389746;     SFRkyRkaZenMgDisciK37389746 = SFRkyRkaZenMgDisciK83869378;     SFRkyRkaZenMgDisciK83869378 = SFRkyRkaZenMgDisciK25408062;     SFRkyRkaZenMgDisciK25408062 = SFRkyRkaZenMgDisciK18619336;     SFRkyRkaZenMgDisciK18619336 = SFRkyRkaZenMgDisciK40601253;     SFRkyRkaZenMgDisciK40601253 = SFRkyRkaZenMgDisciK52927032;     SFRkyRkaZenMgDisciK52927032 = SFRkyRkaZenMgDisciK2510992;     SFRkyRkaZenMgDisciK2510992 = SFRkyRkaZenMgDisciK36250556;     SFRkyRkaZenMgDisciK36250556 = SFRkyRkaZenMgDisciK34210472;     SFRkyRkaZenMgDisciK34210472 = SFRkyRkaZenMgDisciK44404894;     SFRkyRkaZenMgDisciK44404894 = SFRkyRkaZenMgDisciK46901615;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void jcQvaSAGmJ6902950() {     int iQmFXpgmxhMHNwSRkZC82360583 = -518191068;    int iQmFXpgmxhMHNwSRkZC22980510 = -433725397;    int iQmFXpgmxhMHNwSRkZC9650976 = -529911015;    int iQmFXpgmxhMHNwSRkZC89969956 = -196013348;    int iQmFXpgmxhMHNwSRkZC80393539 = -589217375;    int iQmFXpgmxhMHNwSRkZC14575904 = 5930550;    int iQmFXpgmxhMHNwSRkZC28580950 = -434058174;    int iQmFXpgmxhMHNwSRkZC5139492 = -696699589;    int iQmFXpgmxhMHNwSRkZC86636946 = -751683248;    int iQmFXpgmxhMHNwSRkZC61729972 = -705958478;    int iQmFXpgmxhMHNwSRkZC98334608 = -974077807;    int iQmFXpgmxhMHNwSRkZC4331760 = -307935295;    int iQmFXpgmxhMHNwSRkZC97967931 = -361790078;    int iQmFXpgmxhMHNwSRkZC3377302 = -175606379;    int iQmFXpgmxhMHNwSRkZC87159814 = -162142581;    int iQmFXpgmxhMHNwSRkZC4331161 = -622523307;    int iQmFXpgmxhMHNwSRkZC28538035 = 48340772;    int iQmFXpgmxhMHNwSRkZC94326278 = -878500086;    int iQmFXpgmxhMHNwSRkZC3709258 = -480480016;    int iQmFXpgmxhMHNwSRkZC26004520 = -497338826;    int iQmFXpgmxhMHNwSRkZC68436078 = -326983767;    int iQmFXpgmxhMHNwSRkZC69778574 = -317565445;    int iQmFXpgmxhMHNwSRkZC84919330 = -373515031;    int iQmFXpgmxhMHNwSRkZC13273578 = -956853896;    int iQmFXpgmxhMHNwSRkZC56461012 = -376400614;    int iQmFXpgmxhMHNwSRkZC81965656 = -685637209;    int iQmFXpgmxhMHNwSRkZC10177018 = -227877365;    int iQmFXpgmxhMHNwSRkZC54630841 = -20419247;    int iQmFXpgmxhMHNwSRkZC24852009 = -547136628;    int iQmFXpgmxhMHNwSRkZC56733559 = -789293946;    int iQmFXpgmxhMHNwSRkZC29979177 = -611446423;    int iQmFXpgmxhMHNwSRkZC67481982 = -113667232;    int iQmFXpgmxhMHNwSRkZC50235629 = 68362632;    int iQmFXpgmxhMHNwSRkZC89740812 = 37252467;    int iQmFXpgmxhMHNwSRkZC6018469 = -837604168;    int iQmFXpgmxhMHNwSRkZC84265069 = -221425304;    int iQmFXpgmxhMHNwSRkZC86065061 = -699177937;    int iQmFXpgmxhMHNwSRkZC45927006 = -938876238;    int iQmFXpgmxhMHNwSRkZC1850684 = -649120235;    int iQmFXpgmxhMHNwSRkZC33469373 = 3486730;    int iQmFXpgmxhMHNwSRkZC90399766 = -619344256;    int iQmFXpgmxhMHNwSRkZC56700254 = -536937751;    int iQmFXpgmxhMHNwSRkZC59553128 = -235693875;    int iQmFXpgmxhMHNwSRkZC9773125 = -730028178;    int iQmFXpgmxhMHNwSRkZC74915262 = 1878859;    int iQmFXpgmxhMHNwSRkZC97896942 = -83821906;    int iQmFXpgmxhMHNwSRkZC59706629 = -651645629;    int iQmFXpgmxhMHNwSRkZC40094195 = -587794944;    int iQmFXpgmxhMHNwSRkZC75984440 = -700206624;    int iQmFXpgmxhMHNwSRkZC55609974 = 42298664;    int iQmFXpgmxhMHNwSRkZC74059260 = -767394535;    int iQmFXpgmxhMHNwSRkZC43924852 = -280959428;    int iQmFXpgmxhMHNwSRkZC97812649 = -93372846;    int iQmFXpgmxhMHNwSRkZC58179004 = -644415545;    int iQmFXpgmxhMHNwSRkZC38466872 = -88327239;    int iQmFXpgmxhMHNwSRkZC12582010 = -100625624;    int iQmFXpgmxhMHNwSRkZC38061179 = 39789634;    int iQmFXpgmxhMHNwSRkZC96377398 = -573057119;    int iQmFXpgmxhMHNwSRkZC33508944 = -819612734;    int iQmFXpgmxhMHNwSRkZC98427883 = -903580166;    int iQmFXpgmxhMHNwSRkZC4398886 = -766192085;    int iQmFXpgmxhMHNwSRkZC73950108 = -313638928;    int iQmFXpgmxhMHNwSRkZC80287482 = -49562961;    int iQmFXpgmxhMHNwSRkZC29903388 = -962389302;    int iQmFXpgmxhMHNwSRkZC31750795 = 5487944;    int iQmFXpgmxhMHNwSRkZC30852627 = -760410575;    int iQmFXpgmxhMHNwSRkZC54096130 = -276297927;    int iQmFXpgmxhMHNwSRkZC8227120 = -299042546;    int iQmFXpgmxhMHNwSRkZC97358832 = -338002211;    int iQmFXpgmxhMHNwSRkZC2894745 = -940717277;    int iQmFXpgmxhMHNwSRkZC18266099 = -923345371;    int iQmFXpgmxhMHNwSRkZC82611028 = -12782991;    int iQmFXpgmxhMHNwSRkZC92475595 = -129379852;    int iQmFXpgmxhMHNwSRkZC70239884 = -383966746;    int iQmFXpgmxhMHNwSRkZC35604754 = -877994571;    int iQmFXpgmxhMHNwSRkZC11735824 = -790046017;    int iQmFXpgmxhMHNwSRkZC10225447 = 18128430;    int iQmFXpgmxhMHNwSRkZC75146205 = -643486853;    int iQmFXpgmxhMHNwSRkZC38358315 = -858732756;    int iQmFXpgmxhMHNwSRkZC58564069 = -192578709;    int iQmFXpgmxhMHNwSRkZC22259028 = 66008419;    int iQmFXpgmxhMHNwSRkZC70082822 = -640082421;    int iQmFXpgmxhMHNwSRkZC78646401 = -320212623;    int iQmFXpgmxhMHNwSRkZC69242035 = -489435293;    int iQmFXpgmxhMHNwSRkZC82674298 = 78100589;    int iQmFXpgmxhMHNwSRkZC86054324 = -230486995;    int iQmFXpgmxhMHNwSRkZC69669333 = 79705613;    int iQmFXpgmxhMHNwSRkZC92056625 = -287221823;    int iQmFXpgmxhMHNwSRkZC51273940 = -874420294;    int iQmFXpgmxhMHNwSRkZC93436459 = -636978545;    int iQmFXpgmxhMHNwSRkZC46203891 = -161214939;    int iQmFXpgmxhMHNwSRkZC89687663 = -26120818;    int iQmFXpgmxhMHNwSRkZC12418062 = -19263504;    int iQmFXpgmxhMHNwSRkZC3422800 = -745540069;    int iQmFXpgmxhMHNwSRkZC29070487 = -230321186;    int iQmFXpgmxhMHNwSRkZC16449658 = -205705329;    int iQmFXpgmxhMHNwSRkZC76412771 = -387374790;    int iQmFXpgmxhMHNwSRkZC29649740 = -273304573;    int iQmFXpgmxhMHNwSRkZC78022330 = -635516123;    int iQmFXpgmxhMHNwSRkZC44062636 = -518191068;     iQmFXpgmxhMHNwSRkZC82360583 = iQmFXpgmxhMHNwSRkZC22980510;     iQmFXpgmxhMHNwSRkZC22980510 = iQmFXpgmxhMHNwSRkZC9650976;     iQmFXpgmxhMHNwSRkZC9650976 = iQmFXpgmxhMHNwSRkZC89969956;     iQmFXpgmxhMHNwSRkZC89969956 = iQmFXpgmxhMHNwSRkZC80393539;     iQmFXpgmxhMHNwSRkZC80393539 = iQmFXpgmxhMHNwSRkZC14575904;     iQmFXpgmxhMHNwSRkZC14575904 = iQmFXpgmxhMHNwSRkZC28580950;     iQmFXpgmxhMHNwSRkZC28580950 = iQmFXpgmxhMHNwSRkZC5139492;     iQmFXpgmxhMHNwSRkZC5139492 = iQmFXpgmxhMHNwSRkZC86636946;     iQmFXpgmxhMHNwSRkZC86636946 = iQmFXpgmxhMHNwSRkZC61729972;     iQmFXpgmxhMHNwSRkZC61729972 = iQmFXpgmxhMHNwSRkZC98334608;     iQmFXpgmxhMHNwSRkZC98334608 = iQmFXpgmxhMHNwSRkZC4331760;     iQmFXpgmxhMHNwSRkZC4331760 = iQmFXpgmxhMHNwSRkZC97967931;     iQmFXpgmxhMHNwSRkZC97967931 = iQmFXpgmxhMHNwSRkZC3377302;     iQmFXpgmxhMHNwSRkZC3377302 = iQmFXpgmxhMHNwSRkZC87159814;     iQmFXpgmxhMHNwSRkZC87159814 = iQmFXpgmxhMHNwSRkZC4331161;     iQmFXpgmxhMHNwSRkZC4331161 = iQmFXpgmxhMHNwSRkZC28538035;     iQmFXpgmxhMHNwSRkZC28538035 = iQmFXpgmxhMHNwSRkZC94326278;     iQmFXpgmxhMHNwSRkZC94326278 = iQmFXpgmxhMHNwSRkZC3709258;     iQmFXpgmxhMHNwSRkZC3709258 = iQmFXpgmxhMHNwSRkZC26004520;     iQmFXpgmxhMHNwSRkZC26004520 = iQmFXpgmxhMHNwSRkZC68436078;     iQmFXpgmxhMHNwSRkZC68436078 = iQmFXpgmxhMHNwSRkZC69778574;     iQmFXpgmxhMHNwSRkZC69778574 = iQmFXpgmxhMHNwSRkZC84919330;     iQmFXpgmxhMHNwSRkZC84919330 = iQmFXpgmxhMHNwSRkZC13273578;     iQmFXpgmxhMHNwSRkZC13273578 = iQmFXpgmxhMHNwSRkZC56461012;     iQmFXpgmxhMHNwSRkZC56461012 = iQmFXpgmxhMHNwSRkZC81965656;     iQmFXpgmxhMHNwSRkZC81965656 = iQmFXpgmxhMHNwSRkZC10177018;     iQmFXpgmxhMHNwSRkZC10177018 = iQmFXpgmxhMHNwSRkZC54630841;     iQmFXpgmxhMHNwSRkZC54630841 = iQmFXpgmxhMHNwSRkZC24852009;     iQmFXpgmxhMHNwSRkZC24852009 = iQmFXpgmxhMHNwSRkZC56733559;     iQmFXpgmxhMHNwSRkZC56733559 = iQmFXpgmxhMHNwSRkZC29979177;     iQmFXpgmxhMHNwSRkZC29979177 = iQmFXpgmxhMHNwSRkZC67481982;     iQmFXpgmxhMHNwSRkZC67481982 = iQmFXpgmxhMHNwSRkZC50235629;     iQmFXpgmxhMHNwSRkZC50235629 = iQmFXpgmxhMHNwSRkZC89740812;     iQmFXpgmxhMHNwSRkZC89740812 = iQmFXpgmxhMHNwSRkZC6018469;     iQmFXpgmxhMHNwSRkZC6018469 = iQmFXpgmxhMHNwSRkZC84265069;     iQmFXpgmxhMHNwSRkZC84265069 = iQmFXpgmxhMHNwSRkZC86065061;     iQmFXpgmxhMHNwSRkZC86065061 = iQmFXpgmxhMHNwSRkZC45927006;     iQmFXpgmxhMHNwSRkZC45927006 = iQmFXpgmxhMHNwSRkZC1850684;     iQmFXpgmxhMHNwSRkZC1850684 = iQmFXpgmxhMHNwSRkZC33469373;     iQmFXpgmxhMHNwSRkZC33469373 = iQmFXpgmxhMHNwSRkZC90399766;     iQmFXpgmxhMHNwSRkZC90399766 = iQmFXpgmxhMHNwSRkZC56700254;     iQmFXpgmxhMHNwSRkZC56700254 = iQmFXpgmxhMHNwSRkZC59553128;     iQmFXpgmxhMHNwSRkZC59553128 = iQmFXpgmxhMHNwSRkZC9773125;     iQmFXpgmxhMHNwSRkZC9773125 = iQmFXpgmxhMHNwSRkZC74915262;     iQmFXpgmxhMHNwSRkZC74915262 = iQmFXpgmxhMHNwSRkZC97896942;     iQmFXpgmxhMHNwSRkZC97896942 = iQmFXpgmxhMHNwSRkZC59706629;     iQmFXpgmxhMHNwSRkZC59706629 = iQmFXpgmxhMHNwSRkZC40094195;     iQmFXpgmxhMHNwSRkZC40094195 = iQmFXpgmxhMHNwSRkZC75984440;     iQmFXpgmxhMHNwSRkZC75984440 = iQmFXpgmxhMHNwSRkZC55609974;     iQmFXpgmxhMHNwSRkZC55609974 = iQmFXpgmxhMHNwSRkZC74059260;     iQmFXpgmxhMHNwSRkZC74059260 = iQmFXpgmxhMHNwSRkZC43924852;     iQmFXpgmxhMHNwSRkZC43924852 = iQmFXpgmxhMHNwSRkZC97812649;     iQmFXpgmxhMHNwSRkZC97812649 = iQmFXpgmxhMHNwSRkZC58179004;     iQmFXpgmxhMHNwSRkZC58179004 = iQmFXpgmxhMHNwSRkZC38466872;     iQmFXpgmxhMHNwSRkZC38466872 = iQmFXpgmxhMHNwSRkZC12582010;     iQmFXpgmxhMHNwSRkZC12582010 = iQmFXpgmxhMHNwSRkZC38061179;     iQmFXpgmxhMHNwSRkZC38061179 = iQmFXpgmxhMHNwSRkZC96377398;     iQmFXpgmxhMHNwSRkZC96377398 = iQmFXpgmxhMHNwSRkZC33508944;     iQmFXpgmxhMHNwSRkZC33508944 = iQmFXpgmxhMHNwSRkZC98427883;     iQmFXpgmxhMHNwSRkZC98427883 = iQmFXpgmxhMHNwSRkZC4398886;     iQmFXpgmxhMHNwSRkZC4398886 = iQmFXpgmxhMHNwSRkZC73950108;     iQmFXpgmxhMHNwSRkZC73950108 = iQmFXpgmxhMHNwSRkZC80287482;     iQmFXpgmxhMHNwSRkZC80287482 = iQmFXpgmxhMHNwSRkZC29903388;     iQmFXpgmxhMHNwSRkZC29903388 = iQmFXpgmxhMHNwSRkZC31750795;     iQmFXpgmxhMHNwSRkZC31750795 = iQmFXpgmxhMHNwSRkZC30852627;     iQmFXpgmxhMHNwSRkZC30852627 = iQmFXpgmxhMHNwSRkZC54096130;     iQmFXpgmxhMHNwSRkZC54096130 = iQmFXpgmxhMHNwSRkZC8227120;     iQmFXpgmxhMHNwSRkZC8227120 = iQmFXpgmxhMHNwSRkZC97358832;     iQmFXpgmxhMHNwSRkZC97358832 = iQmFXpgmxhMHNwSRkZC2894745;     iQmFXpgmxhMHNwSRkZC2894745 = iQmFXpgmxhMHNwSRkZC18266099;     iQmFXpgmxhMHNwSRkZC18266099 = iQmFXpgmxhMHNwSRkZC82611028;     iQmFXpgmxhMHNwSRkZC82611028 = iQmFXpgmxhMHNwSRkZC92475595;     iQmFXpgmxhMHNwSRkZC92475595 = iQmFXpgmxhMHNwSRkZC70239884;     iQmFXpgmxhMHNwSRkZC70239884 = iQmFXpgmxhMHNwSRkZC35604754;     iQmFXpgmxhMHNwSRkZC35604754 = iQmFXpgmxhMHNwSRkZC11735824;     iQmFXpgmxhMHNwSRkZC11735824 = iQmFXpgmxhMHNwSRkZC10225447;     iQmFXpgmxhMHNwSRkZC10225447 = iQmFXpgmxhMHNwSRkZC75146205;     iQmFXpgmxhMHNwSRkZC75146205 = iQmFXpgmxhMHNwSRkZC38358315;     iQmFXpgmxhMHNwSRkZC38358315 = iQmFXpgmxhMHNwSRkZC58564069;     iQmFXpgmxhMHNwSRkZC58564069 = iQmFXpgmxhMHNwSRkZC22259028;     iQmFXpgmxhMHNwSRkZC22259028 = iQmFXpgmxhMHNwSRkZC70082822;     iQmFXpgmxhMHNwSRkZC70082822 = iQmFXpgmxhMHNwSRkZC78646401;     iQmFXpgmxhMHNwSRkZC78646401 = iQmFXpgmxhMHNwSRkZC69242035;     iQmFXpgmxhMHNwSRkZC69242035 = iQmFXpgmxhMHNwSRkZC82674298;     iQmFXpgmxhMHNwSRkZC82674298 = iQmFXpgmxhMHNwSRkZC86054324;     iQmFXpgmxhMHNwSRkZC86054324 = iQmFXpgmxhMHNwSRkZC69669333;     iQmFXpgmxhMHNwSRkZC69669333 = iQmFXpgmxhMHNwSRkZC92056625;     iQmFXpgmxhMHNwSRkZC92056625 = iQmFXpgmxhMHNwSRkZC51273940;     iQmFXpgmxhMHNwSRkZC51273940 = iQmFXpgmxhMHNwSRkZC93436459;     iQmFXpgmxhMHNwSRkZC93436459 = iQmFXpgmxhMHNwSRkZC46203891;     iQmFXpgmxhMHNwSRkZC46203891 = iQmFXpgmxhMHNwSRkZC89687663;     iQmFXpgmxhMHNwSRkZC89687663 = iQmFXpgmxhMHNwSRkZC12418062;     iQmFXpgmxhMHNwSRkZC12418062 = iQmFXpgmxhMHNwSRkZC3422800;     iQmFXpgmxhMHNwSRkZC3422800 = iQmFXpgmxhMHNwSRkZC29070487;     iQmFXpgmxhMHNwSRkZC29070487 = iQmFXpgmxhMHNwSRkZC16449658;     iQmFXpgmxhMHNwSRkZC16449658 = iQmFXpgmxhMHNwSRkZC76412771;     iQmFXpgmxhMHNwSRkZC76412771 = iQmFXpgmxhMHNwSRkZC29649740;     iQmFXpgmxhMHNwSRkZC29649740 = iQmFXpgmxhMHNwSRkZC78022330;     iQmFXpgmxhMHNwSRkZC78022330 = iQmFXpgmxhMHNwSRkZC44062636;     iQmFXpgmxhMHNwSRkZC44062636 = iQmFXpgmxhMHNwSRkZC82360583;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void UIZbdiXTXPyGxdsmgVVPqbPbBfvbJeaHgdvOsxELGaoDhOUGTnmafHjss11856812() {     long xaxnwJtoqaThdtiRKJPnMumLp79792664 = -360438792;    long xaxnwJtoqaThdtiRKJPnMumLp74311142 = -357356989;    long xaxnwJtoqaThdtiRKJPnMumLp41214787 = -42462065;    long xaxnwJtoqaThdtiRKJPnMumLp53947458 = -920871567;    long xaxnwJtoqaThdtiRKJPnMumLp94574294 = -350511303;    long xaxnwJtoqaThdtiRKJPnMumLp94906026 = -21007207;    long xaxnwJtoqaThdtiRKJPnMumLp68662098 = -338192722;    long xaxnwJtoqaThdtiRKJPnMumLp32525160 = -182537775;    long xaxnwJtoqaThdtiRKJPnMumLp64719891 = -63464732;    long xaxnwJtoqaThdtiRKJPnMumLp11126411 = -376832752;    long xaxnwJtoqaThdtiRKJPnMumLp29801871 = -478065953;    long xaxnwJtoqaThdtiRKJPnMumLp82753671 = -785812154;    long xaxnwJtoqaThdtiRKJPnMumLp72293016 = -635348088;    long xaxnwJtoqaThdtiRKJPnMumLp78336900 = -256874766;    long xaxnwJtoqaThdtiRKJPnMumLp81199583 = -260132914;    long xaxnwJtoqaThdtiRKJPnMumLp19306010 = -576851403;    long xaxnwJtoqaThdtiRKJPnMumLp48264756 = -268569550;    long xaxnwJtoqaThdtiRKJPnMumLp40798400 = -631688594;    long xaxnwJtoqaThdtiRKJPnMumLp20522505 = 76440025;    long xaxnwJtoqaThdtiRKJPnMumLp75969688 = -719184341;    long xaxnwJtoqaThdtiRKJPnMumLp40334075 = -201510535;    long xaxnwJtoqaThdtiRKJPnMumLp85604056 = -404464808;    long xaxnwJtoqaThdtiRKJPnMumLp10234283 = -519106833;    long xaxnwJtoqaThdtiRKJPnMumLp86374267 = -338013024;    long xaxnwJtoqaThdtiRKJPnMumLp92988660 = -85196342;    long xaxnwJtoqaThdtiRKJPnMumLp53989831 = -343271791;    long xaxnwJtoqaThdtiRKJPnMumLp7825670 = -942555199;    long xaxnwJtoqaThdtiRKJPnMumLp29752631 = -48259207;    long xaxnwJtoqaThdtiRKJPnMumLp10085380 = -633517482;    long xaxnwJtoqaThdtiRKJPnMumLp76062579 = -992651915;    long xaxnwJtoqaThdtiRKJPnMumLp44564963 = -869671539;    long xaxnwJtoqaThdtiRKJPnMumLp82453018 = 61867080;    long xaxnwJtoqaThdtiRKJPnMumLp41308896 = -499085978;    long xaxnwJtoqaThdtiRKJPnMumLp50049096 = -952091960;    long xaxnwJtoqaThdtiRKJPnMumLp6172437 = -612139676;    long xaxnwJtoqaThdtiRKJPnMumLp31056237 = -836081004;    long xaxnwJtoqaThdtiRKJPnMumLp57221983 = -322802603;    long xaxnwJtoqaThdtiRKJPnMumLp52000649 = -282554740;    long xaxnwJtoqaThdtiRKJPnMumLp97430486 = -670962519;    long xaxnwJtoqaThdtiRKJPnMumLp87143134 = -980202388;    long xaxnwJtoqaThdtiRKJPnMumLp7105574 = -110447013;    long xaxnwJtoqaThdtiRKJPnMumLp25462907 = -995114319;    long xaxnwJtoqaThdtiRKJPnMumLp38863999 = -976177932;    long xaxnwJtoqaThdtiRKJPnMumLp65629046 = -759377293;    long xaxnwJtoqaThdtiRKJPnMumLp64683921 = -290111929;    long xaxnwJtoqaThdtiRKJPnMumLp99586703 = -477414695;    long xaxnwJtoqaThdtiRKJPnMumLp80666012 = -238455820;    long xaxnwJtoqaThdtiRKJPnMumLp59213366 = -741664859;    long xaxnwJtoqaThdtiRKJPnMumLp57336840 = -14560828;    long xaxnwJtoqaThdtiRKJPnMumLp21128455 = -322458047;    long xaxnwJtoqaThdtiRKJPnMumLp85263451 = -981273283;    long xaxnwJtoqaThdtiRKJPnMumLp3532212 = -235057015;    long xaxnwJtoqaThdtiRKJPnMumLp7694118 = -424166471;    long xaxnwJtoqaThdtiRKJPnMumLp54003684 = -191072079;    long xaxnwJtoqaThdtiRKJPnMumLp71522736 = -507803702;    long xaxnwJtoqaThdtiRKJPnMumLp94188607 = -955973985;    long xaxnwJtoqaThdtiRKJPnMumLp64076859 = -838250156;    long xaxnwJtoqaThdtiRKJPnMumLp54840520 = -704449042;    long xaxnwJtoqaThdtiRKJPnMumLp60958797 = -735675225;    long xaxnwJtoqaThdtiRKJPnMumLp40584463 = 92760488;    long xaxnwJtoqaThdtiRKJPnMumLp87080357 = -78452009;    long xaxnwJtoqaThdtiRKJPnMumLp38909468 = -189933515;    long xaxnwJtoqaThdtiRKJPnMumLp22439781 = -549020294;    long xaxnwJtoqaThdtiRKJPnMumLp88657312 = -70812818;    long xaxnwJtoqaThdtiRKJPnMumLp66561448 = -507161214;    long xaxnwJtoqaThdtiRKJPnMumLp47348852 = -439933033;    long xaxnwJtoqaThdtiRKJPnMumLp41444775 = -186726176;    long xaxnwJtoqaThdtiRKJPnMumLp22243921 = -683256128;    long xaxnwJtoqaThdtiRKJPnMumLp72164463 = -644735091;    long xaxnwJtoqaThdtiRKJPnMumLp50143346 = -424051911;    long xaxnwJtoqaThdtiRKJPnMumLp62084027 = -154048801;    long xaxnwJtoqaThdtiRKJPnMumLp96264107 = -986014811;    long xaxnwJtoqaThdtiRKJPnMumLp43367914 = -960726075;    long xaxnwJtoqaThdtiRKJPnMumLp33379370 = 56642413;    long xaxnwJtoqaThdtiRKJPnMumLp68864114 = -508737329;    long xaxnwJtoqaThdtiRKJPnMumLp14871169 = -206396217;    long xaxnwJtoqaThdtiRKJPnMumLp46740058 = -428286876;    long xaxnwJtoqaThdtiRKJPnMumLp44605237 = -759729541;    long xaxnwJtoqaThdtiRKJPnMumLp21690346 = 52098905;    long xaxnwJtoqaThdtiRKJPnMumLp93401957 = -607781647;    long xaxnwJtoqaThdtiRKJPnMumLp73323819 = -4815972;    long xaxnwJtoqaThdtiRKJPnMumLp48612303 = -100890341;    long xaxnwJtoqaThdtiRKJPnMumLp72415790 = 66301621;    long xaxnwJtoqaThdtiRKJPnMumLp88956925 = -211059435;    long xaxnwJtoqaThdtiRKJPnMumLp90799127 = 88621367;    long xaxnwJtoqaThdtiRKJPnMumLp41032752 = -534614524;    long xaxnwJtoqaThdtiRKJPnMumLp74758900 = -513966450;    long xaxnwJtoqaThdtiRKJPnMumLp87305212 = -208013899;    long xaxnwJtoqaThdtiRKJPnMumLp78526359 = -344288258;    long xaxnwJtoqaThdtiRKJPnMumLp11983829 = -656165691;    long xaxnwJtoqaThdtiRKJPnMumLp66979377 = -997830849;    long xaxnwJtoqaThdtiRKJPnMumLp2381464 = -618353561;    long xaxnwJtoqaThdtiRKJPnMumLp91041852 = -546879515;    long xaxnwJtoqaThdtiRKJPnMumLp56846023 = -663723008;    long xaxnwJtoqaThdtiRKJPnMumLp62778 = -801750380;    long xaxnwJtoqaThdtiRKJPnMumLp68196106 = -920513498;    long xaxnwJtoqaThdtiRKJPnMumLp3023127 = -346094026;    long xaxnwJtoqaThdtiRKJPnMumLp50206687 = -805365115;    long xaxnwJtoqaThdtiRKJPnMumLp99067598 = -152216080;    long xaxnwJtoqaThdtiRKJPnMumLp17335070 = -360438792;     xaxnwJtoqaThdtiRKJPnMumLp79792664 = xaxnwJtoqaThdtiRKJPnMumLp74311142;     xaxnwJtoqaThdtiRKJPnMumLp74311142 = xaxnwJtoqaThdtiRKJPnMumLp41214787;     xaxnwJtoqaThdtiRKJPnMumLp41214787 = xaxnwJtoqaThdtiRKJPnMumLp53947458;     xaxnwJtoqaThdtiRKJPnMumLp53947458 = xaxnwJtoqaThdtiRKJPnMumLp94574294;     xaxnwJtoqaThdtiRKJPnMumLp94574294 = xaxnwJtoqaThdtiRKJPnMumLp94906026;     xaxnwJtoqaThdtiRKJPnMumLp94906026 = xaxnwJtoqaThdtiRKJPnMumLp68662098;     xaxnwJtoqaThdtiRKJPnMumLp68662098 = xaxnwJtoqaThdtiRKJPnMumLp32525160;     xaxnwJtoqaThdtiRKJPnMumLp32525160 = xaxnwJtoqaThdtiRKJPnMumLp64719891;     xaxnwJtoqaThdtiRKJPnMumLp64719891 = xaxnwJtoqaThdtiRKJPnMumLp11126411;     xaxnwJtoqaThdtiRKJPnMumLp11126411 = xaxnwJtoqaThdtiRKJPnMumLp29801871;     xaxnwJtoqaThdtiRKJPnMumLp29801871 = xaxnwJtoqaThdtiRKJPnMumLp82753671;     xaxnwJtoqaThdtiRKJPnMumLp82753671 = xaxnwJtoqaThdtiRKJPnMumLp72293016;     xaxnwJtoqaThdtiRKJPnMumLp72293016 = xaxnwJtoqaThdtiRKJPnMumLp78336900;     xaxnwJtoqaThdtiRKJPnMumLp78336900 = xaxnwJtoqaThdtiRKJPnMumLp81199583;     xaxnwJtoqaThdtiRKJPnMumLp81199583 = xaxnwJtoqaThdtiRKJPnMumLp19306010;     xaxnwJtoqaThdtiRKJPnMumLp19306010 = xaxnwJtoqaThdtiRKJPnMumLp48264756;     xaxnwJtoqaThdtiRKJPnMumLp48264756 = xaxnwJtoqaThdtiRKJPnMumLp40798400;     xaxnwJtoqaThdtiRKJPnMumLp40798400 = xaxnwJtoqaThdtiRKJPnMumLp20522505;     xaxnwJtoqaThdtiRKJPnMumLp20522505 = xaxnwJtoqaThdtiRKJPnMumLp75969688;     xaxnwJtoqaThdtiRKJPnMumLp75969688 = xaxnwJtoqaThdtiRKJPnMumLp40334075;     xaxnwJtoqaThdtiRKJPnMumLp40334075 = xaxnwJtoqaThdtiRKJPnMumLp85604056;     xaxnwJtoqaThdtiRKJPnMumLp85604056 = xaxnwJtoqaThdtiRKJPnMumLp10234283;     xaxnwJtoqaThdtiRKJPnMumLp10234283 = xaxnwJtoqaThdtiRKJPnMumLp86374267;     xaxnwJtoqaThdtiRKJPnMumLp86374267 = xaxnwJtoqaThdtiRKJPnMumLp92988660;     xaxnwJtoqaThdtiRKJPnMumLp92988660 = xaxnwJtoqaThdtiRKJPnMumLp53989831;     xaxnwJtoqaThdtiRKJPnMumLp53989831 = xaxnwJtoqaThdtiRKJPnMumLp7825670;     xaxnwJtoqaThdtiRKJPnMumLp7825670 = xaxnwJtoqaThdtiRKJPnMumLp29752631;     xaxnwJtoqaThdtiRKJPnMumLp29752631 = xaxnwJtoqaThdtiRKJPnMumLp10085380;     xaxnwJtoqaThdtiRKJPnMumLp10085380 = xaxnwJtoqaThdtiRKJPnMumLp76062579;     xaxnwJtoqaThdtiRKJPnMumLp76062579 = xaxnwJtoqaThdtiRKJPnMumLp44564963;     xaxnwJtoqaThdtiRKJPnMumLp44564963 = xaxnwJtoqaThdtiRKJPnMumLp82453018;     xaxnwJtoqaThdtiRKJPnMumLp82453018 = xaxnwJtoqaThdtiRKJPnMumLp41308896;     xaxnwJtoqaThdtiRKJPnMumLp41308896 = xaxnwJtoqaThdtiRKJPnMumLp50049096;     xaxnwJtoqaThdtiRKJPnMumLp50049096 = xaxnwJtoqaThdtiRKJPnMumLp6172437;     xaxnwJtoqaThdtiRKJPnMumLp6172437 = xaxnwJtoqaThdtiRKJPnMumLp31056237;     xaxnwJtoqaThdtiRKJPnMumLp31056237 = xaxnwJtoqaThdtiRKJPnMumLp57221983;     xaxnwJtoqaThdtiRKJPnMumLp57221983 = xaxnwJtoqaThdtiRKJPnMumLp52000649;     xaxnwJtoqaThdtiRKJPnMumLp52000649 = xaxnwJtoqaThdtiRKJPnMumLp97430486;     xaxnwJtoqaThdtiRKJPnMumLp97430486 = xaxnwJtoqaThdtiRKJPnMumLp87143134;     xaxnwJtoqaThdtiRKJPnMumLp87143134 = xaxnwJtoqaThdtiRKJPnMumLp7105574;     xaxnwJtoqaThdtiRKJPnMumLp7105574 = xaxnwJtoqaThdtiRKJPnMumLp25462907;     xaxnwJtoqaThdtiRKJPnMumLp25462907 = xaxnwJtoqaThdtiRKJPnMumLp38863999;     xaxnwJtoqaThdtiRKJPnMumLp38863999 = xaxnwJtoqaThdtiRKJPnMumLp65629046;     xaxnwJtoqaThdtiRKJPnMumLp65629046 = xaxnwJtoqaThdtiRKJPnMumLp64683921;     xaxnwJtoqaThdtiRKJPnMumLp64683921 = xaxnwJtoqaThdtiRKJPnMumLp99586703;     xaxnwJtoqaThdtiRKJPnMumLp99586703 = xaxnwJtoqaThdtiRKJPnMumLp80666012;     xaxnwJtoqaThdtiRKJPnMumLp80666012 = xaxnwJtoqaThdtiRKJPnMumLp59213366;     xaxnwJtoqaThdtiRKJPnMumLp59213366 = xaxnwJtoqaThdtiRKJPnMumLp57336840;     xaxnwJtoqaThdtiRKJPnMumLp57336840 = xaxnwJtoqaThdtiRKJPnMumLp21128455;     xaxnwJtoqaThdtiRKJPnMumLp21128455 = xaxnwJtoqaThdtiRKJPnMumLp85263451;     xaxnwJtoqaThdtiRKJPnMumLp85263451 = xaxnwJtoqaThdtiRKJPnMumLp3532212;     xaxnwJtoqaThdtiRKJPnMumLp3532212 = xaxnwJtoqaThdtiRKJPnMumLp7694118;     xaxnwJtoqaThdtiRKJPnMumLp7694118 = xaxnwJtoqaThdtiRKJPnMumLp54003684;     xaxnwJtoqaThdtiRKJPnMumLp54003684 = xaxnwJtoqaThdtiRKJPnMumLp71522736;     xaxnwJtoqaThdtiRKJPnMumLp71522736 = xaxnwJtoqaThdtiRKJPnMumLp94188607;     xaxnwJtoqaThdtiRKJPnMumLp94188607 = xaxnwJtoqaThdtiRKJPnMumLp64076859;     xaxnwJtoqaThdtiRKJPnMumLp64076859 = xaxnwJtoqaThdtiRKJPnMumLp54840520;     xaxnwJtoqaThdtiRKJPnMumLp54840520 = xaxnwJtoqaThdtiRKJPnMumLp60958797;     xaxnwJtoqaThdtiRKJPnMumLp60958797 = xaxnwJtoqaThdtiRKJPnMumLp40584463;     xaxnwJtoqaThdtiRKJPnMumLp40584463 = xaxnwJtoqaThdtiRKJPnMumLp87080357;     xaxnwJtoqaThdtiRKJPnMumLp87080357 = xaxnwJtoqaThdtiRKJPnMumLp38909468;     xaxnwJtoqaThdtiRKJPnMumLp38909468 = xaxnwJtoqaThdtiRKJPnMumLp22439781;     xaxnwJtoqaThdtiRKJPnMumLp22439781 = xaxnwJtoqaThdtiRKJPnMumLp88657312;     xaxnwJtoqaThdtiRKJPnMumLp88657312 = xaxnwJtoqaThdtiRKJPnMumLp66561448;     xaxnwJtoqaThdtiRKJPnMumLp66561448 = xaxnwJtoqaThdtiRKJPnMumLp47348852;     xaxnwJtoqaThdtiRKJPnMumLp47348852 = xaxnwJtoqaThdtiRKJPnMumLp41444775;     xaxnwJtoqaThdtiRKJPnMumLp41444775 = xaxnwJtoqaThdtiRKJPnMumLp22243921;     xaxnwJtoqaThdtiRKJPnMumLp22243921 = xaxnwJtoqaThdtiRKJPnMumLp72164463;     xaxnwJtoqaThdtiRKJPnMumLp72164463 = xaxnwJtoqaThdtiRKJPnMumLp50143346;     xaxnwJtoqaThdtiRKJPnMumLp50143346 = xaxnwJtoqaThdtiRKJPnMumLp62084027;     xaxnwJtoqaThdtiRKJPnMumLp62084027 = xaxnwJtoqaThdtiRKJPnMumLp96264107;     xaxnwJtoqaThdtiRKJPnMumLp96264107 = xaxnwJtoqaThdtiRKJPnMumLp43367914;     xaxnwJtoqaThdtiRKJPnMumLp43367914 = xaxnwJtoqaThdtiRKJPnMumLp33379370;     xaxnwJtoqaThdtiRKJPnMumLp33379370 = xaxnwJtoqaThdtiRKJPnMumLp68864114;     xaxnwJtoqaThdtiRKJPnMumLp68864114 = xaxnwJtoqaThdtiRKJPnMumLp14871169;     xaxnwJtoqaThdtiRKJPnMumLp14871169 = xaxnwJtoqaThdtiRKJPnMumLp46740058;     xaxnwJtoqaThdtiRKJPnMumLp46740058 = xaxnwJtoqaThdtiRKJPnMumLp44605237;     xaxnwJtoqaThdtiRKJPnMumLp44605237 = xaxnwJtoqaThdtiRKJPnMumLp21690346;     xaxnwJtoqaThdtiRKJPnMumLp21690346 = xaxnwJtoqaThdtiRKJPnMumLp93401957;     xaxnwJtoqaThdtiRKJPnMumLp93401957 = xaxnwJtoqaThdtiRKJPnMumLp73323819;     xaxnwJtoqaThdtiRKJPnMumLp73323819 = xaxnwJtoqaThdtiRKJPnMumLp48612303;     xaxnwJtoqaThdtiRKJPnMumLp48612303 = xaxnwJtoqaThdtiRKJPnMumLp72415790;     xaxnwJtoqaThdtiRKJPnMumLp72415790 = xaxnwJtoqaThdtiRKJPnMumLp88956925;     xaxnwJtoqaThdtiRKJPnMumLp88956925 = xaxnwJtoqaThdtiRKJPnMumLp90799127;     xaxnwJtoqaThdtiRKJPnMumLp90799127 = xaxnwJtoqaThdtiRKJPnMumLp41032752;     xaxnwJtoqaThdtiRKJPnMumLp41032752 = xaxnwJtoqaThdtiRKJPnMumLp74758900;     xaxnwJtoqaThdtiRKJPnMumLp74758900 = xaxnwJtoqaThdtiRKJPnMumLp87305212;     xaxnwJtoqaThdtiRKJPnMumLp87305212 = xaxnwJtoqaThdtiRKJPnMumLp78526359;     xaxnwJtoqaThdtiRKJPnMumLp78526359 = xaxnwJtoqaThdtiRKJPnMumLp11983829;     xaxnwJtoqaThdtiRKJPnMumLp11983829 = xaxnwJtoqaThdtiRKJPnMumLp66979377;     xaxnwJtoqaThdtiRKJPnMumLp66979377 = xaxnwJtoqaThdtiRKJPnMumLp2381464;     xaxnwJtoqaThdtiRKJPnMumLp2381464 = xaxnwJtoqaThdtiRKJPnMumLp91041852;     xaxnwJtoqaThdtiRKJPnMumLp91041852 = xaxnwJtoqaThdtiRKJPnMumLp56846023;     xaxnwJtoqaThdtiRKJPnMumLp56846023 = xaxnwJtoqaThdtiRKJPnMumLp62778;     xaxnwJtoqaThdtiRKJPnMumLp62778 = xaxnwJtoqaThdtiRKJPnMumLp68196106;     xaxnwJtoqaThdtiRKJPnMumLp68196106 = xaxnwJtoqaThdtiRKJPnMumLp3023127;     xaxnwJtoqaThdtiRKJPnMumLp3023127 = xaxnwJtoqaThdtiRKJPnMumLp50206687;     xaxnwJtoqaThdtiRKJPnMumLp50206687 = xaxnwJtoqaThdtiRKJPnMumLp99067598;     xaxnwJtoqaThdtiRKJPnMumLp99067598 = xaxnwJtoqaThdtiRKJPnMumLp17335070;     xaxnwJtoqaThdtiRKJPnMumLp17335070 = xaxnwJtoqaThdtiRKJPnMumLp79792664;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void FadzmfeQPEggYJSgQEIcCMStrInksmRPXZFxNGhYbpCdeZrakkclvbvsI26905880() {     long jHertXcnQJzEVTKWkANJoOSRN85909771 = -472340681;    long jHertXcnQJzEVTKWkANJoOSRN17684422 = -66956770;    long jHertXcnQJzEVTKWkANJoOSRN57256970 = -193294987;    long jHertXcnQJzEVTKWkANJoOSRN81022238 = -11620197;    long jHertXcnQJzEVTKWkANJoOSRN63469783 = -871161174;    long jHertXcnQJzEVTKWkANJoOSRN86323229 = -285503442;    long jHertXcnQJzEVTKWkANJoOSRN29151065 = -477157699;    long jHertXcnQJzEVTKWkANJoOSRN82285051 = -469411688;    long jHertXcnQJzEVTKWkANJoOSRN29362387 = -931497398;    long jHertXcnQJzEVTKWkANJoOSRN52356070 = -705808230;    long jHertXcnQJzEVTKWkANJoOSRN89912160 = -355503540;    long jHertXcnQJzEVTKWkANJoOSRN14576714 = -130218355;    long jHertXcnQJzEVTKWkANJoOSRN58502135 = 24760823;    long jHertXcnQJzEVTKWkANJoOSRN61480576 = -789113334;    long jHertXcnQJzEVTKWkANJoOSRN76942009 = -950595081;    long jHertXcnQJzEVTKWkANJoOSRN60811404 = -549850946;    long jHertXcnQJzEVTKWkANJoOSRN42100760 = -885114663;    long jHertXcnQJzEVTKWkANJoOSRN37851553 = -297211237;    long jHertXcnQJzEVTKWkANJoOSRN82352346 = -329329072;    long jHertXcnQJzEVTKWkANJoOSRN56519852 = 23912739;    long jHertXcnQJzEVTKWkANJoOSRN28887269 = -56997991;    long jHertXcnQJzEVTKWkANJoOSRN72125080 = -312394524;    long jHertXcnQJzEVTKWkANJoOSRN45825075 = -265624320;    long jHertXcnQJzEVTKWkANJoOSRN70366641 = -560318012;    long jHertXcnQJzEVTKWkANJoOSRN36688311 = -458392375;    long jHertXcnQJzEVTKWkANJoOSRN78711506 = -221927115;    long jHertXcnQJzEVTKWkANJoOSRN6285448 = -843217402;    long jHertXcnQJzEVTKWkANJoOSRN42859756 = -114188161;    long jHertXcnQJzEVTKWkANJoOSRN76217635 = -855900186;    long jHertXcnQJzEVTKWkANJoOSRN44678216 = -810122783;    long jHertXcnQJzEVTKWkANJoOSRN36807513 = -782992477;    long jHertXcnQJzEVTKWkANJoOSRN80063640 = -747579736;    long jHertXcnQJzEVTKWkANJoOSRN51019845 = -391699348;    long jHertXcnQJzEVTKWkANJoOSRN44879660 = -703633726;    long jHertXcnQJzEVTKWkANJoOSRN67647088 = -150872781;    long jHertXcnQJzEVTKWkANJoOSRN99782149 = 49892888;    long jHertXcnQJzEVTKWkANJoOSRN38483917 = -276438472;    long jHertXcnQJzEVTKWkANJoOSRN86090861 = -54060749;    long jHertXcnQJzEVTKWkANJoOSRN71040740 = -664886016;    long jHertXcnQJzEVTKWkANJoOSRN74645072 = -353641610;    long jHertXcnQJzEVTKWkANJoOSRN12774798 = -175720907;    long jHertXcnQJzEVTKWkANJoOSRN57613364 = -165256597;    long jHertXcnQJzEVTKWkANJoOSRN16930977 = 43017484;    long jHertXcnQJzEVTKWkANJoOSRN53036786 = -778720231;    long jHertXcnQJzEVTKWkANJoOSRN76636386 = 47989917;    long jHertXcnQJzEVTKWkANJoOSRN11525899 = -462630812;    long jHertXcnQJzEVTKWkANJoOSRN98444586 = -357231358;    long jHertXcnQJzEVTKWkANJoOSRN67170307 = -751560391;    long jHertXcnQJzEVTKWkANJoOSRN67012569 = -100297817;    long jHertXcnQJzEVTKWkANJoOSRN34040107 = -409468855;    long jHertXcnQJzEVTKWkANJoOSRN20964130 = -823566954;    long jHertXcnQJzEVTKWkANJoOSRN14341932 = -35783335;    long jHertXcnQJzEVTKWkANJoOSRN55942575 = -215956059;    long jHertXcnQJzEVTKWkANJoOSRN49972564 = -511542224;    long jHertXcnQJzEVTKWkANJoOSRN98018611 = -108335485;    long jHertXcnQJzEVTKWkANJoOSRN13784691 = -59946157;    long jHertXcnQJzEVTKWkANJoOSRN71859347 = -801332450;    long jHertXcnQJzEVTKWkANJoOSRN86890329 = -632976975;    long jHertXcnQJzEVTKWkANJoOSRN44333928 = -553227823;    long jHertXcnQJzEVTKWkANJoOSRN84758276 = -549234060;    long jHertXcnQJzEVTKWkANJoOSRN80037781 = -442286041;    long jHertXcnQJzEVTKWkANJoOSRN86291308 = -262969539;    long jHertXcnQJzEVTKWkANJoOSRN6067416 = -613511502;    long jHertXcnQJzEVTKWkANJoOSRN84684170 = -21374616;    long jHertXcnQJzEVTKWkANJoOSRN15548558 = -922815753;    long jHertXcnQJzEVTKWkANJoOSRN9848521 = -607923804;    long jHertXcnQJzEVTKWkANJoOSRN63556869 = -738519008;    long jHertXcnQJzEVTKWkANJoOSRN13622475 = -271605452;    long jHertXcnQJzEVTKWkANJoOSRN93833487 = -538240554;    long jHertXcnQJzEVTKWkANJoOSRN77159860 = -900487969;    long jHertXcnQJzEVTKWkANJoOSRN22327487 = -173412474;    long jHertXcnQJzEVTKWkANJoOSRN56009898 = -731053914;    long jHertXcnQJzEVTKWkANJoOSRN66810813 = -632325221;    long jHertXcnQJzEVTKWkANJoOSRN7707274 = -975687462;    long jHertXcnQJzEVTKWkANJoOSRN43745055 = -800366354;    long jHertXcnQJzEVTKWkANJoOSRN71273904 = -891741394;    long jHertXcnQJzEVTKWkANJoOSRN55194103 = -255412009;    long jHertXcnQJzEVTKWkANJoOSRN92788288 = -486904089;    long jHertXcnQJzEVTKWkANJoOSRN93730254 = -508307929;    long jHertXcnQJzEVTKWkANJoOSRN25162413 = -995761564;    long jHertXcnQJzEVTKWkANJoOSRN80266920 = -864695758;    long jHertXcnQJzEVTKWkANJoOSRN39115140 = 8342989;    long jHertXcnQJzEVTKWkANJoOSRN75847186 = 86109655;    long jHertXcnQJzEVTKWkANJoOSRN42177528 = -346431331;    long jHertXcnQJzEVTKWkANJoOSRN23714086 = -986555829;    long jHertXcnQJzEVTKWkANJoOSRN22465582 = -647209142;    long jHertXcnQJzEVTKWkANJoOSRN24121065 = -431623678;    long jHertXcnQJzEVTKWkANJoOSRN1047281 = -880157124;    long jHertXcnQJzEVTKWkANJoOSRN46861049 = -495298241;    long jHertXcnQJzEVTKWkANJoOSRN53862398 = 9073376;    long jHertXcnQJzEVTKWkANJoOSRN27922803 = -148774662;    long jHertXcnQJzEVTKWkANJoOSRN51593588 = -643461498;    long jHertXcnQJzEVTKWkANJoOSRN41756934 = -500832927;    long jHertXcnQJzEVTKWkANJoOSRN86282464 = -15651956;    long jHertXcnQJzEVTKWkANJoOSRN94607290 = -911355570;    long jHertXcnQJzEVTKWkANJoOSRN26483490 = -912751369;    long jHertXcnQJzEVTKWkANJoOSRN51545948 = -551745095;    long jHertXcnQJzEVTKWkANJoOSRN32246807 = -935607901;    long jHertXcnQJzEVTKWkANJoOSRN37488229 = -855904479;    long jHertXcnQJzEVTKWkANJoOSRN66787866 = -472340681;     jHertXcnQJzEVTKWkANJoOSRN85909771 = jHertXcnQJzEVTKWkANJoOSRN17684422;     jHertXcnQJzEVTKWkANJoOSRN17684422 = jHertXcnQJzEVTKWkANJoOSRN57256970;     jHertXcnQJzEVTKWkANJoOSRN57256970 = jHertXcnQJzEVTKWkANJoOSRN81022238;     jHertXcnQJzEVTKWkANJoOSRN81022238 = jHertXcnQJzEVTKWkANJoOSRN63469783;     jHertXcnQJzEVTKWkANJoOSRN63469783 = jHertXcnQJzEVTKWkANJoOSRN86323229;     jHertXcnQJzEVTKWkANJoOSRN86323229 = jHertXcnQJzEVTKWkANJoOSRN29151065;     jHertXcnQJzEVTKWkANJoOSRN29151065 = jHertXcnQJzEVTKWkANJoOSRN82285051;     jHertXcnQJzEVTKWkANJoOSRN82285051 = jHertXcnQJzEVTKWkANJoOSRN29362387;     jHertXcnQJzEVTKWkANJoOSRN29362387 = jHertXcnQJzEVTKWkANJoOSRN52356070;     jHertXcnQJzEVTKWkANJoOSRN52356070 = jHertXcnQJzEVTKWkANJoOSRN89912160;     jHertXcnQJzEVTKWkANJoOSRN89912160 = jHertXcnQJzEVTKWkANJoOSRN14576714;     jHertXcnQJzEVTKWkANJoOSRN14576714 = jHertXcnQJzEVTKWkANJoOSRN58502135;     jHertXcnQJzEVTKWkANJoOSRN58502135 = jHertXcnQJzEVTKWkANJoOSRN61480576;     jHertXcnQJzEVTKWkANJoOSRN61480576 = jHertXcnQJzEVTKWkANJoOSRN76942009;     jHertXcnQJzEVTKWkANJoOSRN76942009 = jHertXcnQJzEVTKWkANJoOSRN60811404;     jHertXcnQJzEVTKWkANJoOSRN60811404 = jHertXcnQJzEVTKWkANJoOSRN42100760;     jHertXcnQJzEVTKWkANJoOSRN42100760 = jHertXcnQJzEVTKWkANJoOSRN37851553;     jHertXcnQJzEVTKWkANJoOSRN37851553 = jHertXcnQJzEVTKWkANJoOSRN82352346;     jHertXcnQJzEVTKWkANJoOSRN82352346 = jHertXcnQJzEVTKWkANJoOSRN56519852;     jHertXcnQJzEVTKWkANJoOSRN56519852 = jHertXcnQJzEVTKWkANJoOSRN28887269;     jHertXcnQJzEVTKWkANJoOSRN28887269 = jHertXcnQJzEVTKWkANJoOSRN72125080;     jHertXcnQJzEVTKWkANJoOSRN72125080 = jHertXcnQJzEVTKWkANJoOSRN45825075;     jHertXcnQJzEVTKWkANJoOSRN45825075 = jHertXcnQJzEVTKWkANJoOSRN70366641;     jHertXcnQJzEVTKWkANJoOSRN70366641 = jHertXcnQJzEVTKWkANJoOSRN36688311;     jHertXcnQJzEVTKWkANJoOSRN36688311 = jHertXcnQJzEVTKWkANJoOSRN78711506;     jHertXcnQJzEVTKWkANJoOSRN78711506 = jHertXcnQJzEVTKWkANJoOSRN6285448;     jHertXcnQJzEVTKWkANJoOSRN6285448 = jHertXcnQJzEVTKWkANJoOSRN42859756;     jHertXcnQJzEVTKWkANJoOSRN42859756 = jHertXcnQJzEVTKWkANJoOSRN76217635;     jHertXcnQJzEVTKWkANJoOSRN76217635 = jHertXcnQJzEVTKWkANJoOSRN44678216;     jHertXcnQJzEVTKWkANJoOSRN44678216 = jHertXcnQJzEVTKWkANJoOSRN36807513;     jHertXcnQJzEVTKWkANJoOSRN36807513 = jHertXcnQJzEVTKWkANJoOSRN80063640;     jHertXcnQJzEVTKWkANJoOSRN80063640 = jHertXcnQJzEVTKWkANJoOSRN51019845;     jHertXcnQJzEVTKWkANJoOSRN51019845 = jHertXcnQJzEVTKWkANJoOSRN44879660;     jHertXcnQJzEVTKWkANJoOSRN44879660 = jHertXcnQJzEVTKWkANJoOSRN67647088;     jHertXcnQJzEVTKWkANJoOSRN67647088 = jHertXcnQJzEVTKWkANJoOSRN99782149;     jHertXcnQJzEVTKWkANJoOSRN99782149 = jHertXcnQJzEVTKWkANJoOSRN38483917;     jHertXcnQJzEVTKWkANJoOSRN38483917 = jHertXcnQJzEVTKWkANJoOSRN86090861;     jHertXcnQJzEVTKWkANJoOSRN86090861 = jHertXcnQJzEVTKWkANJoOSRN71040740;     jHertXcnQJzEVTKWkANJoOSRN71040740 = jHertXcnQJzEVTKWkANJoOSRN74645072;     jHertXcnQJzEVTKWkANJoOSRN74645072 = jHertXcnQJzEVTKWkANJoOSRN12774798;     jHertXcnQJzEVTKWkANJoOSRN12774798 = jHertXcnQJzEVTKWkANJoOSRN57613364;     jHertXcnQJzEVTKWkANJoOSRN57613364 = jHertXcnQJzEVTKWkANJoOSRN16930977;     jHertXcnQJzEVTKWkANJoOSRN16930977 = jHertXcnQJzEVTKWkANJoOSRN53036786;     jHertXcnQJzEVTKWkANJoOSRN53036786 = jHertXcnQJzEVTKWkANJoOSRN76636386;     jHertXcnQJzEVTKWkANJoOSRN76636386 = jHertXcnQJzEVTKWkANJoOSRN11525899;     jHertXcnQJzEVTKWkANJoOSRN11525899 = jHertXcnQJzEVTKWkANJoOSRN98444586;     jHertXcnQJzEVTKWkANJoOSRN98444586 = jHertXcnQJzEVTKWkANJoOSRN67170307;     jHertXcnQJzEVTKWkANJoOSRN67170307 = jHertXcnQJzEVTKWkANJoOSRN67012569;     jHertXcnQJzEVTKWkANJoOSRN67012569 = jHertXcnQJzEVTKWkANJoOSRN34040107;     jHertXcnQJzEVTKWkANJoOSRN34040107 = jHertXcnQJzEVTKWkANJoOSRN20964130;     jHertXcnQJzEVTKWkANJoOSRN20964130 = jHertXcnQJzEVTKWkANJoOSRN14341932;     jHertXcnQJzEVTKWkANJoOSRN14341932 = jHertXcnQJzEVTKWkANJoOSRN55942575;     jHertXcnQJzEVTKWkANJoOSRN55942575 = jHertXcnQJzEVTKWkANJoOSRN49972564;     jHertXcnQJzEVTKWkANJoOSRN49972564 = jHertXcnQJzEVTKWkANJoOSRN98018611;     jHertXcnQJzEVTKWkANJoOSRN98018611 = jHertXcnQJzEVTKWkANJoOSRN13784691;     jHertXcnQJzEVTKWkANJoOSRN13784691 = jHertXcnQJzEVTKWkANJoOSRN71859347;     jHertXcnQJzEVTKWkANJoOSRN71859347 = jHertXcnQJzEVTKWkANJoOSRN86890329;     jHertXcnQJzEVTKWkANJoOSRN86890329 = jHertXcnQJzEVTKWkANJoOSRN44333928;     jHertXcnQJzEVTKWkANJoOSRN44333928 = jHertXcnQJzEVTKWkANJoOSRN84758276;     jHertXcnQJzEVTKWkANJoOSRN84758276 = jHertXcnQJzEVTKWkANJoOSRN80037781;     jHertXcnQJzEVTKWkANJoOSRN80037781 = jHertXcnQJzEVTKWkANJoOSRN86291308;     jHertXcnQJzEVTKWkANJoOSRN86291308 = jHertXcnQJzEVTKWkANJoOSRN6067416;     jHertXcnQJzEVTKWkANJoOSRN6067416 = jHertXcnQJzEVTKWkANJoOSRN84684170;     jHertXcnQJzEVTKWkANJoOSRN84684170 = jHertXcnQJzEVTKWkANJoOSRN15548558;     jHertXcnQJzEVTKWkANJoOSRN15548558 = jHertXcnQJzEVTKWkANJoOSRN9848521;     jHertXcnQJzEVTKWkANJoOSRN9848521 = jHertXcnQJzEVTKWkANJoOSRN63556869;     jHertXcnQJzEVTKWkANJoOSRN63556869 = jHertXcnQJzEVTKWkANJoOSRN13622475;     jHertXcnQJzEVTKWkANJoOSRN13622475 = jHertXcnQJzEVTKWkANJoOSRN93833487;     jHertXcnQJzEVTKWkANJoOSRN93833487 = jHertXcnQJzEVTKWkANJoOSRN77159860;     jHertXcnQJzEVTKWkANJoOSRN77159860 = jHertXcnQJzEVTKWkANJoOSRN22327487;     jHertXcnQJzEVTKWkANJoOSRN22327487 = jHertXcnQJzEVTKWkANJoOSRN56009898;     jHertXcnQJzEVTKWkANJoOSRN56009898 = jHertXcnQJzEVTKWkANJoOSRN66810813;     jHertXcnQJzEVTKWkANJoOSRN66810813 = jHertXcnQJzEVTKWkANJoOSRN7707274;     jHertXcnQJzEVTKWkANJoOSRN7707274 = jHertXcnQJzEVTKWkANJoOSRN43745055;     jHertXcnQJzEVTKWkANJoOSRN43745055 = jHertXcnQJzEVTKWkANJoOSRN71273904;     jHertXcnQJzEVTKWkANJoOSRN71273904 = jHertXcnQJzEVTKWkANJoOSRN55194103;     jHertXcnQJzEVTKWkANJoOSRN55194103 = jHertXcnQJzEVTKWkANJoOSRN92788288;     jHertXcnQJzEVTKWkANJoOSRN92788288 = jHertXcnQJzEVTKWkANJoOSRN93730254;     jHertXcnQJzEVTKWkANJoOSRN93730254 = jHertXcnQJzEVTKWkANJoOSRN25162413;     jHertXcnQJzEVTKWkANJoOSRN25162413 = jHertXcnQJzEVTKWkANJoOSRN80266920;     jHertXcnQJzEVTKWkANJoOSRN80266920 = jHertXcnQJzEVTKWkANJoOSRN39115140;     jHertXcnQJzEVTKWkANJoOSRN39115140 = jHertXcnQJzEVTKWkANJoOSRN75847186;     jHertXcnQJzEVTKWkANJoOSRN75847186 = jHertXcnQJzEVTKWkANJoOSRN42177528;     jHertXcnQJzEVTKWkANJoOSRN42177528 = jHertXcnQJzEVTKWkANJoOSRN23714086;     jHertXcnQJzEVTKWkANJoOSRN23714086 = jHertXcnQJzEVTKWkANJoOSRN22465582;     jHertXcnQJzEVTKWkANJoOSRN22465582 = jHertXcnQJzEVTKWkANJoOSRN24121065;     jHertXcnQJzEVTKWkANJoOSRN24121065 = jHertXcnQJzEVTKWkANJoOSRN1047281;     jHertXcnQJzEVTKWkANJoOSRN1047281 = jHertXcnQJzEVTKWkANJoOSRN46861049;     jHertXcnQJzEVTKWkANJoOSRN46861049 = jHertXcnQJzEVTKWkANJoOSRN53862398;     jHertXcnQJzEVTKWkANJoOSRN53862398 = jHertXcnQJzEVTKWkANJoOSRN27922803;     jHertXcnQJzEVTKWkANJoOSRN27922803 = jHertXcnQJzEVTKWkANJoOSRN51593588;     jHertXcnQJzEVTKWkANJoOSRN51593588 = jHertXcnQJzEVTKWkANJoOSRN41756934;     jHertXcnQJzEVTKWkANJoOSRN41756934 = jHertXcnQJzEVTKWkANJoOSRN86282464;     jHertXcnQJzEVTKWkANJoOSRN86282464 = jHertXcnQJzEVTKWkANJoOSRN94607290;     jHertXcnQJzEVTKWkANJoOSRN94607290 = jHertXcnQJzEVTKWkANJoOSRN26483490;     jHertXcnQJzEVTKWkANJoOSRN26483490 = jHertXcnQJzEVTKWkANJoOSRN51545948;     jHertXcnQJzEVTKWkANJoOSRN51545948 = jHertXcnQJzEVTKWkANJoOSRN32246807;     jHertXcnQJzEVTKWkANJoOSRN32246807 = jHertXcnQJzEVTKWkANJoOSRN37488229;     jHertXcnQJzEVTKWkANJoOSRN37488229 = jHertXcnQJzEVTKWkANJoOSRN66787866;     jHertXcnQJzEVTKWkANJoOSRN66787866 = jHertXcnQJzEVTKWkANJoOSRN85909771;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void MHViWdnKdPuNzXJSOHVqNPaFrapQTbrDHrQKUVVhBDNXgKlwKtWnUrUxh94197479() {     long PqwoXqBYrGIHzxslnpJBCZhot21368740 = -938617581;    long PqwoXqBYrGIHzxslnpJBCZhot30956500 = 52491624;    long PqwoXqBYrGIHzxslnpJBCZhot94643447 = -958962062;    long PqwoXqBYrGIHzxslnpJBCZhot53245594 = -932771269;    long PqwoXqBYrGIHzxslnpJBCZhot19755052 = -976760020;    long PqwoXqBYrGIHzxslnpJBCZhot22546101 = -547851338;    long PqwoXqBYrGIHzxslnpJBCZhot39808471 = -321883433;    long PqwoXqBYrGIHzxslnpJBCZhot44416612 = -113645828;    long PqwoXqBYrGIHzxslnpJBCZhot30879992 = -319828805;    long PqwoXqBYrGIHzxslnpJBCZhot67258782 = -370495228;    long PqwoXqBYrGIHzxslnpJBCZhot28093896 = -157511269;    long PqwoXqBYrGIHzxslnpJBCZhot15144863 = 5660873;    long PqwoXqBYrGIHzxslnpJBCZhot96736780 = -527251681;    long PqwoXqBYrGIHzxslnpJBCZhot14621440 = -765476744;    long PqwoXqBYrGIHzxslnpJBCZhot35136526 = -354020096;    long PqwoXqBYrGIHzxslnpJBCZhot44352705 = -185662553;    long PqwoXqBYrGIHzxslnpJBCZhot97936695 = -312089215;    long PqwoXqBYrGIHzxslnpJBCZhot37611745 = -370639306;    long PqwoXqBYrGIHzxslnpJBCZhot82902676 = -645892493;    long PqwoXqBYrGIHzxslnpJBCZhot50357071 = -402648327;    long PqwoXqBYrGIHzxslnpJBCZhot41974132 = -814272680;    long PqwoXqBYrGIHzxslnpJBCZhot75546605 = -399030818;    long PqwoXqBYrGIHzxslnpJBCZhot16350455 = 96743496;    long PqwoXqBYrGIHzxslnpJBCZhot64159586 = 28857384;    long PqwoXqBYrGIHzxslnpJBCZhot44706262 = -482377574;    long PqwoXqBYrGIHzxslnpJBCZhot89409678 = 89496079;    long PqwoXqBYrGIHzxslnpJBCZhot66706021 = -649501543;    long PqwoXqBYrGIHzxslnpJBCZhot83588181 = -283960335;    long PqwoXqBYrGIHzxslnpJBCZhot22885850 = -329994989;    long PqwoXqBYrGIHzxslnpJBCZhot50211627 = -844629953;    long PqwoXqBYrGIHzxslnpJBCZhot55390744 = -234972964;    long PqwoXqBYrGIHzxslnpJBCZhot17886659 = -520551150;    long PqwoXqBYrGIHzxslnpJBCZhot63237855 = -539295325;    long PqwoXqBYrGIHzxslnpJBCZhot74628087 = -768327539;    long PqwoXqBYrGIHzxslnpJBCZhot33455542 = -101973032;    long PqwoXqBYrGIHzxslnpJBCZhot51342994 = -164672418;    long PqwoXqBYrGIHzxslnpJBCZhot87895733 = -141134513;    long PqwoXqBYrGIHzxslnpJBCZhot37306265 = -36716331;    long PqwoXqBYrGIHzxslnpJBCZhot1431302 = -315762293;    long PqwoXqBYrGIHzxslnpJBCZhot38916605 = -918904156;    long PqwoXqBYrGIHzxslnpJBCZhot46226406 = 55080179;    long PqwoXqBYrGIHzxslnpJBCZhot46978491 = -859801888;    long PqwoXqBYrGIHzxslnpJBCZhot6314356 = -610163302;    long PqwoXqBYrGIHzxslnpJBCZhot93168124 = -283052641;    long PqwoXqBYrGIHzxslnpJBCZhot76652845 = -878521245;    long PqwoXqBYrGIHzxslnpJBCZhot57487227 = -501554444;    long PqwoXqBYrGIHzxslnpJBCZhot17789751 = -841217718;    long PqwoXqBYrGIHzxslnpJBCZhot84896619 = -918086985;    long PqwoXqBYrGIHzxslnpJBCZhot89905235 = -864034697;    long PqwoXqBYrGIHzxslnpJBCZhot58569696 = -900495671;    long PqwoXqBYrGIHzxslnpJBCZhot1734854 = -697843512;    long PqwoXqBYrGIHzxslnpJBCZhot97827403 = -249435682;    long PqwoXqBYrGIHzxslnpJBCZhot24563724 = 27998388;    long PqwoXqBYrGIHzxslnpJBCZhot65964410 = -703050724;    long PqwoXqBYrGIHzxslnpJBCZhot52223347 = -454825631;    long PqwoXqBYrGIHzxslnpJBCZhot45822134 = -439586763;    long PqwoXqBYrGIHzxslnpJBCZhot14606046 = 55748127;    long PqwoXqBYrGIHzxslnpJBCZhot30483861 = -887819446;    long PqwoXqBYrGIHzxslnpJBCZhot8539332 = -350393696;    long PqwoXqBYrGIHzxslnpJBCZhot30345374 = -966256099;    long PqwoXqBYrGIHzxslnpJBCZhot55840079 = -898349795;    long PqwoXqBYrGIHzxslnpJBCZhot56220290 = 62076902;    long PqwoXqBYrGIHzxslnpJBCZhot21530762 = -783650840;    long PqwoXqBYrGIHzxslnpJBCZhot80668365 = -475198852;    long PqwoXqBYrGIHzxslnpJBCZhot11868039 = -35522264;    long PqwoXqBYrGIHzxslnpJBCZhot10207237 = -636960119;    long PqwoXqBYrGIHzxslnpJBCZhot51907007 = -455043802;    long PqwoXqBYrGIHzxslnpJBCZhot22108694 = -758924143;    long PqwoXqBYrGIHzxslnpJBCZhot81165897 = -563503712;    long PqwoXqBYrGIHzxslnpJBCZhot83793532 = -89347679;    long PqwoXqBYrGIHzxslnpJBCZhot56456971 = 55471959;    long PqwoXqBYrGIHzxslnpJBCZhot60630430 = -175372885;    long PqwoXqBYrGIHzxslnpJBCZhot36180443 = 45122987;    long PqwoXqBYrGIHzxslnpJBCZhot43986072 = -726988337;    long PqwoXqBYrGIHzxslnpJBCZhot4130666 = -357728506;    long PqwoXqBYrGIHzxslnpJBCZhot94995640 = -954470792;    long PqwoXqBYrGIHzxslnpJBCZhot69232249 = -788867517;    long PqwoXqBYrGIHzxslnpJBCZhot23182330 = -620203864;    long PqwoXqBYrGIHzxslnpJBCZhot87506741 = -92621372;    long PqwoXqBYrGIHzxslnpJBCZhot87219035 = -980823130;    long PqwoXqBYrGIHzxslnpJBCZhot71619928 = -69286204;    long PqwoXqBYrGIHzxslnpJBCZhot81809402 = -731414559;    long PqwoXqBYrGIHzxslnpJBCZhot93682945 = -419925639;    long PqwoXqBYrGIHzxslnpJBCZhot64316153 = -429499318;    long PqwoXqBYrGIHzxslnpJBCZhot48476773 = -46786442;    long PqwoXqBYrGIHzxslnpJBCZhot57563341 = -985537283;    long PqwoXqBYrGIHzxslnpJBCZhot93322935 = -448549538;    long PqwoXqBYrGIHzxslnpJBCZhot97273444 = -836244602;    long PqwoXqBYrGIHzxslnpJBCZhot22404740 = -213501909;    long PqwoXqBYrGIHzxslnpJBCZhot87633408 = -662386269;    long PqwoXqBYrGIHzxslnpJBCZhot36736948 = -120420546;    long PqwoXqBYrGIHzxslnpJBCZhot57411873 = -253315067;    long PqwoXqBYrGIHzxslnpJBCZhot28766934 = -686322635;    long PqwoXqBYrGIHzxslnpJBCZhot71085928 = -349506194;    long PqwoXqBYrGIHzxslnpJBCZhot83076525 = 79445638;    long PqwoXqBYrGIHzxslnpJBCZhot90006115 = 93003277;    long PqwoXqBYrGIHzxslnpJBCZhot25447729 = 23848952;    long PqwoXqBYrGIHzxslnpJBCZhot25645991 = -34964450;    long PqwoXqBYrGIHzxslnpJBCZhot81300086 = -147530378;    long PqwoXqBYrGIHzxslnpJBCZhot66445608 = -938617581;     PqwoXqBYrGIHzxslnpJBCZhot21368740 = PqwoXqBYrGIHzxslnpJBCZhot30956500;     PqwoXqBYrGIHzxslnpJBCZhot30956500 = PqwoXqBYrGIHzxslnpJBCZhot94643447;     PqwoXqBYrGIHzxslnpJBCZhot94643447 = PqwoXqBYrGIHzxslnpJBCZhot53245594;     PqwoXqBYrGIHzxslnpJBCZhot53245594 = PqwoXqBYrGIHzxslnpJBCZhot19755052;     PqwoXqBYrGIHzxslnpJBCZhot19755052 = PqwoXqBYrGIHzxslnpJBCZhot22546101;     PqwoXqBYrGIHzxslnpJBCZhot22546101 = PqwoXqBYrGIHzxslnpJBCZhot39808471;     PqwoXqBYrGIHzxslnpJBCZhot39808471 = PqwoXqBYrGIHzxslnpJBCZhot44416612;     PqwoXqBYrGIHzxslnpJBCZhot44416612 = PqwoXqBYrGIHzxslnpJBCZhot30879992;     PqwoXqBYrGIHzxslnpJBCZhot30879992 = PqwoXqBYrGIHzxslnpJBCZhot67258782;     PqwoXqBYrGIHzxslnpJBCZhot67258782 = PqwoXqBYrGIHzxslnpJBCZhot28093896;     PqwoXqBYrGIHzxslnpJBCZhot28093896 = PqwoXqBYrGIHzxslnpJBCZhot15144863;     PqwoXqBYrGIHzxslnpJBCZhot15144863 = PqwoXqBYrGIHzxslnpJBCZhot96736780;     PqwoXqBYrGIHzxslnpJBCZhot96736780 = PqwoXqBYrGIHzxslnpJBCZhot14621440;     PqwoXqBYrGIHzxslnpJBCZhot14621440 = PqwoXqBYrGIHzxslnpJBCZhot35136526;     PqwoXqBYrGIHzxslnpJBCZhot35136526 = PqwoXqBYrGIHzxslnpJBCZhot44352705;     PqwoXqBYrGIHzxslnpJBCZhot44352705 = PqwoXqBYrGIHzxslnpJBCZhot97936695;     PqwoXqBYrGIHzxslnpJBCZhot97936695 = PqwoXqBYrGIHzxslnpJBCZhot37611745;     PqwoXqBYrGIHzxslnpJBCZhot37611745 = PqwoXqBYrGIHzxslnpJBCZhot82902676;     PqwoXqBYrGIHzxslnpJBCZhot82902676 = PqwoXqBYrGIHzxslnpJBCZhot50357071;     PqwoXqBYrGIHzxslnpJBCZhot50357071 = PqwoXqBYrGIHzxslnpJBCZhot41974132;     PqwoXqBYrGIHzxslnpJBCZhot41974132 = PqwoXqBYrGIHzxslnpJBCZhot75546605;     PqwoXqBYrGIHzxslnpJBCZhot75546605 = PqwoXqBYrGIHzxslnpJBCZhot16350455;     PqwoXqBYrGIHzxslnpJBCZhot16350455 = PqwoXqBYrGIHzxslnpJBCZhot64159586;     PqwoXqBYrGIHzxslnpJBCZhot64159586 = PqwoXqBYrGIHzxslnpJBCZhot44706262;     PqwoXqBYrGIHzxslnpJBCZhot44706262 = PqwoXqBYrGIHzxslnpJBCZhot89409678;     PqwoXqBYrGIHzxslnpJBCZhot89409678 = PqwoXqBYrGIHzxslnpJBCZhot66706021;     PqwoXqBYrGIHzxslnpJBCZhot66706021 = PqwoXqBYrGIHzxslnpJBCZhot83588181;     PqwoXqBYrGIHzxslnpJBCZhot83588181 = PqwoXqBYrGIHzxslnpJBCZhot22885850;     PqwoXqBYrGIHzxslnpJBCZhot22885850 = PqwoXqBYrGIHzxslnpJBCZhot50211627;     PqwoXqBYrGIHzxslnpJBCZhot50211627 = PqwoXqBYrGIHzxslnpJBCZhot55390744;     PqwoXqBYrGIHzxslnpJBCZhot55390744 = PqwoXqBYrGIHzxslnpJBCZhot17886659;     PqwoXqBYrGIHzxslnpJBCZhot17886659 = PqwoXqBYrGIHzxslnpJBCZhot63237855;     PqwoXqBYrGIHzxslnpJBCZhot63237855 = PqwoXqBYrGIHzxslnpJBCZhot74628087;     PqwoXqBYrGIHzxslnpJBCZhot74628087 = PqwoXqBYrGIHzxslnpJBCZhot33455542;     PqwoXqBYrGIHzxslnpJBCZhot33455542 = PqwoXqBYrGIHzxslnpJBCZhot51342994;     PqwoXqBYrGIHzxslnpJBCZhot51342994 = PqwoXqBYrGIHzxslnpJBCZhot87895733;     PqwoXqBYrGIHzxslnpJBCZhot87895733 = PqwoXqBYrGIHzxslnpJBCZhot37306265;     PqwoXqBYrGIHzxslnpJBCZhot37306265 = PqwoXqBYrGIHzxslnpJBCZhot1431302;     PqwoXqBYrGIHzxslnpJBCZhot1431302 = PqwoXqBYrGIHzxslnpJBCZhot38916605;     PqwoXqBYrGIHzxslnpJBCZhot38916605 = PqwoXqBYrGIHzxslnpJBCZhot46226406;     PqwoXqBYrGIHzxslnpJBCZhot46226406 = PqwoXqBYrGIHzxslnpJBCZhot46978491;     PqwoXqBYrGIHzxslnpJBCZhot46978491 = PqwoXqBYrGIHzxslnpJBCZhot6314356;     PqwoXqBYrGIHzxslnpJBCZhot6314356 = PqwoXqBYrGIHzxslnpJBCZhot93168124;     PqwoXqBYrGIHzxslnpJBCZhot93168124 = PqwoXqBYrGIHzxslnpJBCZhot76652845;     PqwoXqBYrGIHzxslnpJBCZhot76652845 = PqwoXqBYrGIHzxslnpJBCZhot57487227;     PqwoXqBYrGIHzxslnpJBCZhot57487227 = PqwoXqBYrGIHzxslnpJBCZhot17789751;     PqwoXqBYrGIHzxslnpJBCZhot17789751 = PqwoXqBYrGIHzxslnpJBCZhot84896619;     PqwoXqBYrGIHzxslnpJBCZhot84896619 = PqwoXqBYrGIHzxslnpJBCZhot89905235;     PqwoXqBYrGIHzxslnpJBCZhot89905235 = PqwoXqBYrGIHzxslnpJBCZhot58569696;     PqwoXqBYrGIHzxslnpJBCZhot58569696 = PqwoXqBYrGIHzxslnpJBCZhot1734854;     PqwoXqBYrGIHzxslnpJBCZhot1734854 = PqwoXqBYrGIHzxslnpJBCZhot97827403;     PqwoXqBYrGIHzxslnpJBCZhot97827403 = PqwoXqBYrGIHzxslnpJBCZhot24563724;     PqwoXqBYrGIHzxslnpJBCZhot24563724 = PqwoXqBYrGIHzxslnpJBCZhot65964410;     PqwoXqBYrGIHzxslnpJBCZhot65964410 = PqwoXqBYrGIHzxslnpJBCZhot52223347;     PqwoXqBYrGIHzxslnpJBCZhot52223347 = PqwoXqBYrGIHzxslnpJBCZhot45822134;     PqwoXqBYrGIHzxslnpJBCZhot45822134 = PqwoXqBYrGIHzxslnpJBCZhot14606046;     PqwoXqBYrGIHzxslnpJBCZhot14606046 = PqwoXqBYrGIHzxslnpJBCZhot30483861;     PqwoXqBYrGIHzxslnpJBCZhot30483861 = PqwoXqBYrGIHzxslnpJBCZhot8539332;     PqwoXqBYrGIHzxslnpJBCZhot8539332 = PqwoXqBYrGIHzxslnpJBCZhot30345374;     PqwoXqBYrGIHzxslnpJBCZhot30345374 = PqwoXqBYrGIHzxslnpJBCZhot55840079;     PqwoXqBYrGIHzxslnpJBCZhot55840079 = PqwoXqBYrGIHzxslnpJBCZhot56220290;     PqwoXqBYrGIHzxslnpJBCZhot56220290 = PqwoXqBYrGIHzxslnpJBCZhot21530762;     PqwoXqBYrGIHzxslnpJBCZhot21530762 = PqwoXqBYrGIHzxslnpJBCZhot80668365;     PqwoXqBYrGIHzxslnpJBCZhot80668365 = PqwoXqBYrGIHzxslnpJBCZhot11868039;     PqwoXqBYrGIHzxslnpJBCZhot11868039 = PqwoXqBYrGIHzxslnpJBCZhot10207237;     PqwoXqBYrGIHzxslnpJBCZhot10207237 = PqwoXqBYrGIHzxslnpJBCZhot51907007;     PqwoXqBYrGIHzxslnpJBCZhot51907007 = PqwoXqBYrGIHzxslnpJBCZhot22108694;     PqwoXqBYrGIHzxslnpJBCZhot22108694 = PqwoXqBYrGIHzxslnpJBCZhot81165897;     PqwoXqBYrGIHzxslnpJBCZhot81165897 = PqwoXqBYrGIHzxslnpJBCZhot83793532;     PqwoXqBYrGIHzxslnpJBCZhot83793532 = PqwoXqBYrGIHzxslnpJBCZhot56456971;     PqwoXqBYrGIHzxslnpJBCZhot56456971 = PqwoXqBYrGIHzxslnpJBCZhot60630430;     PqwoXqBYrGIHzxslnpJBCZhot60630430 = PqwoXqBYrGIHzxslnpJBCZhot36180443;     PqwoXqBYrGIHzxslnpJBCZhot36180443 = PqwoXqBYrGIHzxslnpJBCZhot43986072;     PqwoXqBYrGIHzxslnpJBCZhot43986072 = PqwoXqBYrGIHzxslnpJBCZhot4130666;     PqwoXqBYrGIHzxslnpJBCZhot4130666 = PqwoXqBYrGIHzxslnpJBCZhot94995640;     PqwoXqBYrGIHzxslnpJBCZhot94995640 = PqwoXqBYrGIHzxslnpJBCZhot69232249;     PqwoXqBYrGIHzxslnpJBCZhot69232249 = PqwoXqBYrGIHzxslnpJBCZhot23182330;     PqwoXqBYrGIHzxslnpJBCZhot23182330 = PqwoXqBYrGIHzxslnpJBCZhot87506741;     PqwoXqBYrGIHzxslnpJBCZhot87506741 = PqwoXqBYrGIHzxslnpJBCZhot87219035;     PqwoXqBYrGIHzxslnpJBCZhot87219035 = PqwoXqBYrGIHzxslnpJBCZhot71619928;     PqwoXqBYrGIHzxslnpJBCZhot71619928 = PqwoXqBYrGIHzxslnpJBCZhot81809402;     PqwoXqBYrGIHzxslnpJBCZhot81809402 = PqwoXqBYrGIHzxslnpJBCZhot93682945;     PqwoXqBYrGIHzxslnpJBCZhot93682945 = PqwoXqBYrGIHzxslnpJBCZhot64316153;     PqwoXqBYrGIHzxslnpJBCZhot64316153 = PqwoXqBYrGIHzxslnpJBCZhot48476773;     PqwoXqBYrGIHzxslnpJBCZhot48476773 = PqwoXqBYrGIHzxslnpJBCZhot57563341;     PqwoXqBYrGIHzxslnpJBCZhot57563341 = PqwoXqBYrGIHzxslnpJBCZhot93322935;     PqwoXqBYrGIHzxslnpJBCZhot93322935 = PqwoXqBYrGIHzxslnpJBCZhot97273444;     PqwoXqBYrGIHzxslnpJBCZhot97273444 = PqwoXqBYrGIHzxslnpJBCZhot22404740;     PqwoXqBYrGIHzxslnpJBCZhot22404740 = PqwoXqBYrGIHzxslnpJBCZhot87633408;     PqwoXqBYrGIHzxslnpJBCZhot87633408 = PqwoXqBYrGIHzxslnpJBCZhot36736948;     PqwoXqBYrGIHzxslnpJBCZhot36736948 = PqwoXqBYrGIHzxslnpJBCZhot57411873;     PqwoXqBYrGIHzxslnpJBCZhot57411873 = PqwoXqBYrGIHzxslnpJBCZhot28766934;     PqwoXqBYrGIHzxslnpJBCZhot28766934 = PqwoXqBYrGIHzxslnpJBCZhot71085928;     PqwoXqBYrGIHzxslnpJBCZhot71085928 = PqwoXqBYrGIHzxslnpJBCZhot83076525;     PqwoXqBYrGIHzxslnpJBCZhot83076525 = PqwoXqBYrGIHzxslnpJBCZhot90006115;     PqwoXqBYrGIHzxslnpJBCZhot90006115 = PqwoXqBYrGIHzxslnpJBCZhot25447729;     PqwoXqBYrGIHzxslnpJBCZhot25447729 = PqwoXqBYrGIHzxslnpJBCZhot25645991;     PqwoXqBYrGIHzxslnpJBCZhot25645991 = PqwoXqBYrGIHzxslnpJBCZhot81300086;     PqwoXqBYrGIHzxslnpJBCZhot81300086 = PqwoXqBYrGIHzxslnpJBCZhot66445608;     PqwoXqBYrGIHzxslnpJBCZhot66445608 = PqwoXqBYrGIHzxslnpJBCZhot21368740;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void daIjATCXPgcWVeRIgoeMWnCOztyWzWjRPmXqPxphyMdXiILRpyJwlszqY9246547() {     long tkHUgXsxKGiGatizxOJKegrhh27485846 = 49480530;    long tkHUgXsxKGiGatizxOJKegrhh74329779 = -757108157;    long tkHUgXsxKGiGatizxOJKegrhh10685631 = -9794983;    long tkHUgXsxKGiGatizxOJKegrhh80320374 = -23519899;    long tkHUgXsxKGiGatizxOJKegrhh88650540 = -397409891;    long tkHUgXsxKGiGatizxOJKegrhh13963304 = -812347573;    long tkHUgXsxKGiGatizxOJKegrhh297437 = -460848410;    long tkHUgXsxKGiGatizxOJKegrhh94176503 = -400519742;    long tkHUgXsxKGiGatizxOJKegrhh95522487 = -87861471;    long tkHUgXsxKGiGatizxOJKegrhh8488442 = -699470705;    long tkHUgXsxKGiGatizxOJKegrhh88204185 = -34948856;    long tkHUgXsxKGiGatizxOJKegrhh46967905 = -438745329;    long tkHUgXsxKGiGatizxOJKegrhh82945898 = -967142770;    long tkHUgXsxKGiGatizxOJKegrhh97765116 = -197715311;    long tkHUgXsxKGiGatizxOJKegrhh30878953 = 55517738;    long tkHUgXsxKGiGatizxOJKegrhh85858098 = -158662096;    long tkHUgXsxKGiGatizxOJKegrhh91772698 = -928634328;    long tkHUgXsxKGiGatizxOJKegrhh34664898 = -36161948;    long tkHUgXsxKGiGatizxOJKegrhh44732518 = 48338410;    long tkHUgXsxKGiGatizxOJKegrhh30907236 = -759551246;    long tkHUgXsxKGiGatizxOJKegrhh30527325 = -669760135;    long tkHUgXsxKGiGatizxOJKegrhh62067629 = -306960535;    long tkHUgXsxKGiGatizxOJKegrhh51941246 = -749773991;    long tkHUgXsxKGiGatizxOJKegrhh48151960 = -193447604;    long tkHUgXsxKGiGatizxOJKegrhh88405912 = -855573607;    long tkHUgXsxKGiGatizxOJKegrhh14131354 = -889159245;    long tkHUgXsxKGiGatizxOJKegrhh65165800 = -550163746;    long tkHUgXsxKGiGatizxOJKegrhh96695306 = -349889289;    long tkHUgXsxKGiGatizxOJKegrhh89018105 = -552377693;    long tkHUgXsxKGiGatizxOJKegrhh18827264 = -662100821;    long tkHUgXsxKGiGatizxOJKegrhh47633294 = -148293903;    long tkHUgXsxKGiGatizxOJKegrhh15497281 = -229997966;    long tkHUgXsxKGiGatizxOJKegrhh72948804 = -431908695;    long tkHUgXsxKGiGatizxOJKegrhh69458651 = -519869304;    long tkHUgXsxKGiGatizxOJKegrhh94930194 = -740706137;    long tkHUgXsxKGiGatizxOJKegrhh20068907 = -378698525;    long tkHUgXsxKGiGatizxOJKegrhh69157668 = -94770382;    long tkHUgXsxKGiGatizxOJKegrhh71396478 = -908222340;    long tkHUgXsxKGiGatizxOJKegrhh75041555 = -309685789;    long tkHUgXsxKGiGatizxOJKegrhh26418543 = -292343379;    long tkHUgXsxKGiGatizxOJKegrhh51895629 = -10193715;    long tkHUgXsxKGiGatizxOJKegrhh79128947 = -29944166;    long tkHUgXsxKGiGatizxOJKegrhh84381333 = -690967886;    long tkHUgXsxKGiGatizxOJKegrhh80575865 = -302395579;    long tkHUgXsxKGiGatizxOJKegrhh88605310 = -540419399;    long tkHUgXsxKGiGatizxOJKegrhh69426422 = -486770560;    long tkHUgXsxKGiGatizxOJKegrhh35568325 = -959993256;    long tkHUgXsxKGiGatizxOJKegrhh92853560 = -927982517;    long tkHUgXsxKGiGatizxOJKegrhh99580964 = -949771685;    long tkHUgXsxKGiGatizxOJKegrhh71481349 = -987506479;    long tkHUgXsxKGiGatizxOJKegrhh37435532 = -540137183;    long tkHUgXsxKGiGatizxOJKegrhh8637124 = -50162002;    long tkHUgXsxKGiGatizxOJKegrhh72812181 = -863791200;    long tkHUgXsxKGiGatizxOJKegrhh61933291 = 76479131;    long tkHUgXsxKGiGatizxOJKegrhh78719222 = -55357413;    long tkHUgXsxKGiGatizxOJKegrhh65418217 = -643558936;    long tkHUgXsxKGiGatizxOJKegrhh22388533 = 92665834;    long tkHUgXsxKGiGatizxOJKegrhh62533671 = -816347380;    long tkHUgXsxKGiGatizxOJKegrhh91914462 = -167946293;    long tkHUgXsxKGiGatizxOJKegrhh74519187 = -508250647;    long tkHUgXsxKGiGatizxOJKegrhh48797504 = -162183827;    long tkHUgXsxKGiGatizxOJKegrhh3602131 = -10959122;    long tkHUgXsxKGiGatizxOJKegrhh5158398 = -848142049;    long tkHUgXsxKGiGatizxOJKegrhh76695223 = -425760651;    long tkHUgXsxKGiGatizxOJKegrhh60855148 = -451176803;    long tkHUgXsxKGiGatizxOJKegrhh72706905 = -804950890;    long tkHUgXsxKGiGatizxOJKegrhh74019101 = 93163366;    long tkHUgXsxKGiGatizxOJKegrhh13487248 = -347273467;    long tkHUgXsxKGiGatizxOJKegrhh2834923 = -457009175;    long tkHUgXsxKGiGatizxOJKegrhh10810046 = -565783737;    long tkHUgXsxKGiGatizxOJKegrhh16700430 = 36108285;    long tkHUgXsxKGiGatizxOJKegrhh20376221 = 79588012;    long tkHUgXsxKGiGatizxOJKegrhh59623342 = -726476159;    long tkHUgXsxKGiGatizxOJKegrhh18313976 = -659318211;    long tkHUgXsxKGiGatizxOJKegrhh79011606 = -649357531;    long tkHUgXsxKGiGatizxOJKegrhh51398377 = -539815969;    long tkHUgXsxKGiGatizxOJKegrhh77686295 = -615992649;    long tkHUgXsxKGiGatizxOJKegrhh71365381 = -347378412;    long tkHUgXsxKGiGatizxOJKegrhh59546650 = -653028205;    long tkHUgXsxKGiGatizxOJKegrhh18979491 = -268803047;    long tkHUgXsxKGiGatizxOJKegrhh78563029 = -929165989;    long tkHUgXsxKGiGatizxOJKegrhh72312239 = -622181229;    long tkHUgXsxKGiGatizxOJKegrhh97114342 = -400117605;    long tkHUgXsxKGiGatizxOJKegrhh17536757 = -564871214;    long tkHUgXsxKGiGatizxOJKegrhh81391731 = -21963638;    long tkHUgXsxKGiGatizxOJKegrhh38996171 = 1868099;    long tkHUgXsxKGiGatizxOJKegrhh42685099 = -366206766;    long tkHUgXsxKGiGatizxOJKegrhh11015514 = -408387827;    long tkHUgXsxKGiGatizxOJKegrhh90739428 = -364511892;    long tkHUgXsxKGiGatizxOJKegrhh29511977 = 2852798;    long tkHUgXsxKGiGatizxOJKegrhh97680373 = -371364359;    long tkHUgXsxKGiGatizxOJKegrhh6623998 = -278423003;    long tkHUgXsxKGiGatizxOJKegrhh79482015 = -640276048;    long tkHUgXsxKGiGatizxOJKegrhh522369 = -801435143;    long tkHUgXsxKGiGatizxOJKegrhh77621038 = -30159552;    long tkHUgXsxKGiGatizxOJKegrhh48293499 = -999234594;    long tkHUgXsxKGiGatizxOJKegrhh73970550 = -181802118;    long tkHUgXsxKGiGatizxOJKegrhh7686111 = -165207236;    long tkHUgXsxKGiGatizxOJKegrhh19720717 = -851218777;    long tkHUgXsxKGiGatizxOJKegrhh15898405 = 49480530;     tkHUgXsxKGiGatizxOJKegrhh27485846 = tkHUgXsxKGiGatizxOJKegrhh74329779;     tkHUgXsxKGiGatizxOJKegrhh74329779 = tkHUgXsxKGiGatizxOJKegrhh10685631;     tkHUgXsxKGiGatizxOJKegrhh10685631 = tkHUgXsxKGiGatizxOJKegrhh80320374;     tkHUgXsxKGiGatizxOJKegrhh80320374 = tkHUgXsxKGiGatizxOJKegrhh88650540;     tkHUgXsxKGiGatizxOJKegrhh88650540 = tkHUgXsxKGiGatizxOJKegrhh13963304;     tkHUgXsxKGiGatizxOJKegrhh13963304 = tkHUgXsxKGiGatizxOJKegrhh297437;     tkHUgXsxKGiGatizxOJKegrhh297437 = tkHUgXsxKGiGatizxOJKegrhh94176503;     tkHUgXsxKGiGatizxOJKegrhh94176503 = tkHUgXsxKGiGatizxOJKegrhh95522487;     tkHUgXsxKGiGatizxOJKegrhh95522487 = tkHUgXsxKGiGatizxOJKegrhh8488442;     tkHUgXsxKGiGatizxOJKegrhh8488442 = tkHUgXsxKGiGatizxOJKegrhh88204185;     tkHUgXsxKGiGatizxOJKegrhh88204185 = tkHUgXsxKGiGatizxOJKegrhh46967905;     tkHUgXsxKGiGatizxOJKegrhh46967905 = tkHUgXsxKGiGatizxOJKegrhh82945898;     tkHUgXsxKGiGatizxOJKegrhh82945898 = tkHUgXsxKGiGatizxOJKegrhh97765116;     tkHUgXsxKGiGatizxOJKegrhh97765116 = tkHUgXsxKGiGatizxOJKegrhh30878953;     tkHUgXsxKGiGatizxOJKegrhh30878953 = tkHUgXsxKGiGatizxOJKegrhh85858098;     tkHUgXsxKGiGatizxOJKegrhh85858098 = tkHUgXsxKGiGatizxOJKegrhh91772698;     tkHUgXsxKGiGatizxOJKegrhh91772698 = tkHUgXsxKGiGatizxOJKegrhh34664898;     tkHUgXsxKGiGatizxOJKegrhh34664898 = tkHUgXsxKGiGatizxOJKegrhh44732518;     tkHUgXsxKGiGatizxOJKegrhh44732518 = tkHUgXsxKGiGatizxOJKegrhh30907236;     tkHUgXsxKGiGatizxOJKegrhh30907236 = tkHUgXsxKGiGatizxOJKegrhh30527325;     tkHUgXsxKGiGatizxOJKegrhh30527325 = tkHUgXsxKGiGatizxOJKegrhh62067629;     tkHUgXsxKGiGatizxOJKegrhh62067629 = tkHUgXsxKGiGatizxOJKegrhh51941246;     tkHUgXsxKGiGatizxOJKegrhh51941246 = tkHUgXsxKGiGatizxOJKegrhh48151960;     tkHUgXsxKGiGatizxOJKegrhh48151960 = tkHUgXsxKGiGatizxOJKegrhh88405912;     tkHUgXsxKGiGatizxOJKegrhh88405912 = tkHUgXsxKGiGatizxOJKegrhh14131354;     tkHUgXsxKGiGatizxOJKegrhh14131354 = tkHUgXsxKGiGatizxOJKegrhh65165800;     tkHUgXsxKGiGatizxOJKegrhh65165800 = tkHUgXsxKGiGatizxOJKegrhh96695306;     tkHUgXsxKGiGatizxOJKegrhh96695306 = tkHUgXsxKGiGatizxOJKegrhh89018105;     tkHUgXsxKGiGatizxOJKegrhh89018105 = tkHUgXsxKGiGatizxOJKegrhh18827264;     tkHUgXsxKGiGatizxOJKegrhh18827264 = tkHUgXsxKGiGatizxOJKegrhh47633294;     tkHUgXsxKGiGatizxOJKegrhh47633294 = tkHUgXsxKGiGatizxOJKegrhh15497281;     tkHUgXsxKGiGatizxOJKegrhh15497281 = tkHUgXsxKGiGatizxOJKegrhh72948804;     tkHUgXsxKGiGatizxOJKegrhh72948804 = tkHUgXsxKGiGatizxOJKegrhh69458651;     tkHUgXsxKGiGatizxOJKegrhh69458651 = tkHUgXsxKGiGatizxOJKegrhh94930194;     tkHUgXsxKGiGatizxOJKegrhh94930194 = tkHUgXsxKGiGatizxOJKegrhh20068907;     tkHUgXsxKGiGatizxOJKegrhh20068907 = tkHUgXsxKGiGatizxOJKegrhh69157668;     tkHUgXsxKGiGatizxOJKegrhh69157668 = tkHUgXsxKGiGatizxOJKegrhh71396478;     tkHUgXsxKGiGatizxOJKegrhh71396478 = tkHUgXsxKGiGatizxOJKegrhh75041555;     tkHUgXsxKGiGatizxOJKegrhh75041555 = tkHUgXsxKGiGatizxOJKegrhh26418543;     tkHUgXsxKGiGatizxOJKegrhh26418543 = tkHUgXsxKGiGatizxOJKegrhh51895629;     tkHUgXsxKGiGatizxOJKegrhh51895629 = tkHUgXsxKGiGatizxOJKegrhh79128947;     tkHUgXsxKGiGatizxOJKegrhh79128947 = tkHUgXsxKGiGatizxOJKegrhh84381333;     tkHUgXsxKGiGatizxOJKegrhh84381333 = tkHUgXsxKGiGatizxOJKegrhh80575865;     tkHUgXsxKGiGatizxOJKegrhh80575865 = tkHUgXsxKGiGatizxOJKegrhh88605310;     tkHUgXsxKGiGatizxOJKegrhh88605310 = tkHUgXsxKGiGatizxOJKegrhh69426422;     tkHUgXsxKGiGatizxOJKegrhh69426422 = tkHUgXsxKGiGatizxOJKegrhh35568325;     tkHUgXsxKGiGatizxOJKegrhh35568325 = tkHUgXsxKGiGatizxOJKegrhh92853560;     tkHUgXsxKGiGatizxOJKegrhh92853560 = tkHUgXsxKGiGatizxOJKegrhh99580964;     tkHUgXsxKGiGatizxOJKegrhh99580964 = tkHUgXsxKGiGatizxOJKegrhh71481349;     tkHUgXsxKGiGatizxOJKegrhh71481349 = tkHUgXsxKGiGatizxOJKegrhh37435532;     tkHUgXsxKGiGatizxOJKegrhh37435532 = tkHUgXsxKGiGatizxOJKegrhh8637124;     tkHUgXsxKGiGatizxOJKegrhh8637124 = tkHUgXsxKGiGatizxOJKegrhh72812181;     tkHUgXsxKGiGatizxOJKegrhh72812181 = tkHUgXsxKGiGatizxOJKegrhh61933291;     tkHUgXsxKGiGatizxOJKegrhh61933291 = tkHUgXsxKGiGatizxOJKegrhh78719222;     tkHUgXsxKGiGatizxOJKegrhh78719222 = tkHUgXsxKGiGatizxOJKegrhh65418217;     tkHUgXsxKGiGatizxOJKegrhh65418217 = tkHUgXsxKGiGatizxOJKegrhh22388533;     tkHUgXsxKGiGatizxOJKegrhh22388533 = tkHUgXsxKGiGatizxOJKegrhh62533671;     tkHUgXsxKGiGatizxOJKegrhh62533671 = tkHUgXsxKGiGatizxOJKegrhh91914462;     tkHUgXsxKGiGatizxOJKegrhh91914462 = tkHUgXsxKGiGatizxOJKegrhh74519187;     tkHUgXsxKGiGatizxOJKegrhh74519187 = tkHUgXsxKGiGatizxOJKegrhh48797504;     tkHUgXsxKGiGatizxOJKegrhh48797504 = tkHUgXsxKGiGatizxOJKegrhh3602131;     tkHUgXsxKGiGatizxOJKegrhh3602131 = tkHUgXsxKGiGatizxOJKegrhh5158398;     tkHUgXsxKGiGatizxOJKegrhh5158398 = tkHUgXsxKGiGatizxOJKegrhh76695223;     tkHUgXsxKGiGatizxOJKegrhh76695223 = tkHUgXsxKGiGatizxOJKegrhh60855148;     tkHUgXsxKGiGatizxOJKegrhh60855148 = tkHUgXsxKGiGatizxOJKegrhh72706905;     tkHUgXsxKGiGatizxOJKegrhh72706905 = tkHUgXsxKGiGatizxOJKegrhh74019101;     tkHUgXsxKGiGatizxOJKegrhh74019101 = tkHUgXsxKGiGatizxOJKegrhh13487248;     tkHUgXsxKGiGatizxOJKegrhh13487248 = tkHUgXsxKGiGatizxOJKegrhh2834923;     tkHUgXsxKGiGatizxOJKegrhh2834923 = tkHUgXsxKGiGatizxOJKegrhh10810046;     tkHUgXsxKGiGatizxOJKegrhh10810046 = tkHUgXsxKGiGatizxOJKegrhh16700430;     tkHUgXsxKGiGatizxOJKegrhh16700430 = tkHUgXsxKGiGatizxOJKegrhh20376221;     tkHUgXsxKGiGatizxOJKegrhh20376221 = tkHUgXsxKGiGatizxOJKegrhh59623342;     tkHUgXsxKGiGatizxOJKegrhh59623342 = tkHUgXsxKGiGatizxOJKegrhh18313976;     tkHUgXsxKGiGatizxOJKegrhh18313976 = tkHUgXsxKGiGatizxOJKegrhh79011606;     tkHUgXsxKGiGatizxOJKegrhh79011606 = tkHUgXsxKGiGatizxOJKegrhh51398377;     tkHUgXsxKGiGatizxOJKegrhh51398377 = tkHUgXsxKGiGatizxOJKegrhh77686295;     tkHUgXsxKGiGatizxOJKegrhh77686295 = tkHUgXsxKGiGatizxOJKegrhh71365381;     tkHUgXsxKGiGatizxOJKegrhh71365381 = tkHUgXsxKGiGatizxOJKegrhh59546650;     tkHUgXsxKGiGatizxOJKegrhh59546650 = tkHUgXsxKGiGatizxOJKegrhh18979491;     tkHUgXsxKGiGatizxOJKegrhh18979491 = tkHUgXsxKGiGatizxOJKegrhh78563029;     tkHUgXsxKGiGatizxOJKegrhh78563029 = tkHUgXsxKGiGatizxOJKegrhh72312239;     tkHUgXsxKGiGatizxOJKegrhh72312239 = tkHUgXsxKGiGatizxOJKegrhh97114342;     tkHUgXsxKGiGatizxOJKegrhh97114342 = tkHUgXsxKGiGatizxOJKegrhh17536757;     tkHUgXsxKGiGatizxOJKegrhh17536757 = tkHUgXsxKGiGatizxOJKegrhh81391731;     tkHUgXsxKGiGatizxOJKegrhh81391731 = tkHUgXsxKGiGatizxOJKegrhh38996171;     tkHUgXsxKGiGatizxOJKegrhh38996171 = tkHUgXsxKGiGatizxOJKegrhh42685099;     tkHUgXsxKGiGatizxOJKegrhh42685099 = tkHUgXsxKGiGatizxOJKegrhh11015514;     tkHUgXsxKGiGatizxOJKegrhh11015514 = tkHUgXsxKGiGatizxOJKegrhh90739428;     tkHUgXsxKGiGatizxOJKegrhh90739428 = tkHUgXsxKGiGatizxOJKegrhh29511977;     tkHUgXsxKGiGatizxOJKegrhh29511977 = tkHUgXsxKGiGatizxOJKegrhh97680373;     tkHUgXsxKGiGatizxOJKegrhh97680373 = tkHUgXsxKGiGatizxOJKegrhh6623998;     tkHUgXsxKGiGatizxOJKegrhh6623998 = tkHUgXsxKGiGatizxOJKegrhh79482015;     tkHUgXsxKGiGatizxOJKegrhh79482015 = tkHUgXsxKGiGatizxOJKegrhh522369;     tkHUgXsxKGiGatizxOJKegrhh522369 = tkHUgXsxKGiGatizxOJKegrhh77621038;     tkHUgXsxKGiGatizxOJKegrhh77621038 = tkHUgXsxKGiGatizxOJKegrhh48293499;     tkHUgXsxKGiGatizxOJKegrhh48293499 = tkHUgXsxKGiGatizxOJKegrhh73970550;     tkHUgXsxKGiGatizxOJKegrhh73970550 = tkHUgXsxKGiGatizxOJKegrhh7686111;     tkHUgXsxKGiGatizxOJKegrhh7686111 = tkHUgXsxKGiGatizxOJKegrhh19720717;     tkHUgXsxKGiGatizxOJKegrhh19720717 = tkHUgXsxKGiGatizxOJKegrhh15898405;     tkHUgXsxKGiGatizxOJKegrhh15898405 = tkHUgXsxKGiGatizxOJKegrhh27485846;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void NkLJyMXroxyvjjFpNYGVzgqOBRxqBcUpZmaUfRdgdRgTwaOIQcpxSEWht76538146() {     long wIgOhpLdJVwIlJvvZsizXSaDp62944814 = -416796370;    long wIgOhpLdJVwIlJvvZsizXSaDp87601857 = -637659764;    long wIgOhpLdJVwIlJvvZsizXSaDp48072108 = -775462058;    long wIgOhpLdJVwIlJvvZsizXSaDp52543729 = -944670970;    long wIgOhpLdJVwIlJvvZsizXSaDp44935810 = -503008736;    long wIgOhpLdJVwIlJvvZsizXSaDp50186175 = 25304532;    long wIgOhpLdJVwIlJvvZsizXSaDp10954843 = -305574145;    long wIgOhpLdJVwIlJvvZsizXSaDp56308064 = -44753882;    long wIgOhpLdJVwIlJvvZsizXSaDp97040092 = -576192878;    long wIgOhpLdJVwIlJvvZsizXSaDp23391154 = -364157703;    long wIgOhpLdJVwIlJvvZsizXSaDp26385921 = -936956585;    long wIgOhpLdJVwIlJvvZsizXSaDp47536053 = -302866100;    long wIgOhpLdJVwIlJvvZsizXSaDp21180544 = -419155275;    long wIgOhpLdJVwIlJvvZsizXSaDp50905980 = -174078721;    long wIgOhpLdJVwIlJvvZsizXSaDp89073469 = -447907277;    long wIgOhpLdJVwIlJvvZsizXSaDp69399399 = -894473703;    long wIgOhpLdJVwIlJvvZsizXSaDp47608634 = -355608881;    long wIgOhpLdJVwIlJvvZsizXSaDp34425090 = -109590017;    long wIgOhpLdJVwIlJvvZsizXSaDp45282848 = -268225011;    long wIgOhpLdJVwIlJvvZsizXSaDp24744455 = -86112312;    long wIgOhpLdJVwIlJvvZsizXSaDp43614188 = -327034824;    long wIgOhpLdJVwIlJvvZsizXSaDp65489153 = -393596829;    long wIgOhpLdJVwIlJvvZsizXSaDp22466626 = -387406175;    long wIgOhpLdJVwIlJvvZsizXSaDp41944905 = -704272208;    long wIgOhpLdJVwIlJvvZsizXSaDp96423863 = -879558805;    long wIgOhpLdJVwIlJvvZsizXSaDp24829525 = -577736051;    long wIgOhpLdJVwIlJvvZsizXSaDp25586374 = -356447887;    long wIgOhpLdJVwIlJvvZsizXSaDp37423731 = -519661463;    long wIgOhpLdJVwIlJvvZsizXSaDp35686320 = -26472496;    long wIgOhpLdJVwIlJvvZsizXSaDp24360675 = -696607991;    long wIgOhpLdJVwIlJvvZsizXSaDp66216525 = -700274390;    long wIgOhpLdJVwIlJvvZsizXSaDp53320299 = -2969380;    long wIgOhpLdJVwIlJvvZsizXSaDp85166814 = -579504673;    long wIgOhpLdJVwIlJvvZsizXSaDp99207077 = -584563118;    long wIgOhpLdJVwIlJvvZsizXSaDp60738648 = -691806388;    long wIgOhpLdJVwIlJvvZsizXSaDp71629750 = -593263831;    long wIgOhpLdJVwIlJvvZsizXSaDp18569485 = 40533577;    long wIgOhpLdJVwIlJvvZsizXSaDp22611881 = -890877921;    long wIgOhpLdJVwIlJvvZsizXSaDp5432118 = 39437934;    long wIgOhpLdJVwIlJvvZsizXSaDp90690074 = -857605925;    long wIgOhpLdJVwIlJvvZsizXSaDp85347237 = -879392630;    long wIgOhpLdJVwIlJvvZsizXSaDp68494074 = -724489457;    long wIgOhpLdJVwIlJvvZsizXSaDp73764712 = -244148672;    long wIgOhpLdJVwIlJvvZsizXSaDp20707204 = -906727989;    long wIgOhpLdJVwIlJvvZsizXSaDp88621768 = -366930560;    long wIgOhpLdJVwIlJvvZsizXSaDp15387751 = -525694193;    long wIgOhpLdJVwIlJvvZsizXSaDp54913488 = -343979616;    long wIgOhpLdJVwIlJvvZsizXSaDp10579872 = 5490889;    long wIgOhpLdJVwIlJvvZsizXSaDp22473631 = -613508565;    long wIgOhpLdJVwIlJvvZsizXSaDp96010938 = -378533295;    long wIgOhpLdJVwIlJvvZsizXSaDp18206256 = -414413741;    long wIgOhpLdJVwIlJvvZsizXSaDp92122595 = -263814349;    long wIgOhpLdJVwIlJvvZsizXSaDp41433330 = -619836754;    long wIgOhpLdJVwIlJvvZsizXSaDp77925137 = -115029368;    long wIgOhpLdJVwIlJvvZsizXSaDp32923959 = -401847559;    long wIgOhpLdJVwIlJvvZsizXSaDp97455661 = 76800459;    long wIgOhpLdJVwIlJvvZsizXSaDp65135232 = -150253589;    long wIgOhpLdJVwIlJvvZsizXSaDp6127203 = 28810150;    long wIgOhpLdJVwIlJvvZsizXSaDp56119866 = 34887834;    long wIgOhpLdJVwIlJvvZsizXSaDp20106285 = -925272686;    long wIgOhpLdJVwIlJvvZsizXSaDp24599802 = -618247582;    long wIgOhpLdJVwIlJvvZsizXSaDp73531112 = -785912682;    long wIgOhpLdJVwIlJvvZsizXSaDp20621744 = 81718613;    long wIgOhpLdJVwIlJvvZsizXSaDp72679418 = -879584887;    long wIgOhpLdJVwIlJvvZsizXSaDp57174629 = -663883314;    long wIgOhpLdJVwIlJvvZsizXSaDp73065621 = -833987205;    long wIgOhpLdJVwIlJvvZsizXSaDp62369238 = -723361428;    long wIgOhpLdJVwIlJvvZsizXSaDp21973467 = -834592158;    long wIgOhpLdJVwIlJvvZsizXSaDp90167331 = -482272333;    long wIgOhpLdJVwIlJvvZsizXSaDp17443719 = -854643447;    long wIgOhpLdJVwIlJvvZsizXSaDp50829914 = -835007281;    long wIgOhpLdJVwIlJvvZsizXSaDp24996753 = -464730960;    long wIgOhpLdJVwIlJvvZsizXSaDp28992973 = -49027952;    long wIgOhpLdJVwIlJvvZsizXSaDp54592773 = -410619087;    long wIgOhpLdJVwIlJvvZsizXSaDp39397217 = -206719683;    long wIgOhpLdJVwIlJvvZsizXSaDp75120113 = -602545367;    long wIgOhpLdJVwIlJvvZsizXSaDp91724441 = -49448157;    long wIgOhpLdJVwIlJvvZsizXSaDp1759423 = -480678186;    long wIgOhpLdJVwIlJvvZsizXSaDp53323136 = -237341648;    long wIgOhpLdJVwIlJvvZsizXSaDp81036113 = -253864613;    long wIgOhpLdJVwIlJvvZsizXSaDp69916037 = -133756436;    long wIgOhpLdJVwIlJvvZsizXSaDp15006502 = -261938777;    long wIgOhpLdJVwIlJvvZsizXSaDp14950101 = -906152899;    long wIgOhpLdJVwIlJvvZsizXSaDp39675382 = -647939201;    long wIgOhpLdJVwIlJvvZsizXSaDp6154419 = -182194251;    long wIgOhpLdJVwIlJvvZsizXSaDp74093929 = -336460041;    long wIgOhpLdJVwIlJvvZsizXSaDp11886970 = -383132627;    long wIgOhpLdJVwIlJvvZsizXSaDp7241678 = -364475305;    long wIgOhpLdJVwIlJvvZsizXSaDp66283119 = -82715559;    long wIgOhpLdJVwIlJvvZsizXSaDp63282987 = -668606847;    long wIgOhpLdJVwIlJvvZsizXSaDp6494519 = -343010243;    long wIgOhpLdJVwIlJvvZsizXSaDp12442283 = -988276573;    long wIgOhpLdJVwIlJvvZsizXSaDp66492015 = -825765756;    long wIgOhpLdJVwIlJvvZsizXSaDp85325832 = -35289381;    long wIgOhpLdJVwIlJvvZsizXSaDp66090273 = -139358344;    long wIgOhpLdJVwIlJvvZsizXSaDp11816126 = 6520052;    long wIgOhpLdJVwIlJvvZsizXSaDp47872331 = -706208071;    long wIgOhpLdJVwIlJvvZsizXSaDp1085295 = -364563785;    long wIgOhpLdJVwIlJvvZsizXSaDp63532574 = -142844676;    long wIgOhpLdJVwIlJvvZsizXSaDp15556147 = -416796370;     wIgOhpLdJVwIlJvvZsizXSaDp62944814 = wIgOhpLdJVwIlJvvZsizXSaDp87601857;     wIgOhpLdJVwIlJvvZsizXSaDp87601857 = wIgOhpLdJVwIlJvvZsizXSaDp48072108;     wIgOhpLdJVwIlJvvZsizXSaDp48072108 = wIgOhpLdJVwIlJvvZsizXSaDp52543729;     wIgOhpLdJVwIlJvvZsizXSaDp52543729 = wIgOhpLdJVwIlJvvZsizXSaDp44935810;     wIgOhpLdJVwIlJvvZsizXSaDp44935810 = wIgOhpLdJVwIlJvvZsizXSaDp50186175;     wIgOhpLdJVwIlJvvZsizXSaDp50186175 = wIgOhpLdJVwIlJvvZsizXSaDp10954843;     wIgOhpLdJVwIlJvvZsizXSaDp10954843 = wIgOhpLdJVwIlJvvZsizXSaDp56308064;     wIgOhpLdJVwIlJvvZsizXSaDp56308064 = wIgOhpLdJVwIlJvvZsizXSaDp97040092;     wIgOhpLdJVwIlJvvZsizXSaDp97040092 = wIgOhpLdJVwIlJvvZsizXSaDp23391154;     wIgOhpLdJVwIlJvvZsizXSaDp23391154 = wIgOhpLdJVwIlJvvZsizXSaDp26385921;     wIgOhpLdJVwIlJvvZsizXSaDp26385921 = wIgOhpLdJVwIlJvvZsizXSaDp47536053;     wIgOhpLdJVwIlJvvZsizXSaDp47536053 = wIgOhpLdJVwIlJvvZsizXSaDp21180544;     wIgOhpLdJVwIlJvvZsizXSaDp21180544 = wIgOhpLdJVwIlJvvZsizXSaDp50905980;     wIgOhpLdJVwIlJvvZsizXSaDp50905980 = wIgOhpLdJVwIlJvvZsizXSaDp89073469;     wIgOhpLdJVwIlJvvZsizXSaDp89073469 = wIgOhpLdJVwIlJvvZsizXSaDp69399399;     wIgOhpLdJVwIlJvvZsizXSaDp69399399 = wIgOhpLdJVwIlJvvZsizXSaDp47608634;     wIgOhpLdJVwIlJvvZsizXSaDp47608634 = wIgOhpLdJVwIlJvvZsizXSaDp34425090;     wIgOhpLdJVwIlJvvZsizXSaDp34425090 = wIgOhpLdJVwIlJvvZsizXSaDp45282848;     wIgOhpLdJVwIlJvvZsizXSaDp45282848 = wIgOhpLdJVwIlJvvZsizXSaDp24744455;     wIgOhpLdJVwIlJvvZsizXSaDp24744455 = wIgOhpLdJVwIlJvvZsizXSaDp43614188;     wIgOhpLdJVwIlJvvZsizXSaDp43614188 = wIgOhpLdJVwIlJvvZsizXSaDp65489153;     wIgOhpLdJVwIlJvvZsizXSaDp65489153 = wIgOhpLdJVwIlJvvZsizXSaDp22466626;     wIgOhpLdJVwIlJvvZsizXSaDp22466626 = wIgOhpLdJVwIlJvvZsizXSaDp41944905;     wIgOhpLdJVwIlJvvZsizXSaDp41944905 = wIgOhpLdJVwIlJvvZsizXSaDp96423863;     wIgOhpLdJVwIlJvvZsizXSaDp96423863 = wIgOhpLdJVwIlJvvZsizXSaDp24829525;     wIgOhpLdJVwIlJvvZsizXSaDp24829525 = wIgOhpLdJVwIlJvvZsizXSaDp25586374;     wIgOhpLdJVwIlJvvZsizXSaDp25586374 = wIgOhpLdJVwIlJvvZsizXSaDp37423731;     wIgOhpLdJVwIlJvvZsizXSaDp37423731 = wIgOhpLdJVwIlJvvZsizXSaDp35686320;     wIgOhpLdJVwIlJvvZsizXSaDp35686320 = wIgOhpLdJVwIlJvvZsizXSaDp24360675;     wIgOhpLdJVwIlJvvZsizXSaDp24360675 = wIgOhpLdJVwIlJvvZsizXSaDp66216525;     wIgOhpLdJVwIlJvvZsizXSaDp66216525 = wIgOhpLdJVwIlJvvZsizXSaDp53320299;     wIgOhpLdJVwIlJvvZsizXSaDp53320299 = wIgOhpLdJVwIlJvvZsizXSaDp85166814;     wIgOhpLdJVwIlJvvZsizXSaDp85166814 = wIgOhpLdJVwIlJvvZsizXSaDp99207077;     wIgOhpLdJVwIlJvvZsizXSaDp99207077 = wIgOhpLdJVwIlJvvZsizXSaDp60738648;     wIgOhpLdJVwIlJvvZsizXSaDp60738648 = wIgOhpLdJVwIlJvvZsizXSaDp71629750;     wIgOhpLdJVwIlJvvZsizXSaDp71629750 = wIgOhpLdJVwIlJvvZsizXSaDp18569485;     wIgOhpLdJVwIlJvvZsizXSaDp18569485 = wIgOhpLdJVwIlJvvZsizXSaDp22611881;     wIgOhpLdJVwIlJvvZsizXSaDp22611881 = wIgOhpLdJVwIlJvvZsizXSaDp5432118;     wIgOhpLdJVwIlJvvZsizXSaDp5432118 = wIgOhpLdJVwIlJvvZsizXSaDp90690074;     wIgOhpLdJVwIlJvvZsizXSaDp90690074 = wIgOhpLdJVwIlJvvZsizXSaDp85347237;     wIgOhpLdJVwIlJvvZsizXSaDp85347237 = wIgOhpLdJVwIlJvvZsizXSaDp68494074;     wIgOhpLdJVwIlJvvZsizXSaDp68494074 = wIgOhpLdJVwIlJvvZsizXSaDp73764712;     wIgOhpLdJVwIlJvvZsizXSaDp73764712 = wIgOhpLdJVwIlJvvZsizXSaDp20707204;     wIgOhpLdJVwIlJvvZsizXSaDp20707204 = wIgOhpLdJVwIlJvvZsizXSaDp88621768;     wIgOhpLdJVwIlJvvZsizXSaDp88621768 = wIgOhpLdJVwIlJvvZsizXSaDp15387751;     wIgOhpLdJVwIlJvvZsizXSaDp15387751 = wIgOhpLdJVwIlJvvZsizXSaDp54913488;     wIgOhpLdJVwIlJvvZsizXSaDp54913488 = wIgOhpLdJVwIlJvvZsizXSaDp10579872;     wIgOhpLdJVwIlJvvZsizXSaDp10579872 = wIgOhpLdJVwIlJvvZsizXSaDp22473631;     wIgOhpLdJVwIlJvvZsizXSaDp22473631 = wIgOhpLdJVwIlJvvZsizXSaDp96010938;     wIgOhpLdJVwIlJvvZsizXSaDp96010938 = wIgOhpLdJVwIlJvvZsizXSaDp18206256;     wIgOhpLdJVwIlJvvZsizXSaDp18206256 = wIgOhpLdJVwIlJvvZsizXSaDp92122595;     wIgOhpLdJVwIlJvvZsizXSaDp92122595 = wIgOhpLdJVwIlJvvZsizXSaDp41433330;     wIgOhpLdJVwIlJvvZsizXSaDp41433330 = wIgOhpLdJVwIlJvvZsizXSaDp77925137;     wIgOhpLdJVwIlJvvZsizXSaDp77925137 = wIgOhpLdJVwIlJvvZsizXSaDp32923959;     wIgOhpLdJVwIlJvvZsizXSaDp32923959 = wIgOhpLdJVwIlJvvZsizXSaDp97455661;     wIgOhpLdJVwIlJvvZsizXSaDp97455661 = wIgOhpLdJVwIlJvvZsizXSaDp65135232;     wIgOhpLdJVwIlJvvZsizXSaDp65135232 = wIgOhpLdJVwIlJvvZsizXSaDp6127203;     wIgOhpLdJVwIlJvvZsizXSaDp6127203 = wIgOhpLdJVwIlJvvZsizXSaDp56119866;     wIgOhpLdJVwIlJvvZsizXSaDp56119866 = wIgOhpLdJVwIlJvvZsizXSaDp20106285;     wIgOhpLdJVwIlJvvZsizXSaDp20106285 = wIgOhpLdJVwIlJvvZsizXSaDp24599802;     wIgOhpLdJVwIlJvvZsizXSaDp24599802 = wIgOhpLdJVwIlJvvZsizXSaDp73531112;     wIgOhpLdJVwIlJvvZsizXSaDp73531112 = wIgOhpLdJVwIlJvvZsizXSaDp20621744;     wIgOhpLdJVwIlJvvZsizXSaDp20621744 = wIgOhpLdJVwIlJvvZsizXSaDp72679418;     wIgOhpLdJVwIlJvvZsizXSaDp72679418 = wIgOhpLdJVwIlJvvZsizXSaDp57174629;     wIgOhpLdJVwIlJvvZsizXSaDp57174629 = wIgOhpLdJVwIlJvvZsizXSaDp73065621;     wIgOhpLdJVwIlJvvZsizXSaDp73065621 = wIgOhpLdJVwIlJvvZsizXSaDp62369238;     wIgOhpLdJVwIlJvvZsizXSaDp62369238 = wIgOhpLdJVwIlJvvZsizXSaDp21973467;     wIgOhpLdJVwIlJvvZsizXSaDp21973467 = wIgOhpLdJVwIlJvvZsizXSaDp90167331;     wIgOhpLdJVwIlJvvZsizXSaDp90167331 = wIgOhpLdJVwIlJvvZsizXSaDp17443719;     wIgOhpLdJVwIlJvvZsizXSaDp17443719 = wIgOhpLdJVwIlJvvZsizXSaDp50829914;     wIgOhpLdJVwIlJvvZsizXSaDp50829914 = wIgOhpLdJVwIlJvvZsizXSaDp24996753;     wIgOhpLdJVwIlJvvZsizXSaDp24996753 = wIgOhpLdJVwIlJvvZsizXSaDp28992973;     wIgOhpLdJVwIlJvvZsizXSaDp28992973 = wIgOhpLdJVwIlJvvZsizXSaDp54592773;     wIgOhpLdJVwIlJvvZsizXSaDp54592773 = wIgOhpLdJVwIlJvvZsizXSaDp39397217;     wIgOhpLdJVwIlJvvZsizXSaDp39397217 = wIgOhpLdJVwIlJvvZsizXSaDp75120113;     wIgOhpLdJVwIlJvvZsizXSaDp75120113 = wIgOhpLdJVwIlJvvZsizXSaDp91724441;     wIgOhpLdJVwIlJvvZsizXSaDp91724441 = wIgOhpLdJVwIlJvvZsizXSaDp1759423;     wIgOhpLdJVwIlJvvZsizXSaDp1759423 = wIgOhpLdJVwIlJvvZsizXSaDp53323136;     wIgOhpLdJVwIlJvvZsizXSaDp53323136 = wIgOhpLdJVwIlJvvZsizXSaDp81036113;     wIgOhpLdJVwIlJvvZsizXSaDp81036113 = wIgOhpLdJVwIlJvvZsizXSaDp69916037;     wIgOhpLdJVwIlJvvZsizXSaDp69916037 = wIgOhpLdJVwIlJvvZsizXSaDp15006502;     wIgOhpLdJVwIlJvvZsizXSaDp15006502 = wIgOhpLdJVwIlJvvZsizXSaDp14950101;     wIgOhpLdJVwIlJvvZsizXSaDp14950101 = wIgOhpLdJVwIlJvvZsizXSaDp39675382;     wIgOhpLdJVwIlJvvZsizXSaDp39675382 = wIgOhpLdJVwIlJvvZsizXSaDp6154419;     wIgOhpLdJVwIlJvvZsizXSaDp6154419 = wIgOhpLdJVwIlJvvZsizXSaDp74093929;     wIgOhpLdJVwIlJvvZsizXSaDp74093929 = wIgOhpLdJVwIlJvvZsizXSaDp11886970;     wIgOhpLdJVwIlJvvZsizXSaDp11886970 = wIgOhpLdJVwIlJvvZsizXSaDp7241678;     wIgOhpLdJVwIlJvvZsizXSaDp7241678 = wIgOhpLdJVwIlJvvZsizXSaDp66283119;     wIgOhpLdJVwIlJvvZsizXSaDp66283119 = wIgOhpLdJVwIlJvvZsizXSaDp63282987;     wIgOhpLdJVwIlJvvZsizXSaDp63282987 = wIgOhpLdJVwIlJvvZsizXSaDp6494519;     wIgOhpLdJVwIlJvvZsizXSaDp6494519 = wIgOhpLdJVwIlJvvZsizXSaDp12442283;     wIgOhpLdJVwIlJvvZsizXSaDp12442283 = wIgOhpLdJVwIlJvvZsizXSaDp66492015;     wIgOhpLdJVwIlJvvZsizXSaDp66492015 = wIgOhpLdJVwIlJvvZsizXSaDp85325832;     wIgOhpLdJVwIlJvvZsizXSaDp85325832 = wIgOhpLdJVwIlJvvZsizXSaDp66090273;     wIgOhpLdJVwIlJvvZsizXSaDp66090273 = wIgOhpLdJVwIlJvvZsizXSaDp11816126;     wIgOhpLdJVwIlJvvZsizXSaDp11816126 = wIgOhpLdJVwIlJvvZsizXSaDp47872331;     wIgOhpLdJVwIlJvvZsizXSaDp47872331 = wIgOhpLdJVwIlJvvZsizXSaDp1085295;     wIgOhpLdJVwIlJvvZsizXSaDp1085295 = wIgOhpLdJVwIlJvvZsizXSaDp63532574;     wIgOhpLdJVwIlJvvZsizXSaDp63532574 = wIgOhpLdJVwIlJvvZsizXSaDp15556147;     wIgOhpLdJVwIlJvvZsizXSaDp15556147 = wIgOhpLdJVwIlJvvZsizXSaDp62944814;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void YaOhxHGLapFTneOnnmjaCBLvsKKqQeeGwbsLmusDZBPzHIOvIQjgnzBXO91587214() {     long SonxPuwLyWMlDBstgAAmMnkwP69061921 = -528698258;    long SonxPuwLyWMlDBstgAAmMnkwP30975137 = -347259544;    long SonxPuwLyWMlDBstgAAmMnkwP64114291 = -926294979;    long SonxPuwLyWMlDBstgAAmMnkwP79618510 = -35419601;    long SonxPuwLyWMlDBstgAAmMnkwP13831299 = 76341392;    long SonxPuwLyWMlDBstgAAmMnkwP41603378 = -239191703;    long SonxPuwLyWMlDBstgAAmMnkwP71443809 = -444539122;    long SonxPuwLyWMlDBstgAAmMnkwP6067955 = -331627795;    long SonxPuwLyWMlDBstgAAmMnkwP61682588 = -344225543;    long SonxPuwLyWMlDBstgAAmMnkwP64620813 = -693133181;    long SonxPuwLyWMlDBstgAAmMnkwP86496210 = -814394171;    long SonxPuwLyWMlDBstgAAmMnkwP79359096 = -747272302;    long SonxPuwLyWMlDBstgAAmMnkwP7389663 = -859046364;    long SonxPuwLyWMlDBstgAAmMnkwP34049656 = -706317289;    long SonxPuwLyWMlDBstgAAmMnkwP84815896 = -38369444;    long SonxPuwLyWMlDBstgAAmMnkwP10904794 = -867473247;    long SonxPuwLyWMlDBstgAAmMnkwP41444637 = -972153994;    long SonxPuwLyWMlDBstgAAmMnkwP31478243 = -875112660;    long SonxPuwLyWMlDBstgAAmMnkwP7112690 = -673994108;    long SonxPuwLyWMlDBstgAAmMnkwP5294619 = -443015231;    long SonxPuwLyWMlDBstgAAmMnkwP32167381 = -182522279;    long SonxPuwLyWMlDBstgAAmMnkwP52010177 = -301526545;    long SonxPuwLyWMlDBstgAAmMnkwP58057418 = -133923662;    long SonxPuwLyWMlDBstgAAmMnkwP25937279 = -926577196;    long SonxPuwLyWMlDBstgAAmMnkwP40123514 = -152754838;    long SonxPuwLyWMlDBstgAAmMnkwP49551201 = -456391375;    long SonxPuwLyWMlDBstgAAmMnkwP24046152 = -257110090;    long SonxPuwLyWMlDBstgAAmMnkwP50530857 = -585590417;    long SonxPuwLyWMlDBstgAAmMnkwP1818576 = -248855200;    long SonxPuwLyWMlDBstgAAmMnkwP92976311 = -514078859;    long SonxPuwLyWMlDBstgAAmMnkwP58459075 = -613595328;    long SonxPuwLyWMlDBstgAAmMnkwP50930921 = -812416196;    long SonxPuwLyWMlDBstgAAmMnkwP94877763 = -472118043;    long SonxPuwLyWMlDBstgAAmMnkwP94037641 = -336104883;    long SonxPuwLyWMlDBstgAAmMnkwP22213300 = -230539493;    long SonxPuwLyWMlDBstgAAmMnkwP40355664 = -807289939;    long SonxPuwLyWMlDBstgAAmMnkwP99831419 = 86897708;    long SonxPuwLyWMlDBstgAAmMnkwP56702094 = -662383931;    long SonxPuwLyWMlDBstgAAmMnkwP79042371 = 45514437;    long SonxPuwLyWMlDBstgAAmMnkwP78192012 = -231045148;    long SonxPuwLyWMlDBstgAAmMnkwP91016461 = -944666524;    long SonxPuwLyWMlDBstgAAmMnkwP644532 = -994631735;    long SonxPuwLyWMlDBstgAAmMnkwP51831690 = -324953256;    long SonxPuwLyWMlDBstgAAmMnkwP8114944 = -926070927;    long SonxPuwLyWMlDBstgAAmMnkwP574234 = -28828715;    long SonxPuwLyWMlDBstgAAmMnkwP27326946 = -510910309;    long SonxPuwLyWMlDBstgAAmMnkwP72692062 = -462755154;    long SonxPuwLyWMlDBstgAAmMnkwP18536813 = -4404643;    long SonxPuwLyWMlDBstgAAmMnkwP32149359 = -699245553;    long SonxPuwLyWMlDBstgAAmMnkwP8922591 = -465544103;    long SonxPuwLyWMlDBstgAAmMnkwP53906934 = -256707412;    long SonxPuwLyWMlDBstgAAmMnkwP2932316 = -64540669;    long SonxPuwLyWMlDBstgAAmMnkwP89681787 = -411626342;    long SonxPuwLyWMlDBstgAAmMnkwP73894017 = -435499514;    long SonxPuwLyWMlDBstgAAmMnkwP59419833 = -2379341;    long SonxPuwLyWMlDBstgAAmMnkwP17051744 = -127171714;    long SonxPuwLyWMlDBstgAAmMnkwP72917719 = -113335883;    long SonxPuwLyWMlDBstgAAmMnkwP38177012 = -999717784;    long SonxPuwLyWMlDBstgAAmMnkwP39494997 = -882664763;    long SonxPuwLyWMlDBstgAAmMnkwP64280098 = -467267234;    long SonxPuwLyWMlDBstgAAmMnkwP17557226 = -982081614;    long SonxPuwLyWMlDBstgAAmMnkwP20912953 = -858948705;    long SonxPuwLyWMlDBstgAAmMnkwP4249380 = 17227405;    long SonxPuwLyWMlDBstgAAmMnkwP68706276 = -830146685;    long SonxPuwLyWMlDBstgAAmMnkwP6161739 = 20462146;    long SonxPuwLyWMlDBstgAAmMnkwP35565290 = 98022024;    long SonxPuwLyWMlDBstgAAmMnkwP84481332 = -175154259;    long SonxPuwLyWMlDBstgAAmMnkwP13352021 = -422941481;    long SonxPuwLyWMlDBstgAAmMnkwP11836357 = -375777796;    long SonxPuwLyWMlDBstgAAmMnkwP44460232 = -231079505;    long SonxPuwLyWMlDBstgAAmMnkwP11073374 = -854370955;    long SonxPuwLyWMlDBstgAAmMnkwP84742543 = -209770063;    long SonxPuwLyWMlDBstgAAmMnkwP52435872 = -820627097;    long SonxPuwLyWMlDBstgAAmMnkwP28920678 = -342948961;    long SonxPuwLyWMlDBstgAAmMnkwP14278158 = -498348708;    long SonxPuwLyWMlDBstgAAmMnkwP31522850 = -187890545;    long SonxPuwLyWMlDBstgAAmMnkwP178487 = -976573290;    long SonxPuwLyWMlDBstgAAmMnkwP49942474 = -207852735;    long SonxPuwLyWMlDBstgAAmMnkwP25363045 = -797748481;    long SonxPuwLyWMlDBstgAAmMnkwP12796569 = -641844529;    long SonxPuwLyWMlDBstgAAmMnkwP76859138 = -993636221;    long SonxPuwLyWMlDBstgAAmMnkwP5509340 = -152705447;    long SonxPuwLyWMlDBstgAAmMnkwP18381498 = -886344864;    long SonxPuwLyWMlDBstgAAmMnkwP92895984 = -783311098;    long SonxPuwLyWMlDBstgAAmMnkwP39069377 = -157371447;    long SonxPuwLyWMlDBstgAAmMnkwP55526760 = -449054659;    long SonxPuwLyWMlDBstgAAmMnkwP61249134 = -300789854;    long SonxPuwLyWMlDBstgAAmMnkwP20983746 = 63381470;    long SonxPuwLyWMlDBstgAAmMnkwP34617809 = -233725542;    long SonxPuwLyWMlDBstgAAmMnkwP5161556 = -3367780;    long SonxPuwLyWMlDBstgAAmMnkwP67437944 = -593954057;    long SonxPuwLyWMlDBstgAAmMnkwP61654407 = 86615491;    long SonxPuwLyWMlDBstgAAmMnkwP17207098 = -779719168;    long SonxPuwLyWMlDBstgAAmMnkwP14762273 = -487218330;    long SonxPuwLyWMlDBstgAAmMnkwP60634786 = -248963534;    long SonxPuwLyWMlDBstgAAmMnkwP70103508 = 14282181;    long SonxPuwLyWMlDBstgAAmMnkwP96395152 = -911859140;    long SonxPuwLyWMlDBstgAAmMnkwP83125413 = -494806571;    long SonxPuwLyWMlDBstgAAmMnkwP1953206 = -846533074;    long SonxPuwLyWMlDBstgAAmMnkwP65008944 = -528698258;     SonxPuwLyWMlDBstgAAmMnkwP69061921 = SonxPuwLyWMlDBstgAAmMnkwP30975137;     SonxPuwLyWMlDBstgAAmMnkwP30975137 = SonxPuwLyWMlDBstgAAmMnkwP64114291;     SonxPuwLyWMlDBstgAAmMnkwP64114291 = SonxPuwLyWMlDBstgAAmMnkwP79618510;     SonxPuwLyWMlDBstgAAmMnkwP79618510 = SonxPuwLyWMlDBstgAAmMnkwP13831299;     SonxPuwLyWMlDBstgAAmMnkwP13831299 = SonxPuwLyWMlDBstgAAmMnkwP41603378;     SonxPuwLyWMlDBstgAAmMnkwP41603378 = SonxPuwLyWMlDBstgAAmMnkwP71443809;     SonxPuwLyWMlDBstgAAmMnkwP71443809 = SonxPuwLyWMlDBstgAAmMnkwP6067955;     SonxPuwLyWMlDBstgAAmMnkwP6067955 = SonxPuwLyWMlDBstgAAmMnkwP61682588;     SonxPuwLyWMlDBstgAAmMnkwP61682588 = SonxPuwLyWMlDBstgAAmMnkwP64620813;     SonxPuwLyWMlDBstgAAmMnkwP64620813 = SonxPuwLyWMlDBstgAAmMnkwP86496210;     SonxPuwLyWMlDBstgAAmMnkwP86496210 = SonxPuwLyWMlDBstgAAmMnkwP79359096;     SonxPuwLyWMlDBstgAAmMnkwP79359096 = SonxPuwLyWMlDBstgAAmMnkwP7389663;     SonxPuwLyWMlDBstgAAmMnkwP7389663 = SonxPuwLyWMlDBstgAAmMnkwP34049656;     SonxPuwLyWMlDBstgAAmMnkwP34049656 = SonxPuwLyWMlDBstgAAmMnkwP84815896;     SonxPuwLyWMlDBstgAAmMnkwP84815896 = SonxPuwLyWMlDBstgAAmMnkwP10904794;     SonxPuwLyWMlDBstgAAmMnkwP10904794 = SonxPuwLyWMlDBstgAAmMnkwP41444637;     SonxPuwLyWMlDBstgAAmMnkwP41444637 = SonxPuwLyWMlDBstgAAmMnkwP31478243;     SonxPuwLyWMlDBstgAAmMnkwP31478243 = SonxPuwLyWMlDBstgAAmMnkwP7112690;     SonxPuwLyWMlDBstgAAmMnkwP7112690 = SonxPuwLyWMlDBstgAAmMnkwP5294619;     SonxPuwLyWMlDBstgAAmMnkwP5294619 = SonxPuwLyWMlDBstgAAmMnkwP32167381;     SonxPuwLyWMlDBstgAAmMnkwP32167381 = SonxPuwLyWMlDBstgAAmMnkwP52010177;     SonxPuwLyWMlDBstgAAmMnkwP52010177 = SonxPuwLyWMlDBstgAAmMnkwP58057418;     SonxPuwLyWMlDBstgAAmMnkwP58057418 = SonxPuwLyWMlDBstgAAmMnkwP25937279;     SonxPuwLyWMlDBstgAAmMnkwP25937279 = SonxPuwLyWMlDBstgAAmMnkwP40123514;     SonxPuwLyWMlDBstgAAmMnkwP40123514 = SonxPuwLyWMlDBstgAAmMnkwP49551201;     SonxPuwLyWMlDBstgAAmMnkwP49551201 = SonxPuwLyWMlDBstgAAmMnkwP24046152;     SonxPuwLyWMlDBstgAAmMnkwP24046152 = SonxPuwLyWMlDBstgAAmMnkwP50530857;     SonxPuwLyWMlDBstgAAmMnkwP50530857 = SonxPuwLyWMlDBstgAAmMnkwP1818576;     SonxPuwLyWMlDBstgAAmMnkwP1818576 = SonxPuwLyWMlDBstgAAmMnkwP92976311;     SonxPuwLyWMlDBstgAAmMnkwP92976311 = SonxPuwLyWMlDBstgAAmMnkwP58459075;     SonxPuwLyWMlDBstgAAmMnkwP58459075 = SonxPuwLyWMlDBstgAAmMnkwP50930921;     SonxPuwLyWMlDBstgAAmMnkwP50930921 = SonxPuwLyWMlDBstgAAmMnkwP94877763;     SonxPuwLyWMlDBstgAAmMnkwP94877763 = SonxPuwLyWMlDBstgAAmMnkwP94037641;     SonxPuwLyWMlDBstgAAmMnkwP94037641 = SonxPuwLyWMlDBstgAAmMnkwP22213300;     SonxPuwLyWMlDBstgAAmMnkwP22213300 = SonxPuwLyWMlDBstgAAmMnkwP40355664;     SonxPuwLyWMlDBstgAAmMnkwP40355664 = SonxPuwLyWMlDBstgAAmMnkwP99831419;     SonxPuwLyWMlDBstgAAmMnkwP99831419 = SonxPuwLyWMlDBstgAAmMnkwP56702094;     SonxPuwLyWMlDBstgAAmMnkwP56702094 = SonxPuwLyWMlDBstgAAmMnkwP79042371;     SonxPuwLyWMlDBstgAAmMnkwP79042371 = SonxPuwLyWMlDBstgAAmMnkwP78192012;     SonxPuwLyWMlDBstgAAmMnkwP78192012 = SonxPuwLyWMlDBstgAAmMnkwP91016461;     SonxPuwLyWMlDBstgAAmMnkwP91016461 = SonxPuwLyWMlDBstgAAmMnkwP644532;     SonxPuwLyWMlDBstgAAmMnkwP644532 = SonxPuwLyWMlDBstgAAmMnkwP51831690;     SonxPuwLyWMlDBstgAAmMnkwP51831690 = SonxPuwLyWMlDBstgAAmMnkwP8114944;     SonxPuwLyWMlDBstgAAmMnkwP8114944 = SonxPuwLyWMlDBstgAAmMnkwP574234;     SonxPuwLyWMlDBstgAAmMnkwP574234 = SonxPuwLyWMlDBstgAAmMnkwP27326946;     SonxPuwLyWMlDBstgAAmMnkwP27326946 = SonxPuwLyWMlDBstgAAmMnkwP72692062;     SonxPuwLyWMlDBstgAAmMnkwP72692062 = SonxPuwLyWMlDBstgAAmMnkwP18536813;     SonxPuwLyWMlDBstgAAmMnkwP18536813 = SonxPuwLyWMlDBstgAAmMnkwP32149359;     SonxPuwLyWMlDBstgAAmMnkwP32149359 = SonxPuwLyWMlDBstgAAmMnkwP8922591;     SonxPuwLyWMlDBstgAAmMnkwP8922591 = SonxPuwLyWMlDBstgAAmMnkwP53906934;     SonxPuwLyWMlDBstgAAmMnkwP53906934 = SonxPuwLyWMlDBstgAAmMnkwP2932316;     SonxPuwLyWMlDBstgAAmMnkwP2932316 = SonxPuwLyWMlDBstgAAmMnkwP89681787;     SonxPuwLyWMlDBstgAAmMnkwP89681787 = SonxPuwLyWMlDBstgAAmMnkwP73894017;     SonxPuwLyWMlDBstgAAmMnkwP73894017 = SonxPuwLyWMlDBstgAAmMnkwP59419833;     SonxPuwLyWMlDBstgAAmMnkwP59419833 = SonxPuwLyWMlDBstgAAmMnkwP17051744;     SonxPuwLyWMlDBstgAAmMnkwP17051744 = SonxPuwLyWMlDBstgAAmMnkwP72917719;     SonxPuwLyWMlDBstgAAmMnkwP72917719 = SonxPuwLyWMlDBstgAAmMnkwP38177012;     SonxPuwLyWMlDBstgAAmMnkwP38177012 = SonxPuwLyWMlDBstgAAmMnkwP39494997;     SonxPuwLyWMlDBstgAAmMnkwP39494997 = SonxPuwLyWMlDBstgAAmMnkwP64280098;     SonxPuwLyWMlDBstgAAmMnkwP64280098 = SonxPuwLyWMlDBstgAAmMnkwP17557226;     SonxPuwLyWMlDBstgAAmMnkwP17557226 = SonxPuwLyWMlDBstgAAmMnkwP20912953;     SonxPuwLyWMlDBstgAAmMnkwP20912953 = SonxPuwLyWMlDBstgAAmMnkwP4249380;     SonxPuwLyWMlDBstgAAmMnkwP4249380 = SonxPuwLyWMlDBstgAAmMnkwP68706276;     SonxPuwLyWMlDBstgAAmMnkwP68706276 = SonxPuwLyWMlDBstgAAmMnkwP6161739;     SonxPuwLyWMlDBstgAAmMnkwP6161739 = SonxPuwLyWMlDBstgAAmMnkwP35565290;     SonxPuwLyWMlDBstgAAmMnkwP35565290 = SonxPuwLyWMlDBstgAAmMnkwP84481332;     SonxPuwLyWMlDBstgAAmMnkwP84481332 = SonxPuwLyWMlDBstgAAmMnkwP13352021;     SonxPuwLyWMlDBstgAAmMnkwP13352021 = SonxPuwLyWMlDBstgAAmMnkwP11836357;     SonxPuwLyWMlDBstgAAmMnkwP11836357 = SonxPuwLyWMlDBstgAAmMnkwP44460232;     SonxPuwLyWMlDBstgAAmMnkwP44460232 = SonxPuwLyWMlDBstgAAmMnkwP11073374;     SonxPuwLyWMlDBstgAAmMnkwP11073374 = SonxPuwLyWMlDBstgAAmMnkwP84742543;     SonxPuwLyWMlDBstgAAmMnkwP84742543 = SonxPuwLyWMlDBstgAAmMnkwP52435872;     SonxPuwLyWMlDBstgAAmMnkwP52435872 = SonxPuwLyWMlDBstgAAmMnkwP28920678;     SonxPuwLyWMlDBstgAAmMnkwP28920678 = SonxPuwLyWMlDBstgAAmMnkwP14278158;     SonxPuwLyWMlDBstgAAmMnkwP14278158 = SonxPuwLyWMlDBstgAAmMnkwP31522850;     SonxPuwLyWMlDBstgAAmMnkwP31522850 = SonxPuwLyWMlDBstgAAmMnkwP178487;     SonxPuwLyWMlDBstgAAmMnkwP178487 = SonxPuwLyWMlDBstgAAmMnkwP49942474;     SonxPuwLyWMlDBstgAAmMnkwP49942474 = SonxPuwLyWMlDBstgAAmMnkwP25363045;     SonxPuwLyWMlDBstgAAmMnkwP25363045 = SonxPuwLyWMlDBstgAAmMnkwP12796569;     SonxPuwLyWMlDBstgAAmMnkwP12796569 = SonxPuwLyWMlDBstgAAmMnkwP76859138;     SonxPuwLyWMlDBstgAAmMnkwP76859138 = SonxPuwLyWMlDBstgAAmMnkwP5509340;     SonxPuwLyWMlDBstgAAmMnkwP5509340 = SonxPuwLyWMlDBstgAAmMnkwP18381498;     SonxPuwLyWMlDBstgAAmMnkwP18381498 = SonxPuwLyWMlDBstgAAmMnkwP92895984;     SonxPuwLyWMlDBstgAAmMnkwP92895984 = SonxPuwLyWMlDBstgAAmMnkwP39069377;     SonxPuwLyWMlDBstgAAmMnkwP39069377 = SonxPuwLyWMlDBstgAAmMnkwP55526760;     SonxPuwLyWMlDBstgAAmMnkwP55526760 = SonxPuwLyWMlDBstgAAmMnkwP61249134;     SonxPuwLyWMlDBstgAAmMnkwP61249134 = SonxPuwLyWMlDBstgAAmMnkwP20983746;     SonxPuwLyWMlDBstgAAmMnkwP20983746 = SonxPuwLyWMlDBstgAAmMnkwP34617809;     SonxPuwLyWMlDBstgAAmMnkwP34617809 = SonxPuwLyWMlDBstgAAmMnkwP5161556;     SonxPuwLyWMlDBstgAAmMnkwP5161556 = SonxPuwLyWMlDBstgAAmMnkwP67437944;     SonxPuwLyWMlDBstgAAmMnkwP67437944 = SonxPuwLyWMlDBstgAAmMnkwP61654407;     SonxPuwLyWMlDBstgAAmMnkwP61654407 = SonxPuwLyWMlDBstgAAmMnkwP17207098;     SonxPuwLyWMlDBstgAAmMnkwP17207098 = SonxPuwLyWMlDBstgAAmMnkwP14762273;     SonxPuwLyWMlDBstgAAmMnkwP14762273 = SonxPuwLyWMlDBstgAAmMnkwP60634786;     SonxPuwLyWMlDBstgAAmMnkwP60634786 = SonxPuwLyWMlDBstgAAmMnkwP70103508;     SonxPuwLyWMlDBstgAAmMnkwP70103508 = SonxPuwLyWMlDBstgAAmMnkwP96395152;     SonxPuwLyWMlDBstgAAmMnkwP96395152 = SonxPuwLyWMlDBstgAAmMnkwP83125413;     SonxPuwLyWMlDBstgAAmMnkwP83125413 = SonxPuwLyWMlDBstgAAmMnkwP1953206;     SonxPuwLyWMlDBstgAAmMnkwP1953206 = SonxPuwLyWMlDBstgAAmMnkwP65008944;     SonxPuwLyWMlDBstgAAmMnkwP65008944 = SonxPuwLyWMlDBstgAAmMnkwP69061921;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void khJqLZscrHaYplwRyPrAtDfVnTicJVZohRxnoTctemyItRieauePcdxhB58878813() {     long oDrrPSVhmrYoIdenxVHEXbVlD4520890 = -994975158;    long oDrrPSVhmrYoIdenxVHEXbVlD44247215 = -227811151;    long oDrrPSVhmrYoIdenxVHEXbVlD1500768 = -591962054;    long oDrrPSVhmrYoIdenxVHEXbVlD51841865 = -956570672;    long oDrrPSVhmrYoIdenxVHEXbVlD70116567 = -29257453;    long oDrrPSVhmrYoIdenxVHEXbVlD77826250 = -501539599;    long oDrrPSVhmrYoIdenxVHEXbVlD82101215 = -289264856;    long oDrrPSVhmrYoIdenxVHEXbVlD68199516 = 24138064;    long oDrrPSVhmrYoIdenxVHEXbVlD63200193 = -832556950;    long oDrrPSVhmrYoIdenxVHEXbVlD79523525 = -357820179;    long oDrrPSVhmrYoIdenxVHEXbVlD24677946 = -616401901;    long oDrrPSVhmrYoIdenxVHEXbVlD79927244 = -611393074;    long oDrrPSVhmrYoIdenxVHEXbVlD45624308 = -311058869;    long oDrrPSVhmrYoIdenxVHEXbVlD87190519 = -682680698;    long oDrrPSVhmrYoIdenxVHEXbVlD43010412 = -541794459;    long oDrrPSVhmrYoIdenxVHEXbVlD94446094 = -503284854;    long oDrrPSVhmrYoIdenxVHEXbVlD97280573 = -399128546;    long oDrrPSVhmrYoIdenxVHEXbVlD31238434 = -948540728;    long oDrrPSVhmrYoIdenxVHEXbVlD7663020 = -990557530;    long oDrrPSVhmrYoIdenxVHEXbVlD99131837 = -869576297;    long oDrrPSVhmrYoIdenxVHEXbVlD45254244 = -939796968;    long oDrrPSVhmrYoIdenxVHEXbVlD55431702 = -388162839;    long oDrrPSVhmrYoIdenxVHEXbVlD28582798 = -871555846;    long oDrrPSVhmrYoIdenxVHEXbVlD19730225 = -337401800;    long oDrrPSVhmrYoIdenxVHEXbVlD48141465 = -176740036;    long oDrrPSVhmrYoIdenxVHEXbVlD60249372 = -144968181;    long oDrrPSVhmrYoIdenxVHEXbVlD84466726 = -63394231;    long oDrrPSVhmrYoIdenxVHEXbVlD91259281 = -755362591;    long oDrrPSVhmrYoIdenxVHEXbVlD48486790 = -822950003;    long oDrrPSVhmrYoIdenxVHEXbVlD98509722 = -548586029;    long oDrrPSVhmrYoIdenxVHEXbVlD77042306 = -65575815;    long oDrrPSVhmrYoIdenxVHEXbVlD88753939 = -585387610;    long oDrrPSVhmrYoIdenxVHEXbVlD7095775 = -619714020;    long oDrrPSVhmrYoIdenxVHEXbVlD23786068 = -400798697;    long oDrrPSVhmrYoIdenxVHEXbVlD88021753 = -181639744;    long oDrrPSVhmrYoIdenxVHEXbVlD91916507 = 78144755;    long oDrrPSVhmrYoIdenxVHEXbVlD49243236 = -877798332;    long oDrrPSVhmrYoIdenxVHEXbVlD7917498 = -645039512;    long oDrrPSVhmrYoIdenxVHEXbVlD9432933 = -705361839;    long oDrrPSVhmrYoIdenxVHEXbVlD42463545 = -796307694;    long oDrrPSVhmrYoIdenxVHEXbVlD24468069 = -713865438;    long oDrrPSVhmrYoIdenxVHEXbVlD90009658 = -589177026;    long oDrrPSVhmrYoIdenxVHEXbVlD41215069 = -978134042;    long oDrrPSVhmrYoIdenxVHEXbVlD48246282 = -430403337;    long oDrrPSVhmrYoIdenxVHEXbVlD590693 = -955339876;    long oDrrPSVhmrYoIdenxVHEXbVlD73288274 = -549833941;    long oDrrPSVhmrYoIdenxVHEXbVlD92037226 = -946741514;    long oDrrPSVhmrYoIdenxVHEXbVlD36263125 = -170931236;    long oDrrPSVhmrYoIdenxVHEXbVlD55042025 = -362982433;    long oDrrPSVhmrYoIdenxVHEXbVlD33452181 = -956570919;    long oDrrPSVhmrYoIdenxVHEXbVlD34677658 = -130983969;    long oDrrPSVhmrYoIdenxVHEXbVlD86417787 = -278193015;    long oDrrPSVhmrYoIdenxVHEXbVlD58302935 = -167671896;    long oDrrPSVhmrYoIdenxVHEXbVlD89885864 = -627008013;    long oDrrPSVhmrYoIdenxVHEXbVlD13624570 = -348869487;    long oDrrPSVhmrYoIdenxVHEXbVlD49089188 = -506812320;    long oDrrPSVhmrYoIdenxVHEXbVlD15664418 = -356255305;    long oDrrPSVhmrYoIdenxVHEXbVlD81770543 = -154560255;    long oDrrPSVhmrYoIdenxVHEXbVlD3700401 = -679830636;    long oDrrPSVhmrYoIdenxVHEXbVlD9867196 = -884289272;    long oDrrPSVhmrYoIdenxVHEXbVlD93359523 = -338145369;    long oDrrPSVhmrYoIdenxVHEXbVlD90841933 = -533902265;    long oDrrPSVhmrYoIdenxVHEXbVlD19712726 = -152911933;    long oDrrPSVhmrYoIdenxVHEXbVlD64690471 = -183970922;    long oDrrPSVhmrYoIdenxVHEXbVlD2481220 = -192244365;    long oDrrPSVhmrYoIdenxVHEXbVlD35924007 = 68985709;    long oDrrPSVhmrYoIdenxVHEXbVlD72831470 = -991679054;    long oDrrPSVhmrYoIdenxVHEXbVlD21838240 = -910260173;    long oDrrPSVhmrYoIdenxVHEXbVlD99168765 = -401040954;    long oDrrPSVhmrYoIdenxVHEXbVlD51093905 = -519939215;    long oDrrPSVhmrYoIdenxVHEXbVlD45202858 = -625486522;    long oDrrPSVhmrYoIdenxVHEXbVlD89363076 = -754089035;    long oDrrPSVhmrYoIdenxVHEXbVlD21805502 = -143178890;    long oDrrPSVhmrYoIdenxVHEXbVlD65199475 = -94249836;    long oDrrPSVhmrYoIdenxVHEXbVlD74663769 = -55710860;    long oDrrPSVhmrYoIdenxVHEXbVlD55244586 = -250619943;    long oDrrPSVhmrYoIdenxVHEXbVlD14216634 = -410028798;    long oDrrPSVhmrYoIdenxVHEXbVlD80336515 = -341152509;    long oDrrPSVhmrYoIdenxVHEXbVlD19139532 = -382061924;    long oDrrPSVhmrYoIdenxVHEXbVlD74853191 = -626906095;    long oDrrPSVhmrYoIdenxVHEXbVlD68212146 = -198226668;    long oDrrPSVhmrYoIdenxVHEXbVlD48203601 = -892462995;    long oDrrPSVhmrYoIdenxVHEXbVlD36217256 = -292380159;    long oDrrPSVhmrYoIdenxVHEXbVlD15034610 = -866379084;    long oDrrPSVhmrYoIdenxVHEXbVlD63832064 = -317602060;    long oDrrPSVhmrYoIdenxVHEXbVlD90624518 = -787382800;    long oDrrPSVhmrYoIdenxVHEXbVlD30451004 = -317715715;    long oDrrPSVhmrYoIdenxVHEXbVlD17209910 = -992706008;    long oDrrPSVhmrYoIdenxVHEXbVlD10161499 = 48070790;    long oDrrPSVhmrYoIdenxVHEXbVlD38932566 = -674827425;    long oDrrPSVhmrYoIdenxVHEXbVlD76252089 = -565599940;    long oDrrPSVhmrYoIdenxVHEXbVlD67472692 = -623238078;    long oDrrPSVhmrYoIdenxVHEXbVlD4217097 = -965208876;    long oDrrPSVhmrYoIdenxVHEXbVlD99565737 = -821072567;    long oDrrPSVhmrYoIdenxVHEXbVlD49104021 = -358162326;    long oDrrPSVhmrYoIdenxVHEXbVlD33626135 = -79963173;    long oDrrPSVhmrYoIdenxVHEXbVlD70296932 = -336265093;    long oDrrPSVhmrYoIdenxVHEXbVlD76524598 = -694163121;    long oDrrPSVhmrYoIdenxVHEXbVlD45765063 = -138158973;    long oDrrPSVhmrYoIdenxVHEXbVlD64666686 = -994975158;     oDrrPSVhmrYoIdenxVHEXbVlD4520890 = oDrrPSVhmrYoIdenxVHEXbVlD44247215;     oDrrPSVhmrYoIdenxVHEXbVlD44247215 = oDrrPSVhmrYoIdenxVHEXbVlD1500768;     oDrrPSVhmrYoIdenxVHEXbVlD1500768 = oDrrPSVhmrYoIdenxVHEXbVlD51841865;     oDrrPSVhmrYoIdenxVHEXbVlD51841865 = oDrrPSVhmrYoIdenxVHEXbVlD70116567;     oDrrPSVhmrYoIdenxVHEXbVlD70116567 = oDrrPSVhmrYoIdenxVHEXbVlD77826250;     oDrrPSVhmrYoIdenxVHEXbVlD77826250 = oDrrPSVhmrYoIdenxVHEXbVlD82101215;     oDrrPSVhmrYoIdenxVHEXbVlD82101215 = oDrrPSVhmrYoIdenxVHEXbVlD68199516;     oDrrPSVhmrYoIdenxVHEXbVlD68199516 = oDrrPSVhmrYoIdenxVHEXbVlD63200193;     oDrrPSVhmrYoIdenxVHEXbVlD63200193 = oDrrPSVhmrYoIdenxVHEXbVlD79523525;     oDrrPSVhmrYoIdenxVHEXbVlD79523525 = oDrrPSVhmrYoIdenxVHEXbVlD24677946;     oDrrPSVhmrYoIdenxVHEXbVlD24677946 = oDrrPSVhmrYoIdenxVHEXbVlD79927244;     oDrrPSVhmrYoIdenxVHEXbVlD79927244 = oDrrPSVhmrYoIdenxVHEXbVlD45624308;     oDrrPSVhmrYoIdenxVHEXbVlD45624308 = oDrrPSVhmrYoIdenxVHEXbVlD87190519;     oDrrPSVhmrYoIdenxVHEXbVlD87190519 = oDrrPSVhmrYoIdenxVHEXbVlD43010412;     oDrrPSVhmrYoIdenxVHEXbVlD43010412 = oDrrPSVhmrYoIdenxVHEXbVlD94446094;     oDrrPSVhmrYoIdenxVHEXbVlD94446094 = oDrrPSVhmrYoIdenxVHEXbVlD97280573;     oDrrPSVhmrYoIdenxVHEXbVlD97280573 = oDrrPSVhmrYoIdenxVHEXbVlD31238434;     oDrrPSVhmrYoIdenxVHEXbVlD31238434 = oDrrPSVhmrYoIdenxVHEXbVlD7663020;     oDrrPSVhmrYoIdenxVHEXbVlD7663020 = oDrrPSVhmrYoIdenxVHEXbVlD99131837;     oDrrPSVhmrYoIdenxVHEXbVlD99131837 = oDrrPSVhmrYoIdenxVHEXbVlD45254244;     oDrrPSVhmrYoIdenxVHEXbVlD45254244 = oDrrPSVhmrYoIdenxVHEXbVlD55431702;     oDrrPSVhmrYoIdenxVHEXbVlD55431702 = oDrrPSVhmrYoIdenxVHEXbVlD28582798;     oDrrPSVhmrYoIdenxVHEXbVlD28582798 = oDrrPSVhmrYoIdenxVHEXbVlD19730225;     oDrrPSVhmrYoIdenxVHEXbVlD19730225 = oDrrPSVhmrYoIdenxVHEXbVlD48141465;     oDrrPSVhmrYoIdenxVHEXbVlD48141465 = oDrrPSVhmrYoIdenxVHEXbVlD60249372;     oDrrPSVhmrYoIdenxVHEXbVlD60249372 = oDrrPSVhmrYoIdenxVHEXbVlD84466726;     oDrrPSVhmrYoIdenxVHEXbVlD84466726 = oDrrPSVhmrYoIdenxVHEXbVlD91259281;     oDrrPSVhmrYoIdenxVHEXbVlD91259281 = oDrrPSVhmrYoIdenxVHEXbVlD48486790;     oDrrPSVhmrYoIdenxVHEXbVlD48486790 = oDrrPSVhmrYoIdenxVHEXbVlD98509722;     oDrrPSVhmrYoIdenxVHEXbVlD98509722 = oDrrPSVhmrYoIdenxVHEXbVlD77042306;     oDrrPSVhmrYoIdenxVHEXbVlD77042306 = oDrrPSVhmrYoIdenxVHEXbVlD88753939;     oDrrPSVhmrYoIdenxVHEXbVlD88753939 = oDrrPSVhmrYoIdenxVHEXbVlD7095775;     oDrrPSVhmrYoIdenxVHEXbVlD7095775 = oDrrPSVhmrYoIdenxVHEXbVlD23786068;     oDrrPSVhmrYoIdenxVHEXbVlD23786068 = oDrrPSVhmrYoIdenxVHEXbVlD88021753;     oDrrPSVhmrYoIdenxVHEXbVlD88021753 = oDrrPSVhmrYoIdenxVHEXbVlD91916507;     oDrrPSVhmrYoIdenxVHEXbVlD91916507 = oDrrPSVhmrYoIdenxVHEXbVlD49243236;     oDrrPSVhmrYoIdenxVHEXbVlD49243236 = oDrrPSVhmrYoIdenxVHEXbVlD7917498;     oDrrPSVhmrYoIdenxVHEXbVlD7917498 = oDrrPSVhmrYoIdenxVHEXbVlD9432933;     oDrrPSVhmrYoIdenxVHEXbVlD9432933 = oDrrPSVhmrYoIdenxVHEXbVlD42463545;     oDrrPSVhmrYoIdenxVHEXbVlD42463545 = oDrrPSVhmrYoIdenxVHEXbVlD24468069;     oDrrPSVhmrYoIdenxVHEXbVlD24468069 = oDrrPSVhmrYoIdenxVHEXbVlD90009658;     oDrrPSVhmrYoIdenxVHEXbVlD90009658 = oDrrPSVhmrYoIdenxVHEXbVlD41215069;     oDrrPSVhmrYoIdenxVHEXbVlD41215069 = oDrrPSVhmrYoIdenxVHEXbVlD48246282;     oDrrPSVhmrYoIdenxVHEXbVlD48246282 = oDrrPSVhmrYoIdenxVHEXbVlD590693;     oDrrPSVhmrYoIdenxVHEXbVlD590693 = oDrrPSVhmrYoIdenxVHEXbVlD73288274;     oDrrPSVhmrYoIdenxVHEXbVlD73288274 = oDrrPSVhmrYoIdenxVHEXbVlD92037226;     oDrrPSVhmrYoIdenxVHEXbVlD92037226 = oDrrPSVhmrYoIdenxVHEXbVlD36263125;     oDrrPSVhmrYoIdenxVHEXbVlD36263125 = oDrrPSVhmrYoIdenxVHEXbVlD55042025;     oDrrPSVhmrYoIdenxVHEXbVlD55042025 = oDrrPSVhmrYoIdenxVHEXbVlD33452181;     oDrrPSVhmrYoIdenxVHEXbVlD33452181 = oDrrPSVhmrYoIdenxVHEXbVlD34677658;     oDrrPSVhmrYoIdenxVHEXbVlD34677658 = oDrrPSVhmrYoIdenxVHEXbVlD86417787;     oDrrPSVhmrYoIdenxVHEXbVlD86417787 = oDrrPSVhmrYoIdenxVHEXbVlD58302935;     oDrrPSVhmrYoIdenxVHEXbVlD58302935 = oDrrPSVhmrYoIdenxVHEXbVlD89885864;     oDrrPSVhmrYoIdenxVHEXbVlD89885864 = oDrrPSVhmrYoIdenxVHEXbVlD13624570;     oDrrPSVhmrYoIdenxVHEXbVlD13624570 = oDrrPSVhmrYoIdenxVHEXbVlD49089188;     oDrrPSVhmrYoIdenxVHEXbVlD49089188 = oDrrPSVhmrYoIdenxVHEXbVlD15664418;     oDrrPSVhmrYoIdenxVHEXbVlD15664418 = oDrrPSVhmrYoIdenxVHEXbVlD81770543;     oDrrPSVhmrYoIdenxVHEXbVlD81770543 = oDrrPSVhmrYoIdenxVHEXbVlD3700401;     oDrrPSVhmrYoIdenxVHEXbVlD3700401 = oDrrPSVhmrYoIdenxVHEXbVlD9867196;     oDrrPSVhmrYoIdenxVHEXbVlD9867196 = oDrrPSVhmrYoIdenxVHEXbVlD93359523;     oDrrPSVhmrYoIdenxVHEXbVlD93359523 = oDrrPSVhmrYoIdenxVHEXbVlD90841933;     oDrrPSVhmrYoIdenxVHEXbVlD90841933 = oDrrPSVhmrYoIdenxVHEXbVlD19712726;     oDrrPSVhmrYoIdenxVHEXbVlD19712726 = oDrrPSVhmrYoIdenxVHEXbVlD64690471;     oDrrPSVhmrYoIdenxVHEXbVlD64690471 = oDrrPSVhmrYoIdenxVHEXbVlD2481220;     oDrrPSVhmrYoIdenxVHEXbVlD2481220 = oDrrPSVhmrYoIdenxVHEXbVlD35924007;     oDrrPSVhmrYoIdenxVHEXbVlD35924007 = oDrrPSVhmrYoIdenxVHEXbVlD72831470;     oDrrPSVhmrYoIdenxVHEXbVlD72831470 = oDrrPSVhmrYoIdenxVHEXbVlD21838240;     oDrrPSVhmrYoIdenxVHEXbVlD21838240 = oDrrPSVhmrYoIdenxVHEXbVlD99168765;     oDrrPSVhmrYoIdenxVHEXbVlD99168765 = oDrrPSVhmrYoIdenxVHEXbVlD51093905;     oDrrPSVhmrYoIdenxVHEXbVlD51093905 = oDrrPSVhmrYoIdenxVHEXbVlD45202858;     oDrrPSVhmrYoIdenxVHEXbVlD45202858 = oDrrPSVhmrYoIdenxVHEXbVlD89363076;     oDrrPSVhmrYoIdenxVHEXbVlD89363076 = oDrrPSVhmrYoIdenxVHEXbVlD21805502;     oDrrPSVhmrYoIdenxVHEXbVlD21805502 = oDrrPSVhmrYoIdenxVHEXbVlD65199475;     oDrrPSVhmrYoIdenxVHEXbVlD65199475 = oDrrPSVhmrYoIdenxVHEXbVlD74663769;     oDrrPSVhmrYoIdenxVHEXbVlD74663769 = oDrrPSVhmrYoIdenxVHEXbVlD55244586;     oDrrPSVhmrYoIdenxVHEXbVlD55244586 = oDrrPSVhmrYoIdenxVHEXbVlD14216634;     oDrrPSVhmrYoIdenxVHEXbVlD14216634 = oDrrPSVhmrYoIdenxVHEXbVlD80336515;     oDrrPSVhmrYoIdenxVHEXbVlD80336515 = oDrrPSVhmrYoIdenxVHEXbVlD19139532;     oDrrPSVhmrYoIdenxVHEXbVlD19139532 = oDrrPSVhmrYoIdenxVHEXbVlD74853191;     oDrrPSVhmrYoIdenxVHEXbVlD74853191 = oDrrPSVhmrYoIdenxVHEXbVlD68212146;     oDrrPSVhmrYoIdenxVHEXbVlD68212146 = oDrrPSVhmrYoIdenxVHEXbVlD48203601;     oDrrPSVhmrYoIdenxVHEXbVlD48203601 = oDrrPSVhmrYoIdenxVHEXbVlD36217256;     oDrrPSVhmrYoIdenxVHEXbVlD36217256 = oDrrPSVhmrYoIdenxVHEXbVlD15034610;     oDrrPSVhmrYoIdenxVHEXbVlD15034610 = oDrrPSVhmrYoIdenxVHEXbVlD63832064;     oDrrPSVhmrYoIdenxVHEXbVlD63832064 = oDrrPSVhmrYoIdenxVHEXbVlD90624518;     oDrrPSVhmrYoIdenxVHEXbVlD90624518 = oDrrPSVhmrYoIdenxVHEXbVlD30451004;     oDrrPSVhmrYoIdenxVHEXbVlD30451004 = oDrrPSVhmrYoIdenxVHEXbVlD17209910;     oDrrPSVhmrYoIdenxVHEXbVlD17209910 = oDrrPSVhmrYoIdenxVHEXbVlD10161499;     oDrrPSVhmrYoIdenxVHEXbVlD10161499 = oDrrPSVhmrYoIdenxVHEXbVlD38932566;     oDrrPSVhmrYoIdenxVHEXbVlD38932566 = oDrrPSVhmrYoIdenxVHEXbVlD76252089;     oDrrPSVhmrYoIdenxVHEXbVlD76252089 = oDrrPSVhmrYoIdenxVHEXbVlD67472692;     oDrrPSVhmrYoIdenxVHEXbVlD67472692 = oDrrPSVhmrYoIdenxVHEXbVlD4217097;     oDrrPSVhmrYoIdenxVHEXbVlD4217097 = oDrrPSVhmrYoIdenxVHEXbVlD99565737;     oDrrPSVhmrYoIdenxVHEXbVlD99565737 = oDrrPSVhmrYoIdenxVHEXbVlD49104021;     oDrrPSVhmrYoIdenxVHEXbVlD49104021 = oDrrPSVhmrYoIdenxVHEXbVlD33626135;     oDrrPSVhmrYoIdenxVHEXbVlD33626135 = oDrrPSVhmrYoIdenxVHEXbVlD70296932;     oDrrPSVhmrYoIdenxVHEXbVlD70296932 = oDrrPSVhmrYoIdenxVHEXbVlD76524598;     oDrrPSVhmrYoIdenxVHEXbVlD76524598 = oDrrPSVhmrYoIdenxVHEXbVlD45765063;     oDrrPSVhmrYoIdenxVHEXbVlD45765063 = oDrrPSVhmrYoIdenxVHEXbVlD64666686;     oDrrPSVhmrYoIdenxVHEXbVlD64666686 = oDrrPSVhmrYoIdenxVHEXbVlD4520890;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void TYBimJUGixxquzVcCxQneGgFKsTeMyksnnxQKsupRrQjSuLHKhBMovMMs73927881() {     long vXupptkMECGCESJCaVmqxnQgL10637997 = -6877047;    long vXupptkMECGCESJCaVmqxnQgL87620494 = 62589069;    long vXupptkMECGCESJCaVmqxnQgL17542952 = -742794975;    long vXupptkMECGCESJCaVmqxnQgL78916645 = -47319302;    long vXupptkMECGCESJCaVmqxnQgL39012056 = -549907324;    long vXupptkMECGCESJCaVmqxnQgL69243452 = -766035834;    long vXupptkMECGCESJCaVmqxnQgL42590181 = -428229833;    long vXupptkMECGCESJCaVmqxnQgL17959407 = -262735849;    long vXupptkMECGCESJCaVmqxnQgL27842689 = -600589616;    long vXupptkMECGCESJCaVmqxnQgL20753185 = -686795656;    long vXupptkMECGCESJCaVmqxnQgL84788236 = -493839487;    long vXupptkMECGCESJCaVmqxnQgL11750287 = 44200725;    long vXupptkMECGCESJCaVmqxnQgL31833427 = -750949958;    long vXupptkMECGCESJCaVmqxnQgL70334196 = -114919266;    long vXupptkMECGCESJCaVmqxnQgL38752839 = -132256625;    long vXupptkMECGCESJCaVmqxnQgL35951488 = -476284397;    long vXupptkMECGCESJCaVmqxnQgL91116576 = 84326341;    long vXupptkMECGCESJCaVmqxnQgL28291587 = -614063371;    long vXupptkMECGCESJCaVmqxnQgL69492861 = -296326626;    long vXupptkMECGCESJCaVmqxnQgL79682002 = -126479217;    long vXupptkMECGCESJCaVmqxnQgL33807437 = -795284424;    long vXupptkMECGCESJCaVmqxnQgL41952726 = -296092555;    long vXupptkMECGCESJCaVmqxnQgL64173589 = -618073333;    long vXupptkMECGCESJCaVmqxnQgL3722599 = -559706788;    long vXupptkMECGCESJCaVmqxnQgL91841114 = -549936069;    long vXupptkMECGCESJCaVmqxnQgL84971047 = -23623505;    long vXupptkMECGCESJCaVmqxnQgL82926504 = 35943566;    long vXupptkMECGCESJCaVmqxnQgL4366407 = -821291545;    long vXupptkMECGCESJCaVmqxnQgL14619046 = 54667293;    long vXupptkMECGCESJCaVmqxnQgL67125359 = -366056897;    long vXupptkMECGCESJCaVmqxnQgL69284856 = 21103247;    long vXupptkMECGCESJCaVmqxnQgL86364561 = -294834426;    long vXupptkMECGCESJCaVmqxnQgL16806723 = -512327391;    long vXupptkMECGCESJCaVmqxnQgL18616633 = -152340462;    long vXupptkMECGCESJCaVmqxnQgL49496406 = -820372849;    long vXupptkMECGCESJCaVmqxnQgL60642421 = -135881352;    long vXupptkMECGCESJCaVmqxnQgL30505171 = -831434202;    long vXupptkMECGCESJCaVmqxnQgL42007710 = -416545522;    long vXupptkMECGCESJCaVmqxnQgL83043186 = -699285336;    long vXupptkMECGCESJCaVmqxnQgL29965482 = -169746916;    long vXupptkMECGCESJCaVmqxnQgL30137293 = -779139332;    long vXupptkMECGCESJCaVmqxnQgL22160115 = -859319304;    long vXupptkMECGCESJCaVmqxnQgL19282047 = 41061374;    long vXupptkMECGCESJCaVmqxnQgL35654022 = -449746276;    long vXupptkMECGCESJCaVmqxnQgL12543158 = -617238030;    long vXupptkMECGCESJCaVmqxnQgL85227469 = -535050058;    long vXupptkMECGCESJCaVmqxnQgL9815801 = 34482948;    long vXupptkMECGCESJCaVmqxnQgL44220066 = -180826769;    long vXupptkMECGCESJCaVmqxnQgL64717754 = -448719421;    long vXupptkMECGCESJCaVmqxnQgL46363833 = 56418273;    long vXupptkMECGCESJCaVmqxnQgL70378336 = 26722359;    long vXupptkMECGCESJCaVmqxnQgL97227507 = -78919335;    long vXupptkMECGCESJCaVmqxnQgL6551393 = 40538516;    long vXupptkMECGCESJCaVmqxnQgL85854744 = -947478158;    long vXupptkMECGCESJCaVmqxnQgL40120444 = 50598730;    long vXupptkMECGCESJCaVmqxnQgL68685271 = -710784492;    long vXupptkMECGCESJCaVmqxnQgL23446906 = -319337599;    long vXupptkMECGCESJCaVmqxnQgL13820354 = -83088188;    long vXupptkMECGCESJCaVmqxnQgL87075531 = -497383234;    long vXupptkMECGCESJCaVmqxnQgL54041008 = -426283820;    long vXupptkMECGCESJCaVmqxnQgL86316948 = -701979401;    long vXupptkMECGCESJCaVmqxnQgL38223775 = -606938289;    long vXupptkMECGCESJCaVmqxnQgL3340361 = -217403142;    long vXupptkMECGCESJCaVmqxnQgL60717329 = -134532720;    long vXupptkMECGCESJCaVmqxnQgL51468329 = -607898904;    long vXupptkMECGCESJCaVmqxnQgL98423674 = -99005062;    long vXupptkMECGCESJCaVmqxnQgL94943564 = -443471885;    long vXupptkMECGCESJCaVmqxnQgL13216795 = -498609496;    long vXupptkMECGCESJCaVmqxnQgL20837791 = -294546417;    long vXupptkMECGCESJCaVmqxnQgL78110418 = -996375273;    long vXupptkMECGCESJCaVmqxnQgL5446317 = -644850195;    long vXupptkMECGCESJCaVmqxnQgL49108867 = -499128138;    long vXupptkMECGCESJCaVmqxnQgL45248401 = -914778036;    long vXupptkMECGCESJCaVmqxnQgL39527379 = -26579711;    long vXupptkMECGCESJCaVmqxnQgL49544710 = -347339885;    long vXupptkMECGCESJCaVmqxnQgL11647322 = -935965120;    long vXupptkMECGCESJCaVmqxnQgL22670679 = -237153930;    long vXupptkMECGCESJCaVmqxnQgL28519567 = -68327058;    long vXupptkMECGCESJCaVmqxnQgL91179440 = -942468758;    long vXupptkMECGCESJCaVmqxnQgL6613646 = 85113988;    long vXupptkMECGCESJCaVmqxnQgL75155247 = 41893547;    long vXupptkMECGCESJCaVmqxnQgL38706439 = -783229665;    long vXupptkMECGCESJCaVmqxnQgL39648653 = -272572124;    long vXupptkMECGCESJCaVmqxnQgL68255213 = 98249019;    long vXupptkMECGCESJCaVmqxnQgL96747022 = -292779256;    long vXupptkMECGCESJCaVmqxnQgL72057348 = -899977418;    long vXupptkMECGCESJCaVmqxnQgL79813168 = -235372943;    long vXupptkMECGCESJCaVmqxnQgL30951978 = -564849233;    long vXupptkMECGCESJCaVmqxnQgL78496188 = -102939193;    long vXupptkMECGCESJCaVmqxnQgL80811135 = -9588358;    long vXupptkMECGCESJCaVmqxnQgL37195515 = -816543754;    long vXupptkMECGCESJCaVmqxnQgL16684818 = -648346015;    long vXupptkMECGCESJCaVmqxnQgL54932179 = -919162288;    long vXupptkMECGCESJCaVmqxnQgL29002178 = -173001516;    long vXupptkMECGCESJCaVmqxnQgL43648534 = -467767516;    long vXupptkMECGCESJCaVmqxnQgL91913518 = -72201044;    long vXupptkMECGCESJCaVmqxnQgL18819754 = -541916163;    long vXupptkMECGCESJCaVmqxnQgL58564717 = -824405906;    long vXupptkMECGCESJCaVmqxnQgL84185693 = -841847372;    long vXupptkMECGCESJCaVmqxnQgL14119483 = -6877047;     vXupptkMECGCESJCaVmqxnQgL10637997 = vXupptkMECGCESJCaVmqxnQgL87620494;     vXupptkMECGCESJCaVmqxnQgL87620494 = vXupptkMECGCESJCaVmqxnQgL17542952;     vXupptkMECGCESJCaVmqxnQgL17542952 = vXupptkMECGCESJCaVmqxnQgL78916645;     vXupptkMECGCESJCaVmqxnQgL78916645 = vXupptkMECGCESJCaVmqxnQgL39012056;     vXupptkMECGCESJCaVmqxnQgL39012056 = vXupptkMECGCESJCaVmqxnQgL69243452;     vXupptkMECGCESJCaVmqxnQgL69243452 = vXupptkMECGCESJCaVmqxnQgL42590181;     vXupptkMECGCESJCaVmqxnQgL42590181 = vXupptkMECGCESJCaVmqxnQgL17959407;     vXupptkMECGCESJCaVmqxnQgL17959407 = vXupptkMECGCESJCaVmqxnQgL27842689;     vXupptkMECGCESJCaVmqxnQgL27842689 = vXupptkMECGCESJCaVmqxnQgL20753185;     vXupptkMECGCESJCaVmqxnQgL20753185 = vXupptkMECGCESJCaVmqxnQgL84788236;     vXupptkMECGCESJCaVmqxnQgL84788236 = vXupptkMECGCESJCaVmqxnQgL11750287;     vXupptkMECGCESJCaVmqxnQgL11750287 = vXupptkMECGCESJCaVmqxnQgL31833427;     vXupptkMECGCESJCaVmqxnQgL31833427 = vXupptkMECGCESJCaVmqxnQgL70334196;     vXupptkMECGCESJCaVmqxnQgL70334196 = vXupptkMECGCESJCaVmqxnQgL38752839;     vXupptkMECGCESJCaVmqxnQgL38752839 = vXupptkMECGCESJCaVmqxnQgL35951488;     vXupptkMECGCESJCaVmqxnQgL35951488 = vXupptkMECGCESJCaVmqxnQgL91116576;     vXupptkMECGCESJCaVmqxnQgL91116576 = vXupptkMECGCESJCaVmqxnQgL28291587;     vXupptkMECGCESJCaVmqxnQgL28291587 = vXupptkMECGCESJCaVmqxnQgL69492861;     vXupptkMECGCESJCaVmqxnQgL69492861 = vXupptkMECGCESJCaVmqxnQgL79682002;     vXupptkMECGCESJCaVmqxnQgL79682002 = vXupptkMECGCESJCaVmqxnQgL33807437;     vXupptkMECGCESJCaVmqxnQgL33807437 = vXupptkMECGCESJCaVmqxnQgL41952726;     vXupptkMECGCESJCaVmqxnQgL41952726 = vXupptkMECGCESJCaVmqxnQgL64173589;     vXupptkMECGCESJCaVmqxnQgL64173589 = vXupptkMECGCESJCaVmqxnQgL3722599;     vXupptkMECGCESJCaVmqxnQgL3722599 = vXupptkMECGCESJCaVmqxnQgL91841114;     vXupptkMECGCESJCaVmqxnQgL91841114 = vXupptkMECGCESJCaVmqxnQgL84971047;     vXupptkMECGCESJCaVmqxnQgL84971047 = vXupptkMECGCESJCaVmqxnQgL82926504;     vXupptkMECGCESJCaVmqxnQgL82926504 = vXupptkMECGCESJCaVmqxnQgL4366407;     vXupptkMECGCESJCaVmqxnQgL4366407 = vXupptkMECGCESJCaVmqxnQgL14619046;     vXupptkMECGCESJCaVmqxnQgL14619046 = vXupptkMECGCESJCaVmqxnQgL67125359;     vXupptkMECGCESJCaVmqxnQgL67125359 = vXupptkMECGCESJCaVmqxnQgL69284856;     vXupptkMECGCESJCaVmqxnQgL69284856 = vXupptkMECGCESJCaVmqxnQgL86364561;     vXupptkMECGCESJCaVmqxnQgL86364561 = vXupptkMECGCESJCaVmqxnQgL16806723;     vXupptkMECGCESJCaVmqxnQgL16806723 = vXupptkMECGCESJCaVmqxnQgL18616633;     vXupptkMECGCESJCaVmqxnQgL18616633 = vXupptkMECGCESJCaVmqxnQgL49496406;     vXupptkMECGCESJCaVmqxnQgL49496406 = vXupptkMECGCESJCaVmqxnQgL60642421;     vXupptkMECGCESJCaVmqxnQgL60642421 = vXupptkMECGCESJCaVmqxnQgL30505171;     vXupptkMECGCESJCaVmqxnQgL30505171 = vXupptkMECGCESJCaVmqxnQgL42007710;     vXupptkMECGCESJCaVmqxnQgL42007710 = vXupptkMECGCESJCaVmqxnQgL83043186;     vXupptkMECGCESJCaVmqxnQgL83043186 = vXupptkMECGCESJCaVmqxnQgL29965482;     vXupptkMECGCESJCaVmqxnQgL29965482 = vXupptkMECGCESJCaVmqxnQgL30137293;     vXupptkMECGCESJCaVmqxnQgL30137293 = vXupptkMECGCESJCaVmqxnQgL22160115;     vXupptkMECGCESJCaVmqxnQgL22160115 = vXupptkMECGCESJCaVmqxnQgL19282047;     vXupptkMECGCESJCaVmqxnQgL19282047 = vXupptkMECGCESJCaVmqxnQgL35654022;     vXupptkMECGCESJCaVmqxnQgL35654022 = vXupptkMECGCESJCaVmqxnQgL12543158;     vXupptkMECGCESJCaVmqxnQgL12543158 = vXupptkMECGCESJCaVmqxnQgL85227469;     vXupptkMECGCESJCaVmqxnQgL85227469 = vXupptkMECGCESJCaVmqxnQgL9815801;     vXupptkMECGCESJCaVmqxnQgL9815801 = vXupptkMECGCESJCaVmqxnQgL44220066;     vXupptkMECGCESJCaVmqxnQgL44220066 = vXupptkMECGCESJCaVmqxnQgL64717754;     vXupptkMECGCESJCaVmqxnQgL64717754 = vXupptkMECGCESJCaVmqxnQgL46363833;     vXupptkMECGCESJCaVmqxnQgL46363833 = vXupptkMECGCESJCaVmqxnQgL70378336;     vXupptkMECGCESJCaVmqxnQgL70378336 = vXupptkMECGCESJCaVmqxnQgL97227507;     vXupptkMECGCESJCaVmqxnQgL97227507 = vXupptkMECGCESJCaVmqxnQgL6551393;     vXupptkMECGCESJCaVmqxnQgL6551393 = vXupptkMECGCESJCaVmqxnQgL85854744;     vXupptkMECGCESJCaVmqxnQgL85854744 = vXupptkMECGCESJCaVmqxnQgL40120444;     vXupptkMECGCESJCaVmqxnQgL40120444 = vXupptkMECGCESJCaVmqxnQgL68685271;     vXupptkMECGCESJCaVmqxnQgL68685271 = vXupptkMECGCESJCaVmqxnQgL23446906;     vXupptkMECGCESJCaVmqxnQgL23446906 = vXupptkMECGCESJCaVmqxnQgL13820354;     vXupptkMECGCESJCaVmqxnQgL13820354 = vXupptkMECGCESJCaVmqxnQgL87075531;     vXupptkMECGCESJCaVmqxnQgL87075531 = vXupptkMECGCESJCaVmqxnQgL54041008;     vXupptkMECGCESJCaVmqxnQgL54041008 = vXupptkMECGCESJCaVmqxnQgL86316948;     vXupptkMECGCESJCaVmqxnQgL86316948 = vXupptkMECGCESJCaVmqxnQgL38223775;     vXupptkMECGCESJCaVmqxnQgL38223775 = vXupptkMECGCESJCaVmqxnQgL3340361;     vXupptkMECGCESJCaVmqxnQgL3340361 = vXupptkMECGCESJCaVmqxnQgL60717329;     vXupptkMECGCESJCaVmqxnQgL60717329 = vXupptkMECGCESJCaVmqxnQgL51468329;     vXupptkMECGCESJCaVmqxnQgL51468329 = vXupptkMECGCESJCaVmqxnQgL98423674;     vXupptkMECGCESJCaVmqxnQgL98423674 = vXupptkMECGCESJCaVmqxnQgL94943564;     vXupptkMECGCESJCaVmqxnQgL94943564 = vXupptkMECGCESJCaVmqxnQgL13216795;     vXupptkMECGCESJCaVmqxnQgL13216795 = vXupptkMECGCESJCaVmqxnQgL20837791;     vXupptkMECGCESJCaVmqxnQgL20837791 = vXupptkMECGCESJCaVmqxnQgL78110418;     vXupptkMECGCESJCaVmqxnQgL78110418 = vXupptkMECGCESJCaVmqxnQgL5446317;     vXupptkMECGCESJCaVmqxnQgL5446317 = vXupptkMECGCESJCaVmqxnQgL49108867;     vXupptkMECGCESJCaVmqxnQgL49108867 = vXupptkMECGCESJCaVmqxnQgL45248401;     vXupptkMECGCESJCaVmqxnQgL45248401 = vXupptkMECGCESJCaVmqxnQgL39527379;     vXupptkMECGCESJCaVmqxnQgL39527379 = vXupptkMECGCESJCaVmqxnQgL49544710;     vXupptkMECGCESJCaVmqxnQgL49544710 = vXupptkMECGCESJCaVmqxnQgL11647322;     vXupptkMECGCESJCaVmqxnQgL11647322 = vXupptkMECGCESJCaVmqxnQgL22670679;     vXupptkMECGCESJCaVmqxnQgL22670679 = vXupptkMECGCESJCaVmqxnQgL28519567;     vXupptkMECGCESJCaVmqxnQgL28519567 = vXupptkMECGCESJCaVmqxnQgL91179440;     vXupptkMECGCESJCaVmqxnQgL91179440 = vXupptkMECGCESJCaVmqxnQgL6613646;     vXupptkMECGCESJCaVmqxnQgL6613646 = vXupptkMECGCESJCaVmqxnQgL75155247;     vXupptkMECGCESJCaVmqxnQgL75155247 = vXupptkMECGCESJCaVmqxnQgL38706439;     vXupptkMECGCESJCaVmqxnQgL38706439 = vXupptkMECGCESJCaVmqxnQgL39648653;     vXupptkMECGCESJCaVmqxnQgL39648653 = vXupptkMECGCESJCaVmqxnQgL68255213;     vXupptkMECGCESJCaVmqxnQgL68255213 = vXupptkMECGCESJCaVmqxnQgL96747022;     vXupptkMECGCESJCaVmqxnQgL96747022 = vXupptkMECGCESJCaVmqxnQgL72057348;     vXupptkMECGCESJCaVmqxnQgL72057348 = vXupptkMECGCESJCaVmqxnQgL79813168;     vXupptkMECGCESJCaVmqxnQgL79813168 = vXupptkMECGCESJCaVmqxnQgL30951978;     vXupptkMECGCESJCaVmqxnQgL30951978 = vXupptkMECGCESJCaVmqxnQgL78496188;     vXupptkMECGCESJCaVmqxnQgL78496188 = vXupptkMECGCESJCaVmqxnQgL80811135;     vXupptkMECGCESJCaVmqxnQgL80811135 = vXupptkMECGCESJCaVmqxnQgL37195515;     vXupptkMECGCESJCaVmqxnQgL37195515 = vXupptkMECGCESJCaVmqxnQgL16684818;     vXupptkMECGCESJCaVmqxnQgL16684818 = vXupptkMECGCESJCaVmqxnQgL54932179;     vXupptkMECGCESJCaVmqxnQgL54932179 = vXupptkMECGCESJCaVmqxnQgL29002178;     vXupptkMECGCESJCaVmqxnQgL29002178 = vXupptkMECGCESJCaVmqxnQgL43648534;     vXupptkMECGCESJCaVmqxnQgL43648534 = vXupptkMECGCESJCaVmqxnQgL91913518;     vXupptkMECGCESJCaVmqxnQgL91913518 = vXupptkMECGCESJCaVmqxnQgL18819754;     vXupptkMECGCESJCaVmqxnQgL18819754 = vXupptkMECGCESJCaVmqxnQgL58564717;     vXupptkMECGCESJCaVmqxnQgL58564717 = vXupptkMECGCESJCaVmqxnQgL84185693;     vXupptkMECGCESJCaVmqxnQgL84185693 = vXupptkMECGCESJCaVmqxnQgL14119483;     vXupptkMECGCESJCaVmqxnQgL14119483 = vXupptkMECGCESJCaVmqxnQgL10637997;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void cPIUorMMdubgPIDrJTmVtgdgPKYbxSUKOjQhcWuljfFYRnPbyTBKgNkwl41219481() {     long cEeTlPKZQSfsWOnYAmOaEObuw46096965 = -473153947;    long cEeTlPKZQSfsWOnYAmOaEObuw892574 = -917962538;    long cEeTlPKZQSfsWOnYAmOaEObuw54929428 = -408462050;    long cEeTlPKZQSfsWOnYAmOaEObuw51140000 = -968470374;    long cEeTlPKZQSfsWOnYAmOaEObuw95297325 = -655506170;    long cEeTlPKZQSfsWOnYAmOaEObuw5466325 = 71616271;    long cEeTlPKZQSfsWOnYAmOaEObuw53247587 = -272955567;    long cEeTlPKZQSfsWOnYAmOaEObuw80090967 = 93030011;    long cEeTlPKZQSfsWOnYAmOaEObuw29360294 = 11078977;    long cEeTlPKZQSfsWOnYAmOaEObuw35655897 = -351482654;    long cEeTlPKZQSfsWOnYAmOaEObuw22969971 = -295847216;    long cEeTlPKZQSfsWOnYAmOaEObuw12318436 = -919920047;    long cEeTlPKZQSfsWOnYAmOaEObuw70068072 = -202962463;    long cEeTlPKZQSfsWOnYAmOaEObuw23475060 = -91282675;    long cEeTlPKZQSfsWOnYAmOaEObuw96947355 = -635681640;    long cEeTlPKZQSfsWOnYAmOaEObuw19492789 = -112096004;    long cEeTlPKZQSfsWOnYAmOaEObuw46952512 = -442648212;    long cEeTlPKZQSfsWOnYAmOaEObuw28051779 = -687491439;    long cEeTlPKZQSfsWOnYAmOaEObuw70043191 = -612890048;    long cEeTlPKZQSfsWOnYAmOaEObuw73519221 = -553040282;    long cEeTlPKZQSfsWOnYAmOaEObuw46894300 = -452559112;    long cEeTlPKZQSfsWOnYAmOaEObuw45374250 = -382728849;    long cEeTlPKZQSfsWOnYAmOaEObuw34698969 = -255705517;    long cEeTlPKZQSfsWOnYAmOaEObuw97515543 = 29468608;    long cEeTlPKZQSfsWOnYAmOaEObuw99859065 = -573921267;    long cEeTlPKZQSfsWOnYAmOaEObuw95669219 = -812200312;    long cEeTlPKZQSfsWOnYAmOaEObuw43347078 = -870340574;    long cEeTlPKZQSfsWOnYAmOaEObuw45094832 = -991063719;    long cEeTlPKZQSfsWOnYAmOaEObuw61287260 = -519427510;    long cEeTlPKZQSfsWOnYAmOaEObuw72658770 = -400564067;    long cEeTlPKZQSfsWOnYAmOaEObuw87868087 = -530877240;    long cEeTlPKZQSfsWOnYAmOaEObuw24187580 = -67805840;    long cEeTlPKZQSfsWOnYAmOaEObuw29024734 = -659923368;    long cEeTlPKZQSfsWOnYAmOaEObuw48365059 = -217034275;    long cEeTlPKZQSfsWOnYAmOaEObuw15304860 = -771473100;    long cEeTlPKZQSfsWOnYAmOaEObuw12203265 = -350446658;    long cEeTlPKZQSfsWOnYAmOaEObuw79916987 = -696130242;    long cEeTlPKZQSfsWOnYAmOaEObuw93223113 = -399201103;    long cEeTlPKZQSfsWOnYAmOaEObuw13433748 = -350161612;    long cEeTlPKZQSfsWOnYAmOaEObuw94237014 = -735009462;    long cEeTlPKZQSfsWOnYAmOaEObuw63588900 = -548338246;    long cEeTlPKZQSfsWOnYAmOaEObuw11525242 = -453864595;    long cEeTlPKZQSfsWOnYAmOaEObuw8665426 = -612119411;    long cEeTlPKZQSfsWOnYAmOaEObuw75785360 = 45921314;    long cEeTlPKZQSfsWOnYAmOaEObuw12559617 = -443749192;    long cEeTlPKZQSfsWOnYAmOaEObuw31188798 = -573973690;    long cEeTlPKZQSfsWOnYAmOaEObuw29160964 = -449503413;    long cEeTlPKZQSfsWOnYAmOaEObuw61946377 = -347353362;    long cEeTlPKZQSfsWOnYAmOaEObuw87610420 = -112456302;    long cEeTlPKZQSfsWOnYAmOaEObuw70893422 = -434608543;    long cEeTlPKZQSfsWOnYAmOaEObuw51149060 = -947554198;    long cEeTlPKZQSfsWOnYAmOaEObuw80712979 = -292571682;    long cEeTlPKZQSfsWOnYAmOaEObuw75172541 = -815507038;    long cEeTlPKZQSfsWOnYAmOaEObuw1846592 = -38986658;    long cEeTlPKZQSfsWOnYAmOaEObuw94325180 = -295891415;    long cEeTlPKZQSfsWOnYAmOaEObuw722715 = 9574902;    long cEeTlPKZQSfsWOnYAmOaEObuw66193604 = -562257021;    long cEeTlPKZQSfsWOnYAmOaEObuw57413885 = -337930659;    long cEeTlPKZQSfsWOnYAmOaEObuw51280935 = -294549107;    long cEeTlPKZQSfsWOnYAmOaEObuw99628105 = -843305859;    long cEeTlPKZQSfsWOnYAmOaEObuw62119246 = -58043155;    long cEeTlPKZQSfsWOnYAmOaEObuw8152756 = -281891848;    long cEeTlPKZQSfsWOnYAmOaEObuw18803708 = -387542480;    long cEeTlPKZQSfsWOnYAmOaEObuw56701524 = -588356956;    long cEeTlPKZQSfsWOnYAmOaEObuw47787810 = -820605415;    long cEeTlPKZQSfsWOnYAmOaEObuw98782391 = -128041377;    long cEeTlPKZQSfsWOnYAmOaEObuw83293701 = -159996679;    long cEeTlPKZQSfsWOnYAmOaEObuw21703013 = -985928188;    long cEeTlPKZQSfsWOnYAmOaEObuw8170201 = -319809576;    long cEeTlPKZQSfsWOnYAmOaEObuw84744090 = -185234983;    long cEeTlPKZQSfsWOnYAmOaEObuw39575801 = -415965762;    long cEeTlPKZQSfsWOnYAmOaEObuw53729399 = 56552891;    long cEeTlPKZQSfsWOnYAmOaEObuw14618031 = -237329828;    long cEeTlPKZQSfsWOnYAmOaEObuw75806177 = -877880586;    long cEeTlPKZQSfsWOnYAmOaEObuw9930321 = 95297963;    long cEeTlPKZQSfsWOnYAmOaEObuw35369058 = -998694518;    long cEeTlPKZQSfsWOnYAmOaEObuw36708825 = -770609438;    long cEeTlPKZQSfsWOnYAmOaEObuw58913608 = -201626832;    long cEeTlPKZQSfsWOnYAmOaEObuw84955927 = -526782200;    long cEeTlPKZQSfsWOnYAmOaEObuw68670268 = -999947578;    long cEeTlPKZQSfsWOnYAmOaEObuw66508255 = -262696899;    long cEeTlPKZQSfsWOnYAmOaEObuw81400700 = -422987213;    long cEeTlPKZQSfsWOnYAmOaEObuw57484411 = -778607418;    long cEeTlPKZQSfsWOnYAmOaEObuw90393838 = 15181033;    long cEeTlPKZQSfsWOnYAmOaEObuw21509710 = -453009870;    long cEeTlPKZQSfsWOnYAmOaEObuw7155108 = -138305559;    long cEeTlPKZQSfsWOnYAmOaEObuw49015038 = -252298803;    long cEeTlPKZQSfsWOnYAmOaEObuw27178143 = -520936710;    long cEeTlPKZQSfsWOnYAmOaEObuw54039878 = -921142860;    long cEeTlPKZQSfsWOnYAmOaEObuw14582145 = -681048003;    long cEeTlPKZQSfsWOnYAmOaEObuw46009660 = -788189637;    long cEeTlPKZQSfsWOnYAmOaEObuw22503103 = -258199584;    long cEeTlPKZQSfsWOnYAmOaEObuw41942179 = -4651997;    long cEeTlPKZQSfsWOnYAmOaEObuw13805642 = -506855754;    long cEeTlPKZQSfsWOnYAmOaEObuw32117769 = -576966308;    long cEeTlPKZQSfsWOnYAmOaEObuw55436145 = -166446398;    long cEeTlPKZQSfsWOnYAmOaEObuw92721534 = 33677884;    long cEeTlPKZQSfsWOnYAmOaEObuw51963901 = 76237544;    long cEeTlPKZQSfsWOnYAmOaEObuw27997551 = -133473271;    long cEeTlPKZQSfsWOnYAmOaEObuw13777225 = -473153947;     cEeTlPKZQSfsWOnYAmOaEObuw46096965 = cEeTlPKZQSfsWOnYAmOaEObuw892574;     cEeTlPKZQSfsWOnYAmOaEObuw892574 = cEeTlPKZQSfsWOnYAmOaEObuw54929428;     cEeTlPKZQSfsWOnYAmOaEObuw54929428 = cEeTlPKZQSfsWOnYAmOaEObuw51140000;     cEeTlPKZQSfsWOnYAmOaEObuw51140000 = cEeTlPKZQSfsWOnYAmOaEObuw95297325;     cEeTlPKZQSfsWOnYAmOaEObuw95297325 = cEeTlPKZQSfsWOnYAmOaEObuw5466325;     cEeTlPKZQSfsWOnYAmOaEObuw5466325 = cEeTlPKZQSfsWOnYAmOaEObuw53247587;     cEeTlPKZQSfsWOnYAmOaEObuw53247587 = cEeTlPKZQSfsWOnYAmOaEObuw80090967;     cEeTlPKZQSfsWOnYAmOaEObuw80090967 = cEeTlPKZQSfsWOnYAmOaEObuw29360294;     cEeTlPKZQSfsWOnYAmOaEObuw29360294 = cEeTlPKZQSfsWOnYAmOaEObuw35655897;     cEeTlPKZQSfsWOnYAmOaEObuw35655897 = cEeTlPKZQSfsWOnYAmOaEObuw22969971;     cEeTlPKZQSfsWOnYAmOaEObuw22969971 = cEeTlPKZQSfsWOnYAmOaEObuw12318436;     cEeTlPKZQSfsWOnYAmOaEObuw12318436 = cEeTlPKZQSfsWOnYAmOaEObuw70068072;     cEeTlPKZQSfsWOnYAmOaEObuw70068072 = cEeTlPKZQSfsWOnYAmOaEObuw23475060;     cEeTlPKZQSfsWOnYAmOaEObuw23475060 = cEeTlPKZQSfsWOnYAmOaEObuw96947355;     cEeTlPKZQSfsWOnYAmOaEObuw96947355 = cEeTlPKZQSfsWOnYAmOaEObuw19492789;     cEeTlPKZQSfsWOnYAmOaEObuw19492789 = cEeTlPKZQSfsWOnYAmOaEObuw46952512;     cEeTlPKZQSfsWOnYAmOaEObuw46952512 = cEeTlPKZQSfsWOnYAmOaEObuw28051779;     cEeTlPKZQSfsWOnYAmOaEObuw28051779 = cEeTlPKZQSfsWOnYAmOaEObuw70043191;     cEeTlPKZQSfsWOnYAmOaEObuw70043191 = cEeTlPKZQSfsWOnYAmOaEObuw73519221;     cEeTlPKZQSfsWOnYAmOaEObuw73519221 = cEeTlPKZQSfsWOnYAmOaEObuw46894300;     cEeTlPKZQSfsWOnYAmOaEObuw46894300 = cEeTlPKZQSfsWOnYAmOaEObuw45374250;     cEeTlPKZQSfsWOnYAmOaEObuw45374250 = cEeTlPKZQSfsWOnYAmOaEObuw34698969;     cEeTlPKZQSfsWOnYAmOaEObuw34698969 = cEeTlPKZQSfsWOnYAmOaEObuw97515543;     cEeTlPKZQSfsWOnYAmOaEObuw97515543 = cEeTlPKZQSfsWOnYAmOaEObuw99859065;     cEeTlPKZQSfsWOnYAmOaEObuw99859065 = cEeTlPKZQSfsWOnYAmOaEObuw95669219;     cEeTlPKZQSfsWOnYAmOaEObuw95669219 = cEeTlPKZQSfsWOnYAmOaEObuw43347078;     cEeTlPKZQSfsWOnYAmOaEObuw43347078 = cEeTlPKZQSfsWOnYAmOaEObuw45094832;     cEeTlPKZQSfsWOnYAmOaEObuw45094832 = cEeTlPKZQSfsWOnYAmOaEObuw61287260;     cEeTlPKZQSfsWOnYAmOaEObuw61287260 = cEeTlPKZQSfsWOnYAmOaEObuw72658770;     cEeTlPKZQSfsWOnYAmOaEObuw72658770 = cEeTlPKZQSfsWOnYAmOaEObuw87868087;     cEeTlPKZQSfsWOnYAmOaEObuw87868087 = cEeTlPKZQSfsWOnYAmOaEObuw24187580;     cEeTlPKZQSfsWOnYAmOaEObuw24187580 = cEeTlPKZQSfsWOnYAmOaEObuw29024734;     cEeTlPKZQSfsWOnYAmOaEObuw29024734 = cEeTlPKZQSfsWOnYAmOaEObuw48365059;     cEeTlPKZQSfsWOnYAmOaEObuw48365059 = cEeTlPKZQSfsWOnYAmOaEObuw15304860;     cEeTlPKZQSfsWOnYAmOaEObuw15304860 = cEeTlPKZQSfsWOnYAmOaEObuw12203265;     cEeTlPKZQSfsWOnYAmOaEObuw12203265 = cEeTlPKZQSfsWOnYAmOaEObuw79916987;     cEeTlPKZQSfsWOnYAmOaEObuw79916987 = cEeTlPKZQSfsWOnYAmOaEObuw93223113;     cEeTlPKZQSfsWOnYAmOaEObuw93223113 = cEeTlPKZQSfsWOnYAmOaEObuw13433748;     cEeTlPKZQSfsWOnYAmOaEObuw13433748 = cEeTlPKZQSfsWOnYAmOaEObuw94237014;     cEeTlPKZQSfsWOnYAmOaEObuw94237014 = cEeTlPKZQSfsWOnYAmOaEObuw63588900;     cEeTlPKZQSfsWOnYAmOaEObuw63588900 = cEeTlPKZQSfsWOnYAmOaEObuw11525242;     cEeTlPKZQSfsWOnYAmOaEObuw11525242 = cEeTlPKZQSfsWOnYAmOaEObuw8665426;     cEeTlPKZQSfsWOnYAmOaEObuw8665426 = cEeTlPKZQSfsWOnYAmOaEObuw75785360;     cEeTlPKZQSfsWOnYAmOaEObuw75785360 = cEeTlPKZQSfsWOnYAmOaEObuw12559617;     cEeTlPKZQSfsWOnYAmOaEObuw12559617 = cEeTlPKZQSfsWOnYAmOaEObuw31188798;     cEeTlPKZQSfsWOnYAmOaEObuw31188798 = cEeTlPKZQSfsWOnYAmOaEObuw29160964;     cEeTlPKZQSfsWOnYAmOaEObuw29160964 = cEeTlPKZQSfsWOnYAmOaEObuw61946377;     cEeTlPKZQSfsWOnYAmOaEObuw61946377 = cEeTlPKZQSfsWOnYAmOaEObuw87610420;     cEeTlPKZQSfsWOnYAmOaEObuw87610420 = cEeTlPKZQSfsWOnYAmOaEObuw70893422;     cEeTlPKZQSfsWOnYAmOaEObuw70893422 = cEeTlPKZQSfsWOnYAmOaEObuw51149060;     cEeTlPKZQSfsWOnYAmOaEObuw51149060 = cEeTlPKZQSfsWOnYAmOaEObuw80712979;     cEeTlPKZQSfsWOnYAmOaEObuw80712979 = cEeTlPKZQSfsWOnYAmOaEObuw75172541;     cEeTlPKZQSfsWOnYAmOaEObuw75172541 = cEeTlPKZQSfsWOnYAmOaEObuw1846592;     cEeTlPKZQSfsWOnYAmOaEObuw1846592 = cEeTlPKZQSfsWOnYAmOaEObuw94325180;     cEeTlPKZQSfsWOnYAmOaEObuw94325180 = cEeTlPKZQSfsWOnYAmOaEObuw722715;     cEeTlPKZQSfsWOnYAmOaEObuw722715 = cEeTlPKZQSfsWOnYAmOaEObuw66193604;     cEeTlPKZQSfsWOnYAmOaEObuw66193604 = cEeTlPKZQSfsWOnYAmOaEObuw57413885;     cEeTlPKZQSfsWOnYAmOaEObuw57413885 = cEeTlPKZQSfsWOnYAmOaEObuw51280935;     cEeTlPKZQSfsWOnYAmOaEObuw51280935 = cEeTlPKZQSfsWOnYAmOaEObuw99628105;     cEeTlPKZQSfsWOnYAmOaEObuw99628105 = cEeTlPKZQSfsWOnYAmOaEObuw62119246;     cEeTlPKZQSfsWOnYAmOaEObuw62119246 = cEeTlPKZQSfsWOnYAmOaEObuw8152756;     cEeTlPKZQSfsWOnYAmOaEObuw8152756 = cEeTlPKZQSfsWOnYAmOaEObuw18803708;     cEeTlPKZQSfsWOnYAmOaEObuw18803708 = cEeTlPKZQSfsWOnYAmOaEObuw56701524;     cEeTlPKZQSfsWOnYAmOaEObuw56701524 = cEeTlPKZQSfsWOnYAmOaEObuw47787810;     cEeTlPKZQSfsWOnYAmOaEObuw47787810 = cEeTlPKZQSfsWOnYAmOaEObuw98782391;     cEeTlPKZQSfsWOnYAmOaEObuw98782391 = cEeTlPKZQSfsWOnYAmOaEObuw83293701;     cEeTlPKZQSfsWOnYAmOaEObuw83293701 = cEeTlPKZQSfsWOnYAmOaEObuw21703013;     cEeTlPKZQSfsWOnYAmOaEObuw21703013 = cEeTlPKZQSfsWOnYAmOaEObuw8170201;     cEeTlPKZQSfsWOnYAmOaEObuw8170201 = cEeTlPKZQSfsWOnYAmOaEObuw84744090;     cEeTlPKZQSfsWOnYAmOaEObuw84744090 = cEeTlPKZQSfsWOnYAmOaEObuw39575801;     cEeTlPKZQSfsWOnYAmOaEObuw39575801 = cEeTlPKZQSfsWOnYAmOaEObuw53729399;     cEeTlPKZQSfsWOnYAmOaEObuw53729399 = cEeTlPKZQSfsWOnYAmOaEObuw14618031;     cEeTlPKZQSfsWOnYAmOaEObuw14618031 = cEeTlPKZQSfsWOnYAmOaEObuw75806177;     cEeTlPKZQSfsWOnYAmOaEObuw75806177 = cEeTlPKZQSfsWOnYAmOaEObuw9930321;     cEeTlPKZQSfsWOnYAmOaEObuw9930321 = cEeTlPKZQSfsWOnYAmOaEObuw35369058;     cEeTlPKZQSfsWOnYAmOaEObuw35369058 = cEeTlPKZQSfsWOnYAmOaEObuw36708825;     cEeTlPKZQSfsWOnYAmOaEObuw36708825 = cEeTlPKZQSfsWOnYAmOaEObuw58913608;     cEeTlPKZQSfsWOnYAmOaEObuw58913608 = cEeTlPKZQSfsWOnYAmOaEObuw84955927;     cEeTlPKZQSfsWOnYAmOaEObuw84955927 = cEeTlPKZQSfsWOnYAmOaEObuw68670268;     cEeTlPKZQSfsWOnYAmOaEObuw68670268 = cEeTlPKZQSfsWOnYAmOaEObuw66508255;     cEeTlPKZQSfsWOnYAmOaEObuw66508255 = cEeTlPKZQSfsWOnYAmOaEObuw81400700;     cEeTlPKZQSfsWOnYAmOaEObuw81400700 = cEeTlPKZQSfsWOnYAmOaEObuw57484411;     cEeTlPKZQSfsWOnYAmOaEObuw57484411 = cEeTlPKZQSfsWOnYAmOaEObuw90393838;     cEeTlPKZQSfsWOnYAmOaEObuw90393838 = cEeTlPKZQSfsWOnYAmOaEObuw21509710;     cEeTlPKZQSfsWOnYAmOaEObuw21509710 = cEeTlPKZQSfsWOnYAmOaEObuw7155108;     cEeTlPKZQSfsWOnYAmOaEObuw7155108 = cEeTlPKZQSfsWOnYAmOaEObuw49015038;     cEeTlPKZQSfsWOnYAmOaEObuw49015038 = cEeTlPKZQSfsWOnYAmOaEObuw27178143;     cEeTlPKZQSfsWOnYAmOaEObuw27178143 = cEeTlPKZQSfsWOnYAmOaEObuw54039878;     cEeTlPKZQSfsWOnYAmOaEObuw54039878 = cEeTlPKZQSfsWOnYAmOaEObuw14582145;     cEeTlPKZQSfsWOnYAmOaEObuw14582145 = cEeTlPKZQSfsWOnYAmOaEObuw46009660;     cEeTlPKZQSfsWOnYAmOaEObuw46009660 = cEeTlPKZQSfsWOnYAmOaEObuw22503103;     cEeTlPKZQSfsWOnYAmOaEObuw22503103 = cEeTlPKZQSfsWOnYAmOaEObuw41942179;     cEeTlPKZQSfsWOnYAmOaEObuw41942179 = cEeTlPKZQSfsWOnYAmOaEObuw13805642;     cEeTlPKZQSfsWOnYAmOaEObuw13805642 = cEeTlPKZQSfsWOnYAmOaEObuw32117769;     cEeTlPKZQSfsWOnYAmOaEObuw32117769 = cEeTlPKZQSfsWOnYAmOaEObuw55436145;     cEeTlPKZQSfsWOnYAmOaEObuw55436145 = cEeTlPKZQSfsWOnYAmOaEObuw92721534;     cEeTlPKZQSfsWOnYAmOaEObuw92721534 = cEeTlPKZQSfsWOnYAmOaEObuw51963901;     cEeTlPKZQSfsWOnYAmOaEObuw51963901 = cEeTlPKZQSfsWOnYAmOaEObuw27997551;     cEeTlPKZQSfsWOnYAmOaEObuw27997551 = cEeTlPKZQSfsWOnYAmOaEObuw13777225;     cEeTlPKZQSfsWOnYAmOaEObuw13777225 = cEeTlPKZQSfsWOnYAmOaEObuw46096965;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void tyoAtOUPRJEajmUZIDoPPZNgDmunEAGhQuwnVeZMupHpzqZkfjXBHLMTl56268548() {     long IwHUgLRDXJoqhEedcVZRXgMMJ52214071 = -585055835;    long IwHUgLRDXJoqhEedcVZRXgMMJ44265853 = -627562319;    long IwHUgLRDXJoqhEedcVZRXgMMJ70971612 = -559294971;    long IwHUgLRDXJoqhEedcVZRXgMMJ78214781 = -59219004;    long IwHUgLRDXJoqhEedcVZRXgMMJ64192814 = -76156041;    long IwHUgLRDXJoqhEedcVZRXgMMJ96883526 = -192879964;    long IwHUgLRDXJoqhEedcVZRXgMMJ13736554 = -411920544;    long IwHUgLRDXJoqhEedcVZRXgMMJ29850859 = -193843902;    long IwHUgLRDXJoqhEedcVZRXgMMJ94002789 = -856953689;    long IwHUgLRDXJoqhEedcVZRXgMMJ76885556 = -680458132;    long IwHUgLRDXJoqhEedcVZRXgMMJ83080261 = -173284803;    long IwHUgLRDXJoqhEedcVZRXgMMJ44141478 = -264326249;    long IwHUgLRDXJoqhEedcVZRXgMMJ56277190 = -642853551;    long IwHUgLRDXJoqhEedcVZRXgMMJ6618737 = -623521243;    long IwHUgLRDXJoqhEedcVZRXgMMJ92689782 = -226143806;    long IwHUgLRDXJoqhEedcVZRXgMMJ60998183 = -85095547;    long IwHUgLRDXJoqhEedcVZRXgMMJ40788515 = 40806676;    long IwHUgLRDXJoqhEedcVZRXgMMJ25104932 = -353014082;    long IwHUgLRDXJoqhEedcVZRXgMMJ31873033 = 81340855;    long IwHUgLRDXJoqhEedcVZRXgMMJ54069386 = -909943202;    long IwHUgLRDXJoqhEedcVZRXgMMJ35447493 = -308046568;    long IwHUgLRDXJoqhEedcVZRXgMMJ31895274 = -290658566;    long IwHUgLRDXJoqhEedcVZRXgMMJ70289761 = -2223004;    long IwHUgLRDXJoqhEedcVZRXgMMJ81507917 = -192836380;    long IwHUgLRDXJoqhEedcVZRXgMMJ43558716 = -947117300;    long IwHUgLRDXJoqhEedcVZRXgMMJ20390895 = -690855635;    long IwHUgLRDXJoqhEedcVZRXgMMJ41806856 = -771002777;    long IwHUgLRDXJoqhEedcVZRXgMMJ58201957 = 43007327;    long IwHUgLRDXJoqhEedcVZRXgMMJ27419516 = -741810214;    long IwHUgLRDXJoqhEedcVZRXgMMJ41274407 = -218034935;    long IwHUgLRDXJoqhEedcVZRXgMMJ80110636 = -444198178;    long IwHUgLRDXJoqhEedcVZRXgMMJ21798201 = -877252656;    long IwHUgLRDXJoqhEedcVZRXgMMJ38735682 = -552536738;    long IwHUgLRDXJoqhEedcVZRXgMMJ43195623 = 31423960;    long IwHUgLRDXJoqhEedcVZRXgMMJ76779511 = -310206205;    long IwHUgLRDXJoqhEedcVZRXgMMJ80929177 = -564472766;    long IwHUgLRDXJoqhEedcVZRXgMMJ61178922 = -649766112;    long IwHUgLRDXJoqhEedcVZRXgMMJ27313326 = -170707112;    long IwHUgLRDXJoqhEedcVZRXgMMJ87044001 = -344085109;    long IwHUgLRDXJoqhEedcVZRXgMMJ81738952 = -108448685;    long IwHUgLRDXJoqhEedcVZRXgMMJ69258124 = -613612141;    long IwHUgLRDXJoqhEedcVZRXgMMJ43675699 = -724006873;    long IwHUgLRDXJoqhEedcVZRXgMMJ86732403 = -692923995;    long IwHUgLRDXJoqhEedcVZRXgMMJ63193101 = 26578376;    long IwHUgLRDXJoqhEedcVZRXgMMJ24512081 = -105647346;    long IwHUgLRDXJoqhEedcVZRXgMMJ43127993 = -559189806;    long IwHUgLRDXJoqhEedcVZRXgMMJ46939539 = -568278950;    long IwHUgLRDXJoqhEedcVZRXgMMJ69903318 = -357248895;    long IwHUgLRDXJoqhEedcVZRXgMMJ97286149 = -198193290;    long IwHUgLRDXJoqhEedcVZRXgMMJ83805075 = -521619351;    long IwHUgLRDXJoqhEedcVZRXgMMJ86849738 = -789847869;    long IwHUgLRDXJoqhEedcVZRXgMMJ91522699 = -93298002;    long IwHUgLRDXJoqhEedcVZRXgMMJ23420999 = -607296625;    long IwHUgLRDXJoqhEedcVZRXgMMJ97815471 = -359456803;    long IwHUgLRDXJoqhEedcVZRXgMMJ20821056 = -996423198;    long IwHUgLRDXJoqhEedcVZRXgMMJ20318798 = -194397270;    long IwHUgLRDXJoqhEedcVZRXgMMJ73976092 = -525339315;    long IwHUgLRDXJoqhEedcVZRXgMMJ89463695 = -266458592;    long IwHUgLRDXJoqhEedcVZRXgMMJ34656065 = -112101704;    long IwHUgLRDXJoqhEedcVZRXgMMJ43801919 = -385300407;    long IwHUgLRDXJoqhEedcVZRXgMMJ55076670 = -421877187;    long IwHUgLRDXJoqhEedcVZRXgMMJ55534596 = -354927872;    long IwHUgLRDXJoqhEedcVZRXgMMJ2431343 = -452033689;    long IwHUgLRDXJoqhEedcVZRXgMMJ52728382 = -538918755;    long IwHUgLRDXJoqhEedcVZRXgMMJ96774919 = -136259954;    long IwHUgLRDXJoqhEedcVZRXgMMJ61282060 = -296032147;    long IwHUgLRDXJoqhEedcVZRXgMMJ5405796 = -711789511;    long IwHUgLRDXJoqhEedcVZRXgMMJ13081568 = -574277511;    long IwHUgLRDXJoqhEedcVZRXgMMJ29839225 = -213315038;    long IwHUgLRDXJoqhEedcVZRXgMMJ11760605 = -661671041;    long IwHUgLRDXJoqhEedcVZRXgMMJ99819260 = -435329436;    long IwHUgLRDXJoqhEedcVZRXgMMJ13475190 = -788486213;    long IwHUgLRDXJoqhEedcVZRXgMMJ38060930 = 91071026;    long IwHUgLRDXJoqhEedcVZRXgMMJ50134081 = -810210460;    long IwHUgLRDXJoqhEedcVZRXgMMJ84811261 = -196331062;    long IwHUgLRDXJoqhEedcVZRXgMMJ91771794 = -584039695;    long IwHUgLRDXJoqhEedcVZRXgMMJ45162871 = -597734571;    long IwHUgLRDXJoqhEedcVZRXgMMJ7096660 = 71198619;    long IwHUgLRDXJoqhEedcVZRXgMMJ56995836 = 12810966;    long IwHUgLRDXJoqhEedcVZRXgMMJ430724 = -287927495;    long IwHUgLRDXJoqhEedcVZRXgMMJ73451356 = -22576685;    long IwHUgLRDXJoqhEedcVZRXgMMJ71903538 = -313753883;    long IwHUgLRDXJoqhEedcVZRXgMMJ60915808 = -758799384;    long IwHUgLRDXJoqhEedcVZRXgMMJ43614441 = -120190864;    long IwHUgLRDXJoqhEedcVZRXgMMJ54424668 = -428187066;    long IwHUgLRDXJoqhEedcVZRXgMMJ88587937 = -250900177;    long IwHUgLRDXJoqhEedcVZRXgMMJ98377202 = -169956031;    long IwHUgLRDXJoqhEedcVZRXgMMJ40920211 = -93079936;    long IwHUgLRDXJoqhEedcVZRXgMMJ22374568 = 27847157;    long IwHUgLRDXJoqhEedcVZRXgMMJ56460714 = -15808936;    long IwHUgLRDXJoqhEedcVZRXgMMJ6953086 = 60866549;    long IwHUgLRDXJoqhEedcVZRXgMMJ71715227 = -283307520;    long IwHUgLRDXJoqhEedcVZRXgMMJ92657260 = 41394591;    long IwHUgLRDXJoqhEedcVZRXgMMJ43242082 = -958784703;    long IwHUgLRDXJoqhEedcVZRXgMMJ26662282 = -686571498;    long IwHUgLRDXJoqhEedcVZRXgMMJ13723528 = -158684269;    long IwHUgLRDXJoqhEedcVZRXgMMJ41244356 = -171973185;    long IwHUgLRDXJoqhEedcVZRXgMMJ34004021 = -54005241;    long IwHUgLRDXJoqhEedcVZRXgMMJ66418181 = -837161670;    long IwHUgLRDXJoqhEedcVZRXgMMJ63230021 = -585055835;     IwHUgLRDXJoqhEedcVZRXgMMJ52214071 = IwHUgLRDXJoqhEedcVZRXgMMJ44265853;     IwHUgLRDXJoqhEedcVZRXgMMJ44265853 = IwHUgLRDXJoqhEedcVZRXgMMJ70971612;     IwHUgLRDXJoqhEedcVZRXgMMJ70971612 = IwHUgLRDXJoqhEedcVZRXgMMJ78214781;     IwHUgLRDXJoqhEedcVZRXgMMJ78214781 = IwHUgLRDXJoqhEedcVZRXgMMJ64192814;     IwHUgLRDXJoqhEedcVZRXgMMJ64192814 = IwHUgLRDXJoqhEedcVZRXgMMJ96883526;     IwHUgLRDXJoqhEedcVZRXgMMJ96883526 = IwHUgLRDXJoqhEedcVZRXgMMJ13736554;     IwHUgLRDXJoqhEedcVZRXgMMJ13736554 = IwHUgLRDXJoqhEedcVZRXgMMJ29850859;     IwHUgLRDXJoqhEedcVZRXgMMJ29850859 = IwHUgLRDXJoqhEedcVZRXgMMJ94002789;     IwHUgLRDXJoqhEedcVZRXgMMJ94002789 = IwHUgLRDXJoqhEedcVZRXgMMJ76885556;     IwHUgLRDXJoqhEedcVZRXgMMJ76885556 = IwHUgLRDXJoqhEedcVZRXgMMJ83080261;     IwHUgLRDXJoqhEedcVZRXgMMJ83080261 = IwHUgLRDXJoqhEedcVZRXgMMJ44141478;     IwHUgLRDXJoqhEedcVZRXgMMJ44141478 = IwHUgLRDXJoqhEedcVZRXgMMJ56277190;     IwHUgLRDXJoqhEedcVZRXgMMJ56277190 = IwHUgLRDXJoqhEedcVZRXgMMJ6618737;     IwHUgLRDXJoqhEedcVZRXgMMJ6618737 = IwHUgLRDXJoqhEedcVZRXgMMJ92689782;     IwHUgLRDXJoqhEedcVZRXgMMJ92689782 = IwHUgLRDXJoqhEedcVZRXgMMJ60998183;     IwHUgLRDXJoqhEedcVZRXgMMJ60998183 = IwHUgLRDXJoqhEedcVZRXgMMJ40788515;     IwHUgLRDXJoqhEedcVZRXgMMJ40788515 = IwHUgLRDXJoqhEedcVZRXgMMJ25104932;     IwHUgLRDXJoqhEedcVZRXgMMJ25104932 = IwHUgLRDXJoqhEedcVZRXgMMJ31873033;     IwHUgLRDXJoqhEedcVZRXgMMJ31873033 = IwHUgLRDXJoqhEedcVZRXgMMJ54069386;     IwHUgLRDXJoqhEedcVZRXgMMJ54069386 = IwHUgLRDXJoqhEedcVZRXgMMJ35447493;     IwHUgLRDXJoqhEedcVZRXgMMJ35447493 = IwHUgLRDXJoqhEedcVZRXgMMJ31895274;     IwHUgLRDXJoqhEedcVZRXgMMJ31895274 = IwHUgLRDXJoqhEedcVZRXgMMJ70289761;     IwHUgLRDXJoqhEedcVZRXgMMJ70289761 = IwHUgLRDXJoqhEedcVZRXgMMJ81507917;     IwHUgLRDXJoqhEedcVZRXgMMJ81507917 = IwHUgLRDXJoqhEedcVZRXgMMJ43558716;     IwHUgLRDXJoqhEedcVZRXgMMJ43558716 = IwHUgLRDXJoqhEedcVZRXgMMJ20390895;     IwHUgLRDXJoqhEedcVZRXgMMJ20390895 = IwHUgLRDXJoqhEedcVZRXgMMJ41806856;     IwHUgLRDXJoqhEedcVZRXgMMJ41806856 = IwHUgLRDXJoqhEedcVZRXgMMJ58201957;     IwHUgLRDXJoqhEedcVZRXgMMJ58201957 = IwHUgLRDXJoqhEedcVZRXgMMJ27419516;     IwHUgLRDXJoqhEedcVZRXgMMJ27419516 = IwHUgLRDXJoqhEedcVZRXgMMJ41274407;     IwHUgLRDXJoqhEedcVZRXgMMJ41274407 = IwHUgLRDXJoqhEedcVZRXgMMJ80110636;     IwHUgLRDXJoqhEedcVZRXgMMJ80110636 = IwHUgLRDXJoqhEedcVZRXgMMJ21798201;     IwHUgLRDXJoqhEedcVZRXgMMJ21798201 = IwHUgLRDXJoqhEedcVZRXgMMJ38735682;     IwHUgLRDXJoqhEedcVZRXgMMJ38735682 = IwHUgLRDXJoqhEedcVZRXgMMJ43195623;     IwHUgLRDXJoqhEedcVZRXgMMJ43195623 = IwHUgLRDXJoqhEedcVZRXgMMJ76779511;     IwHUgLRDXJoqhEedcVZRXgMMJ76779511 = IwHUgLRDXJoqhEedcVZRXgMMJ80929177;     IwHUgLRDXJoqhEedcVZRXgMMJ80929177 = IwHUgLRDXJoqhEedcVZRXgMMJ61178922;     IwHUgLRDXJoqhEedcVZRXgMMJ61178922 = IwHUgLRDXJoqhEedcVZRXgMMJ27313326;     IwHUgLRDXJoqhEedcVZRXgMMJ27313326 = IwHUgLRDXJoqhEedcVZRXgMMJ87044001;     IwHUgLRDXJoqhEedcVZRXgMMJ87044001 = IwHUgLRDXJoqhEedcVZRXgMMJ81738952;     IwHUgLRDXJoqhEedcVZRXgMMJ81738952 = IwHUgLRDXJoqhEedcVZRXgMMJ69258124;     IwHUgLRDXJoqhEedcVZRXgMMJ69258124 = IwHUgLRDXJoqhEedcVZRXgMMJ43675699;     IwHUgLRDXJoqhEedcVZRXgMMJ43675699 = IwHUgLRDXJoqhEedcVZRXgMMJ86732403;     IwHUgLRDXJoqhEedcVZRXgMMJ86732403 = IwHUgLRDXJoqhEedcVZRXgMMJ63193101;     IwHUgLRDXJoqhEedcVZRXgMMJ63193101 = IwHUgLRDXJoqhEedcVZRXgMMJ24512081;     IwHUgLRDXJoqhEedcVZRXgMMJ24512081 = IwHUgLRDXJoqhEedcVZRXgMMJ43127993;     IwHUgLRDXJoqhEedcVZRXgMMJ43127993 = IwHUgLRDXJoqhEedcVZRXgMMJ46939539;     IwHUgLRDXJoqhEedcVZRXgMMJ46939539 = IwHUgLRDXJoqhEedcVZRXgMMJ69903318;     IwHUgLRDXJoqhEedcVZRXgMMJ69903318 = IwHUgLRDXJoqhEedcVZRXgMMJ97286149;     IwHUgLRDXJoqhEedcVZRXgMMJ97286149 = IwHUgLRDXJoqhEedcVZRXgMMJ83805075;     IwHUgLRDXJoqhEedcVZRXgMMJ83805075 = IwHUgLRDXJoqhEedcVZRXgMMJ86849738;     IwHUgLRDXJoqhEedcVZRXgMMJ86849738 = IwHUgLRDXJoqhEedcVZRXgMMJ91522699;     IwHUgLRDXJoqhEedcVZRXgMMJ91522699 = IwHUgLRDXJoqhEedcVZRXgMMJ23420999;     IwHUgLRDXJoqhEedcVZRXgMMJ23420999 = IwHUgLRDXJoqhEedcVZRXgMMJ97815471;     IwHUgLRDXJoqhEedcVZRXgMMJ97815471 = IwHUgLRDXJoqhEedcVZRXgMMJ20821056;     IwHUgLRDXJoqhEedcVZRXgMMJ20821056 = IwHUgLRDXJoqhEedcVZRXgMMJ20318798;     IwHUgLRDXJoqhEedcVZRXgMMJ20318798 = IwHUgLRDXJoqhEedcVZRXgMMJ73976092;     IwHUgLRDXJoqhEedcVZRXgMMJ73976092 = IwHUgLRDXJoqhEedcVZRXgMMJ89463695;     IwHUgLRDXJoqhEedcVZRXgMMJ89463695 = IwHUgLRDXJoqhEedcVZRXgMMJ34656065;     IwHUgLRDXJoqhEedcVZRXgMMJ34656065 = IwHUgLRDXJoqhEedcVZRXgMMJ43801919;     IwHUgLRDXJoqhEedcVZRXgMMJ43801919 = IwHUgLRDXJoqhEedcVZRXgMMJ55076670;     IwHUgLRDXJoqhEedcVZRXgMMJ55076670 = IwHUgLRDXJoqhEedcVZRXgMMJ55534596;     IwHUgLRDXJoqhEedcVZRXgMMJ55534596 = IwHUgLRDXJoqhEedcVZRXgMMJ2431343;     IwHUgLRDXJoqhEedcVZRXgMMJ2431343 = IwHUgLRDXJoqhEedcVZRXgMMJ52728382;     IwHUgLRDXJoqhEedcVZRXgMMJ52728382 = IwHUgLRDXJoqhEedcVZRXgMMJ96774919;     IwHUgLRDXJoqhEedcVZRXgMMJ96774919 = IwHUgLRDXJoqhEedcVZRXgMMJ61282060;     IwHUgLRDXJoqhEedcVZRXgMMJ61282060 = IwHUgLRDXJoqhEedcVZRXgMMJ5405796;     IwHUgLRDXJoqhEedcVZRXgMMJ5405796 = IwHUgLRDXJoqhEedcVZRXgMMJ13081568;     IwHUgLRDXJoqhEedcVZRXgMMJ13081568 = IwHUgLRDXJoqhEedcVZRXgMMJ29839225;     IwHUgLRDXJoqhEedcVZRXgMMJ29839225 = IwHUgLRDXJoqhEedcVZRXgMMJ11760605;     IwHUgLRDXJoqhEedcVZRXgMMJ11760605 = IwHUgLRDXJoqhEedcVZRXgMMJ99819260;     IwHUgLRDXJoqhEedcVZRXgMMJ99819260 = IwHUgLRDXJoqhEedcVZRXgMMJ13475190;     IwHUgLRDXJoqhEedcVZRXgMMJ13475190 = IwHUgLRDXJoqhEedcVZRXgMMJ38060930;     IwHUgLRDXJoqhEedcVZRXgMMJ38060930 = IwHUgLRDXJoqhEedcVZRXgMMJ50134081;     IwHUgLRDXJoqhEedcVZRXgMMJ50134081 = IwHUgLRDXJoqhEedcVZRXgMMJ84811261;     IwHUgLRDXJoqhEedcVZRXgMMJ84811261 = IwHUgLRDXJoqhEedcVZRXgMMJ91771794;     IwHUgLRDXJoqhEedcVZRXgMMJ91771794 = IwHUgLRDXJoqhEedcVZRXgMMJ45162871;     IwHUgLRDXJoqhEedcVZRXgMMJ45162871 = IwHUgLRDXJoqhEedcVZRXgMMJ7096660;     IwHUgLRDXJoqhEedcVZRXgMMJ7096660 = IwHUgLRDXJoqhEedcVZRXgMMJ56995836;     IwHUgLRDXJoqhEedcVZRXgMMJ56995836 = IwHUgLRDXJoqhEedcVZRXgMMJ430724;     IwHUgLRDXJoqhEedcVZRXgMMJ430724 = IwHUgLRDXJoqhEedcVZRXgMMJ73451356;     IwHUgLRDXJoqhEedcVZRXgMMJ73451356 = IwHUgLRDXJoqhEedcVZRXgMMJ71903538;     IwHUgLRDXJoqhEedcVZRXgMMJ71903538 = IwHUgLRDXJoqhEedcVZRXgMMJ60915808;     IwHUgLRDXJoqhEedcVZRXgMMJ60915808 = IwHUgLRDXJoqhEedcVZRXgMMJ43614441;     IwHUgLRDXJoqhEedcVZRXgMMJ43614441 = IwHUgLRDXJoqhEedcVZRXgMMJ54424668;     IwHUgLRDXJoqhEedcVZRXgMMJ54424668 = IwHUgLRDXJoqhEedcVZRXgMMJ88587937;     IwHUgLRDXJoqhEedcVZRXgMMJ88587937 = IwHUgLRDXJoqhEedcVZRXgMMJ98377202;     IwHUgLRDXJoqhEedcVZRXgMMJ98377202 = IwHUgLRDXJoqhEedcVZRXgMMJ40920211;     IwHUgLRDXJoqhEedcVZRXgMMJ40920211 = IwHUgLRDXJoqhEedcVZRXgMMJ22374568;     IwHUgLRDXJoqhEedcVZRXgMMJ22374568 = IwHUgLRDXJoqhEedcVZRXgMMJ56460714;     IwHUgLRDXJoqhEedcVZRXgMMJ56460714 = IwHUgLRDXJoqhEedcVZRXgMMJ6953086;     IwHUgLRDXJoqhEedcVZRXgMMJ6953086 = IwHUgLRDXJoqhEedcVZRXgMMJ71715227;     IwHUgLRDXJoqhEedcVZRXgMMJ71715227 = IwHUgLRDXJoqhEedcVZRXgMMJ92657260;     IwHUgLRDXJoqhEedcVZRXgMMJ92657260 = IwHUgLRDXJoqhEedcVZRXgMMJ43242082;     IwHUgLRDXJoqhEedcVZRXgMMJ43242082 = IwHUgLRDXJoqhEedcVZRXgMMJ26662282;     IwHUgLRDXJoqhEedcVZRXgMMJ26662282 = IwHUgLRDXJoqhEedcVZRXgMMJ13723528;     IwHUgLRDXJoqhEedcVZRXgMMJ13723528 = IwHUgLRDXJoqhEedcVZRXgMMJ41244356;     IwHUgLRDXJoqhEedcVZRXgMMJ41244356 = IwHUgLRDXJoqhEedcVZRXgMMJ34004021;     IwHUgLRDXJoqhEedcVZRXgMMJ34004021 = IwHUgLRDXJoqhEedcVZRXgMMJ66418181;     IwHUgLRDXJoqhEedcVZRXgMMJ66418181 = IwHUgLRDXJoqhEedcVZRXgMMJ63230021;     IwHUgLRDXJoqhEedcVZRXgMMJ63230021 = IwHUgLRDXJoqhEedcVZRXgMMJ52214071;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ngkTUxjFMyibzhdfyZilgTghnTlzGjlErnBiaRrrKCTMuFyrvicugMMTA23560148() {     long CgALjzdMekMfvFghqadzTnhUu87673040 = 48667265;    long CgALjzdMekMfvFghqadzTnhUu57537931 = -508113925;    long CgALjzdMekMfvFghqadzTnhUu8358089 = -224962046;    long CgALjzdMekMfvFghqadzTnhUu50438136 = -980370075;    long CgALjzdMekMfvFghqadzTnhUu20478083 = -181754886;    long CgALjzdMekMfvFghqadzTnhUu33106399 = -455227859;    long CgALjzdMekMfvFghqadzTnhUu24393960 = -256646279;    long CgALjzdMekMfvFghqadzTnhUu91982419 = -938078043;    long CgALjzdMekMfvFghqadzTnhUu95520394 = -245285096;    long CgALjzdMekMfvFghqadzTnhUu91788268 = -345145130;    long CgALjzdMekMfvFghqadzTnhUu21261996 = 24707468;    long CgALjzdMekMfvFghqadzTnhUu44709626 = -128447020;    long CgALjzdMekMfvFghqadzTnhUu94511835 = -94866056;    long CgALjzdMekMfvFghqadzTnhUu59759599 = -599884652;    long CgALjzdMekMfvFghqadzTnhUu50884298 = -729568822;    long CgALjzdMekMfvFghqadzTnhUu44539484 = -820907154;    long CgALjzdMekMfvFghqadzTnhUu96624451 = -486167877;    long CgALjzdMekMfvFghqadzTnhUu24865123 = -426442151;    long CgALjzdMekMfvFghqadzTnhUu32423363 = -235222566;    long CgALjzdMekMfvFghqadzTnhUu47906604 = -236504268;    long CgALjzdMekMfvFghqadzTnhUu48534356 = 34678743;    long CgALjzdMekMfvFghqadzTnhUu35316799 = -377294860;    long CgALjzdMekMfvFghqadzTnhUu40815141 = -739855188;    long CgALjzdMekMfvFghqadzTnhUu75300862 = -703660984;    long CgALjzdMekMfvFghqadzTnhUu51576667 = -971102499;    long CgALjzdMekMfvFghqadzTnhUu31089066 = -379432442;    long CgALjzdMekMfvFghqadzTnhUu2227431 = -577286918;    long CgALjzdMekMfvFghqadzTnhUu98930381 = -126764847;    long CgALjzdMekMfvFghqadzTnhUu74087730 = -215905017;    long CgALjzdMekMfvFghqadzTnhUu46807818 = -252542105;    long CgALjzdMekMfvFghqadzTnhUu98693868 = -996178665;    long CgALjzdMekMfvFghqadzTnhUu59621220 = -650224070;    long CgALjzdMekMfvFghqadzTnhUu50953693 = -700132716;    long CgALjzdMekMfvFghqadzTnhUu72944049 = -33269854;    long CgALjzdMekMfvFghqadzTnhUu42587965 = -261306456;    long CgALjzdMekMfvFghqadzTnhUu32490022 = -779038071;    long CgALjzdMekMfvFghqadzTnhUu10590739 = -514462152;    long CgALjzdMekMfvFghqadzTnhUu78528729 = -153362693;    long CgALjzdMekMfvFghqadzTnhUu17434563 = 5038615;    long CgALjzdMekMfvFghqadzTnhUu46010485 = -673711231;    long CgALjzdMekMfvFghqadzTnhUu2709733 = -382811055;    long CgALjzdMekMfvFghqadzTnhUu33040826 = -318552164;    long CgALjzdMekMfvFghqadzTnhUu76115782 = -246104781;    long CgALjzdMekMfvFghqadzTnhUu3324440 = -577754034;    long CgALjzdMekMfvFghqadzTnhUu24528540 = 67841493;    long CgALjzdMekMfvFghqadzTnhUu89089321 = -598113438;    long CgALjzdMekMfvFghqadzTnhUu66284702 = 47734689;    long CgALjzdMekMfvFghqadzTnhUu87629630 = -523775488;    long CgALjzdMekMfvFghqadzTnhUu20178816 = -961930170;    long CgALjzdMekMfvFghqadzTnhUu8334665 = 87353833;    long CgALjzdMekMfvFghqadzTnhUu67620462 = -664124427;    long CgALjzdMekMfvFghqadzTnhUu75008171 = -306950349;    long CgALjzdMekMfvFghqadzTnhUu92042147 = -363342179;    long CgALjzdMekMfvFghqadzTnhUu13807318 = -550965303;    long CgALjzdMekMfvFghqadzTnhUu75025791 = -242913344;    long CgALjzdMekMfvFghqadzTnhUu52356241 = -574037876;    long CgALjzdMekMfvFghqadzTnhUu16722791 = -768258738;    long CgALjzdMekMfvFghqadzTnhUu33057227 = -521301063;    long CgALjzdMekMfvFghqadzTnhUu98861468 = 90732423;    long CgALjzdMekMfvFghqadzTnhUu89389016 = -802322445;    long CgALjzdMekMfvFghqadzTnhUu30878968 = -877940942;    long CgALjzdMekMfvFghqadzTnhUu25463578 = -29881432;    long CgALjzdMekMfvFghqadzTnhUu17894689 = -622173027;    long CgALjzdMekMfvFghqadzTnhUu48712577 = -992742991;    long CgALjzdMekMfvFghqadzTnhUu93094400 = -348966465;    long CgALjzdMekMfvFghqadzTnhUu61640776 = -325068462;    long CgALjzdMekMfvFghqadzTnhUu93755933 = -428314305;    long CgALjzdMekMfvFghqadzTnhUu21567787 = 38403797;    long CgALjzdMekMfvFghqadzTnhUu17171635 = -238578197;    long CgALjzdMekMfvFghqadzTnhUu18394277 = -950530751;    long CgALjzdMekMfvFghqadzTnhUu33948745 = -206445002;    long CgALjzdMekMfvFghqadzTnhUu18095722 = -232805184;    long CgALjzdMekMfvFghqadzTnhUu7430561 = -331480766;    long CgALjzdMekMfvFghqadzTnhUu86412878 = -561511336;    long CgALjzdMekMfvFghqadzTnhUu45196872 = -853693214;    long CgALjzdMekMfvFghqadzTnhUu15493531 = -646769093;    long CgALjzdMekMfvFghqadzTnhUu59201017 = -31190079;    long CgALjzdMekMfvFghqadzTnhUu37490701 = -62101155;    long CgALjzdMekMfvFghqadzTnhUu50772322 = -671502477;    long CgALjzdMekMfvFghqadzTnhUu62487346 = -272989061;    long CgALjzdMekMfvFghqadzTnhUu64804364 = -327167131;    long CgALjzdMekMfvFghqadzTnhUu14597801 = 46488569;    long CgALjzdMekMfvFghqadzTnhUu78751566 = -164834678;    long CgALjzdMekMfvFghqadzTnhUu65753066 = -203258851;    long CgALjzdMekMfvFghqadzTnhUu79187355 = -588417679;    long CgALjzdMekMfvFghqadzTnhUu23685697 = -589228317;    long CgALjzdMekMfvFghqadzTnhUu67579072 = -186881892;    long CgALjzdMekMfvFghqadzTnhUu37146375 = -49167413;    long CgALjzdMekMfvFghqadzTnhUu97918257 = -790356511;    long CgALjzdMekMfvFghqadzTnhUu90231723 = -687268581;    long CgALjzdMekMfvFghqadzTnhUu15767231 = 89220666;    long CgALjzdMekMfvFghqadzTnhUu77533512 = -993161090;    long CgALjzdMekMfvFghqadzTnhUu79667260 = -144095117;    long CgALjzdMekMfvFghqadzTnhUu28045547 = -192638940;    long CgALjzdMekMfvFghqadzTnhUu15131517 = -795770290;    long CgALjzdMekMfvFghqadzTnhUu77246154 = -252929624;    long CgALjzdMekMfvFghqadzTnhUu15146137 = -696379138;    long CgALjzdMekMfvFghqadzTnhUu27403205 = -253361791;    long CgALjzdMekMfvFghqadzTnhUu10230040 = -128787569;    long CgALjzdMekMfvFghqadzTnhUu62887764 = 48667265;     CgALjzdMekMfvFghqadzTnhUu87673040 = CgALjzdMekMfvFghqadzTnhUu57537931;     CgALjzdMekMfvFghqadzTnhUu57537931 = CgALjzdMekMfvFghqadzTnhUu8358089;     CgALjzdMekMfvFghqadzTnhUu8358089 = CgALjzdMekMfvFghqadzTnhUu50438136;     CgALjzdMekMfvFghqadzTnhUu50438136 = CgALjzdMekMfvFghqadzTnhUu20478083;     CgALjzdMekMfvFghqadzTnhUu20478083 = CgALjzdMekMfvFghqadzTnhUu33106399;     CgALjzdMekMfvFghqadzTnhUu33106399 = CgALjzdMekMfvFghqadzTnhUu24393960;     CgALjzdMekMfvFghqadzTnhUu24393960 = CgALjzdMekMfvFghqadzTnhUu91982419;     CgALjzdMekMfvFghqadzTnhUu91982419 = CgALjzdMekMfvFghqadzTnhUu95520394;     CgALjzdMekMfvFghqadzTnhUu95520394 = CgALjzdMekMfvFghqadzTnhUu91788268;     CgALjzdMekMfvFghqadzTnhUu91788268 = CgALjzdMekMfvFghqadzTnhUu21261996;     CgALjzdMekMfvFghqadzTnhUu21261996 = CgALjzdMekMfvFghqadzTnhUu44709626;     CgALjzdMekMfvFghqadzTnhUu44709626 = CgALjzdMekMfvFghqadzTnhUu94511835;     CgALjzdMekMfvFghqadzTnhUu94511835 = CgALjzdMekMfvFghqadzTnhUu59759599;     CgALjzdMekMfvFghqadzTnhUu59759599 = CgALjzdMekMfvFghqadzTnhUu50884298;     CgALjzdMekMfvFghqadzTnhUu50884298 = CgALjzdMekMfvFghqadzTnhUu44539484;     CgALjzdMekMfvFghqadzTnhUu44539484 = CgALjzdMekMfvFghqadzTnhUu96624451;     CgALjzdMekMfvFghqadzTnhUu96624451 = CgALjzdMekMfvFghqadzTnhUu24865123;     CgALjzdMekMfvFghqadzTnhUu24865123 = CgALjzdMekMfvFghqadzTnhUu32423363;     CgALjzdMekMfvFghqadzTnhUu32423363 = CgALjzdMekMfvFghqadzTnhUu47906604;     CgALjzdMekMfvFghqadzTnhUu47906604 = CgALjzdMekMfvFghqadzTnhUu48534356;     CgALjzdMekMfvFghqadzTnhUu48534356 = CgALjzdMekMfvFghqadzTnhUu35316799;     CgALjzdMekMfvFghqadzTnhUu35316799 = CgALjzdMekMfvFghqadzTnhUu40815141;     CgALjzdMekMfvFghqadzTnhUu40815141 = CgALjzdMekMfvFghqadzTnhUu75300862;     CgALjzdMekMfvFghqadzTnhUu75300862 = CgALjzdMekMfvFghqadzTnhUu51576667;     CgALjzdMekMfvFghqadzTnhUu51576667 = CgALjzdMekMfvFghqadzTnhUu31089066;     CgALjzdMekMfvFghqadzTnhUu31089066 = CgALjzdMekMfvFghqadzTnhUu2227431;     CgALjzdMekMfvFghqadzTnhUu2227431 = CgALjzdMekMfvFghqadzTnhUu98930381;     CgALjzdMekMfvFghqadzTnhUu98930381 = CgALjzdMekMfvFghqadzTnhUu74087730;     CgALjzdMekMfvFghqadzTnhUu74087730 = CgALjzdMekMfvFghqadzTnhUu46807818;     CgALjzdMekMfvFghqadzTnhUu46807818 = CgALjzdMekMfvFghqadzTnhUu98693868;     CgALjzdMekMfvFghqadzTnhUu98693868 = CgALjzdMekMfvFghqadzTnhUu59621220;     CgALjzdMekMfvFghqadzTnhUu59621220 = CgALjzdMekMfvFghqadzTnhUu50953693;     CgALjzdMekMfvFghqadzTnhUu50953693 = CgALjzdMekMfvFghqadzTnhUu72944049;     CgALjzdMekMfvFghqadzTnhUu72944049 = CgALjzdMekMfvFghqadzTnhUu42587965;     CgALjzdMekMfvFghqadzTnhUu42587965 = CgALjzdMekMfvFghqadzTnhUu32490022;     CgALjzdMekMfvFghqadzTnhUu32490022 = CgALjzdMekMfvFghqadzTnhUu10590739;     CgALjzdMekMfvFghqadzTnhUu10590739 = CgALjzdMekMfvFghqadzTnhUu78528729;     CgALjzdMekMfvFghqadzTnhUu78528729 = CgALjzdMekMfvFghqadzTnhUu17434563;     CgALjzdMekMfvFghqadzTnhUu17434563 = CgALjzdMekMfvFghqadzTnhUu46010485;     CgALjzdMekMfvFghqadzTnhUu46010485 = CgALjzdMekMfvFghqadzTnhUu2709733;     CgALjzdMekMfvFghqadzTnhUu2709733 = CgALjzdMekMfvFghqadzTnhUu33040826;     CgALjzdMekMfvFghqadzTnhUu33040826 = CgALjzdMekMfvFghqadzTnhUu76115782;     CgALjzdMekMfvFghqadzTnhUu76115782 = CgALjzdMekMfvFghqadzTnhUu3324440;     CgALjzdMekMfvFghqadzTnhUu3324440 = CgALjzdMekMfvFghqadzTnhUu24528540;     CgALjzdMekMfvFghqadzTnhUu24528540 = CgALjzdMekMfvFghqadzTnhUu89089321;     CgALjzdMekMfvFghqadzTnhUu89089321 = CgALjzdMekMfvFghqadzTnhUu66284702;     CgALjzdMekMfvFghqadzTnhUu66284702 = CgALjzdMekMfvFghqadzTnhUu87629630;     CgALjzdMekMfvFghqadzTnhUu87629630 = CgALjzdMekMfvFghqadzTnhUu20178816;     CgALjzdMekMfvFghqadzTnhUu20178816 = CgALjzdMekMfvFghqadzTnhUu8334665;     CgALjzdMekMfvFghqadzTnhUu8334665 = CgALjzdMekMfvFghqadzTnhUu67620462;     CgALjzdMekMfvFghqadzTnhUu67620462 = CgALjzdMekMfvFghqadzTnhUu75008171;     CgALjzdMekMfvFghqadzTnhUu75008171 = CgALjzdMekMfvFghqadzTnhUu92042147;     CgALjzdMekMfvFghqadzTnhUu92042147 = CgALjzdMekMfvFghqadzTnhUu13807318;     CgALjzdMekMfvFghqadzTnhUu13807318 = CgALjzdMekMfvFghqadzTnhUu75025791;     CgALjzdMekMfvFghqadzTnhUu75025791 = CgALjzdMekMfvFghqadzTnhUu52356241;     CgALjzdMekMfvFghqadzTnhUu52356241 = CgALjzdMekMfvFghqadzTnhUu16722791;     CgALjzdMekMfvFghqadzTnhUu16722791 = CgALjzdMekMfvFghqadzTnhUu33057227;     CgALjzdMekMfvFghqadzTnhUu33057227 = CgALjzdMekMfvFghqadzTnhUu98861468;     CgALjzdMekMfvFghqadzTnhUu98861468 = CgALjzdMekMfvFghqadzTnhUu89389016;     CgALjzdMekMfvFghqadzTnhUu89389016 = CgALjzdMekMfvFghqadzTnhUu30878968;     CgALjzdMekMfvFghqadzTnhUu30878968 = CgALjzdMekMfvFghqadzTnhUu25463578;     CgALjzdMekMfvFghqadzTnhUu25463578 = CgALjzdMekMfvFghqadzTnhUu17894689;     CgALjzdMekMfvFghqadzTnhUu17894689 = CgALjzdMekMfvFghqadzTnhUu48712577;     CgALjzdMekMfvFghqadzTnhUu48712577 = CgALjzdMekMfvFghqadzTnhUu93094400;     CgALjzdMekMfvFghqadzTnhUu93094400 = CgALjzdMekMfvFghqadzTnhUu61640776;     CgALjzdMekMfvFghqadzTnhUu61640776 = CgALjzdMekMfvFghqadzTnhUu93755933;     CgALjzdMekMfvFghqadzTnhUu93755933 = CgALjzdMekMfvFghqadzTnhUu21567787;     CgALjzdMekMfvFghqadzTnhUu21567787 = CgALjzdMekMfvFghqadzTnhUu17171635;     CgALjzdMekMfvFghqadzTnhUu17171635 = CgALjzdMekMfvFghqadzTnhUu18394277;     CgALjzdMekMfvFghqadzTnhUu18394277 = CgALjzdMekMfvFghqadzTnhUu33948745;     CgALjzdMekMfvFghqadzTnhUu33948745 = CgALjzdMekMfvFghqadzTnhUu18095722;     CgALjzdMekMfvFghqadzTnhUu18095722 = CgALjzdMekMfvFghqadzTnhUu7430561;     CgALjzdMekMfvFghqadzTnhUu7430561 = CgALjzdMekMfvFghqadzTnhUu86412878;     CgALjzdMekMfvFghqadzTnhUu86412878 = CgALjzdMekMfvFghqadzTnhUu45196872;     CgALjzdMekMfvFghqadzTnhUu45196872 = CgALjzdMekMfvFghqadzTnhUu15493531;     CgALjzdMekMfvFghqadzTnhUu15493531 = CgALjzdMekMfvFghqadzTnhUu59201017;     CgALjzdMekMfvFghqadzTnhUu59201017 = CgALjzdMekMfvFghqadzTnhUu37490701;     CgALjzdMekMfvFghqadzTnhUu37490701 = CgALjzdMekMfvFghqadzTnhUu50772322;     CgALjzdMekMfvFghqadzTnhUu50772322 = CgALjzdMekMfvFghqadzTnhUu62487346;     CgALjzdMekMfvFghqadzTnhUu62487346 = CgALjzdMekMfvFghqadzTnhUu64804364;     CgALjzdMekMfvFghqadzTnhUu64804364 = CgALjzdMekMfvFghqadzTnhUu14597801;     CgALjzdMekMfvFghqadzTnhUu14597801 = CgALjzdMekMfvFghqadzTnhUu78751566;     CgALjzdMekMfvFghqadzTnhUu78751566 = CgALjzdMekMfvFghqadzTnhUu65753066;     CgALjzdMekMfvFghqadzTnhUu65753066 = CgALjzdMekMfvFghqadzTnhUu79187355;     CgALjzdMekMfvFghqadzTnhUu79187355 = CgALjzdMekMfvFghqadzTnhUu23685697;     CgALjzdMekMfvFghqadzTnhUu23685697 = CgALjzdMekMfvFghqadzTnhUu67579072;     CgALjzdMekMfvFghqadzTnhUu67579072 = CgALjzdMekMfvFghqadzTnhUu37146375;     CgALjzdMekMfvFghqadzTnhUu37146375 = CgALjzdMekMfvFghqadzTnhUu97918257;     CgALjzdMekMfvFghqadzTnhUu97918257 = CgALjzdMekMfvFghqadzTnhUu90231723;     CgALjzdMekMfvFghqadzTnhUu90231723 = CgALjzdMekMfvFghqadzTnhUu15767231;     CgALjzdMekMfvFghqadzTnhUu15767231 = CgALjzdMekMfvFghqadzTnhUu77533512;     CgALjzdMekMfvFghqadzTnhUu77533512 = CgALjzdMekMfvFghqadzTnhUu79667260;     CgALjzdMekMfvFghqadzTnhUu79667260 = CgALjzdMekMfvFghqadzTnhUu28045547;     CgALjzdMekMfvFghqadzTnhUu28045547 = CgALjzdMekMfvFghqadzTnhUu15131517;     CgALjzdMekMfvFghqadzTnhUu15131517 = CgALjzdMekMfvFghqadzTnhUu77246154;     CgALjzdMekMfvFghqadzTnhUu77246154 = CgALjzdMekMfvFghqadzTnhUu15146137;     CgALjzdMekMfvFghqadzTnhUu15146137 = CgALjzdMekMfvFghqadzTnhUu27403205;     CgALjzdMekMfvFghqadzTnhUu27403205 = CgALjzdMekMfvFghqadzTnhUu10230040;     CgALjzdMekMfvFghqadzTnhUu10230040 = CgALjzdMekMfvFghqadzTnhUu62887764;     CgALjzdMekMfvFghqadzTnhUu62887764 = CgALjzdMekMfvFghqadzTnhUu87673040;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void MAtMEqJbOkkucBWKqqyUAMMvjOsXBOhEKjUiIpYGmKZErWiMTIDXxlbzo38609216() {     long ydpxmZADgkthnCARshpnHENfg93790146 = -63234624;    long ydpxmZADgkthnCARshpnHENfg911211 = -217713706;    long ydpxmZADgkthnCARshpnHENfg24400273 = -375794967;    long ydpxmZADgkthnCARshpnHENfg77512917 = -71118706;    long ydpxmZADgkthnCARshpnHENfg89373571 = -702404758;    long ydpxmZADgkthnCARshpnHENfg24523601 = -719724094;    long ydpxmZADgkthnCARshpnHENfg84882925 = -395611256;    long ydpxmZADgkthnCARshpnHENfg41742311 = -124951956;    long ydpxmZADgkthnCARshpnHENfg60162890 = -13317761;    long ydpxmZADgkthnCARshpnHENfg33017928 = -674120607;    long ydpxmZADgkthnCARshpnHENfg81372286 = -952730119;    long ydpxmZADgkthnCARshpnHENfg76532668 = -572853222;    long ydpxmZADgkthnCARshpnHENfg80720954 = -534757145;    long ydpxmZADgkthnCARshpnHENfg42903276 = -32123220;    long ydpxmZADgkthnCARshpnHENfg46626725 = -320030988;    long ydpxmZADgkthnCARshpnHENfg86044877 = -793906697;    long ydpxmZADgkthnCARshpnHENfg90460454 = -2712990;    long ydpxmZADgkthnCARshpnHENfg21918276 = -91964793;    long ydpxmZADgkthnCARshpnHENfg94253204 = -640991663;    long ydpxmZADgkthnCARshpnHENfg28456769 = -593407187;    long ydpxmZADgkthnCARshpnHENfg37087550 = -920808712;    long ydpxmZADgkthnCARshpnHENfg21837823 = -285224576;    long ydpxmZADgkthnCARshpnHENfg76405932 = -486372675;    long ydpxmZADgkthnCARshpnHENfg59293236 = -925965972;    long ydpxmZADgkthnCARshpnHENfg95276317 = -244298532;    long ydpxmZADgkthnCARshpnHENfg55810742 = -258087765;    long ydpxmZADgkthnCARshpnHENfg687209 = -477949121;    long ydpxmZADgkthnCARshpnHENfg12037508 = -192693801;    long ydpxmZADgkthnCARshpnHENfg40219986 = -438287721;    long ydpxmZADgkthnCARshpnHENfg15423455 = -70012972;    long ydpxmZADgkthnCARshpnHENfg90936417 = -909499603;    long ydpxmZADgkthnCARshpnHENfg57231841 = -359670886;    long ydpxmZADgkthnCARshpnHENfg60664641 = -592746086;    long ydpxmZADgkthnCARshpnHENfg67774614 = -884811619;    long ydpxmZADgkthnCARshpnHENfg4062617 = -900039561;    long ydpxmZADgkthnCARshpnHENfg1215935 = -993064179;    long ydpxmZADgkthnCARshpnHENfg91852673 = -468098022;    long ydpxmZADgkthnCARshpnHENfg12618942 = 75131297;    long ydpxmZADgkthnCARshpnHENfg91044816 = 11115118;    long ydpxmZADgkthnCARshpnHENfg33512422 = -47150454;    long ydpxmZADgkthnCARshpnHENfg8378956 = -448084949;    long ydpxmZADgkthnCARshpnHENfg65191282 = -588694442;    long ydpxmZADgkthnCARshpnHENfg54182760 = -326909365;    long ydpxmZADgkthnCARshpnHENfg90732179 = -597096972;    long ydpxmZADgkthnCARshpnHENfg36481005 = -694056662;    long ydpxmZADgkthnCARshpnHENfg1028516 = -583329555;    long ydpxmZADgkthnCARshpnHENfg84063276 = -71040848;    long ydpxmZADgkthnCARshpnHENfg95586571 = -533671020;    long ydpxmZADgkthnCARshpnHENfg29854545 = 52332842;    long ydpxmZADgkthnCARshpnHENfg21246317 = 343025;    long ydpxmZADgkthnCARshpnHENfg3321141 = -506418098;    long ydpxmZADgkthnCARshpnHENfg85817890 = -107676669;    long ydpxmZADgkthnCARshpnHENfg40290605 = -155131767;    long ydpxmZADgkthnCARshpnHENfg9776199 = -871435448;    long ydpxmZADgkthnCARshpnHENfg1521667 = -943445126;    long ydpxmZADgkthnCARshpnHENfg71952324 = -778010048;    long ydpxmZADgkthnCARshpnHENfg24505278 = -731341032;    long ydpxmZADgkthnCARshpnHENfg65107036 = -449828996;    long ydpxmZADgkthnCARshpnHENfg82236599 = -826820174;    long ydpxmZADgkthnCARshpnHENfg33562830 = -344316993;    long ydpxmZADgkthnCARshpnHENfg23836393 = -141774974;    long ydpxmZADgkthnCARshpnHENfg72845418 = -102917455;    long ydpxmZADgkthnCARshpnHENfg1522325 = -686664235;    long ydpxmZADgkthnCARshpnHENfg44739436 = -943304789;    long ydpxmZADgkthnCARshpnHENfg42081510 = -764621005;    long ydpxmZADgkthnCARshpnHENfg24140445 = -493059233;    long ydpxmZADgkthnCARshpnHENfg15868028 = -980107137;    long ydpxmZADgkthnCARshpnHENfg12946341 = -649945526;    long ydpxmZADgkthnCARshpnHENfg38840659 = -132083659;    long ydpxmZADgkthnCARshpnHENfg45410790 = -326966809;    long ydpxmZADgkthnCARshpnHENfg94192203 = -225808676;    long ydpxmZADgkthnCARshpnHENfg77841512 = 22155713;    long ydpxmZADgkthnCARshpnHENfg30873460 = -3079912;    long ydpxmZADgkthnCARshpnHENfg60740782 = -493841210;    long ydpxmZADgkthnCARshpnHENfg20077813 = -45322239;    long ydpxmZADgkthnCARshpnHENfg71896267 = -232114270;    long ydpxmZADgkthnCARshpnHENfg67655062 = -958315212;    long ydpxmZADgkthnCARshpnHENfg85673752 = -889275704;    long ydpxmZADgkthnCARshpnHENfg22812232 = -131909310;    long ydpxmZADgkthnCARshpnHENfg94247801 = -660968977;    long ydpxmZADgkthnCARshpnHENfg71747465 = -87046917;    long ydpxmZADgkthnCARshpnHENfg5100638 = -944278101;    long ydpxmZADgkthnCARshpnHENfg82182963 = -145026644;    long ydpxmZADgkthnCARshpnHENfg18973669 = -338630747;    long ydpxmZADgkthnCARshpnHENfg12102314 = -563594875;    long ydpxmZADgkthnCARshpnHENfg5118527 = -701822935;    long ydpxmZADgkthnCARshpnHENfg16941237 = -104539120;    long ydpxmZADgkthnCARshpnHENfg50888443 = -721310638;    long ydpxmZADgkthnCARshpnHENfg66252947 = -941366493;    long ydpxmZADgkthnCARshpnHENfg32110293 = -22029513;    long ydpxmZADgkthnCARshpnHENfg76710656 = -161723148;    long ydpxmZADgkthnCARshpnHENfg26745637 = 81730974;    long ydpxmZADgkthnCARshpnHENfg30382342 = -98048529;    long ydpxmZADgkthnCARshpnHENfg57481987 = -644567889;    long ydpxmZADgkthnCARshpnHENfg9676030 = -905375481;    long ydpxmZADgkthnCARshpnHENfg35533538 = -245167494;    long ydpxmZADgkthnCARshpnHENfg63668958 = -902030208;    long ydpxmZADgkthnCARshpnHENfg9443325 = -383604576;    long ydpxmZADgkthnCARshpnHENfg48650670 = -832475968;    long ydpxmZADgkthnCARshpnHENfg12340561 = -63234624;     ydpxmZADgkthnCARshpnHENfg93790146 = ydpxmZADgkthnCARshpnHENfg911211;     ydpxmZADgkthnCARshpnHENfg911211 = ydpxmZADgkthnCARshpnHENfg24400273;     ydpxmZADgkthnCARshpnHENfg24400273 = ydpxmZADgkthnCARshpnHENfg77512917;     ydpxmZADgkthnCARshpnHENfg77512917 = ydpxmZADgkthnCARshpnHENfg89373571;     ydpxmZADgkthnCARshpnHENfg89373571 = ydpxmZADgkthnCARshpnHENfg24523601;     ydpxmZADgkthnCARshpnHENfg24523601 = ydpxmZADgkthnCARshpnHENfg84882925;     ydpxmZADgkthnCARshpnHENfg84882925 = ydpxmZADgkthnCARshpnHENfg41742311;     ydpxmZADgkthnCARshpnHENfg41742311 = ydpxmZADgkthnCARshpnHENfg60162890;     ydpxmZADgkthnCARshpnHENfg60162890 = ydpxmZADgkthnCARshpnHENfg33017928;     ydpxmZADgkthnCARshpnHENfg33017928 = ydpxmZADgkthnCARshpnHENfg81372286;     ydpxmZADgkthnCARshpnHENfg81372286 = ydpxmZADgkthnCARshpnHENfg76532668;     ydpxmZADgkthnCARshpnHENfg76532668 = ydpxmZADgkthnCARshpnHENfg80720954;     ydpxmZADgkthnCARshpnHENfg80720954 = ydpxmZADgkthnCARshpnHENfg42903276;     ydpxmZADgkthnCARshpnHENfg42903276 = ydpxmZADgkthnCARshpnHENfg46626725;     ydpxmZADgkthnCARshpnHENfg46626725 = ydpxmZADgkthnCARshpnHENfg86044877;     ydpxmZADgkthnCARshpnHENfg86044877 = ydpxmZADgkthnCARshpnHENfg90460454;     ydpxmZADgkthnCARshpnHENfg90460454 = ydpxmZADgkthnCARshpnHENfg21918276;     ydpxmZADgkthnCARshpnHENfg21918276 = ydpxmZADgkthnCARshpnHENfg94253204;     ydpxmZADgkthnCARshpnHENfg94253204 = ydpxmZADgkthnCARshpnHENfg28456769;     ydpxmZADgkthnCARshpnHENfg28456769 = ydpxmZADgkthnCARshpnHENfg37087550;     ydpxmZADgkthnCARshpnHENfg37087550 = ydpxmZADgkthnCARshpnHENfg21837823;     ydpxmZADgkthnCARshpnHENfg21837823 = ydpxmZADgkthnCARshpnHENfg76405932;     ydpxmZADgkthnCARshpnHENfg76405932 = ydpxmZADgkthnCARshpnHENfg59293236;     ydpxmZADgkthnCARshpnHENfg59293236 = ydpxmZADgkthnCARshpnHENfg95276317;     ydpxmZADgkthnCARshpnHENfg95276317 = ydpxmZADgkthnCARshpnHENfg55810742;     ydpxmZADgkthnCARshpnHENfg55810742 = ydpxmZADgkthnCARshpnHENfg687209;     ydpxmZADgkthnCARshpnHENfg687209 = ydpxmZADgkthnCARshpnHENfg12037508;     ydpxmZADgkthnCARshpnHENfg12037508 = ydpxmZADgkthnCARshpnHENfg40219986;     ydpxmZADgkthnCARshpnHENfg40219986 = ydpxmZADgkthnCARshpnHENfg15423455;     ydpxmZADgkthnCARshpnHENfg15423455 = ydpxmZADgkthnCARshpnHENfg90936417;     ydpxmZADgkthnCARshpnHENfg90936417 = ydpxmZADgkthnCARshpnHENfg57231841;     ydpxmZADgkthnCARshpnHENfg57231841 = ydpxmZADgkthnCARshpnHENfg60664641;     ydpxmZADgkthnCARshpnHENfg60664641 = ydpxmZADgkthnCARshpnHENfg67774614;     ydpxmZADgkthnCARshpnHENfg67774614 = ydpxmZADgkthnCARshpnHENfg4062617;     ydpxmZADgkthnCARshpnHENfg4062617 = ydpxmZADgkthnCARshpnHENfg1215935;     ydpxmZADgkthnCARshpnHENfg1215935 = ydpxmZADgkthnCARshpnHENfg91852673;     ydpxmZADgkthnCARshpnHENfg91852673 = ydpxmZADgkthnCARshpnHENfg12618942;     ydpxmZADgkthnCARshpnHENfg12618942 = ydpxmZADgkthnCARshpnHENfg91044816;     ydpxmZADgkthnCARshpnHENfg91044816 = ydpxmZADgkthnCARshpnHENfg33512422;     ydpxmZADgkthnCARshpnHENfg33512422 = ydpxmZADgkthnCARshpnHENfg8378956;     ydpxmZADgkthnCARshpnHENfg8378956 = ydpxmZADgkthnCARshpnHENfg65191282;     ydpxmZADgkthnCARshpnHENfg65191282 = ydpxmZADgkthnCARshpnHENfg54182760;     ydpxmZADgkthnCARshpnHENfg54182760 = ydpxmZADgkthnCARshpnHENfg90732179;     ydpxmZADgkthnCARshpnHENfg90732179 = ydpxmZADgkthnCARshpnHENfg36481005;     ydpxmZADgkthnCARshpnHENfg36481005 = ydpxmZADgkthnCARshpnHENfg1028516;     ydpxmZADgkthnCARshpnHENfg1028516 = ydpxmZADgkthnCARshpnHENfg84063276;     ydpxmZADgkthnCARshpnHENfg84063276 = ydpxmZADgkthnCARshpnHENfg95586571;     ydpxmZADgkthnCARshpnHENfg95586571 = ydpxmZADgkthnCARshpnHENfg29854545;     ydpxmZADgkthnCARshpnHENfg29854545 = ydpxmZADgkthnCARshpnHENfg21246317;     ydpxmZADgkthnCARshpnHENfg21246317 = ydpxmZADgkthnCARshpnHENfg3321141;     ydpxmZADgkthnCARshpnHENfg3321141 = ydpxmZADgkthnCARshpnHENfg85817890;     ydpxmZADgkthnCARshpnHENfg85817890 = ydpxmZADgkthnCARshpnHENfg40290605;     ydpxmZADgkthnCARshpnHENfg40290605 = ydpxmZADgkthnCARshpnHENfg9776199;     ydpxmZADgkthnCARshpnHENfg9776199 = ydpxmZADgkthnCARshpnHENfg1521667;     ydpxmZADgkthnCARshpnHENfg1521667 = ydpxmZADgkthnCARshpnHENfg71952324;     ydpxmZADgkthnCARshpnHENfg71952324 = ydpxmZADgkthnCARshpnHENfg24505278;     ydpxmZADgkthnCARshpnHENfg24505278 = ydpxmZADgkthnCARshpnHENfg65107036;     ydpxmZADgkthnCARshpnHENfg65107036 = ydpxmZADgkthnCARshpnHENfg82236599;     ydpxmZADgkthnCARshpnHENfg82236599 = ydpxmZADgkthnCARshpnHENfg33562830;     ydpxmZADgkthnCARshpnHENfg33562830 = ydpxmZADgkthnCARshpnHENfg23836393;     ydpxmZADgkthnCARshpnHENfg23836393 = ydpxmZADgkthnCARshpnHENfg72845418;     ydpxmZADgkthnCARshpnHENfg72845418 = ydpxmZADgkthnCARshpnHENfg1522325;     ydpxmZADgkthnCARshpnHENfg1522325 = ydpxmZADgkthnCARshpnHENfg44739436;     ydpxmZADgkthnCARshpnHENfg44739436 = ydpxmZADgkthnCARshpnHENfg42081510;     ydpxmZADgkthnCARshpnHENfg42081510 = ydpxmZADgkthnCARshpnHENfg24140445;     ydpxmZADgkthnCARshpnHENfg24140445 = ydpxmZADgkthnCARshpnHENfg15868028;     ydpxmZADgkthnCARshpnHENfg15868028 = ydpxmZADgkthnCARshpnHENfg12946341;     ydpxmZADgkthnCARshpnHENfg12946341 = ydpxmZADgkthnCARshpnHENfg38840659;     ydpxmZADgkthnCARshpnHENfg38840659 = ydpxmZADgkthnCARshpnHENfg45410790;     ydpxmZADgkthnCARshpnHENfg45410790 = ydpxmZADgkthnCARshpnHENfg94192203;     ydpxmZADgkthnCARshpnHENfg94192203 = ydpxmZADgkthnCARshpnHENfg77841512;     ydpxmZADgkthnCARshpnHENfg77841512 = ydpxmZADgkthnCARshpnHENfg30873460;     ydpxmZADgkthnCARshpnHENfg30873460 = ydpxmZADgkthnCARshpnHENfg60740782;     ydpxmZADgkthnCARshpnHENfg60740782 = ydpxmZADgkthnCARshpnHENfg20077813;     ydpxmZADgkthnCARshpnHENfg20077813 = ydpxmZADgkthnCARshpnHENfg71896267;     ydpxmZADgkthnCARshpnHENfg71896267 = ydpxmZADgkthnCARshpnHENfg67655062;     ydpxmZADgkthnCARshpnHENfg67655062 = ydpxmZADgkthnCARshpnHENfg85673752;     ydpxmZADgkthnCARshpnHENfg85673752 = ydpxmZADgkthnCARshpnHENfg22812232;     ydpxmZADgkthnCARshpnHENfg22812232 = ydpxmZADgkthnCARshpnHENfg94247801;     ydpxmZADgkthnCARshpnHENfg94247801 = ydpxmZADgkthnCARshpnHENfg71747465;     ydpxmZADgkthnCARshpnHENfg71747465 = ydpxmZADgkthnCARshpnHENfg5100638;     ydpxmZADgkthnCARshpnHENfg5100638 = ydpxmZADgkthnCARshpnHENfg82182963;     ydpxmZADgkthnCARshpnHENfg82182963 = ydpxmZADgkthnCARshpnHENfg18973669;     ydpxmZADgkthnCARshpnHENfg18973669 = ydpxmZADgkthnCARshpnHENfg12102314;     ydpxmZADgkthnCARshpnHENfg12102314 = ydpxmZADgkthnCARshpnHENfg5118527;     ydpxmZADgkthnCARshpnHENfg5118527 = ydpxmZADgkthnCARshpnHENfg16941237;     ydpxmZADgkthnCARshpnHENfg16941237 = ydpxmZADgkthnCARshpnHENfg50888443;     ydpxmZADgkthnCARshpnHENfg50888443 = ydpxmZADgkthnCARshpnHENfg66252947;     ydpxmZADgkthnCARshpnHENfg66252947 = ydpxmZADgkthnCARshpnHENfg32110293;     ydpxmZADgkthnCARshpnHENfg32110293 = ydpxmZADgkthnCARshpnHENfg76710656;     ydpxmZADgkthnCARshpnHENfg76710656 = ydpxmZADgkthnCARshpnHENfg26745637;     ydpxmZADgkthnCARshpnHENfg26745637 = ydpxmZADgkthnCARshpnHENfg30382342;     ydpxmZADgkthnCARshpnHENfg30382342 = ydpxmZADgkthnCARshpnHENfg57481987;     ydpxmZADgkthnCARshpnHENfg57481987 = ydpxmZADgkthnCARshpnHENfg9676030;     ydpxmZADgkthnCARshpnHENfg9676030 = ydpxmZADgkthnCARshpnHENfg35533538;     ydpxmZADgkthnCARshpnHENfg35533538 = ydpxmZADgkthnCARshpnHENfg63668958;     ydpxmZADgkthnCARshpnHENfg63668958 = ydpxmZADgkthnCARshpnHENfg9443325;     ydpxmZADgkthnCARshpnHENfg9443325 = ydpxmZADgkthnCARshpnHENfg48650670;     ydpxmZADgkthnCARshpnHENfg48650670 = ydpxmZADgkthnCARshpnHENfg12340561;     ydpxmZADgkthnCARshpnHENfg12340561 = ydpxmZADgkthnCARshpnHENfg93790146;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ImBwHkjZgIRDCysVbbtucJTHZMCMFPRuIsguvHuXNkvJeURHKOuwiRJyS5900815() {     long tXvhWTQqWvKSyaThWgsNKdEuu29249115 = -529511524;    long tXvhWTQqWvKSyaThWgsNKdEuu14183289 = -98265313;    long tXvhWTQqWvKSyaThWgsNKdEuu61786749 = -41462042;    long tXvhWTQqWvKSyaThWgsNKdEuu49736272 = -992269777;    long tXvhWTQqWvKSyaThWgsNKdEuu45658841 = -808003603;    long tXvhWTQqWvKSyaThWgsNKdEuu60746473 = -982071990;    long tXvhWTQqWvKSyaThWgsNKdEuu95540332 = -240336990;    long tXvhWTQqWvKSyaThWgsNKdEuu3873872 = -869186096;    long tXvhWTQqWvKSyaThWgsNKdEuu61680495 = -501649168;    long tXvhWTQqWvKSyaThWgsNKdEuu47920640 = -338807605;    long tXvhWTQqWvKSyaThWgsNKdEuu19554021 = -754737848;    long tXvhWTQqWvKSyaThWgsNKdEuu77100817 = -436973994;    long tXvhWTQqWvKSyaThWgsNKdEuu18955600 = 13230350;    long tXvhWTQqWvKSyaThWgsNKdEuu96044139 = -8486629;    long tXvhWTQqWvKSyaThWgsNKdEuu4821242 = -823456003;    long tXvhWTQqWvKSyaThWgsNKdEuu69586178 = -429718304;    long tXvhWTQqWvKSyaThWgsNKdEuu46296390 = -529687543;    long tXvhWTQqWvKSyaThWgsNKdEuu21678468 = -165392862;    long tXvhWTQqWvKSyaThWgsNKdEuu94803534 = -957555084;    long tXvhWTQqWvKSyaThWgsNKdEuu22293988 = 80031747;    long tXvhWTQqWvKSyaThWgsNKdEuu50174412 = -578083401;    long tXvhWTQqWvKSyaThWgsNKdEuu25259347 = -371860870;    long tXvhWTQqWvKSyaThWgsNKdEuu46931312 = -124004859;    long tXvhWTQqWvKSyaThWgsNKdEuu53086181 = -336790576;    long tXvhWTQqWvKSyaThWgsNKdEuu3294269 = -268283730;    long tXvhWTQqWvKSyaThWgsNKdEuu66508913 = 53335428;    long tXvhWTQqWvKSyaThWgsNKdEuu61107783 = -284233262;    long tXvhWTQqWvKSyaThWgsNKdEuu52765932 = -362465975;    long tXvhWTQqWvKSyaThWgsNKdEuu86888200 = 87617476;    long tXvhWTQqWvKSyaThWgsNKdEuu20956866 = -104520143;    long tXvhWTQqWvKSyaThWgsNKdEuu9519650 = -361480090;    long tXvhWTQqWvKSyaThWgsNKdEuu95054859 = -132642301;    long tXvhWTQqWvKSyaThWgsNKdEuu72882652 = -740342063;    long tXvhWTQqWvKSyaThWgsNKdEuu97523040 = -949505433;    long tXvhWTQqWvKSyaThWgsNKdEuu69871070 = -851139812;    long tXvhWTQqWvKSyaThWgsNKdEuu52776779 = -107629485;    long tXvhWTQqWvKSyaThWgsNKdEuu41264490 = -332794062;    long tXvhWTQqWvKSyaThWgsNKdEuu63834345 = 92475716;    long tXvhWTQqWvKSyaThWgsNKdEuu21435379 = -739761159;    long tXvhWTQqWvKSyaThWgsNKdEuu97783954 = -612413000;    long tXvhWTQqWvKSyaThWgsNKdEuu41830564 = -217283863;    long tXvhWTQqWvKSyaThWgsNKdEuu54556409 = -183239733;    long tXvhWTQqWvKSyaThWgsNKdEuu43566139 = -980090151;    long tXvhWTQqWvKSyaThWgsNKdEuu30863518 = -101429382;    long tXvhWTQqWvKSyaThWgsNKdEuu36497464 = -520567823;    long tXvhWTQqWvKSyaThWgsNKdEuu46989844 = -622253187;    long tXvhWTQqWvKSyaThWgsNKdEuu3408441 = -555027209;    long tXvhWTQqWvKSyaThWgsNKdEuu13312883 = -700197614;    long tXvhWTQqWvKSyaThWgsNKdEuu52747210 = -711404038;    long tXvhWTQqWvKSyaThWgsNKdEuu45775906 = -490683790;    long tXvhWTQqWvKSyaThWgsNKdEuu84091864 = -380694656;    long tXvhWTQqWvKSyaThWgsNKdEuu69303363 = -321329015;    long tXvhWTQqWvKSyaThWgsNKdEuu8911754 = 88822679;    long tXvhWTQqWvKSyaThWgsNKdEuu25768045 = 37056052;    long tXvhWTQqWvKSyaThWgsNKdEuu55726403 = -189935272;    long tXvhWTQqWvKSyaThWgsNKdEuu3989768 = -57650654;    long tXvhWTQqWvKSyaThWgsNKdEuu67251977 = -974260454;    long tXvhWTQqWvKSyaThWgsNKdEuu8700568 = -704671467;    long tXvhWTQqWvKSyaThWgsNKdEuu46442003 = -623986047;    long tXvhWTQqWvKSyaThWgsNKdEuu79149927 = -761339032;    long tXvhWTQqWvKSyaThWgsNKdEuu99638690 = -597838728;    long tXvhWTQqWvKSyaThWgsNKdEuu42774400 = -877871015;    long tXvhWTQqWvKSyaThWgsNKdEuu16985671 = -856803573;    long tXvhWTQqWvKSyaThWgsNKdEuu40723630 = -297129026;    long tXvhWTQqWvKSyaThWgsNKdEuu38400991 = -977327516;    long tXvhWTQqWvKSyaThWgsNKdEuu24499161 = -522095548;    long tXvhWTQqWvKSyaThWgsNKdEuu4218165 = -696631931;    long tXvhWTQqWvKSyaThWgsNKdEuu21432560 = -37264218;    long tXvhWTQqWvKSyaThWgsNKdEuu26173069 = -157346818;    long tXvhWTQqWvKSyaThWgsNKdEuu52044463 = -615826519;    long tXvhWTQqWvKSyaThWgsNKdEuu28321688 = 3075757;    long tXvhWTQqWvKSyaThWgsNKdEuu82462045 = -522163259;    long tXvhWTQqWvKSyaThWgsNKdEuu243090 = -425631704;    long tXvhWTQqWvKSyaThWgsNKdEuu97019580 = -245142085;    long tXvhWTQqWvKSyaThWgsNKdEuu80463423 = -702684390;    long tXvhWTQqWvKSyaThWgsNKdEuu95618003 = -294843668;    long tXvhWTQqWvKSyaThWgsNKdEuu81693208 = -391770720;    long tXvhWTQqWvKSyaThWgsNKdEuu16067795 = 77424522;    long tXvhWTQqWvKSyaThWgsNKdEuu16588718 = -816222753;    long tXvhWTQqWvKSyaThWgsNKdEuu56304424 = -646030543;    long tXvhWTQqWvKSyaThWgsNKdEuu63100473 = -391637363;    long tXvhWTQqWvKSyaThWgsNKdEuu47794900 = -584035649;    long tXvhWTQqWvKSyaThWgsNKdEuu18722 = -651061938;    long tXvhWTQqWvKSyaThWgsNKdEuu41112295 = -421698734;    long tXvhWTQqWvKSyaThWgsNKdEuu36865001 = -723825488;    long tXvhWTQqWvKSyaThWgsNKdEuu40216286 = 59848924;    long tXvhWTQqWvKSyaThWgsNKdEuu86143106 = -121464980;    long tXvhWTQqWvKSyaThWgsNKdEuu47114607 = -677398116;    long tXvhWTQqWvKSyaThWgsNKdEuu41796638 = -659570161;    long tXvhWTQqWvKSyaThWgsNKdEuu65881303 = -693489158;    long tXvhWTQqWvKSyaThWgsNKdEuu85524802 = -133369031;    long tXvhWTQqWvKSyaThWgsNKdEuu32563922 = -628122596;    long tXvhWTQqWvKSyaThWgsNKdEuu17392342 = -283538237;    long tXvhWTQqWvKSyaThWgsNKdEuu42285451 = -978422127;    long tXvhWTQqWvKSyaThWgsNKdEuu98145264 = 85425728;    long tXvhWTQqWvKSyaThWgsNKdEuu99056163 = -339412849;    long tXvhWTQqWvKSyaThWgsNKdEuu37570739 = -326436161;    long tXvhWTQqWvKSyaThWgsNKdEuu2842509 = -582961126;    long tXvhWTQqWvKSyaThWgsNKdEuu92462527 = -124101867;    long tXvhWTQqWvKSyaThWgsNKdEuu11998303 = -529511524;     tXvhWTQqWvKSyaThWgsNKdEuu29249115 = tXvhWTQqWvKSyaThWgsNKdEuu14183289;     tXvhWTQqWvKSyaThWgsNKdEuu14183289 = tXvhWTQqWvKSyaThWgsNKdEuu61786749;     tXvhWTQqWvKSyaThWgsNKdEuu61786749 = tXvhWTQqWvKSyaThWgsNKdEuu49736272;     tXvhWTQqWvKSyaThWgsNKdEuu49736272 = tXvhWTQqWvKSyaThWgsNKdEuu45658841;     tXvhWTQqWvKSyaThWgsNKdEuu45658841 = tXvhWTQqWvKSyaThWgsNKdEuu60746473;     tXvhWTQqWvKSyaThWgsNKdEuu60746473 = tXvhWTQqWvKSyaThWgsNKdEuu95540332;     tXvhWTQqWvKSyaThWgsNKdEuu95540332 = tXvhWTQqWvKSyaThWgsNKdEuu3873872;     tXvhWTQqWvKSyaThWgsNKdEuu3873872 = tXvhWTQqWvKSyaThWgsNKdEuu61680495;     tXvhWTQqWvKSyaThWgsNKdEuu61680495 = tXvhWTQqWvKSyaThWgsNKdEuu47920640;     tXvhWTQqWvKSyaThWgsNKdEuu47920640 = tXvhWTQqWvKSyaThWgsNKdEuu19554021;     tXvhWTQqWvKSyaThWgsNKdEuu19554021 = tXvhWTQqWvKSyaThWgsNKdEuu77100817;     tXvhWTQqWvKSyaThWgsNKdEuu77100817 = tXvhWTQqWvKSyaThWgsNKdEuu18955600;     tXvhWTQqWvKSyaThWgsNKdEuu18955600 = tXvhWTQqWvKSyaThWgsNKdEuu96044139;     tXvhWTQqWvKSyaThWgsNKdEuu96044139 = tXvhWTQqWvKSyaThWgsNKdEuu4821242;     tXvhWTQqWvKSyaThWgsNKdEuu4821242 = tXvhWTQqWvKSyaThWgsNKdEuu69586178;     tXvhWTQqWvKSyaThWgsNKdEuu69586178 = tXvhWTQqWvKSyaThWgsNKdEuu46296390;     tXvhWTQqWvKSyaThWgsNKdEuu46296390 = tXvhWTQqWvKSyaThWgsNKdEuu21678468;     tXvhWTQqWvKSyaThWgsNKdEuu21678468 = tXvhWTQqWvKSyaThWgsNKdEuu94803534;     tXvhWTQqWvKSyaThWgsNKdEuu94803534 = tXvhWTQqWvKSyaThWgsNKdEuu22293988;     tXvhWTQqWvKSyaThWgsNKdEuu22293988 = tXvhWTQqWvKSyaThWgsNKdEuu50174412;     tXvhWTQqWvKSyaThWgsNKdEuu50174412 = tXvhWTQqWvKSyaThWgsNKdEuu25259347;     tXvhWTQqWvKSyaThWgsNKdEuu25259347 = tXvhWTQqWvKSyaThWgsNKdEuu46931312;     tXvhWTQqWvKSyaThWgsNKdEuu46931312 = tXvhWTQqWvKSyaThWgsNKdEuu53086181;     tXvhWTQqWvKSyaThWgsNKdEuu53086181 = tXvhWTQqWvKSyaThWgsNKdEuu3294269;     tXvhWTQqWvKSyaThWgsNKdEuu3294269 = tXvhWTQqWvKSyaThWgsNKdEuu66508913;     tXvhWTQqWvKSyaThWgsNKdEuu66508913 = tXvhWTQqWvKSyaThWgsNKdEuu61107783;     tXvhWTQqWvKSyaThWgsNKdEuu61107783 = tXvhWTQqWvKSyaThWgsNKdEuu52765932;     tXvhWTQqWvKSyaThWgsNKdEuu52765932 = tXvhWTQqWvKSyaThWgsNKdEuu86888200;     tXvhWTQqWvKSyaThWgsNKdEuu86888200 = tXvhWTQqWvKSyaThWgsNKdEuu20956866;     tXvhWTQqWvKSyaThWgsNKdEuu20956866 = tXvhWTQqWvKSyaThWgsNKdEuu9519650;     tXvhWTQqWvKSyaThWgsNKdEuu9519650 = tXvhWTQqWvKSyaThWgsNKdEuu95054859;     tXvhWTQqWvKSyaThWgsNKdEuu95054859 = tXvhWTQqWvKSyaThWgsNKdEuu72882652;     tXvhWTQqWvKSyaThWgsNKdEuu72882652 = tXvhWTQqWvKSyaThWgsNKdEuu97523040;     tXvhWTQqWvKSyaThWgsNKdEuu97523040 = tXvhWTQqWvKSyaThWgsNKdEuu69871070;     tXvhWTQqWvKSyaThWgsNKdEuu69871070 = tXvhWTQqWvKSyaThWgsNKdEuu52776779;     tXvhWTQqWvKSyaThWgsNKdEuu52776779 = tXvhWTQqWvKSyaThWgsNKdEuu41264490;     tXvhWTQqWvKSyaThWgsNKdEuu41264490 = tXvhWTQqWvKSyaThWgsNKdEuu63834345;     tXvhWTQqWvKSyaThWgsNKdEuu63834345 = tXvhWTQqWvKSyaThWgsNKdEuu21435379;     tXvhWTQqWvKSyaThWgsNKdEuu21435379 = tXvhWTQqWvKSyaThWgsNKdEuu97783954;     tXvhWTQqWvKSyaThWgsNKdEuu97783954 = tXvhWTQqWvKSyaThWgsNKdEuu41830564;     tXvhWTQqWvKSyaThWgsNKdEuu41830564 = tXvhWTQqWvKSyaThWgsNKdEuu54556409;     tXvhWTQqWvKSyaThWgsNKdEuu54556409 = tXvhWTQqWvKSyaThWgsNKdEuu43566139;     tXvhWTQqWvKSyaThWgsNKdEuu43566139 = tXvhWTQqWvKSyaThWgsNKdEuu30863518;     tXvhWTQqWvKSyaThWgsNKdEuu30863518 = tXvhWTQqWvKSyaThWgsNKdEuu36497464;     tXvhWTQqWvKSyaThWgsNKdEuu36497464 = tXvhWTQqWvKSyaThWgsNKdEuu46989844;     tXvhWTQqWvKSyaThWgsNKdEuu46989844 = tXvhWTQqWvKSyaThWgsNKdEuu3408441;     tXvhWTQqWvKSyaThWgsNKdEuu3408441 = tXvhWTQqWvKSyaThWgsNKdEuu13312883;     tXvhWTQqWvKSyaThWgsNKdEuu13312883 = tXvhWTQqWvKSyaThWgsNKdEuu52747210;     tXvhWTQqWvKSyaThWgsNKdEuu52747210 = tXvhWTQqWvKSyaThWgsNKdEuu45775906;     tXvhWTQqWvKSyaThWgsNKdEuu45775906 = tXvhWTQqWvKSyaThWgsNKdEuu84091864;     tXvhWTQqWvKSyaThWgsNKdEuu84091864 = tXvhWTQqWvKSyaThWgsNKdEuu69303363;     tXvhWTQqWvKSyaThWgsNKdEuu69303363 = tXvhWTQqWvKSyaThWgsNKdEuu8911754;     tXvhWTQqWvKSyaThWgsNKdEuu8911754 = tXvhWTQqWvKSyaThWgsNKdEuu25768045;     tXvhWTQqWvKSyaThWgsNKdEuu25768045 = tXvhWTQqWvKSyaThWgsNKdEuu55726403;     tXvhWTQqWvKSyaThWgsNKdEuu55726403 = tXvhWTQqWvKSyaThWgsNKdEuu3989768;     tXvhWTQqWvKSyaThWgsNKdEuu3989768 = tXvhWTQqWvKSyaThWgsNKdEuu67251977;     tXvhWTQqWvKSyaThWgsNKdEuu67251977 = tXvhWTQqWvKSyaThWgsNKdEuu8700568;     tXvhWTQqWvKSyaThWgsNKdEuu8700568 = tXvhWTQqWvKSyaThWgsNKdEuu46442003;     tXvhWTQqWvKSyaThWgsNKdEuu46442003 = tXvhWTQqWvKSyaThWgsNKdEuu79149927;     tXvhWTQqWvKSyaThWgsNKdEuu79149927 = tXvhWTQqWvKSyaThWgsNKdEuu99638690;     tXvhWTQqWvKSyaThWgsNKdEuu99638690 = tXvhWTQqWvKSyaThWgsNKdEuu42774400;     tXvhWTQqWvKSyaThWgsNKdEuu42774400 = tXvhWTQqWvKSyaThWgsNKdEuu16985671;     tXvhWTQqWvKSyaThWgsNKdEuu16985671 = tXvhWTQqWvKSyaThWgsNKdEuu40723630;     tXvhWTQqWvKSyaThWgsNKdEuu40723630 = tXvhWTQqWvKSyaThWgsNKdEuu38400991;     tXvhWTQqWvKSyaThWgsNKdEuu38400991 = tXvhWTQqWvKSyaThWgsNKdEuu24499161;     tXvhWTQqWvKSyaThWgsNKdEuu24499161 = tXvhWTQqWvKSyaThWgsNKdEuu4218165;     tXvhWTQqWvKSyaThWgsNKdEuu4218165 = tXvhWTQqWvKSyaThWgsNKdEuu21432560;     tXvhWTQqWvKSyaThWgsNKdEuu21432560 = tXvhWTQqWvKSyaThWgsNKdEuu26173069;     tXvhWTQqWvKSyaThWgsNKdEuu26173069 = tXvhWTQqWvKSyaThWgsNKdEuu52044463;     tXvhWTQqWvKSyaThWgsNKdEuu52044463 = tXvhWTQqWvKSyaThWgsNKdEuu28321688;     tXvhWTQqWvKSyaThWgsNKdEuu28321688 = tXvhWTQqWvKSyaThWgsNKdEuu82462045;     tXvhWTQqWvKSyaThWgsNKdEuu82462045 = tXvhWTQqWvKSyaThWgsNKdEuu243090;     tXvhWTQqWvKSyaThWgsNKdEuu243090 = tXvhWTQqWvKSyaThWgsNKdEuu97019580;     tXvhWTQqWvKSyaThWgsNKdEuu97019580 = tXvhWTQqWvKSyaThWgsNKdEuu80463423;     tXvhWTQqWvKSyaThWgsNKdEuu80463423 = tXvhWTQqWvKSyaThWgsNKdEuu95618003;     tXvhWTQqWvKSyaThWgsNKdEuu95618003 = tXvhWTQqWvKSyaThWgsNKdEuu81693208;     tXvhWTQqWvKSyaThWgsNKdEuu81693208 = tXvhWTQqWvKSyaThWgsNKdEuu16067795;     tXvhWTQqWvKSyaThWgsNKdEuu16067795 = tXvhWTQqWvKSyaThWgsNKdEuu16588718;     tXvhWTQqWvKSyaThWgsNKdEuu16588718 = tXvhWTQqWvKSyaThWgsNKdEuu56304424;     tXvhWTQqWvKSyaThWgsNKdEuu56304424 = tXvhWTQqWvKSyaThWgsNKdEuu63100473;     tXvhWTQqWvKSyaThWgsNKdEuu63100473 = tXvhWTQqWvKSyaThWgsNKdEuu47794900;     tXvhWTQqWvKSyaThWgsNKdEuu47794900 = tXvhWTQqWvKSyaThWgsNKdEuu18722;     tXvhWTQqWvKSyaThWgsNKdEuu18722 = tXvhWTQqWvKSyaThWgsNKdEuu41112295;     tXvhWTQqWvKSyaThWgsNKdEuu41112295 = tXvhWTQqWvKSyaThWgsNKdEuu36865001;     tXvhWTQqWvKSyaThWgsNKdEuu36865001 = tXvhWTQqWvKSyaThWgsNKdEuu40216286;     tXvhWTQqWvKSyaThWgsNKdEuu40216286 = tXvhWTQqWvKSyaThWgsNKdEuu86143106;     tXvhWTQqWvKSyaThWgsNKdEuu86143106 = tXvhWTQqWvKSyaThWgsNKdEuu47114607;     tXvhWTQqWvKSyaThWgsNKdEuu47114607 = tXvhWTQqWvKSyaThWgsNKdEuu41796638;     tXvhWTQqWvKSyaThWgsNKdEuu41796638 = tXvhWTQqWvKSyaThWgsNKdEuu65881303;     tXvhWTQqWvKSyaThWgsNKdEuu65881303 = tXvhWTQqWvKSyaThWgsNKdEuu85524802;     tXvhWTQqWvKSyaThWgsNKdEuu85524802 = tXvhWTQqWvKSyaThWgsNKdEuu32563922;     tXvhWTQqWvKSyaThWgsNKdEuu32563922 = tXvhWTQqWvKSyaThWgsNKdEuu17392342;     tXvhWTQqWvKSyaThWgsNKdEuu17392342 = tXvhWTQqWvKSyaThWgsNKdEuu42285451;     tXvhWTQqWvKSyaThWgsNKdEuu42285451 = tXvhWTQqWvKSyaThWgsNKdEuu98145264;     tXvhWTQqWvKSyaThWgsNKdEuu98145264 = tXvhWTQqWvKSyaThWgsNKdEuu99056163;     tXvhWTQqWvKSyaThWgsNKdEuu99056163 = tXvhWTQqWvKSyaThWgsNKdEuu37570739;     tXvhWTQqWvKSyaThWgsNKdEuu37570739 = tXvhWTQqWvKSyaThWgsNKdEuu2842509;     tXvhWTQqWvKSyaThWgsNKdEuu2842509 = tXvhWTQqWvKSyaThWgsNKdEuu92462527;     tXvhWTQqWvKSyaThWgsNKdEuu92462527 = tXvhWTQqWvKSyaThWgsNKdEuu11998303;     tXvhWTQqWvKSyaThWgsNKdEuu11998303 = tXvhWTQqWvKSyaThWgsNKdEuu29249115;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void vduheCMQersiyVjsCTUOfnaSFRksloqJEVuunYCOWfEJSBtqnMNCRNFHD20949883() {     long bbMRTeqBjddbpFeQFsziQzDYu35366222 = -641413413;    long bbMRTeqBjddbpFeQFsziQzDYu57556568 = -907865093;    long bbMRTeqBjddbpFeQFsziQzDYu77828933 = -192294963;    long bbMRTeqBjddbpFeQFsziQzDYu76811052 = -83018407;    long bbMRTeqBjddbpFeQFsziQzDYu14554330 = -228653474;    long bbMRTeqBjddbpFeQFsziQzDYu52163675 = -146568225;    long bbMRTeqBjddbpFeQFsziQzDYu56029298 = -379301967;    long bbMRTeqBjddbpFeQFsziQzDYu53633762 = -56060009;    long bbMRTeqBjddbpFeQFsziQzDYu26322991 = -269681834;    long bbMRTeqBjddbpFeQFsziQzDYu89150299 = -667783083;    long bbMRTeqBjddbpFeQFsziQzDYu79664311 = -632175435;    long bbMRTeqBjddbpFeQFsziQzDYu8923860 = -881380195;    long bbMRTeqBjddbpFeQFsziQzDYu5164719 = -426660739;    long bbMRTeqBjddbpFeQFsziQzDYu79187816 = -540725197;    long bbMRTeqBjddbpFeQFsziQzDYu563669 = -413918169;    long bbMRTeqBjddbpFeQFsziQzDYu11091572 = -402717848;    long bbMRTeqBjddbpFeQFsziQzDYu40132393 = -46232655;    long bbMRTeqBjddbpFeQFsziQzDYu18731621 = -930915505;    long bbMRTeqBjddbpFeQFsziQzDYu56633376 = -263324181;    long bbMRTeqBjddbpFeQFsziQzDYu2844153 = -276871172;    long bbMRTeqBjddbpFeQFsziQzDYu38727606 = -433570857;    long bbMRTeqBjddbpFeQFsziQzDYu11780371 = -279790586;    long bbMRTeqBjddbpFeQFsziQzDYu82522104 = -970522346;    long bbMRTeqBjddbpFeQFsziQzDYu37078555 = -559095564;    long bbMRTeqBjddbpFeQFsziQzDYu46993919 = -641479763;    long bbMRTeqBjddbpFeQFsziQzDYu91230588 = -925319895;    long bbMRTeqBjddbpFeQFsziQzDYu59567561 = -184895465;    long bbMRTeqBjddbpFeQFsziQzDYu65873057 = -428394929;    long bbMRTeqBjddbpFeQFsziQzDYu53020456 = -134765228;    long bbMRTeqBjddbpFeQFsziQzDYu89572502 = 78008990;    long bbMRTeqBjddbpFeQFsziQzDYu1762199 = -274801028;    long bbMRTeqBjddbpFeQFsziQzDYu92665481 = -942089116;    long bbMRTeqBjddbpFeQFsziQzDYu82593600 = -632955434;    long bbMRTeqBjddbpFeQFsziQzDYu92353604 = -701047198;    long bbMRTeqBjddbpFeQFsziQzDYu31345723 = -389872917;    long bbMRTeqBjddbpFeQFsziQzDYu21502692 = -321655592;    long bbMRTeqBjddbpFeQFsziQzDYu22526425 = -286429932;    long bbMRTeqBjddbpFeQFsziQzDYu97924557 = -779030294;    long bbMRTeqBjddbpFeQFsziQzDYu95045632 = -733684655;    long bbMRTeqBjddbpFeQFsziQzDYu85285892 = 14147778;    long bbMRTeqBjddbpFeQFsziQzDYu47499788 = -282557757;    long bbMRTeqBjddbpFeQFsziQzDYu86706866 = -453382011;    long bbMRTeqBjddbpFeQFsziQzDYu21633117 = 39105265;    long bbMRTeqBjddbpFeQFsziQzDYu18271259 = -120772320;    long bbMRTeqBjddbpFeQFsziQzDYu48449929 = -182465977;    long bbMRTeqBjddbpFeQFsziQzDYu58929039 = -607469303;    long bbMRTeqBjddbpFeQFsziQzDYu21187015 = -673802747;    long bbMRTeqBjddbpFeQFsziQzDYu21269824 = -710093146;    long bbMRTeqBjddbpFeQFsziQzDYu62422939 = -797141026;    long bbMRTeqBjddbpFeQFsziQzDYu58687559 = -577694598;    long bbMRTeqBjddbpFeQFsziQzDYu19792543 = -222988327;    long bbMRTeqBjddbpFeQFsziQzDYu80113082 = -122055335;    long bbMRTeqBjddbpFeQFsziQzDYu57160211 = -802966909;    long bbMRTeqBjddbpFeQFsziQzDYu21736925 = -283414093;    long bbMRTeqBjddbpFeQFsziQzDYu82222277 = -890467054;    long bbMRTeqBjddbpFeQFsziQzDYu23585851 = -261622827;    long bbMRTeqBjddbpFeQFsziQzDYu75034464 = -937342748;    long bbMRTeqBjddbpFeQFsziQzDYu40750378 = -633199400;    long bbMRTeqBjddbpFeQFsziQzDYu29817134 = -441538645;    long bbMRTeqBjddbpFeQFsziQzDYu23323741 = -303333580;    long bbMRTeqBjddbpFeQFsziQzDYu92596114 = -961672760;    long bbMRTeqBjddbpFeQFsziQzDYu90156240 = -950907038;    long bbMRTeqBjddbpFeQFsziQzDYu613307 = -921294782;    long bbMRTeqBjddbpFeQFsziQzDYu36750489 = -247690824;    long bbMRTeqBjddbpFeQFsziQzDYu87388100 = -292982055;    long bbMRTeqBjddbpFeQFsziQzDYu86998829 = -690086319;    long bbMRTeqBjddbpFeQFsziQzDYu26330259 = -148424762;    long bbMRTeqBjddbpFeQFsziQzDYu12811114 = -725613541;    long bbMRTeqBjddbpFeQFsziQzDYu47842093 = -50852280;    long bbMRTeqBjddbpFeQFsziQzDYu79060976 = 7737423;    long bbMRTeqBjddbpFeQFsziQzDYu88565147 = -16287916;    long bbMRTeqBjddbpFeQFsziQzDYu42207836 = -267202362;    long bbMRTeqBjddbpFeQFsziQzDYu23685989 = -97230850;    long bbMRTeqBjddbpFeQFsziQzDYu71347484 = -177471959;    long bbMRTeqBjddbpFeQFsziQzDYu55344364 = -994313416;    long bbMRTeqBjddbpFeQFsziQzDYu52020739 = -980188846;    long bbMRTeqBjddbpFeQFsziQzDYu90147254 = -218895852;    long bbMRTeqBjddbpFeQFsziQzDYu64250846 = -749750026;    long bbMRTeqBjddbpFeQFsziQzDYu88628626 = -276629587;    long bbMRTeqBjddbpFeQFsziQzDYu88064879 = 65989540;    long bbMRTeqBjddbpFeQFsziQzDYu70043574 = -151517149;    long bbMRTeqBjddbpFeQFsziQzDYu38297737 = -474802319;    long bbMRTeqBjddbpFeQFsziQzDYu3450119 = -631253903;    long bbMRTeqBjddbpFeQFsziQzDYu94332897 = -557070630;    long bbMRTeqBjddbpFeQFsziQzDYu69779959 = -699002684;    long bbMRTeqBjddbpFeQFsziQzDYu21649116 = -52745694;    long bbMRTeqBjddbpFeQFsziQzDYu35505271 = -39122208;    long bbMRTeqBjddbpFeQFsziQzDYu60856676 = -249541341;    long bbMRTeqBjddbpFeQFsziQzDYu10131328 = -810580144;    long bbMRTeqBjddbpFeQFsziQzDYu7759872 = -28250091;    long bbMRTeqBjddbpFeQFsziQzDYu46468228 = -384312845;    long bbMRTeqBjddbpFeQFsziQzDYu81776047 = -653230532;    long bbMRTeqBjddbpFeQFsziQzDYu68107423 = -237491650;    long bbMRTeqBjddbpFeQFsziQzDYu71721891 = -330351076;    long bbMRTeqBjddbpFeQFsziQzDYu92689777 = -24179463;    long bbMRTeqBjddbpFeQFsziQzDYu57343547 = -331650719;    long bbMRTeqBjddbpFeQFsziQzDYu86093560 = -532087230;    long bbMRTeqBjddbpFeQFsziQzDYu84882628 = -713203912;    long bbMRTeqBjddbpFeQFsziQzDYu30883158 = -827790265;    long bbMRTeqBjddbpFeQFsziQzDYu61451099 = -641413413;     bbMRTeqBjddbpFeQFsziQzDYu35366222 = bbMRTeqBjddbpFeQFsziQzDYu57556568;     bbMRTeqBjddbpFeQFsziQzDYu57556568 = bbMRTeqBjddbpFeQFsziQzDYu77828933;     bbMRTeqBjddbpFeQFsziQzDYu77828933 = bbMRTeqBjddbpFeQFsziQzDYu76811052;     bbMRTeqBjddbpFeQFsziQzDYu76811052 = bbMRTeqBjddbpFeQFsziQzDYu14554330;     bbMRTeqBjddbpFeQFsziQzDYu14554330 = bbMRTeqBjddbpFeQFsziQzDYu52163675;     bbMRTeqBjddbpFeQFsziQzDYu52163675 = bbMRTeqBjddbpFeQFsziQzDYu56029298;     bbMRTeqBjddbpFeQFsziQzDYu56029298 = bbMRTeqBjddbpFeQFsziQzDYu53633762;     bbMRTeqBjddbpFeQFsziQzDYu53633762 = bbMRTeqBjddbpFeQFsziQzDYu26322991;     bbMRTeqBjddbpFeQFsziQzDYu26322991 = bbMRTeqBjddbpFeQFsziQzDYu89150299;     bbMRTeqBjddbpFeQFsziQzDYu89150299 = bbMRTeqBjddbpFeQFsziQzDYu79664311;     bbMRTeqBjddbpFeQFsziQzDYu79664311 = bbMRTeqBjddbpFeQFsziQzDYu8923860;     bbMRTeqBjddbpFeQFsziQzDYu8923860 = bbMRTeqBjddbpFeQFsziQzDYu5164719;     bbMRTeqBjddbpFeQFsziQzDYu5164719 = bbMRTeqBjddbpFeQFsziQzDYu79187816;     bbMRTeqBjddbpFeQFsziQzDYu79187816 = bbMRTeqBjddbpFeQFsziQzDYu563669;     bbMRTeqBjddbpFeQFsziQzDYu563669 = bbMRTeqBjddbpFeQFsziQzDYu11091572;     bbMRTeqBjddbpFeQFsziQzDYu11091572 = bbMRTeqBjddbpFeQFsziQzDYu40132393;     bbMRTeqBjddbpFeQFsziQzDYu40132393 = bbMRTeqBjddbpFeQFsziQzDYu18731621;     bbMRTeqBjddbpFeQFsziQzDYu18731621 = bbMRTeqBjddbpFeQFsziQzDYu56633376;     bbMRTeqBjddbpFeQFsziQzDYu56633376 = bbMRTeqBjddbpFeQFsziQzDYu2844153;     bbMRTeqBjddbpFeQFsziQzDYu2844153 = bbMRTeqBjddbpFeQFsziQzDYu38727606;     bbMRTeqBjddbpFeQFsziQzDYu38727606 = bbMRTeqBjddbpFeQFsziQzDYu11780371;     bbMRTeqBjddbpFeQFsziQzDYu11780371 = bbMRTeqBjddbpFeQFsziQzDYu82522104;     bbMRTeqBjddbpFeQFsziQzDYu82522104 = bbMRTeqBjddbpFeQFsziQzDYu37078555;     bbMRTeqBjddbpFeQFsziQzDYu37078555 = bbMRTeqBjddbpFeQFsziQzDYu46993919;     bbMRTeqBjddbpFeQFsziQzDYu46993919 = bbMRTeqBjddbpFeQFsziQzDYu91230588;     bbMRTeqBjddbpFeQFsziQzDYu91230588 = bbMRTeqBjddbpFeQFsziQzDYu59567561;     bbMRTeqBjddbpFeQFsziQzDYu59567561 = bbMRTeqBjddbpFeQFsziQzDYu65873057;     bbMRTeqBjddbpFeQFsziQzDYu65873057 = bbMRTeqBjddbpFeQFsziQzDYu53020456;     bbMRTeqBjddbpFeQFsziQzDYu53020456 = bbMRTeqBjddbpFeQFsziQzDYu89572502;     bbMRTeqBjddbpFeQFsziQzDYu89572502 = bbMRTeqBjddbpFeQFsziQzDYu1762199;     bbMRTeqBjddbpFeQFsziQzDYu1762199 = bbMRTeqBjddbpFeQFsziQzDYu92665481;     bbMRTeqBjddbpFeQFsziQzDYu92665481 = bbMRTeqBjddbpFeQFsziQzDYu82593600;     bbMRTeqBjddbpFeQFsziQzDYu82593600 = bbMRTeqBjddbpFeQFsziQzDYu92353604;     bbMRTeqBjddbpFeQFsziQzDYu92353604 = bbMRTeqBjddbpFeQFsziQzDYu31345723;     bbMRTeqBjddbpFeQFsziQzDYu31345723 = bbMRTeqBjddbpFeQFsziQzDYu21502692;     bbMRTeqBjddbpFeQFsziQzDYu21502692 = bbMRTeqBjddbpFeQFsziQzDYu22526425;     bbMRTeqBjddbpFeQFsziQzDYu22526425 = bbMRTeqBjddbpFeQFsziQzDYu97924557;     bbMRTeqBjddbpFeQFsziQzDYu97924557 = bbMRTeqBjddbpFeQFsziQzDYu95045632;     bbMRTeqBjddbpFeQFsziQzDYu95045632 = bbMRTeqBjddbpFeQFsziQzDYu85285892;     bbMRTeqBjddbpFeQFsziQzDYu85285892 = bbMRTeqBjddbpFeQFsziQzDYu47499788;     bbMRTeqBjddbpFeQFsziQzDYu47499788 = bbMRTeqBjddbpFeQFsziQzDYu86706866;     bbMRTeqBjddbpFeQFsziQzDYu86706866 = bbMRTeqBjddbpFeQFsziQzDYu21633117;     bbMRTeqBjddbpFeQFsziQzDYu21633117 = bbMRTeqBjddbpFeQFsziQzDYu18271259;     bbMRTeqBjddbpFeQFsziQzDYu18271259 = bbMRTeqBjddbpFeQFsziQzDYu48449929;     bbMRTeqBjddbpFeQFsziQzDYu48449929 = bbMRTeqBjddbpFeQFsziQzDYu58929039;     bbMRTeqBjddbpFeQFsziQzDYu58929039 = bbMRTeqBjddbpFeQFsziQzDYu21187015;     bbMRTeqBjddbpFeQFsziQzDYu21187015 = bbMRTeqBjddbpFeQFsziQzDYu21269824;     bbMRTeqBjddbpFeQFsziQzDYu21269824 = bbMRTeqBjddbpFeQFsziQzDYu62422939;     bbMRTeqBjddbpFeQFsziQzDYu62422939 = bbMRTeqBjddbpFeQFsziQzDYu58687559;     bbMRTeqBjddbpFeQFsziQzDYu58687559 = bbMRTeqBjddbpFeQFsziQzDYu19792543;     bbMRTeqBjddbpFeQFsziQzDYu19792543 = bbMRTeqBjddbpFeQFsziQzDYu80113082;     bbMRTeqBjddbpFeQFsziQzDYu80113082 = bbMRTeqBjddbpFeQFsziQzDYu57160211;     bbMRTeqBjddbpFeQFsziQzDYu57160211 = bbMRTeqBjddbpFeQFsziQzDYu21736925;     bbMRTeqBjddbpFeQFsziQzDYu21736925 = bbMRTeqBjddbpFeQFsziQzDYu82222277;     bbMRTeqBjddbpFeQFsziQzDYu82222277 = bbMRTeqBjddbpFeQFsziQzDYu23585851;     bbMRTeqBjddbpFeQFsziQzDYu23585851 = bbMRTeqBjddbpFeQFsziQzDYu75034464;     bbMRTeqBjddbpFeQFsziQzDYu75034464 = bbMRTeqBjddbpFeQFsziQzDYu40750378;     bbMRTeqBjddbpFeQFsziQzDYu40750378 = bbMRTeqBjddbpFeQFsziQzDYu29817134;     bbMRTeqBjddbpFeQFsziQzDYu29817134 = bbMRTeqBjddbpFeQFsziQzDYu23323741;     bbMRTeqBjddbpFeQFsziQzDYu23323741 = bbMRTeqBjddbpFeQFsziQzDYu92596114;     bbMRTeqBjddbpFeQFsziQzDYu92596114 = bbMRTeqBjddbpFeQFsziQzDYu90156240;     bbMRTeqBjddbpFeQFsziQzDYu90156240 = bbMRTeqBjddbpFeQFsziQzDYu613307;     bbMRTeqBjddbpFeQFsziQzDYu613307 = bbMRTeqBjddbpFeQFsziQzDYu36750489;     bbMRTeqBjddbpFeQFsziQzDYu36750489 = bbMRTeqBjddbpFeQFsziQzDYu87388100;     bbMRTeqBjddbpFeQFsziQzDYu87388100 = bbMRTeqBjddbpFeQFsziQzDYu86998829;     bbMRTeqBjddbpFeQFsziQzDYu86998829 = bbMRTeqBjddbpFeQFsziQzDYu26330259;     bbMRTeqBjddbpFeQFsziQzDYu26330259 = bbMRTeqBjddbpFeQFsziQzDYu12811114;     bbMRTeqBjddbpFeQFsziQzDYu12811114 = bbMRTeqBjddbpFeQFsziQzDYu47842093;     bbMRTeqBjddbpFeQFsziQzDYu47842093 = bbMRTeqBjddbpFeQFsziQzDYu79060976;     bbMRTeqBjddbpFeQFsziQzDYu79060976 = bbMRTeqBjddbpFeQFsziQzDYu88565147;     bbMRTeqBjddbpFeQFsziQzDYu88565147 = bbMRTeqBjddbpFeQFsziQzDYu42207836;     bbMRTeqBjddbpFeQFsziQzDYu42207836 = bbMRTeqBjddbpFeQFsziQzDYu23685989;     bbMRTeqBjddbpFeQFsziQzDYu23685989 = bbMRTeqBjddbpFeQFsziQzDYu71347484;     bbMRTeqBjddbpFeQFsziQzDYu71347484 = bbMRTeqBjddbpFeQFsziQzDYu55344364;     bbMRTeqBjddbpFeQFsziQzDYu55344364 = bbMRTeqBjddbpFeQFsziQzDYu52020739;     bbMRTeqBjddbpFeQFsziQzDYu52020739 = bbMRTeqBjddbpFeQFsziQzDYu90147254;     bbMRTeqBjddbpFeQFsziQzDYu90147254 = bbMRTeqBjddbpFeQFsziQzDYu64250846;     bbMRTeqBjddbpFeQFsziQzDYu64250846 = bbMRTeqBjddbpFeQFsziQzDYu88628626;     bbMRTeqBjddbpFeQFsziQzDYu88628626 = bbMRTeqBjddbpFeQFsziQzDYu88064879;     bbMRTeqBjddbpFeQFsziQzDYu88064879 = bbMRTeqBjddbpFeQFsziQzDYu70043574;     bbMRTeqBjddbpFeQFsziQzDYu70043574 = bbMRTeqBjddbpFeQFsziQzDYu38297737;     bbMRTeqBjddbpFeQFsziQzDYu38297737 = bbMRTeqBjddbpFeQFsziQzDYu3450119;     bbMRTeqBjddbpFeQFsziQzDYu3450119 = bbMRTeqBjddbpFeQFsziQzDYu94332897;     bbMRTeqBjddbpFeQFsziQzDYu94332897 = bbMRTeqBjddbpFeQFsziQzDYu69779959;     bbMRTeqBjddbpFeQFsziQzDYu69779959 = bbMRTeqBjddbpFeQFsziQzDYu21649116;     bbMRTeqBjddbpFeQFsziQzDYu21649116 = bbMRTeqBjddbpFeQFsziQzDYu35505271;     bbMRTeqBjddbpFeQFsziQzDYu35505271 = bbMRTeqBjddbpFeQFsziQzDYu60856676;     bbMRTeqBjddbpFeQFsziQzDYu60856676 = bbMRTeqBjddbpFeQFsziQzDYu10131328;     bbMRTeqBjddbpFeQFsziQzDYu10131328 = bbMRTeqBjddbpFeQFsziQzDYu7759872;     bbMRTeqBjddbpFeQFsziQzDYu7759872 = bbMRTeqBjddbpFeQFsziQzDYu46468228;     bbMRTeqBjddbpFeQFsziQzDYu46468228 = bbMRTeqBjddbpFeQFsziQzDYu81776047;     bbMRTeqBjddbpFeQFsziQzDYu81776047 = bbMRTeqBjddbpFeQFsziQzDYu68107423;     bbMRTeqBjddbpFeQFsziQzDYu68107423 = bbMRTeqBjddbpFeQFsziQzDYu71721891;     bbMRTeqBjddbpFeQFsziQzDYu71721891 = bbMRTeqBjddbpFeQFsziQzDYu92689777;     bbMRTeqBjddbpFeQFsziQzDYu92689777 = bbMRTeqBjddbpFeQFsziQzDYu57343547;     bbMRTeqBjddbpFeQFsziQzDYu57343547 = bbMRTeqBjddbpFeQFsziQzDYu86093560;     bbMRTeqBjddbpFeQFsziQzDYu86093560 = bbMRTeqBjddbpFeQFsziQzDYu84882628;     bbMRTeqBjddbpFeQFsziQzDYu84882628 = bbMRTeqBjddbpFeQFsziQzDYu30883158;     bbMRTeqBjddbpFeQFsziQzDYu30883158 = bbMRTeqBjddbpFeQFsziQzDYu61451099;     bbMRTeqBjddbpFeQFsziQzDYu61451099 = bbMRTeqBjddbpFeQFsziQzDYu35366222;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ZTOWvIbpImXuIfhfSTPnpstBWQUSJRYtBtOgBALNmKFFdpuVbmytVUAga88241482() {     long MzenIfqOetPQBdSHBAfnoXhWz70825190 = -7690312;    long MzenIfqOetPQBdSHBAfnoXhWz70828646 = -788416700;    long MzenIfqOetPQBdSHBAfnoXhWz15215410 = -957962038;    long MzenIfqOetPQBdSHBAfnoXhWz49034407 = 95830522;    long MzenIfqOetPQBdSHBAfnoXhWz70839598 = -334252320;    long MzenIfqOetPQBdSHBAfnoXhWz88386547 = -408916120;    long MzenIfqOetPQBdSHBAfnoXhWz66686704 = -224027701;    long MzenIfqOetPQBdSHBAfnoXhWz15765324 = -800294150;    long MzenIfqOetPQBdSHBAfnoXhWz27840596 = -758013241;    long MzenIfqOetPQBdSHBAfnoXhWz4053012 = -332470081;    long MzenIfqOetPQBdSHBAfnoXhWz17846046 = -434183164;    long MzenIfqOetPQBdSHBAfnoXhWz9492008 = -745500967;    long MzenIfqOetPQBdSHBAfnoXhWz43399364 = -978673244;    long MzenIfqOetPQBdSHBAfnoXhWz32328679 = -517088607;    long MzenIfqOetPQBdSHBAfnoXhWz58758184 = -917343184;    long MzenIfqOetPQBdSHBAfnoXhWz94632872 = -38529455;    long MzenIfqOetPQBdSHBAfnoXhWz95968329 = -573207208;    long MzenIfqOetPQBdSHBAfnoXhWz18491813 = 95656427;    long MzenIfqOetPQBdSHBAfnoXhWz57183706 = -579887603;    long MzenIfqOetPQBdSHBAfnoXhWz96681370 = -703432238;    long MzenIfqOetPQBdSHBAfnoXhWz51814468 = -90845545;    long MzenIfqOetPQBdSHBAfnoXhWz15201896 = -366426880;    long MzenIfqOetPQBdSHBAfnoXhWz53047484 = -608154530;    long MzenIfqOetPQBdSHBAfnoXhWz30871501 = 30079832;    long MzenIfqOetPQBdSHBAfnoXhWz55011870 = -665464961;    long MzenIfqOetPQBdSHBAfnoXhWz1928761 = -613896702;    long MzenIfqOetPQBdSHBAfnoXhWz19988135 = 8820394;    long MzenIfqOetPQBdSHBAfnoXhWz6601483 = -598167103;    long MzenIfqOetPQBdSHBAfnoXhWz99688670 = -708860031;    long MzenIfqOetPQBdSHBAfnoXhWz95105913 = 43501819;    long MzenIfqOetPQBdSHBAfnoXhWz20345431 = -826781515;    long MzenIfqOetPQBdSHBAfnoXhWz30488500 = -715060531;    long MzenIfqOetPQBdSHBAfnoXhWz94811611 = -780551411;    long MzenIfqOetPQBdSHBAfnoXhWz22102031 = -765741011;    long MzenIfqOetPQBdSHBAfnoXhWz97154176 = -340973168;    long MzenIfqOetPQBdSHBAfnoXhWz73063535 = -536220898;    long MzenIfqOetPQBdSHBAfnoXhWz71938241 = -151125972;    long MzenIfqOetPQBdSHBAfnoXhWz49139961 = -761685875;    long MzenIfqOetPQBdSHBAfnoXhWz25436194 = -384560932;    long MzenIfqOetPQBdSHBAfnoXhWz49557424 = -551114768;    long MzenIfqOetPQBdSHBAfnoXhWz80951395 = -51756672;    long MzenIfqOetPQBdSHBAfnoXhWz76071993 = -47927302;    long MzenIfqOetPQBdSHBAfnoXhWz11016495 = -614075521;    long MzenIfqOetPQBdSHBAfnoXhWz58402596 = -725104730;    long MzenIfqOetPQBdSHBAfnoXhWz48466387 = -8977139;    long MzenIfqOetPQBdSHBAfnoXhWz4890368 = -646392936;    long MzenIfqOetPQBdSHBAfnoXhWz40532178 = -57789107;    long MzenIfqOetPQBdSHBAfnoXhWz38996136 = -876619740;    long MzenIfqOetPQBdSHBAfnoXhWz85315605 = -460877907;    long MzenIfqOetPQBdSHBAfnoXhWz83217148 = 31278586;    long MzenIfqOetPQBdSHBAfnoXhWz563267 = -97264884;    long MzenIfqOetPQBdSHBAfnoXhWz63598555 = -335707682;    long MzenIfqOetPQBdSHBAfnoXhWz25781360 = -559012463;    long MzenIfqOetPQBdSHBAfnoXhWz37728772 = -474922593;    long MzenIfqOetPQBdSHBAfnoXhWz36427014 = -136957200;    long MzenIfqOetPQBdSHBAfnoXhWz55623295 = -641263432;    long MzenIfqOetPQBdSHBAfnoXhWz17781163 = -80262170;    long MzenIfqOetPQBdSHBAfnoXhWz84343909 = -888041871;    long MzenIfqOetPQBdSHBAfnoXhWz94022537 = -238704518;    long MzenIfqOetPQBdSHBAfnoXhWz68910838 = -720355619;    long MzenIfqOetPQBdSHBAfnoXhWz68398412 = -317736515;    long MzenIfqOetPQBdSHBAfnoXhWz60085222 = -625860598;    long MzenIfqOetPQBdSHBAfnoXhWz16076653 = 8565880;    long MzenIfqOetPQBdSHBAfnoXhWz32734683 = -701515060;    long MzenIfqOetPQBdSHBAfnoXhWz83707581 = -505688566;    long MzenIfqOetPQBdSHBAfnoXhWz87357545 = -719122634;    long MzenIfqOetPQBdSHBAfnoXhWz14680397 = -964949556;    long MzenIfqOetPQBdSHBAfnoXhWz21297333 = -112932233;    long MzenIfqOetPQBdSHBAfnoXhWz35174503 = -76115439;    long MzenIfqOetPQBdSHBAfnoXhWz85694649 = -281122287;    long MzenIfqOetPQBdSHBAfnoXhWz22694632 = -887403483;    long MzenIfqOetPQBdSHBAfnoXhWz46828368 = -811521334;    long MzenIfqOetPQBdSHBAfnoXhWz93055618 = -519782642;    long MzenIfqOetPQBdSHBAfnoXhWz7626282 = 71227165;    long MzenIfqOetPQBdSHBAfnoXhWz15729976 = -551675567;    long MzenIfqOetPQBdSHBAfnoXhWz75742475 = 57081757;    long MzenIfqOetPQBdSHBAfnoXhWz4185401 = -752351360;    long MzenIfqOetPQBdSHBAfnoXhWz94644887 = -883049801;    long MzenIfqOetPQBdSHBAfnoXhWz82405113 = -960943029;    long MzenIfqOetPQBdSHBAfnoXhWz50121502 = 80927974;    long MzenIfqOetPQBdSHBAfnoXhWz61396582 = -456107595;    long MzenIfqOetPQBdSHBAfnoXhWz80991999 = -114559866;    long MzenIfqOetPQBdSHBAfnoXhWz21285877 = -37289197;    long MzenIfqOetPQBdSHBAfnoXhWz16471523 = -640138617;    long MzenIfqOetPQBdSHBAfnoXhWz94542646 = -859233297;    long MzenIfqOetPQBdSHBAfnoXhWz56746875 = -391073834;    long MzenIfqOetPQBdSHBAfnoXhWz4707141 = -56048068;    long MzenIfqOetPQBdSHBAfnoXhWz57082840 = -205628819;    long MzenIfqOetPQBdSHBAfnoXhWz85675017 = -528783812;    long MzenIfqOetPQBdSHBAfnoXhWz41530882 = -699709736;    long MzenIfqOetPQBdSHBAfnoXhWz55282373 = -355958729;    long MzenIfqOetPQBdSHBAfnoXhWz87594331 = -263084101;    long MzenIfqOetPQBdSHBAfnoXhWz55117423 = -422981358;    long MzenIfqOetPQBdSHBAfnoXhWz56525355 = -664205314;    long MzenIfqOetPQBdSHBAfnoXhWz81159012 = -133378254;    long MzenIfqOetPQBdSHBAfnoXhWz20866174 = -425896074;    long MzenIfqOetPQBdSHBAfnoXhWz59995340 = 43506817;    long MzenIfqOetPQBdSHBAfnoXhWz78281812 = -912560461;    long MzenIfqOetPQBdSHBAfnoXhWz74695015 = -119416165;    long MzenIfqOetPQBdSHBAfnoXhWz61108841 = -7690312;     MzenIfqOetPQBdSHBAfnoXhWz70825190 = MzenIfqOetPQBdSHBAfnoXhWz70828646;     MzenIfqOetPQBdSHBAfnoXhWz70828646 = MzenIfqOetPQBdSHBAfnoXhWz15215410;     MzenIfqOetPQBdSHBAfnoXhWz15215410 = MzenIfqOetPQBdSHBAfnoXhWz49034407;     MzenIfqOetPQBdSHBAfnoXhWz49034407 = MzenIfqOetPQBdSHBAfnoXhWz70839598;     MzenIfqOetPQBdSHBAfnoXhWz70839598 = MzenIfqOetPQBdSHBAfnoXhWz88386547;     MzenIfqOetPQBdSHBAfnoXhWz88386547 = MzenIfqOetPQBdSHBAfnoXhWz66686704;     MzenIfqOetPQBdSHBAfnoXhWz66686704 = MzenIfqOetPQBdSHBAfnoXhWz15765324;     MzenIfqOetPQBdSHBAfnoXhWz15765324 = MzenIfqOetPQBdSHBAfnoXhWz27840596;     MzenIfqOetPQBdSHBAfnoXhWz27840596 = MzenIfqOetPQBdSHBAfnoXhWz4053012;     MzenIfqOetPQBdSHBAfnoXhWz4053012 = MzenIfqOetPQBdSHBAfnoXhWz17846046;     MzenIfqOetPQBdSHBAfnoXhWz17846046 = MzenIfqOetPQBdSHBAfnoXhWz9492008;     MzenIfqOetPQBdSHBAfnoXhWz9492008 = MzenIfqOetPQBdSHBAfnoXhWz43399364;     MzenIfqOetPQBdSHBAfnoXhWz43399364 = MzenIfqOetPQBdSHBAfnoXhWz32328679;     MzenIfqOetPQBdSHBAfnoXhWz32328679 = MzenIfqOetPQBdSHBAfnoXhWz58758184;     MzenIfqOetPQBdSHBAfnoXhWz58758184 = MzenIfqOetPQBdSHBAfnoXhWz94632872;     MzenIfqOetPQBdSHBAfnoXhWz94632872 = MzenIfqOetPQBdSHBAfnoXhWz95968329;     MzenIfqOetPQBdSHBAfnoXhWz95968329 = MzenIfqOetPQBdSHBAfnoXhWz18491813;     MzenIfqOetPQBdSHBAfnoXhWz18491813 = MzenIfqOetPQBdSHBAfnoXhWz57183706;     MzenIfqOetPQBdSHBAfnoXhWz57183706 = MzenIfqOetPQBdSHBAfnoXhWz96681370;     MzenIfqOetPQBdSHBAfnoXhWz96681370 = MzenIfqOetPQBdSHBAfnoXhWz51814468;     MzenIfqOetPQBdSHBAfnoXhWz51814468 = MzenIfqOetPQBdSHBAfnoXhWz15201896;     MzenIfqOetPQBdSHBAfnoXhWz15201896 = MzenIfqOetPQBdSHBAfnoXhWz53047484;     MzenIfqOetPQBdSHBAfnoXhWz53047484 = MzenIfqOetPQBdSHBAfnoXhWz30871501;     MzenIfqOetPQBdSHBAfnoXhWz30871501 = MzenIfqOetPQBdSHBAfnoXhWz55011870;     MzenIfqOetPQBdSHBAfnoXhWz55011870 = MzenIfqOetPQBdSHBAfnoXhWz1928761;     MzenIfqOetPQBdSHBAfnoXhWz1928761 = MzenIfqOetPQBdSHBAfnoXhWz19988135;     MzenIfqOetPQBdSHBAfnoXhWz19988135 = MzenIfqOetPQBdSHBAfnoXhWz6601483;     MzenIfqOetPQBdSHBAfnoXhWz6601483 = MzenIfqOetPQBdSHBAfnoXhWz99688670;     MzenIfqOetPQBdSHBAfnoXhWz99688670 = MzenIfqOetPQBdSHBAfnoXhWz95105913;     MzenIfqOetPQBdSHBAfnoXhWz95105913 = MzenIfqOetPQBdSHBAfnoXhWz20345431;     MzenIfqOetPQBdSHBAfnoXhWz20345431 = MzenIfqOetPQBdSHBAfnoXhWz30488500;     MzenIfqOetPQBdSHBAfnoXhWz30488500 = MzenIfqOetPQBdSHBAfnoXhWz94811611;     MzenIfqOetPQBdSHBAfnoXhWz94811611 = MzenIfqOetPQBdSHBAfnoXhWz22102031;     MzenIfqOetPQBdSHBAfnoXhWz22102031 = MzenIfqOetPQBdSHBAfnoXhWz97154176;     MzenIfqOetPQBdSHBAfnoXhWz97154176 = MzenIfqOetPQBdSHBAfnoXhWz73063535;     MzenIfqOetPQBdSHBAfnoXhWz73063535 = MzenIfqOetPQBdSHBAfnoXhWz71938241;     MzenIfqOetPQBdSHBAfnoXhWz71938241 = MzenIfqOetPQBdSHBAfnoXhWz49139961;     MzenIfqOetPQBdSHBAfnoXhWz49139961 = MzenIfqOetPQBdSHBAfnoXhWz25436194;     MzenIfqOetPQBdSHBAfnoXhWz25436194 = MzenIfqOetPQBdSHBAfnoXhWz49557424;     MzenIfqOetPQBdSHBAfnoXhWz49557424 = MzenIfqOetPQBdSHBAfnoXhWz80951395;     MzenIfqOetPQBdSHBAfnoXhWz80951395 = MzenIfqOetPQBdSHBAfnoXhWz76071993;     MzenIfqOetPQBdSHBAfnoXhWz76071993 = MzenIfqOetPQBdSHBAfnoXhWz11016495;     MzenIfqOetPQBdSHBAfnoXhWz11016495 = MzenIfqOetPQBdSHBAfnoXhWz58402596;     MzenIfqOetPQBdSHBAfnoXhWz58402596 = MzenIfqOetPQBdSHBAfnoXhWz48466387;     MzenIfqOetPQBdSHBAfnoXhWz48466387 = MzenIfqOetPQBdSHBAfnoXhWz4890368;     MzenIfqOetPQBdSHBAfnoXhWz4890368 = MzenIfqOetPQBdSHBAfnoXhWz40532178;     MzenIfqOetPQBdSHBAfnoXhWz40532178 = MzenIfqOetPQBdSHBAfnoXhWz38996136;     MzenIfqOetPQBdSHBAfnoXhWz38996136 = MzenIfqOetPQBdSHBAfnoXhWz85315605;     MzenIfqOetPQBdSHBAfnoXhWz85315605 = MzenIfqOetPQBdSHBAfnoXhWz83217148;     MzenIfqOetPQBdSHBAfnoXhWz83217148 = MzenIfqOetPQBdSHBAfnoXhWz563267;     MzenIfqOetPQBdSHBAfnoXhWz563267 = MzenIfqOetPQBdSHBAfnoXhWz63598555;     MzenIfqOetPQBdSHBAfnoXhWz63598555 = MzenIfqOetPQBdSHBAfnoXhWz25781360;     MzenIfqOetPQBdSHBAfnoXhWz25781360 = MzenIfqOetPQBdSHBAfnoXhWz37728772;     MzenIfqOetPQBdSHBAfnoXhWz37728772 = MzenIfqOetPQBdSHBAfnoXhWz36427014;     MzenIfqOetPQBdSHBAfnoXhWz36427014 = MzenIfqOetPQBdSHBAfnoXhWz55623295;     MzenIfqOetPQBdSHBAfnoXhWz55623295 = MzenIfqOetPQBdSHBAfnoXhWz17781163;     MzenIfqOetPQBdSHBAfnoXhWz17781163 = MzenIfqOetPQBdSHBAfnoXhWz84343909;     MzenIfqOetPQBdSHBAfnoXhWz84343909 = MzenIfqOetPQBdSHBAfnoXhWz94022537;     MzenIfqOetPQBdSHBAfnoXhWz94022537 = MzenIfqOetPQBdSHBAfnoXhWz68910838;     MzenIfqOetPQBdSHBAfnoXhWz68910838 = MzenIfqOetPQBdSHBAfnoXhWz68398412;     MzenIfqOetPQBdSHBAfnoXhWz68398412 = MzenIfqOetPQBdSHBAfnoXhWz60085222;     MzenIfqOetPQBdSHBAfnoXhWz60085222 = MzenIfqOetPQBdSHBAfnoXhWz16076653;     MzenIfqOetPQBdSHBAfnoXhWz16076653 = MzenIfqOetPQBdSHBAfnoXhWz32734683;     MzenIfqOetPQBdSHBAfnoXhWz32734683 = MzenIfqOetPQBdSHBAfnoXhWz83707581;     MzenIfqOetPQBdSHBAfnoXhWz83707581 = MzenIfqOetPQBdSHBAfnoXhWz87357545;     MzenIfqOetPQBdSHBAfnoXhWz87357545 = MzenIfqOetPQBdSHBAfnoXhWz14680397;     MzenIfqOetPQBdSHBAfnoXhWz14680397 = MzenIfqOetPQBdSHBAfnoXhWz21297333;     MzenIfqOetPQBdSHBAfnoXhWz21297333 = MzenIfqOetPQBdSHBAfnoXhWz35174503;     MzenIfqOetPQBdSHBAfnoXhWz35174503 = MzenIfqOetPQBdSHBAfnoXhWz85694649;     MzenIfqOetPQBdSHBAfnoXhWz85694649 = MzenIfqOetPQBdSHBAfnoXhWz22694632;     MzenIfqOetPQBdSHBAfnoXhWz22694632 = MzenIfqOetPQBdSHBAfnoXhWz46828368;     MzenIfqOetPQBdSHBAfnoXhWz46828368 = MzenIfqOetPQBdSHBAfnoXhWz93055618;     MzenIfqOetPQBdSHBAfnoXhWz93055618 = MzenIfqOetPQBdSHBAfnoXhWz7626282;     MzenIfqOetPQBdSHBAfnoXhWz7626282 = MzenIfqOetPQBdSHBAfnoXhWz15729976;     MzenIfqOetPQBdSHBAfnoXhWz15729976 = MzenIfqOetPQBdSHBAfnoXhWz75742475;     MzenIfqOetPQBdSHBAfnoXhWz75742475 = MzenIfqOetPQBdSHBAfnoXhWz4185401;     MzenIfqOetPQBdSHBAfnoXhWz4185401 = MzenIfqOetPQBdSHBAfnoXhWz94644887;     MzenIfqOetPQBdSHBAfnoXhWz94644887 = MzenIfqOetPQBdSHBAfnoXhWz82405113;     MzenIfqOetPQBdSHBAfnoXhWz82405113 = MzenIfqOetPQBdSHBAfnoXhWz50121502;     MzenIfqOetPQBdSHBAfnoXhWz50121502 = MzenIfqOetPQBdSHBAfnoXhWz61396582;     MzenIfqOetPQBdSHBAfnoXhWz61396582 = MzenIfqOetPQBdSHBAfnoXhWz80991999;     MzenIfqOetPQBdSHBAfnoXhWz80991999 = MzenIfqOetPQBdSHBAfnoXhWz21285877;     MzenIfqOetPQBdSHBAfnoXhWz21285877 = MzenIfqOetPQBdSHBAfnoXhWz16471523;     MzenIfqOetPQBdSHBAfnoXhWz16471523 = MzenIfqOetPQBdSHBAfnoXhWz94542646;     MzenIfqOetPQBdSHBAfnoXhWz94542646 = MzenIfqOetPQBdSHBAfnoXhWz56746875;     MzenIfqOetPQBdSHBAfnoXhWz56746875 = MzenIfqOetPQBdSHBAfnoXhWz4707141;     MzenIfqOetPQBdSHBAfnoXhWz4707141 = MzenIfqOetPQBdSHBAfnoXhWz57082840;     MzenIfqOetPQBdSHBAfnoXhWz57082840 = MzenIfqOetPQBdSHBAfnoXhWz85675017;     MzenIfqOetPQBdSHBAfnoXhWz85675017 = MzenIfqOetPQBdSHBAfnoXhWz41530882;     MzenIfqOetPQBdSHBAfnoXhWz41530882 = MzenIfqOetPQBdSHBAfnoXhWz55282373;     MzenIfqOetPQBdSHBAfnoXhWz55282373 = MzenIfqOetPQBdSHBAfnoXhWz87594331;     MzenIfqOetPQBdSHBAfnoXhWz87594331 = MzenIfqOetPQBdSHBAfnoXhWz55117423;     MzenIfqOetPQBdSHBAfnoXhWz55117423 = MzenIfqOetPQBdSHBAfnoXhWz56525355;     MzenIfqOetPQBdSHBAfnoXhWz56525355 = MzenIfqOetPQBdSHBAfnoXhWz81159012;     MzenIfqOetPQBdSHBAfnoXhWz81159012 = MzenIfqOetPQBdSHBAfnoXhWz20866174;     MzenIfqOetPQBdSHBAfnoXhWz20866174 = MzenIfqOetPQBdSHBAfnoXhWz59995340;     MzenIfqOetPQBdSHBAfnoXhWz59995340 = MzenIfqOetPQBdSHBAfnoXhWz78281812;     MzenIfqOetPQBdSHBAfnoXhWz78281812 = MzenIfqOetPQBdSHBAfnoXhWz74695015;     MzenIfqOetPQBdSHBAfnoXhWz74695015 = MzenIfqOetPQBdSHBAfnoXhWz61108841;     MzenIfqOetPQBdSHBAfnoXhWz61108841 = MzenIfqOetPQBdSHBAfnoXhWz70825190;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void DkwzLtZgjiOAVUEGkDLqojmSnuDMiOuZXVCejEwrbEeQfllMxujcAPLUy3290551() {     long dMQpNxUnpczSZWgHUOjEVmBJr76942297 = -119592201;    long dMQpNxUnpczSZWgHUOjEVmBJr14201926 = -498016480;    long dMQpNxUnpczSZWgHUOjEVmBJr31257593 = -8794960;    long dMQpNxUnpczSZWgHUOjEVmBJr76109188 = -94918109;    long dMQpNxUnpczSZWgHUOjEVmBJr39735087 = -854902191;    long dMQpNxUnpczSZWgHUOjEVmBJr79803749 = -673412355;    long dMQpNxUnpczSZWgHUOjEVmBJr27175671 = -362992678;    long dMQpNxUnpczSZWgHUOjEVmBJr65525214 = 12831937;    long dMQpNxUnpczSZWgHUOjEVmBJr92483091 = -526045906;    long dMQpNxUnpczSZWgHUOjEVmBJr45282671 = -661445558;    long dMQpNxUnpczSZWgHUOjEVmBJr77956336 = -311620751;    long dMQpNxUnpczSZWgHUOjEVmBJr41315050 = -89907169;    long dMQpNxUnpczSZWgHUOjEVmBJr29608482 = -318564332;    long dMQpNxUnpczSZWgHUOjEVmBJr15472356 = 50672826;    long dMQpNxUnpczSZWgHUOjEVmBJr54500611 = -507805351;    long dMQpNxUnpczSZWgHUOjEVmBJr36138267 = -11528998;    long dMQpNxUnpczSZWgHUOjEVmBJr89804332 = -89752321;    long dMQpNxUnpczSZWgHUOjEVmBJr15544966 = -669866216;    long dMQpNxUnpczSZWgHUOjEVmBJr19013548 = -985656700;    long dMQpNxUnpczSZWgHUOjEVmBJr77231535 = 39664842;    long dMQpNxUnpczSZWgHUOjEVmBJr40367662 = 53666999;    long dMQpNxUnpczSZWgHUOjEVmBJr1722920 = -274356597;    long dMQpNxUnpczSZWgHUOjEVmBJr88638275 = -354672017;    long dMQpNxUnpczSZWgHUOjEVmBJr14863875 = -192225155;    long dMQpNxUnpczSZWgHUOjEVmBJr98711519 = 61339006;    long dMQpNxUnpczSZWgHUOjEVmBJr26650436 = -492552025;    long dMQpNxUnpczSZWgHUOjEVmBJr18447913 = -991841809;    long dMQpNxUnpczSZWgHUOjEVmBJr19708608 = -664096057;    long dMQpNxUnpczSZWgHUOjEVmBJr65820926 = -931242735;    long dMQpNxUnpczSZWgHUOjEVmBJr63721550 = -873969048;    long dMQpNxUnpczSZWgHUOjEVmBJr12587980 = -740102454;    long dMQpNxUnpczSZWgHUOjEVmBJr28099122 = -424507346;    long dMQpNxUnpczSZWgHUOjEVmBJr4522561 = -673164781;    long dMQpNxUnpczSZWgHUOjEVmBJr16932595 = -517282777;    long dMQpNxUnpczSZWgHUOjEVmBJr58628828 = -979706274;    long dMQpNxUnpczSZWgHUOjEVmBJr41789449 = -750247006;    long dMQpNxUnpczSZWgHUOjEVmBJr53200176 = -104761842;    long dMQpNxUnpczSZWgHUOjEVmBJr83230173 = -533191884;    long dMQpNxUnpczSZWgHUOjEVmBJr99046447 = -378484429;    long dMQpNxUnpczSZWgHUOjEVmBJr37059362 = 75446009;    long dMQpNxUnpczSZWgHUOjEVmBJr86620619 = -117030566;    long dMQpNxUnpczSZWgHUOjEVmBJr8222450 = -318069581;    long dMQpNxUnpczSZWgHUOjEVmBJr89083473 = -694880105;    long dMQpNxUnpczSZWgHUOjEVmBJr45810337 = -744447668;    long dMQpNxUnpczSZWgHUOjEVmBJr60418852 = -770875293;    long dMQpNxUnpczSZWgHUOjEVmBJr16829563 = -631609052;    long dMQpNxUnpczSZWgHUOjEVmBJr58310752 = -176564645;    long dMQpNxUnpczSZWgHUOjEVmBJr46953077 = -886515272;    long dMQpNxUnpczSZWgHUOjEVmBJr94991334 = -546614895;    long dMQpNxUnpczSZWgHUOjEVmBJr96128800 = -55732222;    long dMQpNxUnpczSZWgHUOjEVmBJr36263945 = 60441444;    long dMQpNxUnpczSZWgHUOjEVmBJr74408274 = -136434002;    long dMQpNxUnpczSZWgHUOjEVmBJr74029816 = -350802051;    long dMQpNxUnpczSZWgHUOjEVmBJr33697652 = -795392738;    long dMQpNxUnpczSZWgHUOjEVmBJr62922888 = -837488983;    long dMQpNxUnpczSZWgHUOjEVmBJr75219377 = -845235605;    long dMQpNxUnpczSZWgHUOjEVmBJr25563651 = -43344464;    long dMQpNxUnpczSZWgHUOjEVmBJr16393719 = -816569805;    long dMQpNxUnpczSZWgHUOjEVmBJr77397668 = -56257115;    long dMQpNxUnpczSZWgHUOjEVmBJr13084652 = -262350167;    long dMQpNxUnpczSZWgHUOjEVmBJr61355836 = -681570547;    long dMQpNxUnpczSZWgHUOjEVmBJr7467063 = -698896622;    long dMQpNxUnpczSZWgHUOjEVmBJr99704287 = -55925328;    long dMQpNxUnpczSZWgHUOjEVmBJr28761542 = -652076858;    long dMQpNxUnpczSZWgHUOjEVmBJr32694691 = -921343105;    long dMQpNxUnpczSZWgHUOjEVmBJr49857214 = -887113405;    long dMQpNxUnpczSZWgHUOjEVmBJr36792490 = -416742388;    long dMQpNxUnpczSZWgHUOjEVmBJr12675887 = -801281556;    long dMQpNxUnpczSZWgHUOjEVmBJr56843527 = 30379099;    long dMQpNxUnpczSZWgHUOjEVmBJr12711163 = -757558345;    long dMQpNxUnpczSZWgHUOjEVmBJr82938091 = -906767157;    long dMQpNxUnpczSZWgHUOjEVmBJr6574159 = -556560437;    long dMQpNxUnpczSZWgHUOjEVmBJr16498518 = -191381788;    long dMQpNxUnpczSZWgHUOjEVmBJr81954186 = -961102709;    long dMQpNxUnpczSZWgHUOjEVmBJr90610916 = -843304593;    long dMQpNxUnpczSZWgHUOjEVmBJr32145212 = -628263421;    long dMQpNxUnpczSZWgHUOjEVmBJr12639446 = -579476493;    long dMQpNxUnpczSZWgHUOjEVmBJr42827939 = -610224349;    long dMQpNxUnpczSZWgHUOjEVmBJr54445022 = -421349863;    long dMQpNxUnpczSZWgHUOjEVmBJr81881957 = -307051943;    long dMQpNxUnpczSZWgHUOjEVmBJr68339683 = -215987381;    long dMQpNxUnpczSZWgHUOjEVmBJr71494836 = -5326537;    long dMQpNxUnpczSZWgHUOjEVmBJr24717274 = -17481163;    long dMQpNxUnpczSZWgHUOjEVmBJr69692125 = -775510513;    long dMQpNxUnpczSZWgHUOjEVmBJr27457605 = -834410493;    long dMQpNxUnpczSZWgHUOjEVmBJr38179705 = -503668452;    long dMQpNxUnpczSZWgHUOjEVmBJr54069305 = 26294704;    long dMQpNxUnpczSZWgHUOjEVmBJr70824908 = -877772044;    long dMQpNxUnpczSZWgHUOjEVmBJr54009707 = -679793794;    long dMQpNxUnpczSZWgHUOjEVmBJr83409450 = -34470669;    long dMQpNxUnpczSZWgHUOjEVmBJr16225799 = -606902542;    long dMQpNxUnpczSZWgHUOjEVmBJr36806457 = -288192038;    long dMQpNxUnpczSZWgHUOjEVmBJr5832505 = -376934770;    long dMQpNxUnpczSZWgHUOjEVmBJr85961796 = -16134263;    long dMQpNxUnpczSZWgHUOjEVmBJr75703525 = -242983445;    long dMQpNxUnpczSZWgHUOjEVmBJr79153556 = -418133944;    long dMQpNxUnpczSZWgHUOjEVmBJr8518163 = -162144253;    long dMQpNxUnpczSZWgHUOjEVmBJr60321932 = 57196753;    long dMQpNxUnpczSZWgHUOjEVmBJr13115646 = -823104563;    long dMQpNxUnpczSZWgHUOjEVmBJr10561638 = -119592201;     dMQpNxUnpczSZWgHUOjEVmBJr76942297 = dMQpNxUnpczSZWgHUOjEVmBJr14201926;     dMQpNxUnpczSZWgHUOjEVmBJr14201926 = dMQpNxUnpczSZWgHUOjEVmBJr31257593;     dMQpNxUnpczSZWgHUOjEVmBJr31257593 = dMQpNxUnpczSZWgHUOjEVmBJr76109188;     dMQpNxUnpczSZWgHUOjEVmBJr76109188 = dMQpNxUnpczSZWgHUOjEVmBJr39735087;     dMQpNxUnpczSZWgHUOjEVmBJr39735087 = dMQpNxUnpczSZWgHUOjEVmBJr79803749;     dMQpNxUnpczSZWgHUOjEVmBJr79803749 = dMQpNxUnpczSZWgHUOjEVmBJr27175671;     dMQpNxUnpczSZWgHUOjEVmBJr27175671 = dMQpNxUnpczSZWgHUOjEVmBJr65525214;     dMQpNxUnpczSZWgHUOjEVmBJr65525214 = dMQpNxUnpczSZWgHUOjEVmBJr92483091;     dMQpNxUnpczSZWgHUOjEVmBJr92483091 = dMQpNxUnpczSZWgHUOjEVmBJr45282671;     dMQpNxUnpczSZWgHUOjEVmBJr45282671 = dMQpNxUnpczSZWgHUOjEVmBJr77956336;     dMQpNxUnpczSZWgHUOjEVmBJr77956336 = dMQpNxUnpczSZWgHUOjEVmBJr41315050;     dMQpNxUnpczSZWgHUOjEVmBJr41315050 = dMQpNxUnpczSZWgHUOjEVmBJr29608482;     dMQpNxUnpczSZWgHUOjEVmBJr29608482 = dMQpNxUnpczSZWgHUOjEVmBJr15472356;     dMQpNxUnpczSZWgHUOjEVmBJr15472356 = dMQpNxUnpczSZWgHUOjEVmBJr54500611;     dMQpNxUnpczSZWgHUOjEVmBJr54500611 = dMQpNxUnpczSZWgHUOjEVmBJr36138267;     dMQpNxUnpczSZWgHUOjEVmBJr36138267 = dMQpNxUnpczSZWgHUOjEVmBJr89804332;     dMQpNxUnpczSZWgHUOjEVmBJr89804332 = dMQpNxUnpczSZWgHUOjEVmBJr15544966;     dMQpNxUnpczSZWgHUOjEVmBJr15544966 = dMQpNxUnpczSZWgHUOjEVmBJr19013548;     dMQpNxUnpczSZWgHUOjEVmBJr19013548 = dMQpNxUnpczSZWgHUOjEVmBJr77231535;     dMQpNxUnpczSZWgHUOjEVmBJr77231535 = dMQpNxUnpczSZWgHUOjEVmBJr40367662;     dMQpNxUnpczSZWgHUOjEVmBJr40367662 = dMQpNxUnpczSZWgHUOjEVmBJr1722920;     dMQpNxUnpczSZWgHUOjEVmBJr1722920 = dMQpNxUnpczSZWgHUOjEVmBJr88638275;     dMQpNxUnpczSZWgHUOjEVmBJr88638275 = dMQpNxUnpczSZWgHUOjEVmBJr14863875;     dMQpNxUnpczSZWgHUOjEVmBJr14863875 = dMQpNxUnpczSZWgHUOjEVmBJr98711519;     dMQpNxUnpczSZWgHUOjEVmBJr98711519 = dMQpNxUnpczSZWgHUOjEVmBJr26650436;     dMQpNxUnpczSZWgHUOjEVmBJr26650436 = dMQpNxUnpczSZWgHUOjEVmBJr18447913;     dMQpNxUnpczSZWgHUOjEVmBJr18447913 = dMQpNxUnpczSZWgHUOjEVmBJr19708608;     dMQpNxUnpczSZWgHUOjEVmBJr19708608 = dMQpNxUnpczSZWgHUOjEVmBJr65820926;     dMQpNxUnpczSZWgHUOjEVmBJr65820926 = dMQpNxUnpczSZWgHUOjEVmBJr63721550;     dMQpNxUnpczSZWgHUOjEVmBJr63721550 = dMQpNxUnpczSZWgHUOjEVmBJr12587980;     dMQpNxUnpczSZWgHUOjEVmBJr12587980 = dMQpNxUnpczSZWgHUOjEVmBJr28099122;     dMQpNxUnpczSZWgHUOjEVmBJr28099122 = dMQpNxUnpczSZWgHUOjEVmBJr4522561;     dMQpNxUnpczSZWgHUOjEVmBJr4522561 = dMQpNxUnpczSZWgHUOjEVmBJr16932595;     dMQpNxUnpczSZWgHUOjEVmBJr16932595 = dMQpNxUnpczSZWgHUOjEVmBJr58628828;     dMQpNxUnpczSZWgHUOjEVmBJr58628828 = dMQpNxUnpczSZWgHUOjEVmBJr41789449;     dMQpNxUnpczSZWgHUOjEVmBJr41789449 = dMQpNxUnpczSZWgHUOjEVmBJr53200176;     dMQpNxUnpczSZWgHUOjEVmBJr53200176 = dMQpNxUnpczSZWgHUOjEVmBJr83230173;     dMQpNxUnpczSZWgHUOjEVmBJr83230173 = dMQpNxUnpczSZWgHUOjEVmBJr99046447;     dMQpNxUnpczSZWgHUOjEVmBJr99046447 = dMQpNxUnpczSZWgHUOjEVmBJr37059362;     dMQpNxUnpczSZWgHUOjEVmBJr37059362 = dMQpNxUnpczSZWgHUOjEVmBJr86620619;     dMQpNxUnpczSZWgHUOjEVmBJr86620619 = dMQpNxUnpczSZWgHUOjEVmBJr8222450;     dMQpNxUnpczSZWgHUOjEVmBJr8222450 = dMQpNxUnpczSZWgHUOjEVmBJr89083473;     dMQpNxUnpczSZWgHUOjEVmBJr89083473 = dMQpNxUnpczSZWgHUOjEVmBJr45810337;     dMQpNxUnpczSZWgHUOjEVmBJr45810337 = dMQpNxUnpczSZWgHUOjEVmBJr60418852;     dMQpNxUnpczSZWgHUOjEVmBJr60418852 = dMQpNxUnpczSZWgHUOjEVmBJr16829563;     dMQpNxUnpczSZWgHUOjEVmBJr16829563 = dMQpNxUnpczSZWgHUOjEVmBJr58310752;     dMQpNxUnpczSZWgHUOjEVmBJr58310752 = dMQpNxUnpczSZWgHUOjEVmBJr46953077;     dMQpNxUnpczSZWgHUOjEVmBJr46953077 = dMQpNxUnpczSZWgHUOjEVmBJr94991334;     dMQpNxUnpczSZWgHUOjEVmBJr94991334 = dMQpNxUnpczSZWgHUOjEVmBJr96128800;     dMQpNxUnpczSZWgHUOjEVmBJr96128800 = dMQpNxUnpczSZWgHUOjEVmBJr36263945;     dMQpNxUnpczSZWgHUOjEVmBJr36263945 = dMQpNxUnpczSZWgHUOjEVmBJr74408274;     dMQpNxUnpczSZWgHUOjEVmBJr74408274 = dMQpNxUnpczSZWgHUOjEVmBJr74029816;     dMQpNxUnpczSZWgHUOjEVmBJr74029816 = dMQpNxUnpczSZWgHUOjEVmBJr33697652;     dMQpNxUnpczSZWgHUOjEVmBJr33697652 = dMQpNxUnpczSZWgHUOjEVmBJr62922888;     dMQpNxUnpczSZWgHUOjEVmBJr62922888 = dMQpNxUnpczSZWgHUOjEVmBJr75219377;     dMQpNxUnpczSZWgHUOjEVmBJr75219377 = dMQpNxUnpczSZWgHUOjEVmBJr25563651;     dMQpNxUnpczSZWgHUOjEVmBJr25563651 = dMQpNxUnpczSZWgHUOjEVmBJr16393719;     dMQpNxUnpczSZWgHUOjEVmBJr16393719 = dMQpNxUnpczSZWgHUOjEVmBJr77397668;     dMQpNxUnpczSZWgHUOjEVmBJr77397668 = dMQpNxUnpczSZWgHUOjEVmBJr13084652;     dMQpNxUnpczSZWgHUOjEVmBJr13084652 = dMQpNxUnpczSZWgHUOjEVmBJr61355836;     dMQpNxUnpczSZWgHUOjEVmBJr61355836 = dMQpNxUnpczSZWgHUOjEVmBJr7467063;     dMQpNxUnpczSZWgHUOjEVmBJr7467063 = dMQpNxUnpczSZWgHUOjEVmBJr99704287;     dMQpNxUnpczSZWgHUOjEVmBJr99704287 = dMQpNxUnpczSZWgHUOjEVmBJr28761542;     dMQpNxUnpczSZWgHUOjEVmBJr28761542 = dMQpNxUnpczSZWgHUOjEVmBJr32694691;     dMQpNxUnpczSZWgHUOjEVmBJr32694691 = dMQpNxUnpczSZWgHUOjEVmBJr49857214;     dMQpNxUnpczSZWgHUOjEVmBJr49857214 = dMQpNxUnpczSZWgHUOjEVmBJr36792490;     dMQpNxUnpczSZWgHUOjEVmBJr36792490 = dMQpNxUnpczSZWgHUOjEVmBJr12675887;     dMQpNxUnpczSZWgHUOjEVmBJr12675887 = dMQpNxUnpczSZWgHUOjEVmBJr56843527;     dMQpNxUnpczSZWgHUOjEVmBJr56843527 = dMQpNxUnpczSZWgHUOjEVmBJr12711163;     dMQpNxUnpczSZWgHUOjEVmBJr12711163 = dMQpNxUnpczSZWgHUOjEVmBJr82938091;     dMQpNxUnpczSZWgHUOjEVmBJr82938091 = dMQpNxUnpczSZWgHUOjEVmBJr6574159;     dMQpNxUnpczSZWgHUOjEVmBJr6574159 = dMQpNxUnpczSZWgHUOjEVmBJr16498518;     dMQpNxUnpczSZWgHUOjEVmBJr16498518 = dMQpNxUnpczSZWgHUOjEVmBJr81954186;     dMQpNxUnpczSZWgHUOjEVmBJr81954186 = dMQpNxUnpczSZWgHUOjEVmBJr90610916;     dMQpNxUnpczSZWgHUOjEVmBJr90610916 = dMQpNxUnpczSZWgHUOjEVmBJr32145212;     dMQpNxUnpczSZWgHUOjEVmBJr32145212 = dMQpNxUnpczSZWgHUOjEVmBJr12639446;     dMQpNxUnpczSZWgHUOjEVmBJr12639446 = dMQpNxUnpczSZWgHUOjEVmBJr42827939;     dMQpNxUnpczSZWgHUOjEVmBJr42827939 = dMQpNxUnpczSZWgHUOjEVmBJr54445022;     dMQpNxUnpczSZWgHUOjEVmBJr54445022 = dMQpNxUnpczSZWgHUOjEVmBJr81881957;     dMQpNxUnpczSZWgHUOjEVmBJr81881957 = dMQpNxUnpczSZWgHUOjEVmBJr68339683;     dMQpNxUnpczSZWgHUOjEVmBJr68339683 = dMQpNxUnpczSZWgHUOjEVmBJr71494836;     dMQpNxUnpczSZWgHUOjEVmBJr71494836 = dMQpNxUnpczSZWgHUOjEVmBJr24717274;     dMQpNxUnpczSZWgHUOjEVmBJr24717274 = dMQpNxUnpczSZWgHUOjEVmBJr69692125;     dMQpNxUnpczSZWgHUOjEVmBJr69692125 = dMQpNxUnpczSZWgHUOjEVmBJr27457605;     dMQpNxUnpczSZWgHUOjEVmBJr27457605 = dMQpNxUnpczSZWgHUOjEVmBJr38179705;     dMQpNxUnpczSZWgHUOjEVmBJr38179705 = dMQpNxUnpczSZWgHUOjEVmBJr54069305;     dMQpNxUnpczSZWgHUOjEVmBJr54069305 = dMQpNxUnpczSZWgHUOjEVmBJr70824908;     dMQpNxUnpczSZWgHUOjEVmBJr70824908 = dMQpNxUnpczSZWgHUOjEVmBJr54009707;     dMQpNxUnpczSZWgHUOjEVmBJr54009707 = dMQpNxUnpczSZWgHUOjEVmBJr83409450;     dMQpNxUnpczSZWgHUOjEVmBJr83409450 = dMQpNxUnpczSZWgHUOjEVmBJr16225799;     dMQpNxUnpczSZWgHUOjEVmBJr16225799 = dMQpNxUnpczSZWgHUOjEVmBJr36806457;     dMQpNxUnpczSZWgHUOjEVmBJr36806457 = dMQpNxUnpczSZWgHUOjEVmBJr5832505;     dMQpNxUnpczSZWgHUOjEVmBJr5832505 = dMQpNxUnpczSZWgHUOjEVmBJr85961796;     dMQpNxUnpczSZWgHUOjEVmBJr85961796 = dMQpNxUnpczSZWgHUOjEVmBJr75703525;     dMQpNxUnpczSZWgHUOjEVmBJr75703525 = dMQpNxUnpczSZWgHUOjEVmBJr79153556;     dMQpNxUnpczSZWgHUOjEVmBJr79153556 = dMQpNxUnpczSZWgHUOjEVmBJr8518163;     dMQpNxUnpczSZWgHUOjEVmBJr8518163 = dMQpNxUnpczSZWgHUOjEVmBJr60321932;     dMQpNxUnpczSZWgHUOjEVmBJr60321932 = dMQpNxUnpczSZWgHUOjEVmBJr13115646;     dMQpNxUnpczSZWgHUOjEVmBJr13115646 = dMQpNxUnpczSZWgHUOjEVmBJr10561638;     dMQpNxUnpczSZWgHUOjEVmBJr10561638 = dMQpNxUnpczSZWgHUOjEVmBJr76942297;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void npMhUSvbIATrfEgGGqVthRhCNFLXnQEvYOumyIwrsoTAXEfpPWyKctMVI70582149() {     long JTPGYosvYSRKuHyueBsygfJaV12401266 = -585869101;    long JTPGYosvYSRKuHyueBsygfJaV27474005 = -378568087;    long JTPGYosvYSRKuHyueBsygfJaV68644070 = -774462035;    long JTPGYosvYSRKuHyueBsygfJaV48332543 = 83930820;    long JTPGYosvYSRKuHyueBsygfJaV96020356 = -960501036;    long JTPGYosvYSRKuHyueBsygfJaV16026622 = -935760250;    long JTPGYosvYSRKuHyueBsygfJaV37833077 = -207718413;    long JTPGYosvYSRKuHyueBsygfJaV27656775 = -731402203;    long JTPGYosvYSRKuHyueBsygfJaV94000696 = 85622687;    long JTPGYosvYSRKuHyueBsygfJaV60185383 = -326132556;    long JTPGYosvYSRKuHyueBsygfJaV16138071 = -113628480;    long JTPGYosvYSRKuHyueBsygfJaV41883199 = 45972060;    long JTPGYosvYSRKuHyueBsygfJaV67843128 = -870576837;    long JTPGYosvYSRKuHyueBsygfJaV68613219 = 74309416;    long JTPGYosvYSRKuHyueBsygfJaV12695128 = 88769634;    long JTPGYosvYSRKuHyueBsygfJaV19679568 = -747340605;    long JTPGYosvYSRKuHyueBsygfJaV45640268 = -616726874;    long JTPGYosvYSRKuHyueBsygfJaV15305157 = -743294285;    long JTPGYosvYSRKuHyueBsygfJaV19563878 = -202220121;    long JTPGYosvYSRKuHyueBsygfJaV71068754 = -386896224;    long JTPGYosvYSRKuHyueBsygfJaV53454525 = -703607690;    long JTPGYosvYSRKuHyueBsygfJaV5144444 = -360992891;    long JTPGYosvYSRKuHyueBsygfJaV59163655 = 7695799;    long JTPGYosvYSRKuHyueBsygfJaV8656820 = -703049760;    long JTPGYosvYSRKuHyueBsygfJaV6729472 = 37353807;    long JTPGYosvYSRKuHyueBsygfJaV37348608 = -181128832;    long JTPGYosvYSRKuHyueBsygfJaV78868487 = -798125949;    long JTPGYosvYSRKuHyueBsygfJaV60437033 = -833868231;    long JTPGYosvYSRKuHyueBsygfJaV12489141 = -405337537;    long JTPGYosvYSRKuHyueBsygfJaV69254960 = -908476219;    long JTPGYosvYSRKuHyueBsygfJaV31171212 = -192082941;    long JTPGYosvYSRKuHyueBsygfJaV65922140 = -197478761;    long JTPGYosvYSRKuHyueBsygfJaV16740571 = -820760759;    long JTPGYosvYSRKuHyueBsygfJaV46681022 = -581976590;    long JTPGYosvYSRKuHyueBsygfJaV24437282 = -930806524;    long JTPGYosvYSRKuHyueBsygfJaV93350292 = -964812312;    long JTPGYosvYSRKuHyueBsygfJaV2611993 = 30542118;    long JTPGYosvYSRKuHyueBsygfJaV34445577 = -515847466;    long JTPGYosvYSRKuHyueBsygfJaV29437009 = -29360705;    long JTPGYosvYSRKuHyueBsygfJaV1330895 = -489816537;    long JTPGYosvYSRKuHyueBsygfJaV20072227 = -986229480;    long JTPGYosvYSRKuHyueBsygfJaV97587576 = 87385129;    long JTPGYosvYSRKuHyueBsygfJaV78466851 = -248060891;    long JTPGYosvYSRKuHyueBsygfJaV85941675 = -248780078;    long JTPGYosvYSRKuHyueBsygfJaV60435311 = -597386455;    long JTPGYosvYSRKuHyueBsygfJaV62790891 = -670532684;    long JTPGYosvYSRKuHyueBsygfJaV77655916 = -660551005;    long JTPGYosvYSRKuHyueBsygfJaV64679388 = 46958134;    long JTPGYosvYSRKuHyueBsygfJaV17884001 = -210351775;    long JTPGYosvYSRKuHyueBsygfJaV20658390 = -546759038;    long JTPGYosvYSRKuHyueBsygfJaV17034669 = -913835113;    long JTPGYosvYSRKuHyueBsygfJaV57893747 = -350086349;    long JTPGYosvYSRKuHyueBsygfJaV42650965 = -106847605;    long JTPGYosvYSRKuHyueBsygfJaV49689498 = -986901238;    long JTPGYosvYSRKuHyueBsygfJaV17127625 = -83979129;    long JTPGYosvYSRKuHyueBsygfJaV7256822 = -124876211;    long JTPGYosvYSRKuHyueBsygfJaV68310349 = -286263887;    long JTPGYosvYSRKuHyueBsygfJaV59987251 = 28587725;    long JTPGYosvYSRKuHyueBsygfJaV41603072 = -953422988;    long JTPGYosvYSRKuHyueBsygfJaV58671749 = -679372205;    long JTPGYosvYSRKuHyueBsygfJaV37158135 = -37634301;    long JTPGYosvYSRKuHyueBsygfJaV77396044 = -373850182;    long JTPGYosvYSRKuHyueBsygfJaV15167634 = -226064666;    long JTPGYosvYSRKuHyueBsygfJaV24745736 = -5901095;    long JTPGYosvYSRKuHyueBsygfJaV29014172 = -34049616;    long JTPGYosvYSRKuHyueBsygfJaV50215931 = -916149720;    long JTPGYosvYSRKuHyueBsygfJaV25142628 = -133267182;    long JTPGYosvYSRKuHyueBsygfJaV21162106 = -188600248;    long JTPGYosvYSRKuHyueBsygfJaV44175937 = 5115940;    long JTPGYosvYSRKuHyueBsygfJaV19344835 = 53581945;    long JTPGYosvYSRKuHyueBsygfJaV17067576 = -677882724;    long JTPGYosvYSRKuHyueBsygfJaV11194692 = -879408;    long JTPGYosvYSRKuHyueBsygfJaV85868148 = -613933580;    long JTPGYosvYSRKuHyueBsygfJaV18232984 = -712403584;    long JTPGYosvYSRKuHyueBsygfJaV50996527 = -400666744;    long JTPGYosvYSRKuHyueBsygfJaV55866948 = -690992819;    long JTPGYosvYSRKuHyueBsygfJaV26677593 = -12932001;    long JTPGYosvYSRKuHyueBsygfJaV73221980 = -743524124;    long JTPGYosvYSRKuHyueBsygfJaV48221509 = -5663306;    long JTPGYosvYSRKuHyueBsygfJaV43938580 = -292113509;    long JTPGYosvYSRKuHyueBsygfJaV59692691 = -520577827;    long JTPGYosvYSRKuHyueBsygfJaV14189099 = -745084084;    long JTPGYosvYSRKuHyueBsygfJaV42553032 = -523516457;    long JTPGYosvYSRKuHyueBsygfJaV91830750 = -858578500;    long JTPGYosvYSRKuHyueBsygfJaV52220292 = -994641106;    long JTPGYosvYSRKuHyueBsygfJaV73277464 = -841996593;    long JTPGYosvYSRKuHyueBsygfJaV23271175 = 9368843;    long JTPGYosvYSRKuHyueBsygfJaV67051072 = -833859522;    long JTPGYosvYSRKuHyueBsygfJaV29553397 = -397997462;    long JTPGYosvYSRKuHyueBsygfJaV17180461 = -705930314;    long JTPGYosvYSRKuHyueBsygfJaV25039944 = -578548426;    long JTPGYosvYSRKuHyueBsygfJaV42624742 = -998045607;    long JTPGYosvYSRKuHyueBsygfJaV92842504 = -562424478;    long JTPGYosvYSRKuHyueBsygfJaV70765260 = -349988500;    long JTPGYosvYSRKuHyueBsygfJaV64172760 = -352182236;    long JTPGYosvYSRKuHyueBsygfJaV42676183 = -512379299;    long JTPGYosvYSRKuHyueBsygfJaV82419942 = -686550206;    long JTPGYosvYSRKuHyueBsygfJaV53721116 = -142159796;    long JTPGYosvYSRKuHyueBsygfJaV56927504 = -114730462;    long JTPGYosvYSRKuHyueBsygfJaV10219381 = -585869101;     JTPGYosvYSRKuHyueBsygfJaV12401266 = JTPGYosvYSRKuHyueBsygfJaV27474005;     JTPGYosvYSRKuHyueBsygfJaV27474005 = JTPGYosvYSRKuHyueBsygfJaV68644070;     JTPGYosvYSRKuHyueBsygfJaV68644070 = JTPGYosvYSRKuHyueBsygfJaV48332543;     JTPGYosvYSRKuHyueBsygfJaV48332543 = JTPGYosvYSRKuHyueBsygfJaV96020356;     JTPGYosvYSRKuHyueBsygfJaV96020356 = JTPGYosvYSRKuHyueBsygfJaV16026622;     JTPGYosvYSRKuHyueBsygfJaV16026622 = JTPGYosvYSRKuHyueBsygfJaV37833077;     JTPGYosvYSRKuHyueBsygfJaV37833077 = JTPGYosvYSRKuHyueBsygfJaV27656775;     JTPGYosvYSRKuHyueBsygfJaV27656775 = JTPGYosvYSRKuHyueBsygfJaV94000696;     JTPGYosvYSRKuHyueBsygfJaV94000696 = JTPGYosvYSRKuHyueBsygfJaV60185383;     JTPGYosvYSRKuHyueBsygfJaV60185383 = JTPGYosvYSRKuHyueBsygfJaV16138071;     JTPGYosvYSRKuHyueBsygfJaV16138071 = JTPGYosvYSRKuHyueBsygfJaV41883199;     JTPGYosvYSRKuHyueBsygfJaV41883199 = JTPGYosvYSRKuHyueBsygfJaV67843128;     JTPGYosvYSRKuHyueBsygfJaV67843128 = JTPGYosvYSRKuHyueBsygfJaV68613219;     JTPGYosvYSRKuHyueBsygfJaV68613219 = JTPGYosvYSRKuHyueBsygfJaV12695128;     JTPGYosvYSRKuHyueBsygfJaV12695128 = JTPGYosvYSRKuHyueBsygfJaV19679568;     JTPGYosvYSRKuHyueBsygfJaV19679568 = JTPGYosvYSRKuHyueBsygfJaV45640268;     JTPGYosvYSRKuHyueBsygfJaV45640268 = JTPGYosvYSRKuHyueBsygfJaV15305157;     JTPGYosvYSRKuHyueBsygfJaV15305157 = JTPGYosvYSRKuHyueBsygfJaV19563878;     JTPGYosvYSRKuHyueBsygfJaV19563878 = JTPGYosvYSRKuHyueBsygfJaV71068754;     JTPGYosvYSRKuHyueBsygfJaV71068754 = JTPGYosvYSRKuHyueBsygfJaV53454525;     JTPGYosvYSRKuHyueBsygfJaV53454525 = JTPGYosvYSRKuHyueBsygfJaV5144444;     JTPGYosvYSRKuHyueBsygfJaV5144444 = JTPGYosvYSRKuHyueBsygfJaV59163655;     JTPGYosvYSRKuHyueBsygfJaV59163655 = JTPGYosvYSRKuHyueBsygfJaV8656820;     JTPGYosvYSRKuHyueBsygfJaV8656820 = JTPGYosvYSRKuHyueBsygfJaV6729472;     JTPGYosvYSRKuHyueBsygfJaV6729472 = JTPGYosvYSRKuHyueBsygfJaV37348608;     JTPGYosvYSRKuHyueBsygfJaV37348608 = JTPGYosvYSRKuHyueBsygfJaV78868487;     JTPGYosvYSRKuHyueBsygfJaV78868487 = JTPGYosvYSRKuHyueBsygfJaV60437033;     JTPGYosvYSRKuHyueBsygfJaV60437033 = JTPGYosvYSRKuHyueBsygfJaV12489141;     JTPGYosvYSRKuHyueBsygfJaV12489141 = JTPGYosvYSRKuHyueBsygfJaV69254960;     JTPGYosvYSRKuHyueBsygfJaV69254960 = JTPGYosvYSRKuHyueBsygfJaV31171212;     JTPGYosvYSRKuHyueBsygfJaV31171212 = JTPGYosvYSRKuHyueBsygfJaV65922140;     JTPGYosvYSRKuHyueBsygfJaV65922140 = JTPGYosvYSRKuHyueBsygfJaV16740571;     JTPGYosvYSRKuHyueBsygfJaV16740571 = JTPGYosvYSRKuHyueBsygfJaV46681022;     JTPGYosvYSRKuHyueBsygfJaV46681022 = JTPGYosvYSRKuHyueBsygfJaV24437282;     JTPGYosvYSRKuHyueBsygfJaV24437282 = JTPGYosvYSRKuHyueBsygfJaV93350292;     JTPGYosvYSRKuHyueBsygfJaV93350292 = JTPGYosvYSRKuHyueBsygfJaV2611993;     JTPGYosvYSRKuHyueBsygfJaV2611993 = JTPGYosvYSRKuHyueBsygfJaV34445577;     JTPGYosvYSRKuHyueBsygfJaV34445577 = JTPGYosvYSRKuHyueBsygfJaV29437009;     JTPGYosvYSRKuHyueBsygfJaV29437009 = JTPGYosvYSRKuHyueBsygfJaV1330895;     JTPGYosvYSRKuHyueBsygfJaV1330895 = JTPGYosvYSRKuHyueBsygfJaV20072227;     JTPGYosvYSRKuHyueBsygfJaV20072227 = JTPGYosvYSRKuHyueBsygfJaV97587576;     JTPGYosvYSRKuHyueBsygfJaV97587576 = JTPGYosvYSRKuHyueBsygfJaV78466851;     JTPGYosvYSRKuHyueBsygfJaV78466851 = JTPGYosvYSRKuHyueBsygfJaV85941675;     JTPGYosvYSRKuHyueBsygfJaV85941675 = JTPGYosvYSRKuHyueBsygfJaV60435311;     JTPGYosvYSRKuHyueBsygfJaV60435311 = JTPGYosvYSRKuHyueBsygfJaV62790891;     JTPGYosvYSRKuHyueBsygfJaV62790891 = JTPGYosvYSRKuHyueBsygfJaV77655916;     JTPGYosvYSRKuHyueBsygfJaV77655916 = JTPGYosvYSRKuHyueBsygfJaV64679388;     JTPGYosvYSRKuHyueBsygfJaV64679388 = JTPGYosvYSRKuHyueBsygfJaV17884001;     JTPGYosvYSRKuHyueBsygfJaV17884001 = JTPGYosvYSRKuHyueBsygfJaV20658390;     JTPGYosvYSRKuHyueBsygfJaV20658390 = JTPGYosvYSRKuHyueBsygfJaV17034669;     JTPGYosvYSRKuHyueBsygfJaV17034669 = JTPGYosvYSRKuHyueBsygfJaV57893747;     JTPGYosvYSRKuHyueBsygfJaV57893747 = JTPGYosvYSRKuHyueBsygfJaV42650965;     JTPGYosvYSRKuHyueBsygfJaV42650965 = JTPGYosvYSRKuHyueBsygfJaV49689498;     JTPGYosvYSRKuHyueBsygfJaV49689498 = JTPGYosvYSRKuHyueBsygfJaV17127625;     JTPGYosvYSRKuHyueBsygfJaV17127625 = JTPGYosvYSRKuHyueBsygfJaV7256822;     JTPGYosvYSRKuHyueBsygfJaV7256822 = JTPGYosvYSRKuHyueBsygfJaV68310349;     JTPGYosvYSRKuHyueBsygfJaV68310349 = JTPGYosvYSRKuHyueBsygfJaV59987251;     JTPGYosvYSRKuHyueBsygfJaV59987251 = JTPGYosvYSRKuHyueBsygfJaV41603072;     JTPGYosvYSRKuHyueBsygfJaV41603072 = JTPGYosvYSRKuHyueBsygfJaV58671749;     JTPGYosvYSRKuHyueBsygfJaV58671749 = JTPGYosvYSRKuHyueBsygfJaV37158135;     JTPGYosvYSRKuHyueBsygfJaV37158135 = JTPGYosvYSRKuHyueBsygfJaV77396044;     JTPGYosvYSRKuHyueBsygfJaV77396044 = JTPGYosvYSRKuHyueBsygfJaV15167634;     JTPGYosvYSRKuHyueBsygfJaV15167634 = JTPGYosvYSRKuHyueBsygfJaV24745736;     JTPGYosvYSRKuHyueBsygfJaV24745736 = JTPGYosvYSRKuHyueBsygfJaV29014172;     JTPGYosvYSRKuHyueBsygfJaV29014172 = JTPGYosvYSRKuHyueBsygfJaV50215931;     JTPGYosvYSRKuHyueBsygfJaV50215931 = JTPGYosvYSRKuHyueBsygfJaV25142628;     JTPGYosvYSRKuHyueBsygfJaV25142628 = JTPGYosvYSRKuHyueBsygfJaV21162106;     JTPGYosvYSRKuHyueBsygfJaV21162106 = JTPGYosvYSRKuHyueBsygfJaV44175937;     JTPGYosvYSRKuHyueBsygfJaV44175937 = JTPGYosvYSRKuHyueBsygfJaV19344835;     JTPGYosvYSRKuHyueBsygfJaV19344835 = JTPGYosvYSRKuHyueBsygfJaV17067576;     JTPGYosvYSRKuHyueBsygfJaV17067576 = JTPGYosvYSRKuHyueBsygfJaV11194692;     JTPGYosvYSRKuHyueBsygfJaV11194692 = JTPGYosvYSRKuHyueBsygfJaV85868148;     JTPGYosvYSRKuHyueBsygfJaV85868148 = JTPGYosvYSRKuHyueBsygfJaV18232984;     JTPGYosvYSRKuHyueBsygfJaV18232984 = JTPGYosvYSRKuHyueBsygfJaV50996527;     JTPGYosvYSRKuHyueBsygfJaV50996527 = JTPGYosvYSRKuHyueBsygfJaV55866948;     JTPGYosvYSRKuHyueBsygfJaV55866948 = JTPGYosvYSRKuHyueBsygfJaV26677593;     JTPGYosvYSRKuHyueBsygfJaV26677593 = JTPGYosvYSRKuHyueBsygfJaV73221980;     JTPGYosvYSRKuHyueBsygfJaV73221980 = JTPGYosvYSRKuHyueBsygfJaV48221509;     JTPGYosvYSRKuHyueBsygfJaV48221509 = JTPGYosvYSRKuHyueBsygfJaV43938580;     JTPGYosvYSRKuHyueBsygfJaV43938580 = JTPGYosvYSRKuHyueBsygfJaV59692691;     JTPGYosvYSRKuHyueBsygfJaV59692691 = JTPGYosvYSRKuHyueBsygfJaV14189099;     JTPGYosvYSRKuHyueBsygfJaV14189099 = JTPGYosvYSRKuHyueBsygfJaV42553032;     JTPGYosvYSRKuHyueBsygfJaV42553032 = JTPGYosvYSRKuHyueBsygfJaV91830750;     JTPGYosvYSRKuHyueBsygfJaV91830750 = JTPGYosvYSRKuHyueBsygfJaV52220292;     JTPGYosvYSRKuHyueBsygfJaV52220292 = JTPGYosvYSRKuHyueBsygfJaV73277464;     JTPGYosvYSRKuHyueBsygfJaV73277464 = JTPGYosvYSRKuHyueBsygfJaV23271175;     JTPGYosvYSRKuHyueBsygfJaV23271175 = JTPGYosvYSRKuHyueBsygfJaV67051072;     JTPGYosvYSRKuHyueBsygfJaV67051072 = JTPGYosvYSRKuHyueBsygfJaV29553397;     JTPGYosvYSRKuHyueBsygfJaV29553397 = JTPGYosvYSRKuHyueBsygfJaV17180461;     JTPGYosvYSRKuHyueBsygfJaV17180461 = JTPGYosvYSRKuHyueBsygfJaV25039944;     JTPGYosvYSRKuHyueBsygfJaV25039944 = JTPGYosvYSRKuHyueBsygfJaV42624742;     JTPGYosvYSRKuHyueBsygfJaV42624742 = JTPGYosvYSRKuHyueBsygfJaV92842504;     JTPGYosvYSRKuHyueBsygfJaV92842504 = JTPGYosvYSRKuHyueBsygfJaV70765260;     JTPGYosvYSRKuHyueBsygfJaV70765260 = JTPGYosvYSRKuHyueBsygfJaV64172760;     JTPGYosvYSRKuHyueBsygfJaV64172760 = JTPGYosvYSRKuHyueBsygfJaV42676183;     JTPGYosvYSRKuHyueBsygfJaV42676183 = JTPGYosvYSRKuHyueBsygfJaV82419942;     JTPGYosvYSRKuHyueBsygfJaV82419942 = JTPGYosvYSRKuHyueBsygfJaV53721116;     JTPGYosvYSRKuHyueBsygfJaV53721116 = JTPGYosvYSRKuHyueBsygfJaV56927504;     JTPGYosvYSRKuHyueBsygfJaV56927504 = JTPGYosvYSRKuHyueBsygfJaV10219381;     JTPGYosvYSRKuHyueBsygfJaV10219381 = JTPGYosvYSRKuHyueBsygfJaV12401266;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void qecljQFCjxeQVcqyxcZTHNGxMyjbDxWGlQYFALylRGQtWypSSQxYYtqcX85631217() {     long eZkheymaXeEEkxmeoBAxNaNIQ18518372 = -697770990;    long eZkheymaXeEEkxmeoBAxNaNIQ70847284 = -88167868;    long eZkheymaXeEEkxmeoBAxNaNIQ84686253 = -925294956;    long eZkheymaXeEEkxmeoBAxNaNIQ75407324 = -106817810;    long eZkheymaXeEEkxmeoBAxNaNIQ64915845 = -381150908;    long eZkheymaXeEEkxmeoBAxNaNIQ7443824 = -100256485;    long eZkheymaXeEEkxmeoBAxNaNIQ98322042 = -346683390;    long eZkheymaXeEEkxmeoBAxNaNIQ77416666 = 81723884;    long eZkheymaXeEEkxmeoBAxNaNIQ58643192 = -782409979;    long eZkheymaXeEEkxmeoBAxNaNIQ1415043 = -655108034;    long eZkheymaXeEEkxmeoBAxNaNIQ76248361 = 8933934;    long eZkheymaXeEEkxmeoBAxNaNIQ73706241 = -398434142;    long eZkheymaXeEEkxmeoBAxNaNIQ54052246 = -210467926;    long eZkheymaXeEEkxmeoBAxNaNIQ51756896 = -457929152;    long eZkheymaXeEEkxmeoBAxNaNIQ8437555 = -601692532;    long eZkheymaXeEEkxmeoBAxNaNIQ61184961 = -720340148;    long eZkheymaXeEEkxmeoBAxNaNIQ39476271 = -133271986;    long eZkheymaXeEEkxmeoBAxNaNIQ12358310 = -408816927;    long eZkheymaXeEEkxmeoBAxNaNIQ81393720 = -607989218;    long eZkheymaXeEEkxmeoBAxNaNIQ51618919 = -743799143;    long eZkheymaXeEEkxmeoBAxNaNIQ42007718 = -559095145;    long eZkheymaXeEEkxmeoBAxNaNIQ91665467 = -268922607;    long eZkheymaXeEEkxmeoBAxNaNIQ94754447 = -838821688;    long eZkheymaXeEEkxmeoBAxNaNIQ92649193 = -925354747;    long eZkheymaXeEEkxmeoBAxNaNIQ50429121 = -335842226;    long eZkheymaXeEEkxmeoBAxNaNIQ62070283 = -59784155;    long eZkheymaXeEEkxmeoBAxNaNIQ77328265 = -698788153;    long eZkheymaXeEEkxmeoBAxNaNIQ73544158 = -899797185;    long eZkheymaXeEEkxmeoBAxNaNIQ78621396 = -627720242;    long eZkheymaXeEEkxmeoBAxNaNIQ37870597 = -725947086;    long eZkheymaXeEEkxmeoBAxNaNIQ23413761 = -105403879;    long eZkheymaXeEEkxmeoBAxNaNIQ63532762 = 93074424;    long eZkheymaXeEEkxmeoBAxNaNIQ26451520 = -713374129;    long eZkheymaXeEEkxmeoBAxNaNIQ41511586 = -333518355;    long eZkheymaXeEEkxmeoBAxNaNIQ85911934 = -469539630;    long eZkheymaXeEEkxmeoBAxNaNIQ62076206 = -78838419;    long eZkheymaXeEEkxmeoBAxNaNIQ83873927 = 76906248;    long eZkheymaXeEEkxmeoBAxNaNIQ68535789 = -287353475;    long eZkheymaXeEEkxmeoBAxNaNIQ3047263 = -23284202;    long eZkheymaXeEEkxmeoBAxNaNIQ88832832 = -963255760;    long eZkheymaXeEEkxmeoBAxNaNIQ25741451 = 48496626;    long eZkheymaXeEEkxmeoBAxNaNIQ29738034 = -182757150;    long eZkheymaXeEEkxmeoBAxNaNIQ56533830 = -328865475;    long eZkheymaXeEEkxmeoBAxNaNIQ73349415 = -268123016;    long eZkheymaXeEEkxmeoBAxNaNIQ72387776 = -259284609;    long eZkheymaXeEEkxmeoBAxNaNIQ74730086 = -655748801;    long eZkheymaXeEEkxmeoBAxNaNIQ95434490 = -779326543;    long eZkheymaXeEEkxmeoBAxNaNIQ72636329 = 37062602;    long eZkheymaXeEEkxmeoBAxNaNIQ27559730 = -296088763;    long eZkheymaXeEEkxmeoBAxNaNIQ33570043 = -633769846;    long eZkheymaXeEEkxmeoBAxNaNIQ52735347 = -756128784;    long eZkheymaXeEEkxmeoBAxNaNIQ68703466 = -150812669;    long eZkheymaXeEEkxmeoBAxNaNIQ90899422 = -998637192;    long eZkheymaXeEEkxmeoBAxNaNIQ45658379 = -207371383;    long eZkheymaXeEEkxmeoBAxNaNIQ43623499 = -784510911;    long eZkheymaXeEEkxmeoBAxNaNIQ26852905 = -328848383;    long eZkheymaXeEEkxmeoBAxNaNIQ76092837 = -249346180;    long eZkheymaXeEEkxmeoBAxNaNIQ92037060 = -999940209;    long eZkheymaXeEEkxmeoBAxNaNIQ24978203 = -770975585;    long eZkheymaXeEEkxmeoBAxNaNIQ2845562 = -221366753;    long eZkheymaXeEEkxmeoBAxNaNIQ30115559 = -401468333;    long eZkheymaXeEEkxmeoBAxNaNIQ24777885 = -446886205;    long eZkheymaXeEEkxmeoBAxNaNIQ98795269 = -290555875;    long eZkheymaXeEEkxmeoBAxNaNIQ20772595 = 43537107;    long eZkheymaXeEEkxmeoBAxNaNIQ78001281 = -449704156;    long eZkheymaXeEEkxmeoBAxNaNIQ12715600 = 15859510;    long eZkheymaXeEEkxmeoBAxNaNIQ47254722 = -685060014;    long eZkheymaXeEEkxmeoBAxNaNIQ12540661 = -876949571;    long eZkheymaXeEEkxmeoBAxNaNIQ65844962 = -988389522;    long eZkheymaXeEEkxmeoBAxNaNIQ46361349 = -422854113;    long eZkheymaXeEEkxmeoBAxNaNIQ77311034 = -697246397;    long eZkheymaXeEEkxmeoBAxNaNIQ70940482 = -845918512;    long eZkheymaXeEEkxmeoBAxNaNIQ9311048 = -285532726;    long eZkheymaXeEEkxmeoBAxNaNIQ92560887 = -644733459;    long eZkheymaXeEEkxmeoBAxNaNIQ25877468 = -692295769;    long eZkheymaXeEEkxmeoBAxNaNIQ12269685 = -276337996;    long eZkheymaXeEEkxmeoBAxNaNIQ35131638 = -940057133;    long eZkheymaXeEEkxmeoBAxNaNIQ21405032 = -470698672;    long eZkheymaXeEEkxmeoBAxNaNIQ20261418 = -566070139;    long eZkheymaXeEEkxmeoBAxNaNIQ75699034 = -680093425;    long eZkheymaXeEEkxmeoBAxNaNIQ66635792 = -280457613;    long eZkheymaXeEEkxmeoBAxNaNIQ4691936 = -635850755;    long eZkheymaXeEEkxmeoBAxNaNIQ45984429 = -503708423;    long eZkheymaXeEEkxmeoBAxNaNIQ45051354 = -993950396;    long eZkheymaXeEEkxmeoBAxNaNIQ85135250 = -969818303;    long eZkheymaXeEEkxmeoBAxNaNIQ54710294 = -954591211;    long eZkheymaXeEEkxmeoBAxNaNIQ72633339 = 91711615;    long eZkheymaXeEEkxmeoBAxNaNIQ80793140 = -406002747;    long eZkheymaXeEEkxmeoBAxNaNIQ97888086 = -549007445;    long eZkheymaXeEEkxmeoBAxNaNIQ59059030 = -40691247;    long eZkheymaXeEEkxmeoBAxNaNIQ85983369 = -829492239;    long eZkheymaXeEEkxmeoBAxNaNIQ91836866 = 76846457;    long eZkheymaXeEEkxmeoBAxNaNIQ43557587 = -516377890;    long eZkheymaXeEEkxmeoBAxNaNIQ201701 = -801917449;    long eZkheymaXeEEkxmeoBAxNaNIQ58717273 = -461787427;    long eZkheymaXeEEkxmeoBAxNaNIQ963567 = -504617169;    long eZkheymaXeEEkxmeoBAxNaNIQ30942764 = -892201275;    long eZkheymaXeEEkxmeoBAxNaNIQ35761236 = -272402582;    long eZkheymaXeEEkxmeoBAxNaNIQ95348134 = -818418861;    long eZkheymaXeEEkxmeoBAxNaNIQ59672177 = -697770990;     eZkheymaXeEEkxmeoBAxNaNIQ18518372 = eZkheymaXeEEkxmeoBAxNaNIQ70847284;     eZkheymaXeEEkxmeoBAxNaNIQ70847284 = eZkheymaXeEEkxmeoBAxNaNIQ84686253;     eZkheymaXeEEkxmeoBAxNaNIQ84686253 = eZkheymaXeEEkxmeoBAxNaNIQ75407324;     eZkheymaXeEEkxmeoBAxNaNIQ75407324 = eZkheymaXeEEkxmeoBAxNaNIQ64915845;     eZkheymaXeEEkxmeoBAxNaNIQ64915845 = eZkheymaXeEEkxmeoBAxNaNIQ7443824;     eZkheymaXeEEkxmeoBAxNaNIQ7443824 = eZkheymaXeEEkxmeoBAxNaNIQ98322042;     eZkheymaXeEEkxmeoBAxNaNIQ98322042 = eZkheymaXeEEkxmeoBAxNaNIQ77416666;     eZkheymaXeEEkxmeoBAxNaNIQ77416666 = eZkheymaXeEEkxmeoBAxNaNIQ58643192;     eZkheymaXeEEkxmeoBAxNaNIQ58643192 = eZkheymaXeEEkxmeoBAxNaNIQ1415043;     eZkheymaXeEEkxmeoBAxNaNIQ1415043 = eZkheymaXeEEkxmeoBAxNaNIQ76248361;     eZkheymaXeEEkxmeoBAxNaNIQ76248361 = eZkheymaXeEEkxmeoBAxNaNIQ73706241;     eZkheymaXeEEkxmeoBAxNaNIQ73706241 = eZkheymaXeEEkxmeoBAxNaNIQ54052246;     eZkheymaXeEEkxmeoBAxNaNIQ54052246 = eZkheymaXeEEkxmeoBAxNaNIQ51756896;     eZkheymaXeEEkxmeoBAxNaNIQ51756896 = eZkheymaXeEEkxmeoBAxNaNIQ8437555;     eZkheymaXeEEkxmeoBAxNaNIQ8437555 = eZkheymaXeEEkxmeoBAxNaNIQ61184961;     eZkheymaXeEEkxmeoBAxNaNIQ61184961 = eZkheymaXeEEkxmeoBAxNaNIQ39476271;     eZkheymaXeEEkxmeoBAxNaNIQ39476271 = eZkheymaXeEEkxmeoBAxNaNIQ12358310;     eZkheymaXeEEkxmeoBAxNaNIQ12358310 = eZkheymaXeEEkxmeoBAxNaNIQ81393720;     eZkheymaXeEEkxmeoBAxNaNIQ81393720 = eZkheymaXeEEkxmeoBAxNaNIQ51618919;     eZkheymaXeEEkxmeoBAxNaNIQ51618919 = eZkheymaXeEEkxmeoBAxNaNIQ42007718;     eZkheymaXeEEkxmeoBAxNaNIQ42007718 = eZkheymaXeEEkxmeoBAxNaNIQ91665467;     eZkheymaXeEEkxmeoBAxNaNIQ91665467 = eZkheymaXeEEkxmeoBAxNaNIQ94754447;     eZkheymaXeEEkxmeoBAxNaNIQ94754447 = eZkheymaXeEEkxmeoBAxNaNIQ92649193;     eZkheymaXeEEkxmeoBAxNaNIQ92649193 = eZkheymaXeEEkxmeoBAxNaNIQ50429121;     eZkheymaXeEEkxmeoBAxNaNIQ50429121 = eZkheymaXeEEkxmeoBAxNaNIQ62070283;     eZkheymaXeEEkxmeoBAxNaNIQ62070283 = eZkheymaXeEEkxmeoBAxNaNIQ77328265;     eZkheymaXeEEkxmeoBAxNaNIQ77328265 = eZkheymaXeEEkxmeoBAxNaNIQ73544158;     eZkheymaXeEEkxmeoBAxNaNIQ73544158 = eZkheymaXeEEkxmeoBAxNaNIQ78621396;     eZkheymaXeEEkxmeoBAxNaNIQ78621396 = eZkheymaXeEEkxmeoBAxNaNIQ37870597;     eZkheymaXeEEkxmeoBAxNaNIQ37870597 = eZkheymaXeEEkxmeoBAxNaNIQ23413761;     eZkheymaXeEEkxmeoBAxNaNIQ23413761 = eZkheymaXeEEkxmeoBAxNaNIQ63532762;     eZkheymaXeEEkxmeoBAxNaNIQ63532762 = eZkheymaXeEEkxmeoBAxNaNIQ26451520;     eZkheymaXeEEkxmeoBAxNaNIQ26451520 = eZkheymaXeEEkxmeoBAxNaNIQ41511586;     eZkheymaXeEEkxmeoBAxNaNIQ41511586 = eZkheymaXeEEkxmeoBAxNaNIQ85911934;     eZkheymaXeEEkxmeoBAxNaNIQ85911934 = eZkheymaXeEEkxmeoBAxNaNIQ62076206;     eZkheymaXeEEkxmeoBAxNaNIQ62076206 = eZkheymaXeEEkxmeoBAxNaNIQ83873927;     eZkheymaXeEEkxmeoBAxNaNIQ83873927 = eZkheymaXeEEkxmeoBAxNaNIQ68535789;     eZkheymaXeEEkxmeoBAxNaNIQ68535789 = eZkheymaXeEEkxmeoBAxNaNIQ3047263;     eZkheymaXeEEkxmeoBAxNaNIQ3047263 = eZkheymaXeEEkxmeoBAxNaNIQ88832832;     eZkheymaXeEEkxmeoBAxNaNIQ88832832 = eZkheymaXeEEkxmeoBAxNaNIQ25741451;     eZkheymaXeEEkxmeoBAxNaNIQ25741451 = eZkheymaXeEEkxmeoBAxNaNIQ29738034;     eZkheymaXeEEkxmeoBAxNaNIQ29738034 = eZkheymaXeEEkxmeoBAxNaNIQ56533830;     eZkheymaXeEEkxmeoBAxNaNIQ56533830 = eZkheymaXeEEkxmeoBAxNaNIQ73349415;     eZkheymaXeEEkxmeoBAxNaNIQ73349415 = eZkheymaXeEEkxmeoBAxNaNIQ72387776;     eZkheymaXeEEkxmeoBAxNaNIQ72387776 = eZkheymaXeEEkxmeoBAxNaNIQ74730086;     eZkheymaXeEEkxmeoBAxNaNIQ74730086 = eZkheymaXeEEkxmeoBAxNaNIQ95434490;     eZkheymaXeEEkxmeoBAxNaNIQ95434490 = eZkheymaXeEEkxmeoBAxNaNIQ72636329;     eZkheymaXeEEkxmeoBAxNaNIQ72636329 = eZkheymaXeEEkxmeoBAxNaNIQ27559730;     eZkheymaXeEEkxmeoBAxNaNIQ27559730 = eZkheymaXeEEkxmeoBAxNaNIQ33570043;     eZkheymaXeEEkxmeoBAxNaNIQ33570043 = eZkheymaXeEEkxmeoBAxNaNIQ52735347;     eZkheymaXeEEkxmeoBAxNaNIQ52735347 = eZkheymaXeEEkxmeoBAxNaNIQ68703466;     eZkheymaXeEEkxmeoBAxNaNIQ68703466 = eZkheymaXeEEkxmeoBAxNaNIQ90899422;     eZkheymaXeEEkxmeoBAxNaNIQ90899422 = eZkheymaXeEEkxmeoBAxNaNIQ45658379;     eZkheymaXeEEkxmeoBAxNaNIQ45658379 = eZkheymaXeEEkxmeoBAxNaNIQ43623499;     eZkheymaXeEEkxmeoBAxNaNIQ43623499 = eZkheymaXeEEkxmeoBAxNaNIQ26852905;     eZkheymaXeEEkxmeoBAxNaNIQ26852905 = eZkheymaXeEEkxmeoBAxNaNIQ76092837;     eZkheymaXeEEkxmeoBAxNaNIQ76092837 = eZkheymaXeEEkxmeoBAxNaNIQ92037060;     eZkheymaXeEEkxmeoBAxNaNIQ92037060 = eZkheymaXeEEkxmeoBAxNaNIQ24978203;     eZkheymaXeEEkxmeoBAxNaNIQ24978203 = eZkheymaXeEEkxmeoBAxNaNIQ2845562;     eZkheymaXeEEkxmeoBAxNaNIQ2845562 = eZkheymaXeEEkxmeoBAxNaNIQ30115559;     eZkheymaXeEEkxmeoBAxNaNIQ30115559 = eZkheymaXeEEkxmeoBAxNaNIQ24777885;     eZkheymaXeEEkxmeoBAxNaNIQ24777885 = eZkheymaXeEEkxmeoBAxNaNIQ98795269;     eZkheymaXeEEkxmeoBAxNaNIQ98795269 = eZkheymaXeEEkxmeoBAxNaNIQ20772595;     eZkheymaXeEEkxmeoBAxNaNIQ20772595 = eZkheymaXeEEkxmeoBAxNaNIQ78001281;     eZkheymaXeEEkxmeoBAxNaNIQ78001281 = eZkheymaXeEEkxmeoBAxNaNIQ12715600;     eZkheymaXeEEkxmeoBAxNaNIQ12715600 = eZkheymaXeEEkxmeoBAxNaNIQ47254722;     eZkheymaXeEEkxmeoBAxNaNIQ47254722 = eZkheymaXeEEkxmeoBAxNaNIQ12540661;     eZkheymaXeEEkxmeoBAxNaNIQ12540661 = eZkheymaXeEEkxmeoBAxNaNIQ65844962;     eZkheymaXeEEkxmeoBAxNaNIQ65844962 = eZkheymaXeEEkxmeoBAxNaNIQ46361349;     eZkheymaXeEEkxmeoBAxNaNIQ46361349 = eZkheymaXeEEkxmeoBAxNaNIQ77311034;     eZkheymaXeEEkxmeoBAxNaNIQ77311034 = eZkheymaXeEEkxmeoBAxNaNIQ70940482;     eZkheymaXeEEkxmeoBAxNaNIQ70940482 = eZkheymaXeEEkxmeoBAxNaNIQ9311048;     eZkheymaXeEEkxmeoBAxNaNIQ9311048 = eZkheymaXeEEkxmeoBAxNaNIQ92560887;     eZkheymaXeEEkxmeoBAxNaNIQ92560887 = eZkheymaXeEEkxmeoBAxNaNIQ25877468;     eZkheymaXeEEkxmeoBAxNaNIQ25877468 = eZkheymaXeEEkxmeoBAxNaNIQ12269685;     eZkheymaXeEEkxmeoBAxNaNIQ12269685 = eZkheymaXeEEkxmeoBAxNaNIQ35131638;     eZkheymaXeEEkxmeoBAxNaNIQ35131638 = eZkheymaXeEEkxmeoBAxNaNIQ21405032;     eZkheymaXeEEkxmeoBAxNaNIQ21405032 = eZkheymaXeEEkxmeoBAxNaNIQ20261418;     eZkheymaXeEEkxmeoBAxNaNIQ20261418 = eZkheymaXeEEkxmeoBAxNaNIQ75699034;     eZkheymaXeEEkxmeoBAxNaNIQ75699034 = eZkheymaXeEEkxmeoBAxNaNIQ66635792;     eZkheymaXeEEkxmeoBAxNaNIQ66635792 = eZkheymaXeEEkxmeoBAxNaNIQ4691936;     eZkheymaXeEEkxmeoBAxNaNIQ4691936 = eZkheymaXeEEkxmeoBAxNaNIQ45984429;     eZkheymaXeEEkxmeoBAxNaNIQ45984429 = eZkheymaXeEEkxmeoBAxNaNIQ45051354;     eZkheymaXeEEkxmeoBAxNaNIQ45051354 = eZkheymaXeEEkxmeoBAxNaNIQ85135250;     eZkheymaXeEEkxmeoBAxNaNIQ85135250 = eZkheymaXeEEkxmeoBAxNaNIQ54710294;     eZkheymaXeEEkxmeoBAxNaNIQ54710294 = eZkheymaXeEEkxmeoBAxNaNIQ72633339;     eZkheymaXeEEkxmeoBAxNaNIQ72633339 = eZkheymaXeEEkxmeoBAxNaNIQ80793140;     eZkheymaXeEEkxmeoBAxNaNIQ80793140 = eZkheymaXeEEkxmeoBAxNaNIQ97888086;     eZkheymaXeEEkxmeoBAxNaNIQ97888086 = eZkheymaXeEEkxmeoBAxNaNIQ59059030;     eZkheymaXeEEkxmeoBAxNaNIQ59059030 = eZkheymaXeEEkxmeoBAxNaNIQ85983369;     eZkheymaXeEEkxmeoBAxNaNIQ85983369 = eZkheymaXeEEkxmeoBAxNaNIQ91836866;     eZkheymaXeEEkxmeoBAxNaNIQ91836866 = eZkheymaXeEEkxmeoBAxNaNIQ43557587;     eZkheymaXeEEkxmeoBAxNaNIQ43557587 = eZkheymaXeEEkxmeoBAxNaNIQ201701;     eZkheymaXeEEkxmeoBAxNaNIQ201701 = eZkheymaXeEEkxmeoBAxNaNIQ58717273;     eZkheymaXeEEkxmeoBAxNaNIQ58717273 = eZkheymaXeEEkxmeoBAxNaNIQ963567;     eZkheymaXeEEkxmeoBAxNaNIQ963567 = eZkheymaXeEEkxmeoBAxNaNIQ30942764;     eZkheymaXeEEkxmeoBAxNaNIQ30942764 = eZkheymaXeEEkxmeoBAxNaNIQ35761236;     eZkheymaXeEEkxmeoBAxNaNIQ35761236 = eZkheymaXeEEkxmeoBAxNaNIQ95348134;     eZkheymaXeEEkxmeoBAxNaNIQ95348134 = eZkheymaXeEEkxmeoBAxNaNIQ59672177;     eZkheymaXeEEkxmeoBAxNaNIQ59672177 = eZkheymaXeEEkxmeoBAxNaNIQ18518372;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void pzLlBbvycbPdIhmTLkrcBImxqThdXTFHlaEnZabjJYZRSpwXJzccrdLhN52922817() {     long NuitSbIWHsicyulJITdiUfAWK53977341 = -64047890;    long NuitSbIWHsicyulJITdiUfAWK84119362 = 31280526;    long NuitSbIWHsicyulJITdiUfAWK22072731 = -590962031;    long NuitSbIWHsicyulJITdiUfAWK47630679 = 72031118;    long NuitSbIWHsicyulJITdiUfAWK21201114 = -486749753;    long NuitSbIWHsicyulJITdiUfAWK43666696 = -362604381;    long NuitSbIWHsicyulJITdiUfAWK8979449 = -191409124;    long NuitSbIWHsicyulJITdiUfAWK39548227 = -662510257;    long NuitSbIWHsicyulJITdiUfAWK60160797 = -170741386;    long NuitSbIWHsicyulJITdiUfAWK16317755 = -319795032;    long NuitSbIWHsicyulJITdiUfAWK14430097 = -893073796;    long NuitSbIWHsicyulJITdiUfAWK74274389 = -262554914;    long NuitSbIWHsicyulJITdiUfAWK92286891 = -762480431;    long NuitSbIWHsicyulJITdiUfAWK4897759 = -434292561;    long NuitSbIWHsicyulJITdiUfAWK66632070 = -5117547;    long NuitSbIWHsicyulJITdiUfAWK44726262 = -356151755;    long NuitSbIWHsicyulJITdiUfAWK95312206 = -660246539;    long NuitSbIWHsicyulJITdiUfAWK12118502 = -482244996;    long NuitSbIWHsicyulJITdiUfAWK81944049 = -924552639;    long NuitSbIWHsicyulJITdiUfAWK45456137 = -70360209;    long NuitSbIWHsicyulJITdiUfAWK55094581 = -216369834;    long NuitSbIWHsicyulJITdiUfAWK95086992 = -355558901;    long NuitSbIWHsicyulJITdiUfAWK65279827 = -476453872;    long NuitSbIWHsicyulJITdiUfAWK86442138 = -336179352;    long NuitSbIWHsicyulJITdiUfAWK58447072 = -359827424;    long NuitSbIWHsicyulJITdiUfAWK72768454 = -848360962;    long NuitSbIWHsicyulJITdiUfAWK37748839 = -505072293;    long NuitSbIWHsicyulJITdiUfAWK14272583 = 30430640;    long NuitSbIWHsicyulJITdiUfAWK25289611 = -101815044;    long NuitSbIWHsicyulJITdiUfAWK43404008 = -760454257;    long NuitSbIWHsicyulJITdiUfAWK41996993 = -657384366;    long NuitSbIWHsicyulJITdiUfAWK1355781 = -779896991;    long NuitSbIWHsicyulJITdiUfAWK38669530 = -860970106;    long NuitSbIWHsicyulJITdiUfAWK71260012 = -398212169;    long NuitSbIWHsicyulJITdiUfAWK51720388 = -420639880;    long NuitSbIWHsicyulJITdiUfAWK13637050 = -293403725;    long NuitSbIWHsicyulJITdiUfAWK33285744 = -887789792;    long NuitSbIWHsicyulJITdiUfAWK19751193 = -270009056;    long NuitSbIWHsicyulJITdiUfAWK33437824 = -774160478;    long NuitSbIWHsicyulJITdiUfAWK53104364 = -428518306;    long NuitSbIWHsicyulJITdiUfAWK59193059 = -820702288;    long NuitSbIWHsicyulJITdiUfAWK19103161 = -877302441;    long NuitSbIWHsicyulJITdiUfAWK45917208 = -982046261;    long NuitSbIWHsicyulJITdiUfAWK13480754 = -872455426;    long NuitSbIWHsicyulJITdiUfAWK72404234 = -85795770;    long NuitSbIWHsicyulJITdiUfAWK20691415 = -694672433;    long NuitSbIWHsicyulJITdiUfAWK14779655 = -163312904;    long NuitSbIWHsicyulJITdiUfAWK90362641 = -129463991;    long NuitSbIWHsicyulJITdiUfAWK50452395 = 40174357;    long NuitSbIWHsicyulJITdiUfAWK58099632 = -24796662;    long NuitSbIWHsicyulJITdiUfAWK33506071 = -630405342;    long NuitSbIWHsicyulJITdiUfAWK52188939 = -364465015;    long NuitSbIWHsicyulJITdiUfAWK59520571 = -754682746;    long NuitSbIWHsicyulJITdiUfAWK61650225 = -398879882;    long NuitSbIWHsicyulJITdiUfAWK97828235 = -31001057;    long NuitSbIWHsicyulJITdiUfAWK58890348 = -708488989;    long NuitSbIWHsicyulJITdiUfAWK18839536 = -492265603;    long NuitSbIWHsicyulJITdiUfAWK35630592 = -154782680;    long NuitSbIWHsicyulJITdiUfAWK89183606 = -568141458;    long NuitSbIWHsicyulJITdiUfAWK48432660 = -638388792;    long NuitSbIWHsicyulJITdiUfAWK5917857 = -857532088;    long NuitSbIWHsicyulJITdiUfAWK94706865 = -121839765;    long NuitSbIWHsicyulJITdiUfAWK14258616 = -460695213;    long NuitSbIWHsicyulJITdiUfAWK16756789 = -410287130;    long NuitSbIWHsicyulJITdiUfAWK74320762 = -662410667;    long NuitSbIWHsicyulJITdiUfAWK13074316 = -13176805;    long NuitSbIWHsicyulJITdiUfAWK35604860 = -401584808;    long NuitSbIWHsicyulJITdiUfAWK21026880 = -264268263;    long NuitSbIWHsicyulJITdiUfAWK53177371 = 86347319;    long NuitSbIWHsicyulJITdiUfAWK52995021 = -711713823;    long NuitSbIWHsicyulJITdiUfAWK11440519 = -468361964;    long NuitSbIWHsicyulJITdiUfAWK75561014 = -290237483;    long NuitSbIWHsicyulJITdiUfAWK78680677 = -708084518;    long NuitSbIWHsicyulJITdiUfAWK28839686 = -396034334;    long NuitSbIWHsicyulJITdiUfAWK86263078 = -249657921;    long NuitSbIWHsicyulJITdiUfAWK35991421 = -339067394;    long NuitSbIWHsicyulJITdiUfAWK49169784 = -373512641;    long NuitSbIWHsicyulJITdiUfAWK51799073 = -603998446;    long NuitSbIWHsicyulJITdiUfAWK14037904 = -150383582;    long NuitSbIWHsicyulJITdiUfAWK37755657 = -665154992;    long NuitSbIWHsicyulJITdiUfAWK57988800 = -585048059;    long NuitSbIWHsicyulJITdiUfAWK47386198 = -275608302;    long NuitSbIWHsicyulJITdiUfAWK63820187 = 90256283;    long NuitSbIWHsicyulJITdiUfAWK67189979 = 22981617;    long NuitSbIWHsicyulJITdiUfAWK9897938 = -30048916;    long NuitSbIWHsicyulJITdiUfAWK89808053 = -192919351;    long NuitSbIWHsicyulJITdiUfAWK41835210 = 74785755;    long NuitSbIWHsicyulJITdiUfAWK77019305 = -362090224;    long NuitSbIWHsicyulJITdiUfAWK73431776 = -267211112;    long NuitSbIWHsicyulJITdiUfAWK92830039 = -712150892;    long NuitSbIWHsicyulJITdiUfAWK94797514 = -801138123;    long NuitSbIWHsicyulJITdiUfAWK97655151 = -633007113;    long NuitSbIWHsicyulJITdiUfAWK30567586 = -701867599;    long NuitSbIWHsicyulJITdiUfAWK85005164 = -35771687;    long NuitSbIWHsicyulJITdiUfAWK47186508 = -570986218;    long NuitSbIWHsicyulJITdiUfAWK64486193 = -598862524;    long NuitSbIWHsicyulJITdiUfAWK4844545 = -316607228;    long NuitSbIWHsicyulJITdiUfAWK29160420 = -471759131;    long NuitSbIWHsicyulJITdiUfAWK39159992 = -110044760;    long NuitSbIWHsicyulJITdiUfAWK59329919 = -64047890;     NuitSbIWHsicyulJITdiUfAWK53977341 = NuitSbIWHsicyulJITdiUfAWK84119362;     NuitSbIWHsicyulJITdiUfAWK84119362 = NuitSbIWHsicyulJITdiUfAWK22072731;     NuitSbIWHsicyulJITdiUfAWK22072731 = NuitSbIWHsicyulJITdiUfAWK47630679;     NuitSbIWHsicyulJITdiUfAWK47630679 = NuitSbIWHsicyulJITdiUfAWK21201114;     NuitSbIWHsicyulJITdiUfAWK21201114 = NuitSbIWHsicyulJITdiUfAWK43666696;     NuitSbIWHsicyulJITdiUfAWK43666696 = NuitSbIWHsicyulJITdiUfAWK8979449;     NuitSbIWHsicyulJITdiUfAWK8979449 = NuitSbIWHsicyulJITdiUfAWK39548227;     NuitSbIWHsicyulJITdiUfAWK39548227 = NuitSbIWHsicyulJITdiUfAWK60160797;     NuitSbIWHsicyulJITdiUfAWK60160797 = NuitSbIWHsicyulJITdiUfAWK16317755;     NuitSbIWHsicyulJITdiUfAWK16317755 = NuitSbIWHsicyulJITdiUfAWK14430097;     NuitSbIWHsicyulJITdiUfAWK14430097 = NuitSbIWHsicyulJITdiUfAWK74274389;     NuitSbIWHsicyulJITdiUfAWK74274389 = NuitSbIWHsicyulJITdiUfAWK92286891;     NuitSbIWHsicyulJITdiUfAWK92286891 = NuitSbIWHsicyulJITdiUfAWK4897759;     NuitSbIWHsicyulJITdiUfAWK4897759 = NuitSbIWHsicyulJITdiUfAWK66632070;     NuitSbIWHsicyulJITdiUfAWK66632070 = NuitSbIWHsicyulJITdiUfAWK44726262;     NuitSbIWHsicyulJITdiUfAWK44726262 = NuitSbIWHsicyulJITdiUfAWK95312206;     NuitSbIWHsicyulJITdiUfAWK95312206 = NuitSbIWHsicyulJITdiUfAWK12118502;     NuitSbIWHsicyulJITdiUfAWK12118502 = NuitSbIWHsicyulJITdiUfAWK81944049;     NuitSbIWHsicyulJITdiUfAWK81944049 = NuitSbIWHsicyulJITdiUfAWK45456137;     NuitSbIWHsicyulJITdiUfAWK45456137 = NuitSbIWHsicyulJITdiUfAWK55094581;     NuitSbIWHsicyulJITdiUfAWK55094581 = NuitSbIWHsicyulJITdiUfAWK95086992;     NuitSbIWHsicyulJITdiUfAWK95086992 = NuitSbIWHsicyulJITdiUfAWK65279827;     NuitSbIWHsicyulJITdiUfAWK65279827 = NuitSbIWHsicyulJITdiUfAWK86442138;     NuitSbIWHsicyulJITdiUfAWK86442138 = NuitSbIWHsicyulJITdiUfAWK58447072;     NuitSbIWHsicyulJITdiUfAWK58447072 = NuitSbIWHsicyulJITdiUfAWK72768454;     NuitSbIWHsicyulJITdiUfAWK72768454 = NuitSbIWHsicyulJITdiUfAWK37748839;     NuitSbIWHsicyulJITdiUfAWK37748839 = NuitSbIWHsicyulJITdiUfAWK14272583;     NuitSbIWHsicyulJITdiUfAWK14272583 = NuitSbIWHsicyulJITdiUfAWK25289611;     NuitSbIWHsicyulJITdiUfAWK25289611 = NuitSbIWHsicyulJITdiUfAWK43404008;     NuitSbIWHsicyulJITdiUfAWK43404008 = NuitSbIWHsicyulJITdiUfAWK41996993;     NuitSbIWHsicyulJITdiUfAWK41996993 = NuitSbIWHsicyulJITdiUfAWK1355781;     NuitSbIWHsicyulJITdiUfAWK1355781 = NuitSbIWHsicyulJITdiUfAWK38669530;     NuitSbIWHsicyulJITdiUfAWK38669530 = NuitSbIWHsicyulJITdiUfAWK71260012;     NuitSbIWHsicyulJITdiUfAWK71260012 = NuitSbIWHsicyulJITdiUfAWK51720388;     NuitSbIWHsicyulJITdiUfAWK51720388 = NuitSbIWHsicyulJITdiUfAWK13637050;     NuitSbIWHsicyulJITdiUfAWK13637050 = NuitSbIWHsicyulJITdiUfAWK33285744;     NuitSbIWHsicyulJITdiUfAWK33285744 = NuitSbIWHsicyulJITdiUfAWK19751193;     NuitSbIWHsicyulJITdiUfAWK19751193 = NuitSbIWHsicyulJITdiUfAWK33437824;     NuitSbIWHsicyulJITdiUfAWK33437824 = NuitSbIWHsicyulJITdiUfAWK53104364;     NuitSbIWHsicyulJITdiUfAWK53104364 = NuitSbIWHsicyulJITdiUfAWK59193059;     NuitSbIWHsicyulJITdiUfAWK59193059 = NuitSbIWHsicyulJITdiUfAWK19103161;     NuitSbIWHsicyulJITdiUfAWK19103161 = NuitSbIWHsicyulJITdiUfAWK45917208;     NuitSbIWHsicyulJITdiUfAWK45917208 = NuitSbIWHsicyulJITdiUfAWK13480754;     NuitSbIWHsicyulJITdiUfAWK13480754 = NuitSbIWHsicyulJITdiUfAWK72404234;     NuitSbIWHsicyulJITdiUfAWK72404234 = NuitSbIWHsicyulJITdiUfAWK20691415;     NuitSbIWHsicyulJITdiUfAWK20691415 = NuitSbIWHsicyulJITdiUfAWK14779655;     NuitSbIWHsicyulJITdiUfAWK14779655 = NuitSbIWHsicyulJITdiUfAWK90362641;     NuitSbIWHsicyulJITdiUfAWK90362641 = NuitSbIWHsicyulJITdiUfAWK50452395;     NuitSbIWHsicyulJITdiUfAWK50452395 = NuitSbIWHsicyulJITdiUfAWK58099632;     NuitSbIWHsicyulJITdiUfAWK58099632 = NuitSbIWHsicyulJITdiUfAWK33506071;     NuitSbIWHsicyulJITdiUfAWK33506071 = NuitSbIWHsicyulJITdiUfAWK52188939;     NuitSbIWHsicyulJITdiUfAWK52188939 = NuitSbIWHsicyulJITdiUfAWK59520571;     NuitSbIWHsicyulJITdiUfAWK59520571 = NuitSbIWHsicyulJITdiUfAWK61650225;     NuitSbIWHsicyulJITdiUfAWK61650225 = NuitSbIWHsicyulJITdiUfAWK97828235;     NuitSbIWHsicyulJITdiUfAWK97828235 = NuitSbIWHsicyulJITdiUfAWK58890348;     NuitSbIWHsicyulJITdiUfAWK58890348 = NuitSbIWHsicyulJITdiUfAWK18839536;     NuitSbIWHsicyulJITdiUfAWK18839536 = NuitSbIWHsicyulJITdiUfAWK35630592;     NuitSbIWHsicyulJITdiUfAWK35630592 = NuitSbIWHsicyulJITdiUfAWK89183606;     NuitSbIWHsicyulJITdiUfAWK89183606 = NuitSbIWHsicyulJITdiUfAWK48432660;     NuitSbIWHsicyulJITdiUfAWK48432660 = NuitSbIWHsicyulJITdiUfAWK5917857;     NuitSbIWHsicyulJITdiUfAWK5917857 = NuitSbIWHsicyulJITdiUfAWK94706865;     NuitSbIWHsicyulJITdiUfAWK94706865 = NuitSbIWHsicyulJITdiUfAWK14258616;     NuitSbIWHsicyulJITdiUfAWK14258616 = NuitSbIWHsicyulJITdiUfAWK16756789;     NuitSbIWHsicyulJITdiUfAWK16756789 = NuitSbIWHsicyulJITdiUfAWK74320762;     NuitSbIWHsicyulJITdiUfAWK74320762 = NuitSbIWHsicyulJITdiUfAWK13074316;     NuitSbIWHsicyulJITdiUfAWK13074316 = NuitSbIWHsicyulJITdiUfAWK35604860;     NuitSbIWHsicyulJITdiUfAWK35604860 = NuitSbIWHsicyulJITdiUfAWK21026880;     NuitSbIWHsicyulJITdiUfAWK21026880 = NuitSbIWHsicyulJITdiUfAWK53177371;     NuitSbIWHsicyulJITdiUfAWK53177371 = NuitSbIWHsicyulJITdiUfAWK52995021;     NuitSbIWHsicyulJITdiUfAWK52995021 = NuitSbIWHsicyulJITdiUfAWK11440519;     NuitSbIWHsicyulJITdiUfAWK11440519 = NuitSbIWHsicyulJITdiUfAWK75561014;     NuitSbIWHsicyulJITdiUfAWK75561014 = NuitSbIWHsicyulJITdiUfAWK78680677;     NuitSbIWHsicyulJITdiUfAWK78680677 = NuitSbIWHsicyulJITdiUfAWK28839686;     NuitSbIWHsicyulJITdiUfAWK28839686 = NuitSbIWHsicyulJITdiUfAWK86263078;     NuitSbIWHsicyulJITdiUfAWK86263078 = NuitSbIWHsicyulJITdiUfAWK35991421;     NuitSbIWHsicyulJITdiUfAWK35991421 = NuitSbIWHsicyulJITdiUfAWK49169784;     NuitSbIWHsicyulJITdiUfAWK49169784 = NuitSbIWHsicyulJITdiUfAWK51799073;     NuitSbIWHsicyulJITdiUfAWK51799073 = NuitSbIWHsicyulJITdiUfAWK14037904;     NuitSbIWHsicyulJITdiUfAWK14037904 = NuitSbIWHsicyulJITdiUfAWK37755657;     NuitSbIWHsicyulJITdiUfAWK37755657 = NuitSbIWHsicyulJITdiUfAWK57988800;     NuitSbIWHsicyulJITdiUfAWK57988800 = NuitSbIWHsicyulJITdiUfAWK47386198;     NuitSbIWHsicyulJITdiUfAWK47386198 = NuitSbIWHsicyulJITdiUfAWK63820187;     NuitSbIWHsicyulJITdiUfAWK63820187 = NuitSbIWHsicyulJITdiUfAWK67189979;     NuitSbIWHsicyulJITdiUfAWK67189979 = NuitSbIWHsicyulJITdiUfAWK9897938;     NuitSbIWHsicyulJITdiUfAWK9897938 = NuitSbIWHsicyulJITdiUfAWK89808053;     NuitSbIWHsicyulJITdiUfAWK89808053 = NuitSbIWHsicyulJITdiUfAWK41835210;     NuitSbIWHsicyulJITdiUfAWK41835210 = NuitSbIWHsicyulJITdiUfAWK77019305;     NuitSbIWHsicyulJITdiUfAWK77019305 = NuitSbIWHsicyulJITdiUfAWK73431776;     NuitSbIWHsicyulJITdiUfAWK73431776 = NuitSbIWHsicyulJITdiUfAWK92830039;     NuitSbIWHsicyulJITdiUfAWK92830039 = NuitSbIWHsicyulJITdiUfAWK94797514;     NuitSbIWHsicyulJITdiUfAWK94797514 = NuitSbIWHsicyulJITdiUfAWK97655151;     NuitSbIWHsicyulJITdiUfAWK97655151 = NuitSbIWHsicyulJITdiUfAWK30567586;     NuitSbIWHsicyulJITdiUfAWK30567586 = NuitSbIWHsicyulJITdiUfAWK85005164;     NuitSbIWHsicyulJITdiUfAWK85005164 = NuitSbIWHsicyulJITdiUfAWK47186508;     NuitSbIWHsicyulJITdiUfAWK47186508 = NuitSbIWHsicyulJITdiUfAWK64486193;     NuitSbIWHsicyulJITdiUfAWK64486193 = NuitSbIWHsicyulJITdiUfAWK4844545;     NuitSbIWHsicyulJITdiUfAWK4844545 = NuitSbIWHsicyulJITdiUfAWK29160420;     NuitSbIWHsicyulJITdiUfAWK29160420 = NuitSbIWHsicyulJITdiUfAWK39159992;     NuitSbIWHsicyulJITdiUfAWK39159992 = NuitSbIWHsicyulJITdiUfAWK59329919;     NuitSbIWHsicyulJITdiUfAWK59329919 = NuitSbIWHsicyulJITdiUfAWK53977341;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void xXzTONBWHibTturJzpfmFaKpRABIcOKnwpJOQNwSrKgOUCCtQNScMcyXN67971884() {     long KBOMsutXoWEldtmtMvutvVOxH60094447 = -175949778;    long KBOMsutXoWEldtmtMvutvVOxH27492642 = -778319255;    long KBOMsutXoWEldtmtMvutvVOxH38114914 = -741794952;    long KBOMsutXoWEldtmtMvutvVOxH74705459 = -118717512;    long KBOMsutXoWEldtmtMvutvVOxH90096602 = 92600376;    long KBOMsutXoWEldtmtMvutvVOxH35083898 = -627100616;    long KBOMsutXoWEldtmtMvutvVOxH69468415 = -330374101;    long KBOMsutXoWEldtmtMvutvVOxH89308117 = -949384170;    long KBOMsutXoWEldtmtMvutvVOxH24803293 = 61225948;    long KBOMsutXoWEldtmtMvutvVOxH57547414 = -648770509;    long KBOMsutXoWEldtmtMvutvVOxH74540386 = -770511382;    long KBOMsutXoWEldtmtMvutvVOxH6097433 = -706961115;    long KBOMsutXoWEldtmtMvutvVOxH78496010 = -102371520;    long KBOMsutXoWEldtmtMvutvVOxH88041435 = -966531129;    long KBOMsutXoWEldtmtMvutvVOxH62374497 = -695579714;    long KBOMsutXoWEldtmtMvutvVOxH86231656 = -329151298;    long KBOMsutXoWEldtmtMvutvVOxH89148210 = -176791652;    long KBOMsutXoWEldtmtMvutvVOxH9171655 = -147767639;    long KBOMsutXoWEldtmtMvutvVOxH43773892 = -230321736;    long KBOMsutXoWEldtmtMvutvVOxH26006302 = -427263128;    long KBOMsutXoWEldtmtMvutvVOxH43647774 = -71857289;    long KBOMsutXoWEldtmtMvutvVOxH81608016 = -263488618;    long KBOMsutXoWEldtmtMvutvVOxH870619 = -222971359;    long KBOMsutXoWEldtmtMvutvVOxH70434512 = -558484339;    long KBOMsutXoWEldtmtMvutvVOxH2146723 = -733023457;    long KBOMsutXoWEldtmtMvutvVOxH97490129 = -727016285;    long KBOMsutXoWEldtmtMvutvVOxH36208618 = -405734496;    long KBOMsutXoWEldtmtMvutvVOxH27379709 = -35498313;    long KBOMsutXoWEldtmtMvutvVOxH91421866 = -324197749;    long KBOMsutXoWEldtmtMvutvVOxH12019645 = -577925124;    long KBOMsutXoWEldtmtMvutvVOxH34239542 = -570705304;    long KBOMsutXoWEldtmtMvutvVOxH98966402 = -489343806;    long KBOMsutXoWEldtmtMvutvVOxH48380479 = -753583477;    long KBOMsutXoWEldtmtMvutvVOxH66090576 = -149753934;    long KBOMsutXoWEldtmtMvutvVOxH13195040 = 40627014;    long KBOMsutXoWEldtmtMvutvVOxH82362962 = -507429833;    long KBOMsutXoWEldtmtMvutvVOxH14547679 = -841425661;    long KBOMsutXoWEldtmtMvutvVOxH53841405 = -41515066;    long KBOMsutXoWEldtmtMvutvVOxH7048078 = -768083975;    long KBOMsutXoWEldtmtMvutvVOxH40606302 = -901957528;    long KBOMsutXoWEldtmtMvutvVOxH64862282 = -885976183;    long KBOMsutXoWEldtmtMvutvVOxH51253617 = -47444719;    long KBOMsutXoWEldtmtMvutvVOxH23984187 = 37149156;    long KBOMsutXoWEldtmtMvutvVOxH888495 = -891798364;    long KBOMsutXoWEldtmtMvutvVOxH84356699 = -847693925;    long KBOMsutXoWEldtmtMvutvVOxH32630610 = -679888549;    long KBOMsutXoWEldtmtMvutvVOxH32558229 = -282088441;    long KBOMsutXoWEldtmtMvutvVOxH98319582 = -139359524;    long KBOMsutXoWEldtmtMvutvVOxH60128124 = -45562631;    long KBOMsutXoWEldtmtMvutvVOxH71011284 = -111807470;    long KBOMsutXoWEldtmtMvutvVOxH69206749 = -472699013;    long KBOMsutXoWEldtmtMvutvVOxH62998658 = -165191335;    long KBOMsutXoWEldtmtMvutvVOxH7769029 = -546472334;    long KBOMsutXoWEldtmtMvutvVOxH57619106 = -719350027;    long KBOMsutXoWEldtmtMvutvVOxH24324111 = -731532839;    long KBOMsutXoWEldtmtMvutvVOxH78486431 = -912461161;    long KBOMsutXoWEldtmtMvutvVOxH26622023 = -455347897;    long KBOMsutXoWEldtmtMvutvVOxH67680402 = -83310613;    long KBOMsutXoWEldtmtMvutvVOxH72558737 = -385694056;    long KBOMsutXoWEldtmtMvutvVOxH92606472 = -180383340;    long KBOMsutXoWEldtmtMvutvVOxH98875280 = -121366120;    long KBOMsutXoWEldtmtMvutvVOxH42088707 = -194875788;    long KBOMsutXoWEldtmtMvutvVOxH97886251 = -525186422;    long KBOMsutXoWEldtmtMvutvVOxH12783648 = -360848928;    long KBOMsutXoWEldtmtMvutvVOxH23307872 = 21934794;    long KBOMsutXoWEldtmtMvutvVOxH75573984 = -181167576;    long KBOMsutXoWEldtmtMvutvVOxH57716953 = -953377639;    long KBOMsutXoWEldtmtMvutvVOxH12405434 = -952617586;    long KBOMsutXoWEldtmtMvutvVOxH74846396 = -907158144;    long KBOMsutXoWEldtmtMvutvVOxH80011534 = -88149881;    long KBOMsutXoWEldtmtMvutvVOxH71683978 = -487725638;    long KBOMsutXoWEldtmtMvutvVOxH35306805 = -35276586;    long KBOMsutXoWEldtmtMvutvVOxH2123577 = -379683664;    long KBOMsutXoWEldtmtMvutvVOxH3167590 = -328364208;    long KBOMsutXoWEldtmtMvutvVOxH61144019 = -541286946;    long KBOMsutXoWEldtmtMvutvVOxH92394156 = 75587429;    long KBOMsutXoWEldtmtMvutvVOxH57623829 = -200637774;    long KBOMsutXoWEldtmtMvutvVOxH99982124 = -331172995;    long KBOMsutXoWEldtmtMvutvVOxH86077812 = -710790415;    long KBOMsutXoWEldtmtMvutvVOxH69516112 = 46865092;    long KBOMsutXoWEldtmtMvutvVOxH64931901 = -344927845;    long KBOMsutXoWEldtmtMvutvVOxH37889035 = -166374973;    long KBOMsutXoWEldtmtMvutvVOxH67251584 = -989935682;    long KBOMsutXoWEldtmtMvutvVOxH20410582 = -112390280;    long KBOMsutXoWEldtmtMvutvVOxH42812896 = -5226112;    long KBOMsutXoWEldtmtMvutvVOxH71240883 = -305513969;    long KBOMsutXoWEldtmtMvutvVOxH91197373 = -942871473;    long KBOMsutXoWEldtmtMvutvVOxH90761373 = 65766550;    long KBOMsutXoWEldtmtMvutvVOxH41766466 = -418221095;    long KBOMsutXoWEldtmtMvutvVOxH34708609 = -46911825;    long KBOMsutXoWEldtmtMvutvVOxH55740940 = 47918063;    long KBOMsutXoWEldtmtMvutvVOxH46867276 = -658115049;    long KBOMsutXoWEldtmtMvutvVOxH81282668 = -655821011;    long KBOMsutXoWEldtmtMvutvVOxH14441605 = -487700636;    long KBOMsutXoWEldtmtMvutvVOxH41731021 = -680591409;    long KBOMsutXoWEldtmtMvutvVOxH22773576 = -591100395;    long KBOMsutXoWEldtmtMvutvVOxH53367366 = -522258298;    long KBOMsutXoWEldtmtMvutvVOxH11200540 = -602001917;    long KBOMsutXoWEldtmtMvutvVOxH77580622 = -813733159;    long KBOMsutXoWEldtmtMvutvVOxH8782716 = -175949778;     KBOMsutXoWEldtmtMvutvVOxH60094447 = KBOMsutXoWEldtmtMvutvVOxH27492642;     KBOMsutXoWEldtmtMvutvVOxH27492642 = KBOMsutXoWEldtmtMvutvVOxH38114914;     KBOMsutXoWEldtmtMvutvVOxH38114914 = KBOMsutXoWEldtmtMvutvVOxH74705459;     KBOMsutXoWEldtmtMvutvVOxH74705459 = KBOMsutXoWEldtmtMvutvVOxH90096602;     KBOMsutXoWEldtmtMvutvVOxH90096602 = KBOMsutXoWEldtmtMvutvVOxH35083898;     KBOMsutXoWEldtmtMvutvVOxH35083898 = KBOMsutXoWEldtmtMvutvVOxH69468415;     KBOMsutXoWEldtmtMvutvVOxH69468415 = KBOMsutXoWEldtmtMvutvVOxH89308117;     KBOMsutXoWEldtmtMvutvVOxH89308117 = KBOMsutXoWEldtmtMvutvVOxH24803293;     KBOMsutXoWEldtmtMvutvVOxH24803293 = KBOMsutXoWEldtmtMvutvVOxH57547414;     KBOMsutXoWEldtmtMvutvVOxH57547414 = KBOMsutXoWEldtmtMvutvVOxH74540386;     KBOMsutXoWEldtmtMvutvVOxH74540386 = KBOMsutXoWEldtmtMvutvVOxH6097433;     KBOMsutXoWEldtmtMvutvVOxH6097433 = KBOMsutXoWEldtmtMvutvVOxH78496010;     KBOMsutXoWEldtmtMvutvVOxH78496010 = KBOMsutXoWEldtmtMvutvVOxH88041435;     KBOMsutXoWEldtmtMvutvVOxH88041435 = KBOMsutXoWEldtmtMvutvVOxH62374497;     KBOMsutXoWEldtmtMvutvVOxH62374497 = KBOMsutXoWEldtmtMvutvVOxH86231656;     KBOMsutXoWEldtmtMvutvVOxH86231656 = KBOMsutXoWEldtmtMvutvVOxH89148210;     KBOMsutXoWEldtmtMvutvVOxH89148210 = KBOMsutXoWEldtmtMvutvVOxH9171655;     KBOMsutXoWEldtmtMvutvVOxH9171655 = KBOMsutXoWEldtmtMvutvVOxH43773892;     KBOMsutXoWEldtmtMvutvVOxH43773892 = KBOMsutXoWEldtmtMvutvVOxH26006302;     KBOMsutXoWEldtmtMvutvVOxH26006302 = KBOMsutXoWEldtmtMvutvVOxH43647774;     KBOMsutXoWEldtmtMvutvVOxH43647774 = KBOMsutXoWEldtmtMvutvVOxH81608016;     KBOMsutXoWEldtmtMvutvVOxH81608016 = KBOMsutXoWEldtmtMvutvVOxH870619;     KBOMsutXoWEldtmtMvutvVOxH870619 = KBOMsutXoWEldtmtMvutvVOxH70434512;     KBOMsutXoWEldtmtMvutvVOxH70434512 = KBOMsutXoWEldtmtMvutvVOxH2146723;     KBOMsutXoWEldtmtMvutvVOxH2146723 = KBOMsutXoWEldtmtMvutvVOxH97490129;     KBOMsutXoWEldtmtMvutvVOxH97490129 = KBOMsutXoWEldtmtMvutvVOxH36208618;     KBOMsutXoWEldtmtMvutvVOxH36208618 = KBOMsutXoWEldtmtMvutvVOxH27379709;     KBOMsutXoWEldtmtMvutvVOxH27379709 = KBOMsutXoWEldtmtMvutvVOxH91421866;     KBOMsutXoWEldtmtMvutvVOxH91421866 = KBOMsutXoWEldtmtMvutvVOxH12019645;     KBOMsutXoWEldtmtMvutvVOxH12019645 = KBOMsutXoWEldtmtMvutvVOxH34239542;     KBOMsutXoWEldtmtMvutvVOxH34239542 = KBOMsutXoWEldtmtMvutvVOxH98966402;     KBOMsutXoWEldtmtMvutvVOxH98966402 = KBOMsutXoWEldtmtMvutvVOxH48380479;     KBOMsutXoWEldtmtMvutvVOxH48380479 = KBOMsutXoWEldtmtMvutvVOxH66090576;     KBOMsutXoWEldtmtMvutvVOxH66090576 = KBOMsutXoWEldtmtMvutvVOxH13195040;     KBOMsutXoWEldtmtMvutvVOxH13195040 = KBOMsutXoWEldtmtMvutvVOxH82362962;     KBOMsutXoWEldtmtMvutvVOxH82362962 = KBOMsutXoWEldtmtMvutvVOxH14547679;     KBOMsutXoWEldtmtMvutvVOxH14547679 = KBOMsutXoWEldtmtMvutvVOxH53841405;     KBOMsutXoWEldtmtMvutvVOxH53841405 = KBOMsutXoWEldtmtMvutvVOxH7048078;     KBOMsutXoWEldtmtMvutvVOxH7048078 = KBOMsutXoWEldtmtMvutvVOxH40606302;     KBOMsutXoWEldtmtMvutvVOxH40606302 = KBOMsutXoWEldtmtMvutvVOxH64862282;     KBOMsutXoWEldtmtMvutvVOxH64862282 = KBOMsutXoWEldtmtMvutvVOxH51253617;     KBOMsutXoWEldtmtMvutvVOxH51253617 = KBOMsutXoWEldtmtMvutvVOxH23984187;     KBOMsutXoWEldtmtMvutvVOxH23984187 = KBOMsutXoWEldtmtMvutvVOxH888495;     KBOMsutXoWEldtmtMvutvVOxH888495 = KBOMsutXoWEldtmtMvutvVOxH84356699;     KBOMsutXoWEldtmtMvutvVOxH84356699 = KBOMsutXoWEldtmtMvutvVOxH32630610;     KBOMsutXoWEldtmtMvutvVOxH32630610 = KBOMsutXoWEldtmtMvutvVOxH32558229;     KBOMsutXoWEldtmtMvutvVOxH32558229 = KBOMsutXoWEldtmtMvutvVOxH98319582;     KBOMsutXoWEldtmtMvutvVOxH98319582 = KBOMsutXoWEldtmtMvutvVOxH60128124;     KBOMsutXoWEldtmtMvutvVOxH60128124 = KBOMsutXoWEldtmtMvutvVOxH71011284;     KBOMsutXoWEldtmtMvutvVOxH71011284 = KBOMsutXoWEldtmtMvutvVOxH69206749;     KBOMsutXoWEldtmtMvutvVOxH69206749 = KBOMsutXoWEldtmtMvutvVOxH62998658;     KBOMsutXoWEldtmtMvutvVOxH62998658 = KBOMsutXoWEldtmtMvutvVOxH7769029;     KBOMsutXoWEldtmtMvutvVOxH7769029 = KBOMsutXoWEldtmtMvutvVOxH57619106;     KBOMsutXoWEldtmtMvutvVOxH57619106 = KBOMsutXoWEldtmtMvutvVOxH24324111;     KBOMsutXoWEldtmtMvutvVOxH24324111 = KBOMsutXoWEldtmtMvutvVOxH78486431;     KBOMsutXoWEldtmtMvutvVOxH78486431 = KBOMsutXoWEldtmtMvutvVOxH26622023;     KBOMsutXoWEldtmtMvutvVOxH26622023 = KBOMsutXoWEldtmtMvutvVOxH67680402;     KBOMsutXoWEldtmtMvutvVOxH67680402 = KBOMsutXoWEldtmtMvutvVOxH72558737;     KBOMsutXoWEldtmtMvutvVOxH72558737 = KBOMsutXoWEldtmtMvutvVOxH92606472;     KBOMsutXoWEldtmtMvutvVOxH92606472 = KBOMsutXoWEldtmtMvutvVOxH98875280;     KBOMsutXoWEldtmtMvutvVOxH98875280 = KBOMsutXoWEldtmtMvutvVOxH42088707;     KBOMsutXoWEldtmtMvutvVOxH42088707 = KBOMsutXoWEldtmtMvutvVOxH97886251;     KBOMsutXoWEldtmtMvutvVOxH97886251 = KBOMsutXoWEldtmtMvutvVOxH12783648;     KBOMsutXoWEldtmtMvutvVOxH12783648 = KBOMsutXoWEldtmtMvutvVOxH23307872;     KBOMsutXoWEldtmtMvutvVOxH23307872 = KBOMsutXoWEldtmtMvutvVOxH75573984;     KBOMsutXoWEldtmtMvutvVOxH75573984 = KBOMsutXoWEldtmtMvutvVOxH57716953;     KBOMsutXoWEldtmtMvutvVOxH57716953 = KBOMsutXoWEldtmtMvutvVOxH12405434;     KBOMsutXoWEldtmtMvutvVOxH12405434 = KBOMsutXoWEldtmtMvutvVOxH74846396;     KBOMsutXoWEldtmtMvutvVOxH74846396 = KBOMsutXoWEldtmtMvutvVOxH80011534;     KBOMsutXoWEldtmtMvutvVOxH80011534 = KBOMsutXoWEldtmtMvutvVOxH71683978;     KBOMsutXoWEldtmtMvutvVOxH71683978 = KBOMsutXoWEldtmtMvutvVOxH35306805;     KBOMsutXoWEldtmtMvutvVOxH35306805 = KBOMsutXoWEldtmtMvutvVOxH2123577;     KBOMsutXoWEldtmtMvutvVOxH2123577 = KBOMsutXoWEldtmtMvutvVOxH3167590;     KBOMsutXoWEldtmtMvutvVOxH3167590 = KBOMsutXoWEldtmtMvutvVOxH61144019;     KBOMsutXoWEldtmtMvutvVOxH61144019 = KBOMsutXoWEldtmtMvutvVOxH92394156;     KBOMsutXoWEldtmtMvutvVOxH92394156 = KBOMsutXoWEldtmtMvutvVOxH57623829;     KBOMsutXoWEldtmtMvutvVOxH57623829 = KBOMsutXoWEldtmtMvutvVOxH99982124;     KBOMsutXoWEldtmtMvutvVOxH99982124 = KBOMsutXoWEldtmtMvutvVOxH86077812;     KBOMsutXoWEldtmtMvutvVOxH86077812 = KBOMsutXoWEldtmtMvutvVOxH69516112;     KBOMsutXoWEldtmtMvutvVOxH69516112 = KBOMsutXoWEldtmtMvutvVOxH64931901;     KBOMsutXoWEldtmtMvutvVOxH64931901 = KBOMsutXoWEldtmtMvutvVOxH37889035;     KBOMsutXoWEldtmtMvutvVOxH37889035 = KBOMsutXoWEldtmtMvutvVOxH67251584;     KBOMsutXoWEldtmtMvutvVOxH67251584 = KBOMsutXoWEldtmtMvutvVOxH20410582;     KBOMsutXoWEldtmtMvutvVOxH20410582 = KBOMsutXoWEldtmtMvutvVOxH42812896;     KBOMsutXoWEldtmtMvutvVOxH42812896 = KBOMsutXoWEldtmtMvutvVOxH71240883;     KBOMsutXoWEldtmtMvutvVOxH71240883 = KBOMsutXoWEldtmtMvutvVOxH91197373;     KBOMsutXoWEldtmtMvutvVOxH91197373 = KBOMsutXoWEldtmtMvutvVOxH90761373;     KBOMsutXoWEldtmtMvutvVOxH90761373 = KBOMsutXoWEldtmtMvutvVOxH41766466;     KBOMsutXoWEldtmtMvutvVOxH41766466 = KBOMsutXoWEldtmtMvutvVOxH34708609;     KBOMsutXoWEldtmtMvutvVOxH34708609 = KBOMsutXoWEldtmtMvutvVOxH55740940;     KBOMsutXoWEldtmtMvutvVOxH55740940 = KBOMsutXoWEldtmtMvutvVOxH46867276;     KBOMsutXoWEldtmtMvutvVOxH46867276 = KBOMsutXoWEldtmtMvutvVOxH81282668;     KBOMsutXoWEldtmtMvutvVOxH81282668 = KBOMsutXoWEldtmtMvutvVOxH14441605;     KBOMsutXoWEldtmtMvutvVOxH14441605 = KBOMsutXoWEldtmtMvutvVOxH41731021;     KBOMsutXoWEldtmtMvutvVOxH41731021 = KBOMsutXoWEldtmtMvutvVOxH22773576;     KBOMsutXoWEldtmtMvutvVOxH22773576 = KBOMsutXoWEldtmtMvutvVOxH53367366;     KBOMsutXoWEldtmtMvutvVOxH53367366 = KBOMsutXoWEldtmtMvutvVOxH11200540;     KBOMsutXoWEldtmtMvutvVOxH11200540 = KBOMsutXoWEldtmtMvutvVOxH77580622;     KBOMsutXoWEldtmtMvutvVOxH77580622 = KBOMsutXoWEldtmtMvutvVOxH8782716;     KBOMsutXoWEldtmtMvutvVOxH8782716 = KBOMsutXoWEldtmtMvutvVOxH60094447;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void JypxMKmNGQWFZRAoaSjNOucJuRCzkjNyxzNDmpUliRzYJupaDRHGhfIPW10180935() {     long fCuIncXCYHZExBlyyfwuEAAcb84218633 = -783477539;    long fCuIncXCYHZExBlyyfwuEAAcb92871045 = -793113284;    long fCuIncXCYHZExBlyyfwuEAAcb40356249 = 35473973;    long fCuIncXCYHZExBlyyfwuEAAcb68517584 = -811258978;    long fCuIncXCYHZExBlyyfwuEAAcb62784764 = -639018449;    long fCuIncXCYHZExBlyyfwuEAAcb66149011 = -721878017;    long fCuIncXCYHZExBlyyfwuEAAcb93264163 = -324438887;    long fCuIncXCYHZExBlyyfwuEAAcb16429942 = 32283961;    long fCuIncXCYHZExBlyyfwuEAAcb2579460 = -510407284;    long fCuIncXCYHZExBlyyfwuEAAcb18948244 = -198956107;    long fCuIncXCYHZExBlyyfwuEAAcb2294794 = -188990237;    long fCuIncXCYHZExBlyyfwuEAAcb68783839 = -408818318;    long fCuIncXCYHZExBlyyfwuEAAcb74721756 = -599854482;    long fCuIncXCYHZExBlyyfwuEAAcb962852 = -484632170;    long fCuIncXCYHZExBlyyfwuEAAcb91832004 = -910106924;    long fCuIncXCYHZExBlyyfwuEAAcb48573704 = -64303884;    long fCuIncXCYHZExBlyyfwuEAAcb80978897 = -317262519;    long fCuIncXCYHZExBlyyfwuEAAcb20080860 = -137818918;    long fCuIncXCYHZExBlyyfwuEAAcb64522304 = -188842478;    long fCuIncXCYHZExBlyyfwuEAAcb56233718 = -787159618;    long fCuIncXCYHZExBlyyfwuEAAcb70360878 = -768536172;    long fCuIncXCYHZExBlyyfwuEAAcb3268622 = 10762032;    long fCuIncXCYHZExBlyyfwuEAAcb96293857 = -167549938;    long fCuIncXCYHZExBlyyfwuEAAcb28672023 = -473839017;    long fCuIncXCYHZExBlyyfwuEAAcb26992155 = 81436445;    long fCuIncXCYHZExBlyyfwuEAAcb14355019 = -989468806;    long fCuIncXCYHZExBlyyfwuEAAcb29571277 = -550529779;    long fCuIncXCYHZExBlyyfwuEAAcb22569502 = -605041706;    long fCuIncXCYHZExBlyyfwuEAAcb19894889 = -831836192;    long fCuIncXCYHZExBlyyfwuEAAcb97139440 = 58736057;    long fCuIncXCYHZExBlyyfwuEAAcb7395986 = -338130614;    long fCuIncXCYHZExBlyyfwuEAAcb73356359 = -817233913;    long fCuIncXCYHZExBlyyfwuEAAcb56149353 = -989822803;    long fCuIncXCYHZExBlyyfwuEAAcb19432267 = -440307517;    long fCuIncXCYHZExBlyyfwuEAAcb17040023 = -175110570;    long fCuIncXCYHZExBlyyfwuEAAcb95048394 = -764052601;    long fCuIncXCYHZExBlyyfwuEAAcb79650274 = -368815012;    long fCuIncXCYHZExBlyyfwuEAAcb40821699 = 6162767;    long fCuIncXCYHZExBlyyfwuEAAcb66302652 = -61277048;    long fCuIncXCYHZExBlyyfwuEAAcb92906209 = -929439303;    long fCuIncXCYHZExBlyyfwuEAAcb65339823 = -661326662;    long fCuIncXCYHZExBlyyfwuEAAcb3362994 = -845425011;    long fCuIncXCYHZExBlyyfwuEAAcb96046770 = -161375396;    long fCuIncXCYHZExBlyyfwuEAAcb53460457 = -925309580;    long fCuIncXCYHZExBlyyfwuEAAcb53364661 = -314019635;    long fCuIncXCYHZExBlyyfwuEAAcb32318347 = -507998417;    long fCuIncXCYHZExBlyyfwuEAAcb74097372 = -652518992;    long fCuIncXCYHZExBlyyfwuEAAcb78056826 = -423108871;    long fCuIncXCYHZExBlyyfwuEAAcb13941885 = -893291093;    long fCuIncXCYHZExBlyyfwuEAAcb1739934 = -216082888;    long fCuIncXCYHZExBlyyfwuEAAcb65441015 = -641640694;    long fCuIncXCYHZExBlyyfwuEAAcb15192854 = -687073740;    long fCuIncXCYHZExBlyyfwuEAAcb65460091 = -814483250;    long fCuIncXCYHZExBlyyfwuEAAcb35402324 = -751850186;    long fCuIncXCYHZExBlyyfwuEAAcb39820057 = -962775336;    long fCuIncXCYHZExBlyyfwuEAAcb80950011 = -694239572;    long fCuIncXCYHZExBlyyfwuEAAcb96577188 = -525563347;    long fCuIncXCYHZExBlyyfwuEAAcb11684227 = -490687010;    long fCuIncXCYHZExBlyyfwuEAAcb41525429 = -792695424;    long fCuIncXCYHZExBlyyfwuEAAcb48429745 = -649549644;    long fCuIncXCYHZExBlyyfwuEAAcb36577735 = -71348239;    long fCuIncXCYHZExBlyyfwuEAAcb70694661 = -719397182;    long fCuIncXCYHZExBlyyfwuEAAcb96535053 = -135879848;    long fCuIncXCYHZExBlyyfwuEAAcb5440019 = -469143341;    long fCuIncXCYHZExBlyyfwuEAAcb11552258 = -860825494;    long fCuIncXCYHZExBlyyfwuEAAcb28938435 = -371756325;    long fCuIncXCYHZExBlyyfwuEAAcb12634487 = -418995516;    long fCuIncXCYHZExBlyyfwuEAAcb55289489 = -59546966;    long fCuIncXCYHZExBlyyfwuEAAcb83922828 = -209521600;    long fCuIncXCYHZExBlyyfwuEAAcb96783610 = -46054323;    long fCuIncXCYHZExBlyyfwuEAAcb68923429 = -695488872;    long fCuIncXCYHZExBlyyfwuEAAcb40157198 = -223425287;    long fCuIncXCYHZExBlyyfwuEAAcb53778207 = 23458129;    long fCuIncXCYHZExBlyyfwuEAAcb71616094 = -259403176;    long fCuIncXCYHZExBlyyfwuEAAcb90893895 = -25832957;    long fCuIncXCYHZExBlyyfwuEAAcb66997884 = -923111162;    long fCuIncXCYHZExBlyyfwuEAAcb7221851 = -827862572;    long fCuIncXCYHZExBlyyfwuEAAcb42833400 = -242240358;    long fCuIncXCYHZExBlyyfwuEAAcb75307361 = -59819383;    long fCuIncXCYHZExBlyyfwuEAAcb94673808 = -410565138;    long fCuIncXCYHZExBlyyfwuEAAcb40257647 = -236949814;    long fCuIncXCYHZExBlyyfwuEAAcb51514451 = -27420908;    long fCuIncXCYHZExBlyyfwuEAAcb8627618 = -711750613;    long fCuIncXCYHZExBlyyfwuEAAcb18154955 = -515753304;    long fCuIncXCYHZExBlyyfwuEAAcb31698426 = -299623250;    long fCuIncXCYHZExBlyyfwuEAAcb92203132 = -651056874;    long fCuIncXCYHZExBlyyfwuEAAcb7896269 = 97249337;    long fCuIncXCYHZExBlyyfwuEAAcb20747029 = -137972618;    long fCuIncXCYHZExBlyyfwuEAAcb79612210 = -477532181;    long fCuIncXCYHZExBlyyfwuEAAcb36090012 = -480870999;    long fCuIncXCYHZExBlyyfwuEAAcb98471205 = -138489255;    long fCuIncXCYHZExBlyyfwuEAAcb67966048 = -878128003;    long fCuIncXCYHZExBlyyfwuEAAcb99296269 = -201141809;    long fCuIncXCYHZExBlyyfwuEAAcb17872908 = -411727404;    long fCuIncXCYHZExBlyyfwuEAAcb56328475 = -758091064;    long fCuIncXCYHZExBlyyfwuEAAcb94645162 = -941929481;    long fCuIncXCYHZExBlyyfwuEAAcb6827941 = -609545163;    long fCuIncXCYHZExBlyyfwuEAAcb90606752 = -692232056;    long fCuIncXCYHZExBlyyfwuEAAcb41908200 = 35515913;    long fCuIncXCYHZExBlyyfwuEAAcb24426227 = -783477539;     fCuIncXCYHZExBlyyfwuEAAcb84218633 = fCuIncXCYHZExBlyyfwuEAAcb92871045;     fCuIncXCYHZExBlyyfwuEAAcb92871045 = fCuIncXCYHZExBlyyfwuEAAcb40356249;     fCuIncXCYHZExBlyyfwuEAAcb40356249 = fCuIncXCYHZExBlyyfwuEAAcb68517584;     fCuIncXCYHZExBlyyfwuEAAcb68517584 = fCuIncXCYHZExBlyyfwuEAAcb62784764;     fCuIncXCYHZExBlyyfwuEAAcb62784764 = fCuIncXCYHZExBlyyfwuEAAcb66149011;     fCuIncXCYHZExBlyyfwuEAAcb66149011 = fCuIncXCYHZExBlyyfwuEAAcb93264163;     fCuIncXCYHZExBlyyfwuEAAcb93264163 = fCuIncXCYHZExBlyyfwuEAAcb16429942;     fCuIncXCYHZExBlyyfwuEAAcb16429942 = fCuIncXCYHZExBlyyfwuEAAcb2579460;     fCuIncXCYHZExBlyyfwuEAAcb2579460 = fCuIncXCYHZExBlyyfwuEAAcb18948244;     fCuIncXCYHZExBlyyfwuEAAcb18948244 = fCuIncXCYHZExBlyyfwuEAAcb2294794;     fCuIncXCYHZExBlyyfwuEAAcb2294794 = fCuIncXCYHZExBlyyfwuEAAcb68783839;     fCuIncXCYHZExBlyyfwuEAAcb68783839 = fCuIncXCYHZExBlyyfwuEAAcb74721756;     fCuIncXCYHZExBlyyfwuEAAcb74721756 = fCuIncXCYHZExBlyyfwuEAAcb962852;     fCuIncXCYHZExBlyyfwuEAAcb962852 = fCuIncXCYHZExBlyyfwuEAAcb91832004;     fCuIncXCYHZExBlyyfwuEAAcb91832004 = fCuIncXCYHZExBlyyfwuEAAcb48573704;     fCuIncXCYHZExBlyyfwuEAAcb48573704 = fCuIncXCYHZExBlyyfwuEAAcb80978897;     fCuIncXCYHZExBlyyfwuEAAcb80978897 = fCuIncXCYHZExBlyyfwuEAAcb20080860;     fCuIncXCYHZExBlyyfwuEAAcb20080860 = fCuIncXCYHZExBlyyfwuEAAcb64522304;     fCuIncXCYHZExBlyyfwuEAAcb64522304 = fCuIncXCYHZExBlyyfwuEAAcb56233718;     fCuIncXCYHZExBlyyfwuEAAcb56233718 = fCuIncXCYHZExBlyyfwuEAAcb70360878;     fCuIncXCYHZExBlyyfwuEAAcb70360878 = fCuIncXCYHZExBlyyfwuEAAcb3268622;     fCuIncXCYHZExBlyyfwuEAAcb3268622 = fCuIncXCYHZExBlyyfwuEAAcb96293857;     fCuIncXCYHZExBlyyfwuEAAcb96293857 = fCuIncXCYHZExBlyyfwuEAAcb28672023;     fCuIncXCYHZExBlyyfwuEAAcb28672023 = fCuIncXCYHZExBlyyfwuEAAcb26992155;     fCuIncXCYHZExBlyyfwuEAAcb26992155 = fCuIncXCYHZExBlyyfwuEAAcb14355019;     fCuIncXCYHZExBlyyfwuEAAcb14355019 = fCuIncXCYHZExBlyyfwuEAAcb29571277;     fCuIncXCYHZExBlyyfwuEAAcb29571277 = fCuIncXCYHZExBlyyfwuEAAcb22569502;     fCuIncXCYHZExBlyyfwuEAAcb22569502 = fCuIncXCYHZExBlyyfwuEAAcb19894889;     fCuIncXCYHZExBlyyfwuEAAcb19894889 = fCuIncXCYHZExBlyyfwuEAAcb97139440;     fCuIncXCYHZExBlyyfwuEAAcb97139440 = fCuIncXCYHZExBlyyfwuEAAcb7395986;     fCuIncXCYHZExBlyyfwuEAAcb7395986 = fCuIncXCYHZExBlyyfwuEAAcb73356359;     fCuIncXCYHZExBlyyfwuEAAcb73356359 = fCuIncXCYHZExBlyyfwuEAAcb56149353;     fCuIncXCYHZExBlyyfwuEAAcb56149353 = fCuIncXCYHZExBlyyfwuEAAcb19432267;     fCuIncXCYHZExBlyyfwuEAAcb19432267 = fCuIncXCYHZExBlyyfwuEAAcb17040023;     fCuIncXCYHZExBlyyfwuEAAcb17040023 = fCuIncXCYHZExBlyyfwuEAAcb95048394;     fCuIncXCYHZExBlyyfwuEAAcb95048394 = fCuIncXCYHZExBlyyfwuEAAcb79650274;     fCuIncXCYHZExBlyyfwuEAAcb79650274 = fCuIncXCYHZExBlyyfwuEAAcb40821699;     fCuIncXCYHZExBlyyfwuEAAcb40821699 = fCuIncXCYHZExBlyyfwuEAAcb66302652;     fCuIncXCYHZExBlyyfwuEAAcb66302652 = fCuIncXCYHZExBlyyfwuEAAcb92906209;     fCuIncXCYHZExBlyyfwuEAAcb92906209 = fCuIncXCYHZExBlyyfwuEAAcb65339823;     fCuIncXCYHZExBlyyfwuEAAcb65339823 = fCuIncXCYHZExBlyyfwuEAAcb3362994;     fCuIncXCYHZExBlyyfwuEAAcb3362994 = fCuIncXCYHZExBlyyfwuEAAcb96046770;     fCuIncXCYHZExBlyyfwuEAAcb96046770 = fCuIncXCYHZExBlyyfwuEAAcb53460457;     fCuIncXCYHZExBlyyfwuEAAcb53460457 = fCuIncXCYHZExBlyyfwuEAAcb53364661;     fCuIncXCYHZExBlyyfwuEAAcb53364661 = fCuIncXCYHZExBlyyfwuEAAcb32318347;     fCuIncXCYHZExBlyyfwuEAAcb32318347 = fCuIncXCYHZExBlyyfwuEAAcb74097372;     fCuIncXCYHZExBlyyfwuEAAcb74097372 = fCuIncXCYHZExBlyyfwuEAAcb78056826;     fCuIncXCYHZExBlyyfwuEAAcb78056826 = fCuIncXCYHZExBlyyfwuEAAcb13941885;     fCuIncXCYHZExBlyyfwuEAAcb13941885 = fCuIncXCYHZExBlyyfwuEAAcb1739934;     fCuIncXCYHZExBlyyfwuEAAcb1739934 = fCuIncXCYHZExBlyyfwuEAAcb65441015;     fCuIncXCYHZExBlyyfwuEAAcb65441015 = fCuIncXCYHZExBlyyfwuEAAcb15192854;     fCuIncXCYHZExBlyyfwuEAAcb15192854 = fCuIncXCYHZExBlyyfwuEAAcb65460091;     fCuIncXCYHZExBlyyfwuEAAcb65460091 = fCuIncXCYHZExBlyyfwuEAAcb35402324;     fCuIncXCYHZExBlyyfwuEAAcb35402324 = fCuIncXCYHZExBlyyfwuEAAcb39820057;     fCuIncXCYHZExBlyyfwuEAAcb39820057 = fCuIncXCYHZExBlyyfwuEAAcb80950011;     fCuIncXCYHZExBlyyfwuEAAcb80950011 = fCuIncXCYHZExBlyyfwuEAAcb96577188;     fCuIncXCYHZExBlyyfwuEAAcb96577188 = fCuIncXCYHZExBlyyfwuEAAcb11684227;     fCuIncXCYHZExBlyyfwuEAAcb11684227 = fCuIncXCYHZExBlyyfwuEAAcb41525429;     fCuIncXCYHZExBlyyfwuEAAcb41525429 = fCuIncXCYHZExBlyyfwuEAAcb48429745;     fCuIncXCYHZExBlyyfwuEAAcb48429745 = fCuIncXCYHZExBlyyfwuEAAcb36577735;     fCuIncXCYHZExBlyyfwuEAAcb36577735 = fCuIncXCYHZExBlyyfwuEAAcb70694661;     fCuIncXCYHZExBlyyfwuEAAcb70694661 = fCuIncXCYHZExBlyyfwuEAAcb96535053;     fCuIncXCYHZExBlyyfwuEAAcb96535053 = fCuIncXCYHZExBlyyfwuEAAcb5440019;     fCuIncXCYHZExBlyyfwuEAAcb5440019 = fCuIncXCYHZExBlyyfwuEAAcb11552258;     fCuIncXCYHZExBlyyfwuEAAcb11552258 = fCuIncXCYHZExBlyyfwuEAAcb28938435;     fCuIncXCYHZExBlyyfwuEAAcb28938435 = fCuIncXCYHZExBlyyfwuEAAcb12634487;     fCuIncXCYHZExBlyyfwuEAAcb12634487 = fCuIncXCYHZExBlyyfwuEAAcb55289489;     fCuIncXCYHZExBlyyfwuEAAcb55289489 = fCuIncXCYHZExBlyyfwuEAAcb83922828;     fCuIncXCYHZExBlyyfwuEAAcb83922828 = fCuIncXCYHZExBlyyfwuEAAcb96783610;     fCuIncXCYHZExBlyyfwuEAAcb96783610 = fCuIncXCYHZExBlyyfwuEAAcb68923429;     fCuIncXCYHZExBlyyfwuEAAcb68923429 = fCuIncXCYHZExBlyyfwuEAAcb40157198;     fCuIncXCYHZExBlyyfwuEAAcb40157198 = fCuIncXCYHZExBlyyfwuEAAcb53778207;     fCuIncXCYHZExBlyyfwuEAAcb53778207 = fCuIncXCYHZExBlyyfwuEAAcb71616094;     fCuIncXCYHZExBlyyfwuEAAcb71616094 = fCuIncXCYHZExBlyyfwuEAAcb90893895;     fCuIncXCYHZExBlyyfwuEAAcb90893895 = fCuIncXCYHZExBlyyfwuEAAcb66997884;     fCuIncXCYHZExBlyyfwuEAAcb66997884 = fCuIncXCYHZExBlyyfwuEAAcb7221851;     fCuIncXCYHZExBlyyfwuEAAcb7221851 = fCuIncXCYHZExBlyyfwuEAAcb42833400;     fCuIncXCYHZExBlyyfwuEAAcb42833400 = fCuIncXCYHZExBlyyfwuEAAcb75307361;     fCuIncXCYHZExBlyyfwuEAAcb75307361 = fCuIncXCYHZExBlyyfwuEAAcb94673808;     fCuIncXCYHZExBlyyfwuEAAcb94673808 = fCuIncXCYHZExBlyyfwuEAAcb40257647;     fCuIncXCYHZExBlyyfwuEAAcb40257647 = fCuIncXCYHZExBlyyfwuEAAcb51514451;     fCuIncXCYHZExBlyyfwuEAAcb51514451 = fCuIncXCYHZExBlyyfwuEAAcb8627618;     fCuIncXCYHZExBlyyfwuEAAcb8627618 = fCuIncXCYHZExBlyyfwuEAAcb18154955;     fCuIncXCYHZExBlyyfwuEAAcb18154955 = fCuIncXCYHZExBlyyfwuEAAcb31698426;     fCuIncXCYHZExBlyyfwuEAAcb31698426 = fCuIncXCYHZExBlyyfwuEAAcb92203132;     fCuIncXCYHZExBlyyfwuEAAcb92203132 = fCuIncXCYHZExBlyyfwuEAAcb7896269;     fCuIncXCYHZExBlyyfwuEAAcb7896269 = fCuIncXCYHZExBlyyfwuEAAcb20747029;     fCuIncXCYHZExBlyyfwuEAAcb20747029 = fCuIncXCYHZExBlyyfwuEAAcb79612210;     fCuIncXCYHZExBlyyfwuEAAcb79612210 = fCuIncXCYHZExBlyyfwuEAAcb36090012;     fCuIncXCYHZExBlyyfwuEAAcb36090012 = fCuIncXCYHZExBlyyfwuEAAcb98471205;     fCuIncXCYHZExBlyyfwuEAAcb98471205 = fCuIncXCYHZExBlyyfwuEAAcb67966048;     fCuIncXCYHZExBlyyfwuEAAcb67966048 = fCuIncXCYHZExBlyyfwuEAAcb99296269;     fCuIncXCYHZExBlyyfwuEAAcb99296269 = fCuIncXCYHZExBlyyfwuEAAcb17872908;     fCuIncXCYHZExBlyyfwuEAAcb17872908 = fCuIncXCYHZExBlyyfwuEAAcb56328475;     fCuIncXCYHZExBlyyfwuEAAcb56328475 = fCuIncXCYHZExBlyyfwuEAAcb94645162;     fCuIncXCYHZExBlyyfwuEAAcb94645162 = fCuIncXCYHZExBlyyfwuEAAcb6827941;     fCuIncXCYHZExBlyyfwuEAAcb6827941 = fCuIncXCYHZExBlyyfwuEAAcb90606752;     fCuIncXCYHZExBlyyfwuEAAcb90606752 = fCuIncXCYHZExBlyyfwuEAAcb41908200;     fCuIncXCYHZExBlyyfwuEAAcb41908200 = fCuIncXCYHZExBlyyfwuEAAcb24426227;     fCuIncXCYHZExBlyyfwuEAAcb24426227 = fCuIncXCYHZExBlyyfwuEAAcb84218633;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void zCBHahBEodtxISJhGsakByjZkjghwyVzkWOGNJZyUnQxhYiyvdDSKdyAS25230003() {     long cWqATHpItMlDCTxTbPOilrMBh90335739 = -895379428;    long cWqATHpItMlDCTxTbPOilrMBh36244325 = -502713064;    long cWqATHpItMlDCTxTbPOilrMBh56398433 = -115358948;    long cWqATHpItMlDCTxTbPOilrMBh95592365 = 97992391;    long cWqATHpItMlDCTxTbPOilrMBh31680253 = -59668321;    long cWqATHpItMlDCTxTbPOilrMBh57566214 = -986374252;    long cWqATHpItMlDCTxTbPOilrMBh53753129 = -463403864;    long cWqATHpItMlDCTxTbPOilrMBh66189833 = -254589952;    long cWqATHpItMlDCTxTbPOilrMBh67221954 = -278439949;    long cWqATHpItMlDCTxTbPOilrMBh60177903 = -527931585;    long cWqATHpItMlDCTxTbPOilrMBh62405084 = -66427823;    long cWqATHpItMlDCTxTbPOilrMBh606883 = -853224520;    long cWqATHpItMlDCTxTbPOilrMBh60930874 = 60254429;    long cWqATHpItMlDCTxTbPOilrMBh84106528 = 83129262;    long cWqATHpItMlDCTxTbPOilrMBh87574431 = -500569090;    long cWqATHpItMlDCTxTbPOilrMBh90079097 = -37303427;    long cWqATHpItMlDCTxTbPOilrMBh74814900 = -933807632;    long cWqATHpItMlDCTxTbPOilrMBh17134013 = -903341561;    long cWqATHpItMlDCTxTbPOilrMBh26352146 = -594611575;    long cWqATHpItMlDCTxTbPOilrMBh36783883 = -44062537;    long cWqATHpItMlDCTxTbPOilrMBh58914071 = -624023628;    long cWqATHpItMlDCTxTbPOilrMBh89789645 = -997167684;    long cWqATHpItMlDCTxTbPOilrMBh31884649 = 85932576;    long cWqATHpItMlDCTxTbPOilrMBh12664397 = -696144005;    long cWqATHpItMlDCTxTbPOilrMBh70691805 = -291759588;    long cWqATHpItMlDCTxTbPOilrMBh39076695 = -868124129;    long cWqATHpItMlDCTxTbPOilrMBh28031055 = -451191982;    long cWqATHpItMlDCTxTbPOilrMBh35676628 = -670970659;    long cWqATHpItMlDCTxTbPOilrMBh86027144 = 45781104;    long cWqATHpItMlDCTxTbPOilrMBh65755077 = -858734811;    long cWqATHpItMlDCTxTbPOilrMBh99638535 = -251451552;    long cWqATHpItMlDCTxTbPOilrMBh70966981 = -526680728;    long cWqATHpItMlDCTxTbPOilrMBh65860301 = -882436174;    long cWqATHpItMlDCTxTbPOilrMBh14262831 = -191849282;    long cWqATHpItMlDCTxTbPOilrMBh78514675 = -813843675;    long cWqATHpItMlDCTxTbPOilrMBh63774308 = -978078709;    long cWqATHpItMlDCTxTbPOilrMBh60912209 = -322450882;    long cWqATHpItMlDCTxTbPOilrMBh74911911 = -865343242;    long cWqATHpItMlDCTxTbPOilrMBh39912906 = -55200544;    long cWqATHpItMlDCTxTbPOilrMBh80408147 = -302878525;    long cWqATHpItMlDCTxTbPOilrMBh71009047 = -726600556;    long cWqATHpItMlDCTxTbPOilrMBh35513451 = -15567289;    long cWqATHpItMlDCTxTbPOilrMBh74113749 = -242179980;    long cWqATHpItMlDCTxTbPOilrMBh40868198 = -944652518;    long cWqATHpItMlDCTxTbPOilrMBh65317126 = 24082211;    long cWqATHpItMlDCTxTbPOilrMBh44257542 = -493214534;    long cWqATHpItMlDCTxTbPOilrMBh91875946 = -771294530;    long cWqATHpItMlDCTxTbPOilrMBh86013767 = -433004404;    long cWqATHpItMlDCTxTbPOilrMBh23617614 = -979028081;    long cWqATHpItMlDCTxTbPOilrMBh14651587 = -303093696;    long cWqATHpItMlDCTxTbPOilrMBh1141694 = -483934365;    long cWqATHpItMlDCTxTbPOilrMBh26002574 = -487800061;    long cWqATHpItMlDCTxTbPOilrMBh13708549 = -606272838;    long cWqATHpItMlDCTxTbPOilrMBh31371204 = 27679669;    long cWqATHpItMlDCTxTbPOilrMBh66315931 = -563307118;    long cWqATHpItMlDCTxTbPOilrMBh546095 = -898211744;    long cWqATHpItMlDCTxTbPOilrMBh4359677 = -488645641;    long cWqATHpItMlDCTxTbPOilrMBh43734037 = -419214944;    long cWqATHpItMlDCTxTbPOilrMBh24900560 = -610248021;    long cWqATHpItMlDCTxTbPOilrMBh92603558 = -191544192;    long cWqATHpItMlDCTxTbPOilrMBh29535159 = -435182271;    long cWqATHpItMlDCTxTbPOilrMBh18076502 = -792433205;    long cWqATHpItMlDCTxTbPOilrMBh80162688 = -200371057;    long cWqATHpItMlDCTxTbPOilrMBh1466878 = -419705139;    long cWqATHpItMlDCTxTbPOilrMBh60539368 = -176480033;    long cWqATHpItMlDCTxTbPOilrMBh91438103 = -539747095;    long cWqATHpItMlDCTxTbPOilrMBh34746581 = -970788347;    long cWqATHpItMlDCTxTbPOilrMBh46668043 = -747896289;    long cWqATHpItMlDCTxTbPOilrMBh5591854 = -103027063;    long cWqATHpItMlDCTxTbPOilrMBh23800124 = -522490382;    long cWqATHpItMlDCTxTbPOilrMBh29166889 = -714852546;    long cWqATHpItMlDCTxTbPOilrMBh99902988 = 31535610;    long cWqATHpItMlDCTxTbPOilrMBh77221106 = -748141017;    long cWqATHpItMlDCTxTbPOilrMBh45943998 = -191733050;    long cWqATHpItMlDCTxTbPOilrMBh65774836 = -317461982;    long cWqATHpItMlDCTxTbPOilrMBh23400621 = -508456340;    long cWqATHpItMlDCTxTbPOilrMBh15675897 = -654987704;    long cWqATHpItMlDCTxTbPOilrMBh91016450 = 30585093;    long cWqATHpItMlDCTxTbPOilrMBh47347270 = -620226216;    long cWqATHpItMlDCTxTbPOilrMBh26434264 = -798545054;    long cWqATHpItMlDCTxTbPOilrMBh47200748 = 3170400;    long cWqATHpItMlDCTxTbPOilrMBh42017288 = 81812422;    long cWqATHpItMlDCTxTbPOilrMBh12059014 = -691942578;    long cWqATHpItMlDCTxTbPOilrMBh71375558 = -651125201;    long cWqATHpItMlDCTxTbPOilrMBh64613384 = -274800446;    long cWqATHpItMlDCTxTbPOilrMBh73635962 = -763651492;    long cWqATHpItMlDCTxTbPOilrMBh57258433 = -920407891;    long cWqATHpItMlDCTxTbPOilrMBh34489098 = -810115844;    long cWqATHpItMlDCTxTbPOilrMBh47946900 = -628542164;    long cWqATHpItMlDCTxTbPOilrMBh77968580 = -915631932;    long cWqATHpItMlDCTxTbPOilrMBh59414631 = -389433069;    long cWqATHpItMlDCTxTbPOilrMBh17178173 = -903235939;    long cWqATHpItMlDCTxTbPOilrMBh50011351 = -155095221;    long cWqATHpItMlDCTxTbPOilrMBh47309348 = -863656353;    long cWqATHpItMlDCTxTbPOilrMBh50872989 = -867696255;    long cWqATHpItMlDCTxTbPOilrMBh52932546 = -934167351;    long cWqATHpItMlDCTxTbPOilrMBh55350762 = -815196232;    long cWqATHpItMlDCTxTbPOilrMBh72646871 = -822474842;    long cWqATHpItMlDCTxTbPOilrMBh80328830 = -668172485;    long cWqATHpItMlDCTxTbPOilrMBh73879023 = -895379428;     cWqATHpItMlDCTxTbPOilrMBh90335739 = cWqATHpItMlDCTxTbPOilrMBh36244325;     cWqATHpItMlDCTxTbPOilrMBh36244325 = cWqATHpItMlDCTxTbPOilrMBh56398433;     cWqATHpItMlDCTxTbPOilrMBh56398433 = cWqATHpItMlDCTxTbPOilrMBh95592365;     cWqATHpItMlDCTxTbPOilrMBh95592365 = cWqATHpItMlDCTxTbPOilrMBh31680253;     cWqATHpItMlDCTxTbPOilrMBh31680253 = cWqATHpItMlDCTxTbPOilrMBh57566214;     cWqATHpItMlDCTxTbPOilrMBh57566214 = cWqATHpItMlDCTxTbPOilrMBh53753129;     cWqATHpItMlDCTxTbPOilrMBh53753129 = cWqATHpItMlDCTxTbPOilrMBh66189833;     cWqATHpItMlDCTxTbPOilrMBh66189833 = cWqATHpItMlDCTxTbPOilrMBh67221954;     cWqATHpItMlDCTxTbPOilrMBh67221954 = cWqATHpItMlDCTxTbPOilrMBh60177903;     cWqATHpItMlDCTxTbPOilrMBh60177903 = cWqATHpItMlDCTxTbPOilrMBh62405084;     cWqATHpItMlDCTxTbPOilrMBh62405084 = cWqATHpItMlDCTxTbPOilrMBh606883;     cWqATHpItMlDCTxTbPOilrMBh606883 = cWqATHpItMlDCTxTbPOilrMBh60930874;     cWqATHpItMlDCTxTbPOilrMBh60930874 = cWqATHpItMlDCTxTbPOilrMBh84106528;     cWqATHpItMlDCTxTbPOilrMBh84106528 = cWqATHpItMlDCTxTbPOilrMBh87574431;     cWqATHpItMlDCTxTbPOilrMBh87574431 = cWqATHpItMlDCTxTbPOilrMBh90079097;     cWqATHpItMlDCTxTbPOilrMBh90079097 = cWqATHpItMlDCTxTbPOilrMBh74814900;     cWqATHpItMlDCTxTbPOilrMBh74814900 = cWqATHpItMlDCTxTbPOilrMBh17134013;     cWqATHpItMlDCTxTbPOilrMBh17134013 = cWqATHpItMlDCTxTbPOilrMBh26352146;     cWqATHpItMlDCTxTbPOilrMBh26352146 = cWqATHpItMlDCTxTbPOilrMBh36783883;     cWqATHpItMlDCTxTbPOilrMBh36783883 = cWqATHpItMlDCTxTbPOilrMBh58914071;     cWqATHpItMlDCTxTbPOilrMBh58914071 = cWqATHpItMlDCTxTbPOilrMBh89789645;     cWqATHpItMlDCTxTbPOilrMBh89789645 = cWqATHpItMlDCTxTbPOilrMBh31884649;     cWqATHpItMlDCTxTbPOilrMBh31884649 = cWqATHpItMlDCTxTbPOilrMBh12664397;     cWqATHpItMlDCTxTbPOilrMBh12664397 = cWqATHpItMlDCTxTbPOilrMBh70691805;     cWqATHpItMlDCTxTbPOilrMBh70691805 = cWqATHpItMlDCTxTbPOilrMBh39076695;     cWqATHpItMlDCTxTbPOilrMBh39076695 = cWqATHpItMlDCTxTbPOilrMBh28031055;     cWqATHpItMlDCTxTbPOilrMBh28031055 = cWqATHpItMlDCTxTbPOilrMBh35676628;     cWqATHpItMlDCTxTbPOilrMBh35676628 = cWqATHpItMlDCTxTbPOilrMBh86027144;     cWqATHpItMlDCTxTbPOilrMBh86027144 = cWqATHpItMlDCTxTbPOilrMBh65755077;     cWqATHpItMlDCTxTbPOilrMBh65755077 = cWqATHpItMlDCTxTbPOilrMBh99638535;     cWqATHpItMlDCTxTbPOilrMBh99638535 = cWqATHpItMlDCTxTbPOilrMBh70966981;     cWqATHpItMlDCTxTbPOilrMBh70966981 = cWqATHpItMlDCTxTbPOilrMBh65860301;     cWqATHpItMlDCTxTbPOilrMBh65860301 = cWqATHpItMlDCTxTbPOilrMBh14262831;     cWqATHpItMlDCTxTbPOilrMBh14262831 = cWqATHpItMlDCTxTbPOilrMBh78514675;     cWqATHpItMlDCTxTbPOilrMBh78514675 = cWqATHpItMlDCTxTbPOilrMBh63774308;     cWqATHpItMlDCTxTbPOilrMBh63774308 = cWqATHpItMlDCTxTbPOilrMBh60912209;     cWqATHpItMlDCTxTbPOilrMBh60912209 = cWqATHpItMlDCTxTbPOilrMBh74911911;     cWqATHpItMlDCTxTbPOilrMBh74911911 = cWqATHpItMlDCTxTbPOilrMBh39912906;     cWqATHpItMlDCTxTbPOilrMBh39912906 = cWqATHpItMlDCTxTbPOilrMBh80408147;     cWqATHpItMlDCTxTbPOilrMBh80408147 = cWqATHpItMlDCTxTbPOilrMBh71009047;     cWqATHpItMlDCTxTbPOilrMBh71009047 = cWqATHpItMlDCTxTbPOilrMBh35513451;     cWqATHpItMlDCTxTbPOilrMBh35513451 = cWqATHpItMlDCTxTbPOilrMBh74113749;     cWqATHpItMlDCTxTbPOilrMBh74113749 = cWqATHpItMlDCTxTbPOilrMBh40868198;     cWqATHpItMlDCTxTbPOilrMBh40868198 = cWqATHpItMlDCTxTbPOilrMBh65317126;     cWqATHpItMlDCTxTbPOilrMBh65317126 = cWqATHpItMlDCTxTbPOilrMBh44257542;     cWqATHpItMlDCTxTbPOilrMBh44257542 = cWqATHpItMlDCTxTbPOilrMBh91875946;     cWqATHpItMlDCTxTbPOilrMBh91875946 = cWqATHpItMlDCTxTbPOilrMBh86013767;     cWqATHpItMlDCTxTbPOilrMBh86013767 = cWqATHpItMlDCTxTbPOilrMBh23617614;     cWqATHpItMlDCTxTbPOilrMBh23617614 = cWqATHpItMlDCTxTbPOilrMBh14651587;     cWqATHpItMlDCTxTbPOilrMBh14651587 = cWqATHpItMlDCTxTbPOilrMBh1141694;     cWqATHpItMlDCTxTbPOilrMBh1141694 = cWqATHpItMlDCTxTbPOilrMBh26002574;     cWqATHpItMlDCTxTbPOilrMBh26002574 = cWqATHpItMlDCTxTbPOilrMBh13708549;     cWqATHpItMlDCTxTbPOilrMBh13708549 = cWqATHpItMlDCTxTbPOilrMBh31371204;     cWqATHpItMlDCTxTbPOilrMBh31371204 = cWqATHpItMlDCTxTbPOilrMBh66315931;     cWqATHpItMlDCTxTbPOilrMBh66315931 = cWqATHpItMlDCTxTbPOilrMBh546095;     cWqATHpItMlDCTxTbPOilrMBh546095 = cWqATHpItMlDCTxTbPOilrMBh4359677;     cWqATHpItMlDCTxTbPOilrMBh4359677 = cWqATHpItMlDCTxTbPOilrMBh43734037;     cWqATHpItMlDCTxTbPOilrMBh43734037 = cWqATHpItMlDCTxTbPOilrMBh24900560;     cWqATHpItMlDCTxTbPOilrMBh24900560 = cWqATHpItMlDCTxTbPOilrMBh92603558;     cWqATHpItMlDCTxTbPOilrMBh92603558 = cWqATHpItMlDCTxTbPOilrMBh29535159;     cWqATHpItMlDCTxTbPOilrMBh29535159 = cWqATHpItMlDCTxTbPOilrMBh18076502;     cWqATHpItMlDCTxTbPOilrMBh18076502 = cWqATHpItMlDCTxTbPOilrMBh80162688;     cWqATHpItMlDCTxTbPOilrMBh80162688 = cWqATHpItMlDCTxTbPOilrMBh1466878;     cWqATHpItMlDCTxTbPOilrMBh1466878 = cWqATHpItMlDCTxTbPOilrMBh60539368;     cWqATHpItMlDCTxTbPOilrMBh60539368 = cWqATHpItMlDCTxTbPOilrMBh91438103;     cWqATHpItMlDCTxTbPOilrMBh91438103 = cWqATHpItMlDCTxTbPOilrMBh34746581;     cWqATHpItMlDCTxTbPOilrMBh34746581 = cWqATHpItMlDCTxTbPOilrMBh46668043;     cWqATHpItMlDCTxTbPOilrMBh46668043 = cWqATHpItMlDCTxTbPOilrMBh5591854;     cWqATHpItMlDCTxTbPOilrMBh5591854 = cWqATHpItMlDCTxTbPOilrMBh23800124;     cWqATHpItMlDCTxTbPOilrMBh23800124 = cWqATHpItMlDCTxTbPOilrMBh29166889;     cWqATHpItMlDCTxTbPOilrMBh29166889 = cWqATHpItMlDCTxTbPOilrMBh99902988;     cWqATHpItMlDCTxTbPOilrMBh99902988 = cWqATHpItMlDCTxTbPOilrMBh77221106;     cWqATHpItMlDCTxTbPOilrMBh77221106 = cWqATHpItMlDCTxTbPOilrMBh45943998;     cWqATHpItMlDCTxTbPOilrMBh45943998 = cWqATHpItMlDCTxTbPOilrMBh65774836;     cWqATHpItMlDCTxTbPOilrMBh65774836 = cWqATHpItMlDCTxTbPOilrMBh23400621;     cWqATHpItMlDCTxTbPOilrMBh23400621 = cWqATHpItMlDCTxTbPOilrMBh15675897;     cWqATHpItMlDCTxTbPOilrMBh15675897 = cWqATHpItMlDCTxTbPOilrMBh91016450;     cWqATHpItMlDCTxTbPOilrMBh91016450 = cWqATHpItMlDCTxTbPOilrMBh47347270;     cWqATHpItMlDCTxTbPOilrMBh47347270 = cWqATHpItMlDCTxTbPOilrMBh26434264;     cWqATHpItMlDCTxTbPOilrMBh26434264 = cWqATHpItMlDCTxTbPOilrMBh47200748;     cWqATHpItMlDCTxTbPOilrMBh47200748 = cWqATHpItMlDCTxTbPOilrMBh42017288;     cWqATHpItMlDCTxTbPOilrMBh42017288 = cWqATHpItMlDCTxTbPOilrMBh12059014;     cWqATHpItMlDCTxTbPOilrMBh12059014 = cWqATHpItMlDCTxTbPOilrMBh71375558;     cWqATHpItMlDCTxTbPOilrMBh71375558 = cWqATHpItMlDCTxTbPOilrMBh64613384;     cWqATHpItMlDCTxTbPOilrMBh64613384 = cWqATHpItMlDCTxTbPOilrMBh73635962;     cWqATHpItMlDCTxTbPOilrMBh73635962 = cWqATHpItMlDCTxTbPOilrMBh57258433;     cWqATHpItMlDCTxTbPOilrMBh57258433 = cWqATHpItMlDCTxTbPOilrMBh34489098;     cWqATHpItMlDCTxTbPOilrMBh34489098 = cWqATHpItMlDCTxTbPOilrMBh47946900;     cWqATHpItMlDCTxTbPOilrMBh47946900 = cWqATHpItMlDCTxTbPOilrMBh77968580;     cWqATHpItMlDCTxTbPOilrMBh77968580 = cWqATHpItMlDCTxTbPOilrMBh59414631;     cWqATHpItMlDCTxTbPOilrMBh59414631 = cWqATHpItMlDCTxTbPOilrMBh17178173;     cWqATHpItMlDCTxTbPOilrMBh17178173 = cWqATHpItMlDCTxTbPOilrMBh50011351;     cWqATHpItMlDCTxTbPOilrMBh50011351 = cWqATHpItMlDCTxTbPOilrMBh47309348;     cWqATHpItMlDCTxTbPOilrMBh47309348 = cWqATHpItMlDCTxTbPOilrMBh50872989;     cWqATHpItMlDCTxTbPOilrMBh50872989 = cWqATHpItMlDCTxTbPOilrMBh52932546;     cWqATHpItMlDCTxTbPOilrMBh52932546 = cWqATHpItMlDCTxTbPOilrMBh55350762;     cWqATHpItMlDCTxTbPOilrMBh55350762 = cWqATHpItMlDCTxTbPOilrMBh72646871;     cWqATHpItMlDCTxTbPOilrMBh72646871 = cWqATHpItMlDCTxTbPOilrMBh80328830;     cWqATHpItMlDCTxTbPOilrMBh80328830 = cWqATHpItMlDCTxTbPOilrMBh73879023;     cWqATHpItMlDCTxTbPOilrMBh73879023 = cWqATHpItMlDCTxTbPOilrMBh90335739;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void vZZsMQuFmgaoRQahnnjobmdkpVImQNjnBetTRIYkAAcEJYoNnrRkzqtJv92521601() {     long oDrHHoZwnnnWHQePznbJZaQhv25794708 = -261656327;    long oDrHHoZwnnnWHQePznbJZaQhv49516404 = -383264671;    long oDrHHoZwnnnWHQePznbJZaQhv93784909 = -881026023;    long oDrHHoZwnnnWHQePznbJZaQhv67815720 = -823158680;    long oDrHHoZwnnnWHQePznbJZaQhv87965521 = -165267166;    long oDrHHoZwnnnWHQePznbJZaQhv93789085 = -148722148;    long oDrHHoZwnnnWHQePznbJZaQhv64410535 = -308129598;    long oDrHHoZwnnnWHQePznbJZaQhv28321394 = -998824093;    long oDrHHoZwnnnWHQePznbJZaQhv68739559 = -766771356;    long oDrHHoZwnnnWHQePznbJZaQhv75080615 = -192618583;    long oDrHHoZwnnnWHQePznbJZaQhv586819 = -968435552;    long oDrHHoZwnnnWHQePznbJZaQhv1175031 = -717345292;    long oDrHHoZwnnnWHQePznbJZaQhv99165519 = -491758076;    long oDrHHoZwnnnWHQePznbJZaQhv37247392 = -993234147;    long oDrHHoZwnnnWHQePznbJZaQhv45768948 = 96005895;    long oDrHHoZwnnnWHQePznbJZaQhv73620398 = -773115034;    long oDrHHoZwnnnWHQePznbJZaQhv30650836 = -360782185;    long oDrHHoZwnnnWHQePznbJZaQhv16894205 = -976769630;    long oDrHHoZwnnnWHQePznbJZaQhv26902476 = -911174996;    long oDrHHoZwnnnWHQePznbJZaQhv30621102 = -470623603;    long oDrHHoZwnnnWHQePznbJZaQhv72000934 = -281298317;    long oDrHHoZwnnnWHQePznbJZaQhv93211170 = 16196022;    long oDrHHoZwnnnWHQePznbJZaQhv2410029 = -651699609;    long oDrHHoZwnnnWHQePznbJZaQhv6457342 = -106968609;    long oDrHHoZwnnnWHQePznbJZaQhv78709756 = -315744786;    long oDrHHoZwnnnWHQePznbJZaQhv49774866 = -556700936;    long oDrHHoZwnnnWHQePznbJZaQhv88451629 = -257476122;    long oDrHHoZwnnnWHQePznbJZaQhv76405052 = -840742834;    long oDrHHoZwnnnWHQePznbJZaQhv32695359 = -528313698;    long oDrHHoZwnnnWHQePznbJZaQhv71288488 = -893241981;    long oDrHHoZwnnnWHQePznbJZaQhv18221767 = -803432039;    long oDrHHoZwnnnWHQePznbJZaQhv8790000 = -299652143;    long oDrHHoZwnnnWHQePznbJZaQhv78078312 = 69967849;    long oDrHHoZwnnnWHQePznbJZaQhv44011258 = -256543096;    long oDrHHoZwnnnWHQePznbJZaQhv44323129 = -764943926;    long oDrHHoZwnnnWHQePznbJZaQhv15335152 = -92644015;    long oDrHHoZwnnnWHQePznbJZaQhv10324026 = -187146922;    long oDrHHoZwnnnWHQePznbJZaQhv26127315 = -847998823;    long oDrHHoZwnnnWHQePznbJZaQhv70303468 = -806076821;    long oDrHHoZwnnnWHQePznbJZaQhv44679680 = -868141071;    long oDrHHoZwnnnWHQePznbJZaQhv4460656 = -495799470;    long oDrHHoZwnnnWHQePznbJZaQhv24878577 = -710112580;    long oDrHHoZwnnnWHQePznbJZaQhv63497127 = -895360766;    long oDrHHoZwnnnWHQePznbJZaQhv80999536 = -448984928;    long oDrHHoZwnnnWHQePznbJZaQhv65333585 = -902428951;    long oDrHHoZwnnnWHQePznbJZaQhv90218870 = -532138166;    long oDrHHoZwnnnWHQePznbJZaQhv11221111 = -155280890;    long oDrHHoZwnnnWHQePznbJZaQhv3740079 = -599530997;    long oDrHHoZwnnnWHQePznbJZaQhv46510280 = -642764962;    long oDrHHoZwnnnWHQePznbJZaQhv39181176 = -794120511;    long oDrHHoZwnnnWHQePznbJZaQhv81912417 = -358210923;    long oDrHHoZwnnnWHQePznbJZaQhv9488046 = -701452407;    long oDrHHoZwnnnWHQePznbJZaQhv82329697 = -362318392;    long oDrHHoZwnnnWHQePznbJZaQhv47363051 = -163828830;    long oDrHHoZwnnnWHQePznbJZaQhv20520668 = -909797264;    long oDrHHoZwnnnWHQePznbJZaQhv32583538 = -177852350;    long oDrHHoZwnnnWHQePznbJZaQhv47106375 = -731565063;    long oDrHHoZwnnnWHQePznbJZaQhv87327568 = -674057414;    long oDrHHoZwnnnWHQePznbJZaQhv89105963 = -407413894;    long oDrHHoZwnnnWHQePznbJZaQhv38190656 = -608566230;    long oDrHHoZwnnnWHQePznbJZaQhv5337457 = -891246026;    long oDrHHoZwnnnWHQePznbJZaQhv88005483 = -467386765;    long oDrHHoZwnnnWHQePznbJZaQhv95626035 = -370510395;    long oDrHHoZwnnnWHQePznbJZaQhv97451071 = -873529375;    long oDrHHoZwnnnWHQePznbJZaQhv56858848 = -389186544;    long oDrHHoZwnnnWHQePznbJZaQhv91796819 = -568783410;    long oDrHHoZwnnnWHQePznbJZaQhv23096719 = -687313141;    long oDrHHoZwnnnWHQePznbJZaQhv55154262 = -135214981;    long oDrHHoZwnnnWHQePznbJZaQhv92924262 = -128290221;    long oDrHHoZwnnnWHQePznbJZaQhv30433796 = -811350091;    long oDrHHoZwnnnWHQePznbJZaQhv63296373 = -485968113;    long oDrHHoZwnnnWHQePznbJZaQhv4523522 = -512783362;    long oDrHHoZwnnnWHQePznbJZaQhv46590737 = -70692809;    long oDrHHoZwnnnWHQePznbJZaQhv82222796 = 56966075;    long oDrHHoZwnnnWHQePznbJZaQhv26160447 = -974824134;    long oDrHHoZwnnnWHQePznbJZaQhv47122357 = -571185737;    long oDrHHoZwnnnWHQePznbJZaQhv29714043 = -88443213;    long oDrHHoZwnnnWHQePznbJZaQhv21410493 = -102714681;    long oDrHHoZwnnnWHQePznbJZaQhv41123757 = -204539659;    long oDrHHoZwnnnWHQePznbJZaQhv88490886 = -783606621;    long oDrHHoZwnnnWHQePznbJZaQhv38553756 = -301420046;    long oDrHHoZwnnnWHQePznbJZaQhv84711550 = -657945126;    long oDrHHoZwnnnWHQePznbJZaQhv29894773 = -97977873;    long oDrHHoZwnnnWHQePznbJZaQhv93514183 = -734193188;    long oDrHHoZwnnnWHQePznbJZaQhv89376071 = -435031059;    long oDrHHoZwnnnWHQePznbJZaQhv8733722 = -1979632;    long oDrHHoZwnnnWHQePznbJZaQhv26460303 = -937333751;    long oDrHHoZwnnnWHQePznbJZaQhv30715262 = -766203321;    long oDrHHoZwnnnWHQePznbJZaQhv23490590 = -346745832;    long oDrHHoZwnnnWHQePznbJZaQhv11739591 = -487091577;    long oDrHHoZwnnnWHQePznbJZaQhv68228776 = -361078952;    long oDrHHoZwnnnWHQePznbJZaQhv22996458 = -513089508;    long oDrHHoZwnnnWHQePznbJZaQhv37021351 = -340584929;    long oDrHHoZwnnnWHQePznbJZaQhv32112812 = -97510591;    long oDrHHoZwnnnWHQePznbJZaQhv39342223 = -976895046;    long oDrHHoZwnnnWHQePznbJZaQhv16455172 = 71587294;    long oDrHHoZwnnnWHQePznbJZaQhv29252542 = -239602185;    long oDrHHoZwnnnWHQePznbJZaQhv66046056 = 78168609;    long oDrHHoZwnnnWHQePznbJZaQhv24140688 = 40201616;    long oDrHHoZwnnnWHQePznbJZaQhv73536765 = -261656327;     oDrHHoZwnnnWHQePznbJZaQhv25794708 = oDrHHoZwnnnWHQePznbJZaQhv49516404;     oDrHHoZwnnnWHQePznbJZaQhv49516404 = oDrHHoZwnnnWHQePznbJZaQhv93784909;     oDrHHoZwnnnWHQePznbJZaQhv93784909 = oDrHHoZwnnnWHQePznbJZaQhv67815720;     oDrHHoZwnnnWHQePznbJZaQhv67815720 = oDrHHoZwnnnWHQePznbJZaQhv87965521;     oDrHHoZwnnnWHQePznbJZaQhv87965521 = oDrHHoZwnnnWHQePznbJZaQhv93789085;     oDrHHoZwnnnWHQePznbJZaQhv93789085 = oDrHHoZwnnnWHQePznbJZaQhv64410535;     oDrHHoZwnnnWHQePznbJZaQhv64410535 = oDrHHoZwnnnWHQePznbJZaQhv28321394;     oDrHHoZwnnnWHQePznbJZaQhv28321394 = oDrHHoZwnnnWHQePznbJZaQhv68739559;     oDrHHoZwnnnWHQePznbJZaQhv68739559 = oDrHHoZwnnnWHQePznbJZaQhv75080615;     oDrHHoZwnnnWHQePznbJZaQhv75080615 = oDrHHoZwnnnWHQePznbJZaQhv586819;     oDrHHoZwnnnWHQePznbJZaQhv586819 = oDrHHoZwnnnWHQePznbJZaQhv1175031;     oDrHHoZwnnnWHQePznbJZaQhv1175031 = oDrHHoZwnnnWHQePznbJZaQhv99165519;     oDrHHoZwnnnWHQePznbJZaQhv99165519 = oDrHHoZwnnnWHQePznbJZaQhv37247392;     oDrHHoZwnnnWHQePznbJZaQhv37247392 = oDrHHoZwnnnWHQePznbJZaQhv45768948;     oDrHHoZwnnnWHQePznbJZaQhv45768948 = oDrHHoZwnnnWHQePznbJZaQhv73620398;     oDrHHoZwnnnWHQePznbJZaQhv73620398 = oDrHHoZwnnnWHQePznbJZaQhv30650836;     oDrHHoZwnnnWHQePznbJZaQhv30650836 = oDrHHoZwnnnWHQePznbJZaQhv16894205;     oDrHHoZwnnnWHQePznbJZaQhv16894205 = oDrHHoZwnnnWHQePznbJZaQhv26902476;     oDrHHoZwnnnWHQePznbJZaQhv26902476 = oDrHHoZwnnnWHQePznbJZaQhv30621102;     oDrHHoZwnnnWHQePznbJZaQhv30621102 = oDrHHoZwnnnWHQePznbJZaQhv72000934;     oDrHHoZwnnnWHQePznbJZaQhv72000934 = oDrHHoZwnnnWHQePznbJZaQhv93211170;     oDrHHoZwnnnWHQePznbJZaQhv93211170 = oDrHHoZwnnnWHQePznbJZaQhv2410029;     oDrHHoZwnnnWHQePznbJZaQhv2410029 = oDrHHoZwnnnWHQePznbJZaQhv6457342;     oDrHHoZwnnnWHQePznbJZaQhv6457342 = oDrHHoZwnnnWHQePznbJZaQhv78709756;     oDrHHoZwnnnWHQePznbJZaQhv78709756 = oDrHHoZwnnnWHQePznbJZaQhv49774866;     oDrHHoZwnnnWHQePznbJZaQhv49774866 = oDrHHoZwnnnWHQePznbJZaQhv88451629;     oDrHHoZwnnnWHQePznbJZaQhv88451629 = oDrHHoZwnnnWHQePznbJZaQhv76405052;     oDrHHoZwnnnWHQePznbJZaQhv76405052 = oDrHHoZwnnnWHQePznbJZaQhv32695359;     oDrHHoZwnnnWHQePznbJZaQhv32695359 = oDrHHoZwnnnWHQePznbJZaQhv71288488;     oDrHHoZwnnnWHQePznbJZaQhv71288488 = oDrHHoZwnnnWHQePznbJZaQhv18221767;     oDrHHoZwnnnWHQePznbJZaQhv18221767 = oDrHHoZwnnnWHQePznbJZaQhv8790000;     oDrHHoZwnnnWHQePznbJZaQhv8790000 = oDrHHoZwnnnWHQePznbJZaQhv78078312;     oDrHHoZwnnnWHQePznbJZaQhv78078312 = oDrHHoZwnnnWHQePznbJZaQhv44011258;     oDrHHoZwnnnWHQePznbJZaQhv44011258 = oDrHHoZwnnnWHQePznbJZaQhv44323129;     oDrHHoZwnnnWHQePznbJZaQhv44323129 = oDrHHoZwnnnWHQePznbJZaQhv15335152;     oDrHHoZwnnnWHQePznbJZaQhv15335152 = oDrHHoZwnnnWHQePznbJZaQhv10324026;     oDrHHoZwnnnWHQePznbJZaQhv10324026 = oDrHHoZwnnnWHQePznbJZaQhv26127315;     oDrHHoZwnnnWHQePznbJZaQhv26127315 = oDrHHoZwnnnWHQePznbJZaQhv70303468;     oDrHHoZwnnnWHQePznbJZaQhv70303468 = oDrHHoZwnnnWHQePznbJZaQhv44679680;     oDrHHoZwnnnWHQePznbJZaQhv44679680 = oDrHHoZwnnnWHQePznbJZaQhv4460656;     oDrHHoZwnnnWHQePznbJZaQhv4460656 = oDrHHoZwnnnWHQePznbJZaQhv24878577;     oDrHHoZwnnnWHQePznbJZaQhv24878577 = oDrHHoZwnnnWHQePznbJZaQhv63497127;     oDrHHoZwnnnWHQePznbJZaQhv63497127 = oDrHHoZwnnnWHQePznbJZaQhv80999536;     oDrHHoZwnnnWHQePznbJZaQhv80999536 = oDrHHoZwnnnWHQePznbJZaQhv65333585;     oDrHHoZwnnnWHQePznbJZaQhv65333585 = oDrHHoZwnnnWHQePznbJZaQhv90218870;     oDrHHoZwnnnWHQePznbJZaQhv90218870 = oDrHHoZwnnnWHQePznbJZaQhv11221111;     oDrHHoZwnnnWHQePznbJZaQhv11221111 = oDrHHoZwnnnWHQePznbJZaQhv3740079;     oDrHHoZwnnnWHQePznbJZaQhv3740079 = oDrHHoZwnnnWHQePznbJZaQhv46510280;     oDrHHoZwnnnWHQePznbJZaQhv46510280 = oDrHHoZwnnnWHQePznbJZaQhv39181176;     oDrHHoZwnnnWHQePznbJZaQhv39181176 = oDrHHoZwnnnWHQePznbJZaQhv81912417;     oDrHHoZwnnnWHQePznbJZaQhv81912417 = oDrHHoZwnnnWHQePznbJZaQhv9488046;     oDrHHoZwnnnWHQePznbJZaQhv9488046 = oDrHHoZwnnnWHQePznbJZaQhv82329697;     oDrHHoZwnnnWHQePznbJZaQhv82329697 = oDrHHoZwnnnWHQePznbJZaQhv47363051;     oDrHHoZwnnnWHQePznbJZaQhv47363051 = oDrHHoZwnnnWHQePznbJZaQhv20520668;     oDrHHoZwnnnWHQePznbJZaQhv20520668 = oDrHHoZwnnnWHQePznbJZaQhv32583538;     oDrHHoZwnnnWHQePznbJZaQhv32583538 = oDrHHoZwnnnWHQePznbJZaQhv47106375;     oDrHHoZwnnnWHQePznbJZaQhv47106375 = oDrHHoZwnnnWHQePznbJZaQhv87327568;     oDrHHoZwnnnWHQePznbJZaQhv87327568 = oDrHHoZwnnnWHQePznbJZaQhv89105963;     oDrHHoZwnnnWHQePznbJZaQhv89105963 = oDrHHoZwnnnWHQePznbJZaQhv38190656;     oDrHHoZwnnnWHQePznbJZaQhv38190656 = oDrHHoZwnnnWHQePznbJZaQhv5337457;     oDrHHoZwnnnWHQePznbJZaQhv5337457 = oDrHHoZwnnnWHQePznbJZaQhv88005483;     oDrHHoZwnnnWHQePznbJZaQhv88005483 = oDrHHoZwnnnWHQePznbJZaQhv95626035;     oDrHHoZwnnnWHQePznbJZaQhv95626035 = oDrHHoZwnnnWHQePznbJZaQhv97451071;     oDrHHoZwnnnWHQePznbJZaQhv97451071 = oDrHHoZwnnnWHQePznbJZaQhv56858848;     oDrHHoZwnnnWHQePznbJZaQhv56858848 = oDrHHoZwnnnWHQePznbJZaQhv91796819;     oDrHHoZwnnnWHQePznbJZaQhv91796819 = oDrHHoZwnnnWHQePznbJZaQhv23096719;     oDrHHoZwnnnWHQePznbJZaQhv23096719 = oDrHHoZwnnnWHQePznbJZaQhv55154262;     oDrHHoZwnnnWHQePznbJZaQhv55154262 = oDrHHoZwnnnWHQePznbJZaQhv92924262;     oDrHHoZwnnnWHQePznbJZaQhv92924262 = oDrHHoZwnnnWHQePznbJZaQhv30433796;     oDrHHoZwnnnWHQePznbJZaQhv30433796 = oDrHHoZwnnnWHQePznbJZaQhv63296373;     oDrHHoZwnnnWHQePznbJZaQhv63296373 = oDrHHoZwnnnWHQePznbJZaQhv4523522;     oDrHHoZwnnnWHQePznbJZaQhv4523522 = oDrHHoZwnnnWHQePznbJZaQhv46590737;     oDrHHoZwnnnWHQePznbJZaQhv46590737 = oDrHHoZwnnnWHQePznbJZaQhv82222796;     oDrHHoZwnnnWHQePznbJZaQhv82222796 = oDrHHoZwnnnWHQePznbJZaQhv26160447;     oDrHHoZwnnnWHQePznbJZaQhv26160447 = oDrHHoZwnnnWHQePznbJZaQhv47122357;     oDrHHoZwnnnWHQePznbJZaQhv47122357 = oDrHHoZwnnnWHQePznbJZaQhv29714043;     oDrHHoZwnnnWHQePznbJZaQhv29714043 = oDrHHoZwnnnWHQePznbJZaQhv21410493;     oDrHHoZwnnnWHQePznbJZaQhv21410493 = oDrHHoZwnnnWHQePznbJZaQhv41123757;     oDrHHoZwnnnWHQePznbJZaQhv41123757 = oDrHHoZwnnnWHQePznbJZaQhv88490886;     oDrHHoZwnnnWHQePznbJZaQhv88490886 = oDrHHoZwnnnWHQePznbJZaQhv38553756;     oDrHHoZwnnnWHQePznbJZaQhv38553756 = oDrHHoZwnnnWHQePznbJZaQhv84711550;     oDrHHoZwnnnWHQePznbJZaQhv84711550 = oDrHHoZwnnnWHQePznbJZaQhv29894773;     oDrHHoZwnnnWHQePznbJZaQhv29894773 = oDrHHoZwnnnWHQePznbJZaQhv93514183;     oDrHHoZwnnnWHQePznbJZaQhv93514183 = oDrHHoZwnnnWHQePznbJZaQhv89376071;     oDrHHoZwnnnWHQePznbJZaQhv89376071 = oDrHHoZwnnnWHQePznbJZaQhv8733722;     oDrHHoZwnnnWHQePznbJZaQhv8733722 = oDrHHoZwnnnWHQePznbJZaQhv26460303;     oDrHHoZwnnnWHQePznbJZaQhv26460303 = oDrHHoZwnnnWHQePznbJZaQhv30715262;     oDrHHoZwnnnWHQePznbJZaQhv30715262 = oDrHHoZwnnnWHQePznbJZaQhv23490590;     oDrHHoZwnnnWHQePznbJZaQhv23490590 = oDrHHoZwnnnWHQePznbJZaQhv11739591;     oDrHHoZwnnnWHQePznbJZaQhv11739591 = oDrHHoZwnnnWHQePznbJZaQhv68228776;     oDrHHoZwnnnWHQePznbJZaQhv68228776 = oDrHHoZwnnnWHQePznbJZaQhv22996458;     oDrHHoZwnnnWHQePznbJZaQhv22996458 = oDrHHoZwnnnWHQePznbJZaQhv37021351;     oDrHHoZwnnnWHQePznbJZaQhv37021351 = oDrHHoZwnnnWHQePznbJZaQhv32112812;     oDrHHoZwnnnWHQePznbJZaQhv32112812 = oDrHHoZwnnnWHQePznbJZaQhv39342223;     oDrHHoZwnnnWHQePznbJZaQhv39342223 = oDrHHoZwnnnWHQePznbJZaQhv16455172;     oDrHHoZwnnnWHQePznbJZaQhv16455172 = oDrHHoZwnnnWHQePznbJZaQhv29252542;     oDrHHoZwnnnWHQePznbJZaQhv29252542 = oDrHHoZwnnnWHQePznbJZaQhv66046056;     oDrHHoZwnnnWHQePznbJZaQhv66046056 = oDrHHoZwnnnWHQePznbJZaQhv24140688;     oDrHHoZwnnnWHQePznbJZaQhv24140688 = oDrHHoZwnnnWHQePznbJZaQhv73536765;     oDrHHoZwnnnWHQePznbJZaQhv73536765 = oDrHHoZwnnnWHQePznbJZaQhv25794708;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void HkNyGojJRUuJtdZipYHbqNEtjbsZcRviZoshkXvQuVaWnilpjYZHRKGtg7570670() {     long TOfwKgzYMjEkrxScrgVmhGBqD31911815 = -373558216;    long TOfwKgzYMjEkrxScrgVmhGBqD92889683 = -92864452;    long TOfwKgzYMjEkrxScrgVmhGBqD9827094 = 68141056;    long TOfwKgzYMjEkrxScrgVmhGBqD94890501 = 86092690;    long TOfwKgzYMjEkrxScrgVmhGBqD56861010 = -685917037;    long TOfwKgzYMjEkrxScrgVmhGBqD85206288 = -413218383;    long TOfwKgzYMjEkrxScrgVmhGBqD24899502 = -447094575;    long TOfwKgzYMjEkrxScrgVmhGBqD78081285 = -185698006;    long TOfwKgzYMjEkrxScrgVmhGBqD33382055 = -534804022;    long TOfwKgzYMjEkrxScrgVmhGBqD16310275 = -521594060;    long TOfwKgzYMjEkrxScrgVmhGBqD60697109 = -845873139;    long TOfwKgzYMjEkrxScrgVmhGBqD32998073 = -61751494;    long TOfwKgzYMjEkrxScrgVmhGBqD85374638 = -931649164;    long TOfwKgzYMjEkrxScrgVmhGBqD20391068 = -425472715;    long TOfwKgzYMjEkrxScrgVmhGBqD41511375 = -594456271;    long TOfwKgzYMjEkrxScrgVmhGBqD15125793 = -746114577;    long TOfwKgzYMjEkrxScrgVmhGBqD24486839 = -977327297;    long TOfwKgzYMjEkrxScrgVmhGBqD13947358 = -642292272;    long TOfwKgzYMjEkrxScrgVmhGBqD88732317 = -216944093;    long TOfwKgzYMjEkrxScrgVmhGBqD11171267 = -827526523;    long TOfwKgzYMjEkrxScrgVmhGBqD60554127 = -136785772;    long TOfwKgzYMjEkrxScrgVmhGBqD79732193 = -991733694;    long TOfwKgzYMjEkrxScrgVmhGBqD38000821 = -398217095;    long TOfwKgzYMjEkrxScrgVmhGBqD90449715 = -329273597;    long TOfwKgzYMjEkrxScrgVmhGBqD22409407 = -688940819;    long TOfwKgzYMjEkrxScrgVmhGBqD74496541 = -435356259;    long TOfwKgzYMjEkrxScrgVmhGBqD86911407 = -158138325;    long TOfwKgzYMjEkrxScrgVmhGBqD89512177 = -906671787;    long TOfwKgzYMjEkrxScrgVmhGBqD98827614 = -750696403;    long TOfwKgzYMjEkrxScrgVmhGBqD39904125 = -710712849;    long TOfwKgzYMjEkrxScrgVmhGBqD10464317 = -716752977;    long TOfwKgzYMjEkrxScrgVmhGBqD6400622 = -9098958;    long TOfwKgzYMjEkrxScrgVmhGBqD87789260 = -922645521;    long TOfwKgzYMjEkrxScrgVmhGBqD38841822 = -8084861;    long TOfwKgzYMjEkrxScrgVmhGBqD5797781 = -303677031;    long TOfwKgzYMjEkrxScrgVmhGBqD84061065 = -306670122;    long TOfwKgzYMjEkrxScrgVmhGBqD91585960 = -140782792;    long TOfwKgzYMjEkrxScrgVmhGBqD60217527 = -619504833;    long TOfwKgzYMjEkrxScrgVmhGBqD43913722 = -800000318;    long TOfwKgzYMjEkrxScrgVmhGBqD32181618 = -241580294;    long TOfwKgzYMjEkrxScrgVmhGBqD10129880 = -561073364;    long TOfwKgzYMjEkrxScrgVmhGBqD57029034 = -980254858;    long TOfwKgzYMjEkrxScrgVmhGBqD41564106 = -976165350;    long TOfwKgzYMjEkrxScrgVmhGBqD68407276 = -468327866;    long TOfwKgzYMjEkrxScrgVmhGBqD77286050 = -564327105;    long TOfwKgzYMjEkrxScrgVmhGBqD2158066 = -517354282;    long TOfwKgzYMjEkrxScrgVmhGBqD28999685 = -274056428;    long TOfwKgzYMjEkrxScrgVmhGBqD11697020 = -609426530;    long TOfwKgzYMjEkrxScrgVmhGBqD56186009 = -728501950;    long TOfwKgzYMjEkrxScrgVmhGBqD52092828 = -881131319;    long TOfwKgzYMjEkrxScrgVmhGBqD17613096 = -200504594;    long TOfwKgzYMjEkrxScrgVmhGBqD20297766 = -502178727;    long TOfwKgzYMjEkrxScrgVmhGBqD30578154 = -154107980;    long TOfwKgzYMjEkrxScrgVmhGBqD43331931 = -484298975;    long TOfwKgzYMjEkrxScrgVmhGBqD47016542 = -510329047;    long TOfwKgzYMjEkrxScrgVmhGBqD52179621 = -381824522;    long TOfwKgzYMjEkrxScrgVmhGBqD54888863 = -694647357;    long TOfwKgzYMjEkrxScrgVmhGBqD19377378 = -602585348;    long TOfwKgzYMjEkrxScrgVmhGBqD72481094 = -224966492;    long TOfwKgzYMjEkrxScrgVmhGBqD82364468 = -150560778;    long TOfwKgzYMjEkrxScrgVmhGBqD98294880 = -155080058;    long TOfwKgzYMjEkrxScrgVmhGBqD35387324 = -540422788;    long TOfwKgzYMjEkrxScrgVmhGBqD79253670 = -435001603;    long TOfwKgzYMjEkrxScrgVmhGBqD93477930 = -824091174;    long TOfwKgzYMjEkrxScrgVmhGBqD5845959 = -804841083;    long TOfwKgzYMjEkrxScrgVmhGBqD54296488 = -736774181;    long TOfwKgzYMjEkrxScrgVmhGBqD45208812 = -139105973;    long TOfwKgzYMjEkrxScrgVmhGBqD46532816 = -823564304;    long TOfwKgzYMjEkrxScrgVmhGBqD14593288 = -21795684;    long TOfwKgzYMjEkrxScrgVmhGBqD57450310 = -187786150;    long TOfwKgzYMjEkrxScrgVmhGBqD23539832 = -505331786;    long TOfwKgzYMjEkrxScrgVmhGBqD64269312 = -257822465;    long TOfwKgzYMjEkrxScrgVmhGBqD70033636 = -842291955;    long TOfwKgzYMjEkrxScrgVmhGBqD56550700 = -975363800;    long TOfwKgzYMjEkrxScrgVmhGBqD1041388 = -166453159;    long TOfwKgzYMjEkrxScrgVmhGBqD3525094 = -156530915;    long TOfwKgzYMjEkrxScrgVmhGBqD38168088 = 84431655;    long TOfwKgzYMjEkrxScrgVmhGBqD69593544 = -929889230;    long TOfwKgzYMjEkrxScrgVmhGBqD13163666 = -764946492;    long TOfwKgzYMjEkrxScrgVmhGBqD20251342 = -71586537;    long TOfwKgzYMjEkrxScrgVmhGBqD45496857 = -61299832;    long TOfwKgzYMjEkrxScrgVmhGBqD75214387 = -548711796;    long TOfwKgzYMjEkrxScrgVmhGBqD33326169 = -78169838;    long TOfwKgzYMjEkrxScrgVmhGBqD46734786 = -869565084;    long TOfwKgzYMjEkrxScrgVmhGBqD22291030 = -410208255;    long TOfwKgzYMjEkrxScrgVmhGBqD90166551 = -114574250;    long TOfwKgzYMjEkrxScrgVmhGBqD75822467 = -854990979;    long TOfwKgzYMjEkrxScrgVmhGBqD44457330 = -338346546;    long TOfwKgzYMjEkrxScrgVmhGBqD91825279 = -497755815;    long TOfwKgzYMjEkrxScrgVmhGBqD53618160 = -921852510;    long TOfwKgzYMjEkrxScrgVmhGBqD29172202 = -612022766;    long TOfwKgzYMjEkrxScrgVmhGBqD72208582 = -538197445;    long TOfwKgzYMjEkrxScrgVmhGBqD87736432 = -294538342;    long TOfwKgzYMjEkrxScrgVmhGBqD61549253 = -549439540;    long TOfwKgzYMjEkrxScrgVmhGBqD33886737 = 13499763;    long TOfwKgzYMjEkrxScrgVmhGBqD74742555 = 79349424;    long TOfwKgzYMjEkrxScrgVmhGBqD77775363 = -445253255;    long TOfwKgzYMjEkrxScrgVmhGBqD48086175 = -52074177;    long TOfwKgzYMjEkrxScrgVmhGBqD62561318 = -663486783;    long TOfwKgzYMjEkrxScrgVmhGBqD22989562 = -373558216;     TOfwKgzYMjEkrxScrgVmhGBqD31911815 = TOfwKgzYMjEkrxScrgVmhGBqD92889683;     TOfwKgzYMjEkrxScrgVmhGBqD92889683 = TOfwKgzYMjEkrxScrgVmhGBqD9827094;     TOfwKgzYMjEkrxScrgVmhGBqD9827094 = TOfwKgzYMjEkrxScrgVmhGBqD94890501;     TOfwKgzYMjEkrxScrgVmhGBqD94890501 = TOfwKgzYMjEkrxScrgVmhGBqD56861010;     TOfwKgzYMjEkrxScrgVmhGBqD56861010 = TOfwKgzYMjEkrxScrgVmhGBqD85206288;     TOfwKgzYMjEkrxScrgVmhGBqD85206288 = TOfwKgzYMjEkrxScrgVmhGBqD24899502;     TOfwKgzYMjEkrxScrgVmhGBqD24899502 = TOfwKgzYMjEkrxScrgVmhGBqD78081285;     TOfwKgzYMjEkrxScrgVmhGBqD78081285 = TOfwKgzYMjEkrxScrgVmhGBqD33382055;     TOfwKgzYMjEkrxScrgVmhGBqD33382055 = TOfwKgzYMjEkrxScrgVmhGBqD16310275;     TOfwKgzYMjEkrxScrgVmhGBqD16310275 = TOfwKgzYMjEkrxScrgVmhGBqD60697109;     TOfwKgzYMjEkrxScrgVmhGBqD60697109 = TOfwKgzYMjEkrxScrgVmhGBqD32998073;     TOfwKgzYMjEkrxScrgVmhGBqD32998073 = TOfwKgzYMjEkrxScrgVmhGBqD85374638;     TOfwKgzYMjEkrxScrgVmhGBqD85374638 = TOfwKgzYMjEkrxScrgVmhGBqD20391068;     TOfwKgzYMjEkrxScrgVmhGBqD20391068 = TOfwKgzYMjEkrxScrgVmhGBqD41511375;     TOfwKgzYMjEkrxScrgVmhGBqD41511375 = TOfwKgzYMjEkrxScrgVmhGBqD15125793;     TOfwKgzYMjEkrxScrgVmhGBqD15125793 = TOfwKgzYMjEkrxScrgVmhGBqD24486839;     TOfwKgzYMjEkrxScrgVmhGBqD24486839 = TOfwKgzYMjEkrxScrgVmhGBqD13947358;     TOfwKgzYMjEkrxScrgVmhGBqD13947358 = TOfwKgzYMjEkrxScrgVmhGBqD88732317;     TOfwKgzYMjEkrxScrgVmhGBqD88732317 = TOfwKgzYMjEkrxScrgVmhGBqD11171267;     TOfwKgzYMjEkrxScrgVmhGBqD11171267 = TOfwKgzYMjEkrxScrgVmhGBqD60554127;     TOfwKgzYMjEkrxScrgVmhGBqD60554127 = TOfwKgzYMjEkrxScrgVmhGBqD79732193;     TOfwKgzYMjEkrxScrgVmhGBqD79732193 = TOfwKgzYMjEkrxScrgVmhGBqD38000821;     TOfwKgzYMjEkrxScrgVmhGBqD38000821 = TOfwKgzYMjEkrxScrgVmhGBqD90449715;     TOfwKgzYMjEkrxScrgVmhGBqD90449715 = TOfwKgzYMjEkrxScrgVmhGBqD22409407;     TOfwKgzYMjEkrxScrgVmhGBqD22409407 = TOfwKgzYMjEkrxScrgVmhGBqD74496541;     TOfwKgzYMjEkrxScrgVmhGBqD74496541 = TOfwKgzYMjEkrxScrgVmhGBqD86911407;     TOfwKgzYMjEkrxScrgVmhGBqD86911407 = TOfwKgzYMjEkrxScrgVmhGBqD89512177;     TOfwKgzYMjEkrxScrgVmhGBqD89512177 = TOfwKgzYMjEkrxScrgVmhGBqD98827614;     TOfwKgzYMjEkrxScrgVmhGBqD98827614 = TOfwKgzYMjEkrxScrgVmhGBqD39904125;     TOfwKgzYMjEkrxScrgVmhGBqD39904125 = TOfwKgzYMjEkrxScrgVmhGBqD10464317;     TOfwKgzYMjEkrxScrgVmhGBqD10464317 = TOfwKgzYMjEkrxScrgVmhGBqD6400622;     TOfwKgzYMjEkrxScrgVmhGBqD6400622 = TOfwKgzYMjEkrxScrgVmhGBqD87789260;     TOfwKgzYMjEkrxScrgVmhGBqD87789260 = TOfwKgzYMjEkrxScrgVmhGBqD38841822;     TOfwKgzYMjEkrxScrgVmhGBqD38841822 = TOfwKgzYMjEkrxScrgVmhGBqD5797781;     TOfwKgzYMjEkrxScrgVmhGBqD5797781 = TOfwKgzYMjEkrxScrgVmhGBqD84061065;     TOfwKgzYMjEkrxScrgVmhGBqD84061065 = TOfwKgzYMjEkrxScrgVmhGBqD91585960;     TOfwKgzYMjEkrxScrgVmhGBqD91585960 = TOfwKgzYMjEkrxScrgVmhGBqD60217527;     TOfwKgzYMjEkrxScrgVmhGBqD60217527 = TOfwKgzYMjEkrxScrgVmhGBqD43913722;     TOfwKgzYMjEkrxScrgVmhGBqD43913722 = TOfwKgzYMjEkrxScrgVmhGBqD32181618;     TOfwKgzYMjEkrxScrgVmhGBqD32181618 = TOfwKgzYMjEkrxScrgVmhGBqD10129880;     TOfwKgzYMjEkrxScrgVmhGBqD10129880 = TOfwKgzYMjEkrxScrgVmhGBqD57029034;     TOfwKgzYMjEkrxScrgVmhGBqD57029034 = TOfwKgzYMjEkrxScrgVmhGBqD41564106;     TOfwKgzYMjEkrxScrgVmhGBqD41564106 = TOfwKgzYMjEkrxScrgVmhGBqD68407276;     TOfwKgzYMjEkrxScrgVmhGBqD68407276 = TOfwKgzYMjEkrxScrgVmhGBqD77286050;     TOfwKgzYMjEkrxScrgVmhGBqD77286050 = TOfwKgzYMjEkrxScrgVmhGBqD2158066;     TOfwKgzYMjEkrxScrgVmhGBqD2158066 = TOfwKgzYMjEkrxScrgVmhGBqD28999685;     TOfwKgzYMjEkrxScrgVmhGBqD28999685 = TOfwKgzYMjEkrxScrgVmhGBqD11697020;     TOfwKgzYMjEkrxScrgVmhGBqD11697020 = TOfwKgzYMjEkrxScrgVmhGBqD56186009;     TOfwKgzYMjEkrxScrgVmhGBqD56186009 = TOfwKgzYMjEkrxScrgVmhGBqD52092828;     TOfwKgzYMjEkrxScrgVmhGBqD52092828 = TOfwKgzYMjEkrxScrgVmhGBqD17613096;     TOfwKgzYMjEkrxScrgVmhGBqD17613096 = TOfwKgzYMjEkrxScrgVmhGBqD20297766;     TOfwKgzYMjEkrxScrgVmhGBqD20297766 = TOfwKgzYMjEkrxScrgVmhGBqD30578154;     TOfwKgzYMjEkrxScrgVmhGBqD30578154 = TOfwKgzYMjEkrxScrgVmhGBqD43331931;     TOfwKgzYMjEkrxScrgVmhGBqD43331931 = TOfwKgzYMjEkrxScrgVmhGBqD47016542;     TOfwKgzYMjEkrxScrgVmhGBqD47016542 = TOfwKgzYMjEkrxScrgVmhGBqD52179621;     TOfwKgzYMjEkrxScrgVmhGBqD52179621 = TOfwKgzYMjEkrxScrgVmhGBqD54888863;     TOfwKgzYMjEkrxScrgVmhGBqD54888863 = TOfwKgzYMjEkrxScrgVmhGBqD19377378;     TOfwKgzYMjEkrxScrgVmhGBqD19377378 = TOfwKgzYMjEkrxScrgVmhGBqD72481094;     TOfwKgzYMjEkrxScrgVmhGBqD72481094 = TOfwKgzYMjEkrxScrgVmhGBqD82364468;     TOfwKgzYMjEkrxScrgVmhGBqD82364468 = TOfwKgzYMjEkrxScrgVmhGBqD98294880;     TOfwKgzYMjEkrxScrgVmhGBqD98294880 = TOfwKgzYMjEkrxScrgVmhGBqD35387324;     TOfwKgzYMjEkrxScrgVmhGBqD35387324 = TOfwKgzYMjEkrxScrgVmhGBqD79253670;     TOfwKgzYMjEkrxScrgVmhGBqD79253670 = TOfwKgzYMjEkrxScrgVmhGBqD93477930;     TOfwKgzYMjEkrxScrgVmhGBqD93477930 = TOfwKgzYMjEkrxScrgVmhGBqD5845959;     TOfwKgzYMjEkrxScrgVmhGBqD5845959 = TOfwKgzYMjEkrxScrgVmhGBqD54296488;     TOfwKgzYMjEkrxScrgVmhGBqD54296488 = TOfwKgzYMjEkrxScrgVmhGBqD45208812;     TOfwKgzYMjEkrxScrgVmhGBqD45208812 = TOfwKgzYMjEkrxScrgVmhGBqD46532816;     TOfwKgzYMjEkrxScrgVmhGBqD46532816 = TOfwKgzYMjEkrxScrgVmhGBqD14593288;     TOfwKgzYMjEkrxScrgVmhGBqD14593288 = TOfwKgzYMjEkrxScrgVmhGBqD57450310;     TOfwKgzYMjEkrxScrgVmhGBqD57450310 = TOfwKgzYMjEkrxScrgVmhGBqD23539832;     TOfwKgzYMjEkrxScrgVmhGBqD23539832 = TOfwKgzYMjEkrxScrgVmhGBqD64269312;     TOfwKgzYMjEkrxScrgVmhGBqD64269312 = TOfwKgzYMjEkrxScrgVmhGBqD70033636;     TOfwKgzYMjEkrxScrgVmhGBqD70033636 = TOfwKgzYMjEkrxScrgVmhGBqD56550700;     TOfwKgzYMjEkrxScrgVmhGBqD56550700 = TOfwKgzYMjEkrxScrgVmhGBqD1041388;     TOfwKgzYMjEkrxScrgVmhGBqD1041388 = TOfwKgzYMjEkrxScrgVmhGBqD3525094;     TOfwKgzYMjEkrxScrgVmhGBqD3525094 = TOfwKgzYMjEkrxScrgVmhGBqD38168088;     TOfwKgzYMjEkrxScrgVmhGBqD38168088 = TOfwKgzYMjEkrxScrgVmhGBqD69593544;     TOfwKgzYMjEkrxScrgVmhGBqD69593544 = TOfwKgzYMjEkrxScrgVmhGBqD13163666;     TOfwKgzYMjEkrxScrgVmhGBqD13163666 = TOfwKgzYMjEkrxScrgVmhGBqD20251342;     TOfwKgzYMjEkrxScrgVmhGBqD20251342 = TOfwKgzYMjEkrxScrgVmhGBqD45496857;     TOfwKgzYMjEkrxScrgVmhGBqD45496857 = TOfwKgzYMjEkrxScrgVmhGBqD75214387;     TOfwKgzYMjEkrxScrgVmhGBqD75214387 = TOfwKgzYMjEkrxScrgVmhGBqD33326169;     TOfwKgzYMjEkrxScrgVmhGBqD33326169 = TOfwKgzYMjEkrxScrgVmhGBqD46734786;     TOfwKgzYMjEkrxScrgVmhGBqD46734786 = TOfwKgzYMjEkrxScrgVmhGBqD22291030;     TOfwKgzYMjEkrxScrgVmhGBqD22291030 = TOfwKgzYMjEkrxScrgVmhGBqD90166551;     TOfwKgzYMjEkrxScrgVmhGBqD90166551 = TOfwKgzYMjEkrxScrgVmhGBqD75822467;     TOfwKgzYMjEkrxScrgVmhGBqD75822467 = TOfwKgzYMjEkrxScrgVmhGBqD44457330;     TOfwKgzYMjEkrxScrgVmhGBqD44457330 = TOfwKgzYMjEkrxScrgVmhGBqD91825279;     TOfwKgzYMjEkrxScrgVmhGBqD91825279 = TOfwKgzYMjEkrxScrgVmhGBqD53618160;     TOfwKgzYMjEkrxScrgVmhGBqD53618160 = TOfwKgzYMjEkrxScrgVmhGBqD29172202;     TOfwKgzYMjEkrxScrgVmhGBqD29172202 = TOfwKgzYMjEkrxScrgVmhGBqD72208582;     TOfwKgzYMjEkrxScrgVmhGBqD72208582 = TOfwKgzYMjEkrxScrgVmhGBqD87736432;     TOfwKgzYMjEkrxScrgVmhGBqD87736432 = TOfwKgzYMjEkrxScrgVmhGBqD61549253;     TOfwKgzYMjEkrxScrgVmhGBqD61549253 = TOfwKgzYMjEkrxScrgVmhGBqD33886737;     TOfwKgzYMjEkrxScrgVmhGBqD33886737 = TOfwKgzYMjEkrxScrgVmhGBqD74742555;     TOfwKgzYMjEkrxScrgVmhGBqD74742555 = TOfwKgzYMjEkrxScrgVmhGBqD77775363;     TOfwKgzYMjEkrxScrgVmhGBqD77775363 = TOfwKgzYMjEkrxScrgVmhGBqD48086175;     TOfwKgzYMjEkrxScrgVmhGBqD48086175 = TOfwKgzYMjEkrxScrgVmhGBqD62561318;     TOfwKgzYMjEkrxScrgVmhGBqD62561318 = TOfwKgzYMjEkrxScrgVmhGBqD22989562;     TOfwKgzYMjEkrxScrgVmhGBqD22989562 = TOfwKgzYMjEkrxScrgVmhGBqD31911815;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void uMgSqCAPelOwNqCIpyHuyKkBfOLbKVQTFlToyGxxVbwJcOiwoHOhAlsjb74862269() {     long fmbqYFIVvqcWNJiBJYWObZQgP67370783 = -839835116;    long fmbqYFIVvqcWNJiBJYWObZQgP6161762 = 26583942;    long fmbqYFIVvqcWNJiBJYWObZQgP47213570 = -697526019;    long fmbqYFIVvqcWNJiBJYWObZQgP67113856 = -835058382;    long fmbqYFIVvqcWNJiBJYWObZQgP13146280 = -791515883;    long fmbqYFIVvqcWNJiBJYWObZQgP21429161 = -675566278;    long fmbqYFIVvqcWNJiBJYWObZQgP35556908 = -291820309;    long fmbqYFIVvqcWNJiBJYWObZQgP40212846 = -929932146;    long fmbqYFIVvqcWNJiBJYWObZQgP34899660 = 76864571;    long fmbqYFIVvqcWNJiBJYWObZQgP31212987 = -186281058;    long fmbqYFIVvqcWNJiBJYWObZQgP98878843 = -647880868;    long fmbqYFIVvqcWNJiBJYWObZQgP33566222 = 74127735;    long fmbqYFIVvqcWNJiBJYWObZQgP23609284 = -383661669;    long fmbqYFIVvqcWNJiBJYWObZQgP73531931 = -401836124;    long fmbqYFIVvqcWNJiBJYWObZQgP99705890 = 2118714;    long fmbqYFIVvqcWNJiBJYWObZQgP98667093 = -381926184;    long fmbqYFIVvqcWNJiBJYWObZQgP80322774 = -404301850;    long fmbqYFIVvqcWNJiBJYWObZQgP13707549 = -715720341;    long fmbqYFIVvqcWNJiBJYWObZQgP89282647 = -533507514;    long fmbqYFIVvqcWNJiBJYWObZQgP5008486 = -154087588;    long fmbqYFIVvqcWNJiBJYWObZQgP73640990 = -894060461;    long fmbqYFIVvqcWNJiBJYWObZQgP83153718 = 21630012;    long fmbqYFIVvqcWNJiBJYWObZQgP8526201 = -35849280;    long fmbqYFIVvqcWNJiBJYWObZQgP84242660 = -840098201;    long fmbqYFIVvqcWNJiBJYWObZQgP30427358 = -712926017;    long fmbqYFIVvqcWNJiBJYWObZQgP85194713 = -123933066;    long fmbqYFIVvqcWNJiBJYWObZQgP47331982 = 35577534;    long fmbqYFIVvqcWNJiBJYWObZQgP30240603 = 23556038;    long fmbqYFIVvqcWNJiBJYWObZQgP45495829 = -224791205;    long fmbqYFIVvqcWNJiBJYWObZQgP45437536 = -745220019;    long fmbqYFIVvqcWNJiBJYWObZQgP29047548 = -168733464;    long fmbqYFIVvqcWNJiBJYWObZQgP44223640 = -882070373;    long fmbqYFIVvqcWNJiBJYWObZQgP7272 = 29758501;    long fmbqYFIVvqcWNJiBJYWObZQgP68590248 = -72778674;    long fmbqYFIVvqcWNJiBJYWObZQgP71606234 = -254777282;    long fmbqYFIVvqcWNJiBJYWObZQgP35621909 = -521235428;    long fmbqYFIVvqcWNJiBJYWObZQgP40997777 = -5478832;    long fmbqYFIVvqcWNJiBJYWObZQgP11432931 = -602160414;    long fmbqYFIVvqcWNJiBJYWObZQgP74304283 = -450876594;    long fmbqYFIVvqcWNJiBJYWObZQgP96453149 = -806842840;    long fmbqYFIVvqcWNJiBJYWObZQgP43581487 = -330272278;    long fmbqYFIVvqcWNJiBJYWObZQgP46394161 = -574800149;    long fmbqYFIVvqcWNJiBJYWObZQgP30947484 = -529346136;    long fmbqYFIVvqcWNJiBJYWObZQgP8538615 = 27339724;    long fmbqYFIVvqcWNJiBJYWObZQgP77302508 = -390838266;    long fmbqYFIVvqcWNJiBJYWObZQgP48119394 = -556277915;    long fmbqYFIVvqcWNJiBJYWObZQgP48344848 = -758042789;    long fmbqYFIVvqcWNJiBJYWObZQgP29423332 = -775953123;    long fmbqYFIVvqcWNJiBJYWObZQgP79078675 = -392238830;    long fmbqYFIVvqcWNJiBJYWObZQgP76622417 = -272158135;    long fmbqYFIVvqcWNJiBJYWObZQgP98383819 = -74781152;    long fmbqYFIVvqcWNJiBJYWObZQgP3783238 = -715831074;    long fmbqYFIVvqcWNJiBJYWObZQgP99199302 = 89846466;    long fmbqYFIVvqcWNJiBJYWObZQgP59323777 = -675807475;    long fmbqYFIVvqcWNJiBJYWObZQgP1221279 = -856819192;    long fmbqYFIVvqcWNJiBJYWObZQgP84217064 = -761465128;    long fmbqYFIVvqcWNJiBJYWObZQgP97635561 = -937566779;    long fmbqYFIVvqcWNJiBJYWObZQgP62970909 = -857427819;    long fmbqYFIVvqcWNJiBJYWObZQgP36686498 = -22132365;    long fmbqYFIVvqcWNJiBJYWObZQgP27951566 = -567582817;    long fmbqYFIVvqcWNJiBJYWObZQgP74097178 = -611143812;    long fmbqYFIVvqcWNJiBJYWObZQgP5316306 = -215376348;    long fmbqYFIVvqcWNJiBJYWObZQgP94717016 = -605140941;    long fmbqYFIVvqcWNJiBJYWObZQgP89462124 = -177915410;    long fmbqYFIVvqcWNJiBJYWObZQgP2165439 = 82452406;    long fmbqYFIVvqcWNJiBJYWObZQgP54655204 = -765810496;    long fmbqYFIVvqcWNJiBJYWObZQgP33558950 = -955630767;    long fmbqYFIVvqcWNJiBJYWObZQgP55019035 = -210882996;    long fmbqYFIVvqcWNJiBJYWObZQgP1925697 = -47058842;    long fmbqYFIVvqcWNJiBJYWObZQgP64083982 = -476645859;    long fmbqYFIVvqcWNJiBJYWObZQgP57669316 = -276447353;    long fmbqYFIVvqcWNJiBJYWObZQgP68889844 = -802141436;    long fmbqYFIVvqcWNJiBJYWObZQgP39403266 = -164843748;    long fmbqYFIVvqcWNJiBJYWObZQgP92829497 = -726664675;    long fmbqYFIVvqcWNJiBJYWObZQgP61426998 = -823815311;    long fmbqYFIVvqcWNJiBJYWObZQgP27246830 = -219260313;    long fmbqYFIVvqcWNJiBJYWObZQgP52206235 = -449023853;    long fmbqYFIVvqcWNJiBJYWObZQgP99987585 = 36810996;    long fmbqYFIVvqcWNJiBJYWObZQgP6940153 = -349259935;    long fmbqYFIVvqcWNJiBJYWObZQgP82307964 = -56648103;    long fmbqYFIVvqcWNJiBJYWObZQgP36849865 = -365890278;    long fmbqYFIVvqcWNJiBJYWObZQgP17908650 = -188469344;    long fmbqYFIVvqcWNJiBJYWObZQgP51161928 = -584205132;    long fmbqYFIVvqcWNJiBJYWObZQgP68873411 = -952633071;    long fmbqYFIVvqcWNJiBJYWObZQgP47053717 = -570438868;    long fmbqYFIVvqcWNJiBJYWObZQgP25264311 = -452902391;    long fmbqYFIVvqcWNJiBJYWObZQgP45024337 = -871916839;    long fmbqYFIVvqcWNJiBJYWObZQgP40683494 = -294434024;    long fmbqYFIVvqcWNJiBJYWObZQgP67368970 = -215959482;    long fmbqYFIVvqcWNJiBJYWObZQgP87389169 = -493312155;    long fmbqYFIVvqcWNJiBJYWObZQgP37986347 = -583668649;    long fmbqYFIVvqcWNJiBJYWObZQgP78026867 = -148051014;    long fmbqYFIVvqcWNJiBJYWObZQgP74746432 = -480028050;    long fmbqYFIVvqcWNJiBJYWObZQgP46352717 = -883293778;    long fmbqYFIVvqcWNJiBJYWObZQgP22355971 = -95699028;    long fmbqYFIVvqcWNJiBJYWObZQgP38265182 = -14895931;    long fmbqYFIVvqcWNJiBJYWObZQgP51677144 = -969659208;    long fmbqYFIVvqcWNJiBJYWObZQgP41485359 = -251430726;    long fmbqYFIVvqcWNJiBJYWObZQgP6373177 = 44887318;    long fmbqYFIVvqcWNJiBJYWObZQgP22647305 = -839835116;     fmbqYFIVvqcWNJiBJYWObZQgP67370783 = fmbqYFIVvqcWNJiBJYWObZQgP6161762;     fmbqYFIVvqcWNJiBJYWObZQgP6161762 = fmbqYFIVvqcWNJiBJYWObZQgP47213570;     fmbqYFIVvqcWNJiBJYWObZQgP47213570 = fmbqYFIVvqcWNJiBJYWObZQgP67113856;     fmbqYFIVvqcWNJiBJYWObZQgP67113856 = fmbqYFIVvqcWNJiBJYWObZQgP13146280;     fmbqYFIVvqcWNJiBJYWObZQgP13146280 = fmbqYFIVvqcWNJiBJYWObZQgP21429161;     fmbqYFIVvqcWNJiBJYWObZQgP21429161 = fmbqYFIVvqcWNJiBJYWObZQgP35556908;     fmbqYFIVvqcWNJiBJYWObZQgP35556908 = fmbqYFIVvqcWNJiBJYWObZQgP40212846;     fmbqYFIVvqcWNJiBJYWObZQgP40212846 = fmbqYFIVvqcWNJiBJYWObZQgP34899660;     fmbqYFIVvqcWNJiBJYWObZQgP34899660 = fmbqYFIVvqcWNJiBJYWObZQgP31212987;     fmbqYFIVvqcWNJiBJYWObZQgP31212987 = fmbqYFIVvqcWNJiBJYWObZQgP98878843;     fmbqYFIVvqcWNJiBJYWObZQgP98878843 = fmbqYFIVvqcWNJiBJYWObZQgP33566222;     fmbqYFIVvqcWNJiBJYWObZQgP33566222 = fmbqYFIVvqcWNJiBJYWObZQgP23609284;     fmbqYFIVvqcWNJiBJYWObZQgP23609284 = fmbqYFIVvqcWNJiBJYWObZQgP73531931;     fmbqYFIVvqcWNJiBJYWObZQgP73531931 = fmbqYFIVvqcWNJiBJYWObZQgP99705890;     fmbqYFIVvqcWNJiBJYWObZQgP99705890 = fmbqYFIVvqcWNJiBJYWObZQgP98667093;     fmbqYFIVvqcWNJiBJYWObZQgP98667093 = fmbqYFIVvqcWNJiBJYWObZQgP80322774;     fmbqYFIVvqcWNJiBJYWObZQgP80322774 = fmbqYFIVvqcWNJiBJYWObZQgP13707549;     fmbqYFIVvqcWNJiBJYWObZQgP13707549 = fmbqYFIVvqcWNJiBJYWObZQgP89282647;     fmbqYFIVvqcWNJiBJYWObZQgP89282647 = fmbqYFIVvqcWNJiBJYWObZQgP5008486;     fmbqYFIVvqcWNJiBJYWObZQgP5008486 = fmbqYFIVvqcWNJiBJYWObZQgP73640990;     fmbqYFIVvqcWNJiBJYWObZQgP73640990 = fmbqYFIVvqcWNJiBJYWObZQgP83153718;     fmbqYFIVvqcWNJiBJYWObZQgP83153718 = fmbqYFIVvqcWNJiBJYWObZQgP8526201;     fmbqYFIVvqcWNJiBJYWObZQgP8526201 = fmbqYFIVvqcWNJiBJYWObZQgP84242660;     fmbqYFIVvqcWNJiBJYWObZQgP84242660 = fmbqYFIVvqcWNJiBJYWObZQgP30427358;     fmbqYFIVvqcWNJiBJYWObZQgP30427358 = fmbqYFIVvqcWNJiBJYWObZQgP85194713;     fmbqYFIVvqcWNJiBJYWObZQgP85194713 = fmbqYFIVvqcWNJiBJYWObZQgP47331982;     fmbqYFIVvqcWNJiBJYWObZQgP47331982 = fmbqYFIVvqcWNJiBJYWObZQgP30240603;     fmbqYFIVvqcWNJiBJYWObZQgP30240603 = fmbqYFIVvqcWNJiBJYWObZQgP45495829;     fmbqYFIVvqcWNJiBJYWObZQgP45495829 = fmbqYFIVvqcWNJiBJYWObZQgP45437536;     fmbqYFIVvqcWNJiBJYWObZQgP45437536 = fmbqYFIVvqcWNJiBJYWObZQgP29047548;     fmbqYFIVvqcWNJiBJYWObZQgP29047548 = fmbqYFIVvqcWNJiBJYWObZQgP44223640;     fmbqYFIVvqcWNJiBJYWObZQgP44223640 = fmbqYFIVvqcWNJiBJYWObZQgP7272;     fmbqYFIVvqcWNJiBJYWObZQgP7272 = fmbqYFIVvqcWNJiBJYWObZQgP68590248;     fmbqYFIVvqcWNJiBJYWObZQgP68590248 = fmbqYFIVvqcWNJiBJYWObZQgP71606234;     fmbqYFIVvqcWNJiBJYWObZQgP71606234 = fmbqYFIVvqcWNJiBJYWObZQgP35621909;     fmbqYFIVvqcWNJiBJYWObZQgP35621909 = fmbqYFIVvqcWNJiBJYWObZQgP40997777;     fmbqYFIVvqcWNJiBJYWObZQgP40997777 = fmbqYFIVvqcWNJiBJYWObZQgP11432931;     fmbqYFIVvqcWNJiBJYWObZQgP11432931 = fmbqYFIVvqcWNJiBJYWObZQgP74304283;     fmbqYFIVvqcWNJiBJYWObZQgP74304283 = fmbqYFIVvqcWNJiBJYWObZQgP96453149;     fmbqYFIVvqcWNJiBJYWObZQgP96453149 = fmbqYFIVvqcWNJiBJYWObZQgP43581487;     fmbqYFIVvqcWNJiBJYWObZQgP43581487 = fmbqYFIVvqcWNJiBJYWObZQgP46394161;     fmbqYFIVvqcWNJiBJYWObZQgP46394161 = fmbqYFIVvqcWNJiBJYWObZQgP30947484;     fmbqYFIVvqcWNJiBJYWObZQgP30947484 = fmbqYFIVvqcWNJiBJYWObZQgP8538615;     fmbqYFIVvqcWNJiBJYWObZQgP8538615 = fmbqYFIVvqcWNJiBJYWObZQgP77302508;     fmbqYFIVvqcWNJiBJYWObZQgP77302508 = fmbqYFIVvqcWNJiBJYWObZQgP48119394;     fmbqYFIVvqcWNJiBJYWObZQgP48119394 = fmbqYFIVvqcWNJiBJYWObZQgP48344848;     fmbqYFIVvqcWNJiBJYWObZQgP48344848 = fmbqYFIVvqcWNJiBJYWObZQgP29423332;     fmbqYFIVvqcWNJiBJYWObZQgP29423332 = fmbqYFIVvqcWNJiBJYWObZQgP79078675;     fmbqYFIVvqcWNJiBJYWObZQgP79078675 = fmbqYFIVvqcWNJiBJYWObZQgP76622417;     fmbqYFIVvqcWNJiBJYWObZQgP76622417 = fmbqYFIVvqcWNJiBJYWObZQgP98383819;     fmbqYFIVvqcWNJiBJYWObZQgP98383819 = fmbqYFIVvqcWNJiBJYWObZQgP3783238;     fmbqYFIVvqcWNJiBJYWObZQgP3783238 = fmbqYFIVvqcWNJiBJYWObZQgP99199302;     fmbqYFIVvqcWNJiBJYWObZQgP99199302 = fmbqYFIVvqcWNJiBJYWObZQgP59323777;     fmbqYFIVvqcWNJiBJYWObZQgP59323777 = fmbqYFIVvqcWNJiBJYWObZQgP1221279;     fmbqYFIVvqcWNJiBJYWObZQgP1221279 = fmbqYFIVvqcWNJiBJYWObZQgP84217064;     fmbqYFIVvqcWNJiBJYWObZQgP84217064 = fmbqYFIVvqcWNJiBJYWObZQgP97635561;     fmbqYFIVvqcWNJiBJYWObZQgP97635561 = fmbqYFIVvqcWNJiBJYWObZQgP62970909;     fmbqYFIVvqcWNJiBJYWObZQgP62970909 = fmbqYFIVvqcWNJiBJYWObZQgP36686498;     fmbqYFIVvqcWNJiBJYWObZQgP36686498 = fmbqYFIVvqcWNJiBJYWObZQgP27951566;     fmbqYFIVvqcWNJiBJYWObZQgP27951566 = fmbqYFIVvqcWNJiBJYWObZQgP74097178;     fmbqYFIVvqcWNJiBJYWObZQgP74097178 = fmbqYFIVvqcWNJiBJYWObZQgP5316306;     fmbqYFIVvqcWNJiBJYWObZQgP5316306 = fmbqYFIVvqcWNJiBJYWObZQgP94717016;     fmbqYFIVvqcWNJiBJYWObZQgP94717016 = fmbqYFIVvqcWNJiBJYWObZQgP89462124;     fmbqYFIVvqcWNJiBJYWObZQgP89462124 = fmbqYFIVvqcWNJiBJYWObZQgP2165439;     fmbqYFIVvqcWNJiBJYWObZQgP2165439 = fmbqYFIVvqcWNJiBJYWObZQgP54655204;     fmbqYFIVvqcWNJiBJYWObZQgP54655204 = fmbqYFIVvqcWNJiBJYWObZQgP33558950;     fmbqYFIVvqcWNJiBJYWObZQgP33558950 = fmbqYFIVvqcWNJiBJYWObZQgP55019035;     fmbqYFIVvqcWNJiBJYWObZQgP55019035 = fmbqYFIVvqcWNJiBJYWObZQgP1925697;     fmbqYFIVvqcWNJiBJYWObZQgP1925697 = fmbqYFIVvqcWNJiBJYWObZQgP64083982;     fmbqYFIVvqcWNJiBJYWObZQgP64083982 = fmbqYFIVvqcWNJiBJYWObZQgP57669316;     fmbqYFIVvqcWNJiBJYWObZQgP57669316 = fmbqYFIVvqcWNJiBJYWObZQgP68889844;     fmbqYFIVvqcWNJiBJYWObZQgP68889844 = fmbqYFIVvqcWNJiBJYWObZQgP39403266;     fmbqYFIVvqcWNJiBJYWObZQgP39403266 = fmbqYFIVvqcWNJiBJYWObZQgP92829497;     fmbqYFIVvqcWNJiBJYWObZQgP92829497 = fmbqYFIVvqcWNJiBJYWObZQgP61426998;     fmbqYFIVvqcWNJiBJYWObZQgP61426998 = fmbqYFIVvqcWNJiBJYWObZQgP27246830;     fmbqYFIVvqcWNJiBJYWObZQgP27246830 = fmbqYFIVvqcWNJiBJYWObZQgP52206235;     fmbqYFIVvqcWNJiBJYWObZQgP52206235 = fmbqYFIVvqcWNJiBJYWObZQgP99987585;     fmbqYFIVvqcWNJiBJYWObZQgP99987585 = fmbqYFIVvqcWNJiBJYWObZQgP6940153;     fmbqYFIVvqcWNJiBJYWObZQgP6940153 = fmbqYFIVvqcWNJiBJYWObZQgP82307964;     fmbqYFIVvqcWNJiBJYWObZQgP82307964 = fmbqYFIVvqcWNJiBJYWObZQgP36849865;     fmbqYFIVvqcWNJiBJYWObZQgP36849865 = fmbqYFIVvqcWNJiBJYWObZQgP17908650;     fmbqYFIVvqcWNJiBJYWObZQgP17908650 = fmbqYFIVvqcWNJiBJYWObZQgP51161928;     fmbqYFIVvqcWNJiBJYWObZQgP51161928 = fmbqYFIVvqcWNJiBJYWObZQgP68873411;     fmbqYFIVvqcWNJiBJYWObZQgP68873411 = fmbqYFIVvqcWNJiBJYWObZQgP47053717;     fmbqYFIVvqcWNJiBJYWObZQgP47053717 = fmbqYFIVvqcWNJiBJYWObZQgP25264311;     fmbqYFIVvqcWNJiBJYWObZQgP25264311 = fmbqYFIVvqcWNJiBJYWObZQgP45024337;     fmbqYFIVvqcWNJiBJYWObZQgP45024337 = fmbqYFIVvqcWNJiBJYWObZQgP40683494;     fmbqYFIVvqcWNJiBJYWObZQgP40683494 = fmbqYFIVvqcWNJiBJYWObZQgP67368970;     fmbqYFIVvqcWNJiBJYWObZQgP67368970 = fmbqYFIVvqcWNJiBJYWObZQgP87389169;     fmbqYFIVvqcWNJiBJYWObZQgP87389169 = fmbqYFIVvqcWNJiBJYWObZQgP37986347;     fmbqYFIVvqcWNJiBJYWObZQgP37986347 = fmbqYFIVvqcWNJiBJYWObZQgP78026867;     fmbqYFIVvqcWNJiBJYWObZQgP78026867 = fmbqYFIVvqcWNJiBJYWObZQgP74746432;     fmbqYFIVvqcWNJiBJYWObZQgP74746432 = fmbqYFIVvqcWNJiBJYWObZQgP46352717;     fmbqYFIVvqcWNJiBJYWObZQgP46352717 = fmbqYFIVvqcWNJiBJYWObZQgP22355971;     fmbqYFIVvqcWNJiBJYWObZQgP22355971 = fmbqYFIVvqcWNJiBJYWObZQgP38265182;     fmbqYFIVvqcWNJiBJYWObZQgP38265182 = fmbqYFIVvqcWNJiBJYWObZQgP51677144;     fmbqYFIVvqcWNJiBJYWObZQgP51677144 = fmbqYFIVvqcWNJiBJYWObZQgP41485359;     fmbqYFIVvqcWNJiBJYWObZQgP41485359 = fmbqYFIVvqcWNJiBJYWObZQgP6373177;     fmbqYFIVvqcWNJiBJYWObZQgP6373177 = fmbqYFIVvqcWNJiBJYWObZQgP22647305;     fmbqYFIVvqcWNJiBJYWObZQgP22647305 = fmbqYFIVvqcWNJiBJYWObZQgP67370783;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void IVFHbtbdCoxVMbmhTCGefAvCRPYLqBwVKHwmnjHEqokJmGavpFGXynNIZ89911336() {     long CqLUQmArbLFfAukuCnrPmPLoc73487890 = -951737005;    long CqLUQmArbLFfAukuCnrPmPLoc49535041 = -783015839;    long CqLUQmArbLFfAukuCnrPmPLoc63255754 = -848358940;    long CqLUQmArbLFfAukuCnrPmPLoc94188636 = 74192988;    long CqLUQmArbLFfAukuCnrPmPLoc82041768 = -212165754;    long CqLUQmArbLFfAukuCnrPmPLoc12846363 = -940062513;    long CqLUQmArbLFfAukuCnrPmPLoc96045873 = -430785286;    long CqLUQmArbLFfAukuCnrPmPLoc89972736 = -116806060;    long CqLUQmArbLFfAukuCnrPmPLoc99542155 = -791168095;    long CqLUQmArbLFfAukuCnrPmPLoc72442646 = -515256536;    long CqLUQmArbLFfAukuCnrPmPLoc58989134 = -525318455;    long CqLUQmArbLFfAukuCnrPmPLoc65389264 = -370278467;    long CqLUQmArbLFfAukuCnrPmPLoc9818403 = -823552758;    long CqLUQmArbLFfAukuCnrPmPLoc56675608 = -934074692;    long CqLUQmArbLFfAukuCnrPmPLoc95448317 = -688343453;    long CqLUQmArbLFfAukuCnrPmPLoc40172487 = -354925728;    long CqLUQmArbLFfAukuCnrPmPLoc74158778 = 79153037;    long CqLUQmArbLFfAukuCnrPmPLoc10760702 = -381242984;    long CqLUQmArbLFfAukuCnrPmPLoc51112489 = -939276611;    long CqLUQmArbLFfAukuCnrPmPLoc85558649 = -510990508;    long CqLUQmArbLFfAukuCnrPmPLoc62194183 = -749547916;    long CqLUQmArbLFfAukuCnrPmPLoc69674742 = -986299705;    long CqLUQmArbLFfAukuCnrPmPLoc44116992 = -882366766;    long CqLUQmArbLFfAukuCnrPmPLoc68235034 = 37596811;    long CqLUQmArbLFfAukuCnrPmPLoc74127008 = 13877950;    long CqLUQmArbLFfAukuCnrPmPLoc9916389 = -2588390;    long CqLUQmArbLFfAukuCnrPmPLoc45791760 = -965084669;    long CqLUQmArbLFfAukuCnrPmPLoc43347728 = -42372915;    long CqLUQmArbLFfAukuCnrPmPLoc11628085 = -447173910;    long CqLUQmArbLFfAukuCnrPmPLoc14053173 = -562690887;    long CqLUQmArbLFfAukuCnrPmPLoc21290098 = -82054402;    long CqLUQmArbLFfAukuCnrPmPLoc41834262 = -591517188;    long CqLUQmArbLFfAukuCnrPmPLoc9718221 = -962854869;    long CqLUQmArbLFfAukuCnrPmPLoc63420812 = -924320439;    long CqLUQmArbLFfAukuCnrPmPLoc33080887 = -893510388;    long CqLUQmArbLFfAukuCnrPmPLoc4347822 = -735261536;    long CqLUQmArbLFfAukuCnrPmPLoc22259712 = 40885298;    long CqLUQmArbLFfAukuCnrPmPLoc45523143 = -373666424;    long CqLUQmArbLFfAukuCnrPmPLoc47914537 = -444800091;    long CqLUQmArbLFfAukuCnrPmPLoc83955087 = -180282063;    long CqLUQmArbLFfAukuCnrPmPLoc49250711 = -395546173;    long CqLUQmArbLFfAukuCnrPmPLoc78544618 = -844942427;    long CqLUQmArbLFfAukuCnrPmPLoc9014462 = -610150720;    long CqLUQmArbLFfAukuCnrPmPLoc95946355 = 7996786;    long CqLUQmArbLFfAukuCnrPmPLoc89254973 = -52736421;    long CqLUQmArbLFfAukuCnrPmPLoc60058589 = -541494031;    long CqLUQmArbLFfAukuCnrPmPLoc66123422 = -876818326;    long CqLUQmArbLFfAukuCnrPmPLoc37380273 = -785848655;    long CqLUQmArbLFfAukuCnrPmPLoc88754403 = -477975818;    long CqLUQmArbLFfAukuCnrPmPLoc89534070 = -359168943;    long CqLUQmArbLFfAukuCnrPmPLoc34084498 = 82925177;    long CqLUQmArbLFfAukuCnrPmPLoc14592958 = -516557394;    long CqLUQmArbLFfAukuCnrPmPLoc47447760 = -801943121;    long CqLUQmArbLFfAukuCnrPmPLoc55292658 = -996277620;    long CqLUQmArbLFfAukuCnrPmPLoc27717154 = -457350975;    long CqLUQmArbLFfAukuCnrPmPLoc3813148 = -965437300;    long CqLUQmArbLFfAukuCnrPmPLoc5418049 = -900649073;    long CqLUQmArbLFfAukuCnrPmPLoc95020719 = -785955752;    long CqLUQmArbLFfAukuCnrPmPLoc20061629 = -939684962;    long CqLUQmArbLFfAukuCnrPmPLoc72125379 = -109577365;    long CqLUQmArbLFfAukuCnrPmPLoc67054603 = -974977844;    long CqLUQmArbLFfAukuCnrPmPLoc52698146 = -288412372;    long CqLUQmArbLFfAukuCnrPmPLoc78344652 = -669632150;    long CqLUQmArbLFfAukuCnrPmPLoc85488983 = -128477208;    long CqLUQmArbLFfAukuCnrPmPLoc51152549 = -333202134;    long CqLUQmArbLFfAukuCnrPmPLoc17154873 = -933801267;    long CqLUQmArbLFfAukuCnrPmPLoc55671044 = -407423598;    long CqLUQmArbLFfAukuCnrPmPLoc46397590 = -899232319;    long CqLUQmArbLFfAukuCnrPmPLoc23594722 = 59435695;    long CqLUQmArbLFfAukuCnrPmPLoc91100495 = -953081918;    long CqLUQmArbLFfAukuCnrPmPLoc17912776 = -295811027;    long CqLUQmArbLFfAukuCnrPmPLoc28635635 = -547180540;    long CqLUQmArbLFfAukuCnrPmPLoc62846165 = -936442893;    long CqLUQmArbLFfAukuCnrPmPLoc67157402 = -658994549;    long CqLUQmArbLFfAukuCnrPmPLoc36307939 = -15444336;    long CqLUQmArbLFfAukuCnrPmPLoc83649565 = -904605490;    long CqLUQmArbLFfAukuCnrPmPLoc60660280 = -276148986;    long CqLUQmArbLFfAukuCnrPmPLoc48170637 = -790363553;    long CqLUQmArbLFfAukuCnrPmPLoc78980061 = -909666769;    long CqLUQmArbLFfAukuCnrPmPLoc14068419 = -444628020;    long CqLUQmArbLFfAukuCnrPmPLoc43792966 = -125770064;    long CqLUQmArbLFfAukuCnrPmPLoc8411488 = -79236014;    long CqLUQmArbLFfAukuCnrPmPLoc54593324 = -564397098;    long CqLUQmArbLFfAukuCnrPmPLoc22094014 = 11995033;    long CqLUQmArbLFfAukuCnrPmPLoc79968675 = -545616064;    long CqLUQmArbLFfAukuCnrPmPLoc6697141 = -565497009;    long CqLUQmArbLFfAukuCnrPmPLoc94386501 = -789574067;    long CqLUQmArbLFfAukuCnrPmPLoc54425562 = -966577249;    long CqLUQmArbLFfAukuCnrPmPLoc35703659 = -366969465;    long CqLUQmArbLFfAukuCnrPmPLoc29267739 = -928073088;    long CqLUQmArbLFfAukuCnrPmPLoc98929773 = -834612463;    long CqLUQmArbLFfAukuCnrPmPLoc27238993 = -173158950;    long CqLUQmArbLFfAukuCnrPmPLoc25461514 = -433981462;    long CqLUQmArbLFfAukuCnrPmPLoc75789157 = -235222727;    long CqLUQmArbLFfAukuCnrPmPLoc16900485 = -205304219;    long CqLUQmArbLFfAukuCnrPmPLoc96552565 = -7133801;    long CqLUQmArbLFfAukuCnrPmPLoc199966 = -75310277;    long CqLUQmArbLFfAukuCnrPmPLoc23525479 = -381673512;    long CqLUQmArbLFfAukuCnrPmPLoc44793807 = -658801081;    long CqLUQmArbLFfAukuCnrPmPLoc72100101 = -951737005;     CqLUQmArbLFfAukuCnrPmPLoc73487890 = CqLUQmArbLFfAukuCnrPmPLoc49535041;     CqLUQmArbLFfAukuCnrPmPLoc49535041 = CqLUQmArbLFfAukuCnrPmPLoc63255754;     CqLUQmArbLFfAukuCnrPmPLoc63255754 = CqLUQmArbLFfAukuCnrPmPLoc94188636;     CqLUQmArbLFfAukuCnrPmPLoc94188636 = CqLUQmArbLFfAukuCnrPmPLoc82041768;     CqLUQmArbLFfAukuCnrPmPLoc82041768 = CqLUQmArbLFfAukuCnrPmPLoc12846363;     CqLUQmArbLFfAukuCnrPmPLoc12846363 = CqLUQmArbLFfAukuCnrPmPLoc96045873;     CqLUQmArbLFfAukuCnrPmPLoc96045873 = CqLUQmArbLFfAukuCnrPmPLoc89972736;     CqLUQmArbLFfAukuCnrPmPLoc89972736 = CqLUQmArbLFfAukuCnrPmPLoc99542155;     CqLUQmArbLFfAukuCnrPmPLoc99542155 = CqLUQmArbLFfAukuCnrPmPLoc72442646;     CqLUQmArbLFfAukuCnrPmPLoc72442646 = CqLUQmArbLFfAukuCnrPmPLoc58989134;     CqLUQmArbLFfAukuCnrPmPLoc58989134 = CqLUQmArbLFfAukuCnrPmPLoc65389264;     CqLUQmArbLFfAukuCnrPmPLoc65389264 = CqLUQmArbLFfAukuCnrPmPLoc9818403;     CqLUQmArbLFfAukuCnrPmPLoc9818403 = CqLUQmArbLFfAukuCnrPmPLoc56675608;     CqLUQmArbLFfAukuCnrPmPLoc56675608 = CqLUQmArbLFfAukuCnrPmPLoc95448317;     CqLUQmArbLFfAukuCnrPmPLoc95448317 = CqLUQmArbLFfAukuCnrPmPLoc40172487;     CqLUQmArbLFfAukuCnrPmPLoc40172487 = CqLUQmArbLFfAukuCnrPmPLoc74158778;     CqLUQmArbLFfAukuCnrPmPLoc74158778 = CqLUQmArbLFfAukuCnrPmPLoc10760702;     CqLUQmArbLFfAukuCnrPmPLoc10760702 = CqLUQmArbLFfAukuCnrPmPLoc51112489;     CqLUQmArbLFfAukuCnrPmPLoc51112489 = CqLUQmArbLFfAukuCnrPmPLoc85558649;     CqLUQmArbLFfAukuCnrPmPLoc85558649 = CqLUQmArbLFfAukuCnrPmPLoc62194183;     CqLUQmArbLFfAukuCnrPmPLoc62194183 = CqLUQmArbLFfAukuCnrPmPLoc69674742;     CqLUQmArbLFfAukuCnrPmPLoc69674742 = CqLUQmArbLFfAukuCnrPmPLoc44116992;     CqLUQmArbLFfAukuCnrPmPLoc44116992 = CqLUQmArbLFfAukuCnrPmPLoc68235034;     CqLUQmArbLFfAukuCnrPmPLoc68235034 = CqLUQmArbLFfAukuCnrPmPLoc74127008;     CqLUQmArbLFfAukuCnrPmPLoc74127008 = CqLUQmArbLFfAukuCnrPmPLoc9916389;     CqLUQmArbLFfAukuCnrPmPLoc9916389 = CqLUQmArbLFfAukuCnrPmPLoc45791760;     CqLUQmArbLFfAukuCnrPmPLoc45791760 = CqLUQmArbLFfAukuCnrPmPLoc43347728;     CqLUQmArbLFfAukuCnrPmPLoc43347728 = CqLUQmArbLFfAukuCnrPmPLoc11628085;     CqLUQmArbLFfAukuCnrPmPLoc11628085 = CqLUQmArbLFfAukuCnrPmPLoc14053173;     CqLUQmArbLFfAukuCnrPmPLoc14053173 = CqLUQmArbLFfAukuCnrPmPLoc21290098;     CqLUQmArbLFfAukuCnrPmPLoc21290098 = CqLUQmArbLFfAukuCnrPmPLoc41834262;     CqLUQmArbLFfAukuCnrPmPLoc41834262 = CqLUQmArbLFfAukuCnrPmPLoc9718221;     CqLUQmArbLFfAukuCnrPmPLoc9718221 = CqLUQmArbLFfAukuCnrPmPLoc63420812;     CqLUQmArbLFfAukuCnrPmPLoc63420812 = CqLUQmArbLFfAukuCnrPmPLoc33080887;     CqLUQmArbLFfAukuCnrPmPLoc33080887 = CqLUQmArbLFfAukuCnrPmPLoc4347822;     CqLUQmArbLFfAukuCnrPmPLoc4347822 = CqLUQmArbLFfAukuCnrPmPLoc22259712;     CqLUQmArbLFfAukuCnrPmPLoc22259712 = CqLUQmArbLFfAukuCnrPmPLoc45523143;     CqLUQmArbLFfAukuCnrPmPLoc45523143 = CqLUQmArbLFfAukuCnrPmPLoc47914537;     CqLUQmArbLFfAukuCnrPmPLoc47914537 = CqLUQmArbLFfAukuCnrPmPLoc83955087;     CqLUQmArbLFfAukuCnrPmPLoc83955087 = CqLUQmArbLFfAukuCnrPmPLoc49250711;     CqLUQmArbLFfAukuCnrPmPLoc49250711 = CqLUQmArbLFfAukuCnrPmPLoc78544618;     CqLUQmArbLFfAukuCnrPmPLoc78544618 = CqLUQmArbLFfAukuCnrPmPLoc9014462;     CqLUQmArbLFfAukuCnrPmPLoc9014462 = CqLUQmArbLFfAukuCnrPmPLoc95946355;     CqLUQmArbLFfAukuCnrPmPLoc95946355 = CqLUQmArbLFfAukuCnrPmPLoc89254973;     CqLUQmArbLFfAukuCnrPmPLoc89254973 = CqLUQmArbLFfAukuCnrPmPLoc60058589;     CqLUQmArbLFfAukuCnrPmPLoc60058589 = CqLUQmArbLFfAukuCnrPmPLoc66123422;     CqLUQmArbLFfAukuCnrPmPLoc66123422 = CqLUQmArbLFfAukuCnrPmPLoc37380273;     CqLUQmArbLFfAukuCnrPmPLoc37380273 = CqLUQmArbLFfAukuCnrPmPLoc88754403;     CqLUQmArbLFfAukuCnrPmPLoc88754403 = CqLUQmArbLFfAukuCnrPmPLoc89534070;     CqLUQmArbLFfAukuCnrPmPLoc89534070 = CqLUQmArbLFfAukuCnrPmPLoc34084498;     CqLUQmArbLFfAukuCnrPmPLoc34084498 = CqLUQmArbLFfAukuCnrPmPLoc14592958;     CqLUQmArbLFfAukuCnrPmPLoc14592958 = CqLUQmArbLFfAukuCnrPmPLoc47447760;     CqLUQmArbLFfAukuCnrPmPLoc47447760 = CqLUQmArbLFfAukuCnrPmPLoc55292658;     CqLUQmArbLFfAukuCnrPmPLoc55292658 = CqLUQmArbLFfAukuCnrPmPLoc27717154;     CqLUQmArbLFfAukuCnrPmPLoc27717154 = CqLUQmArbLFfAukuCnrPmPLoc3813148;     CqLUQmArbLFfAukuCnrPmPLoc3813148 = CqLUQmArbLFfAukuCnrPmPLoc5418049;     CqLUQmArbLFfAukuCnrPmPLoc5418049 = CqLUQmArbLFfAukuCnrPmPLoc95020719;     CqLUQmArbLFfAukuCnrPmPLoc95020719 = CqLUQmArbLFfAukuCnrPmPLoc20061629;     CqLUQmArbLFfAukuCnrPmPLoc20061629 = CqLUQmArbLFfAukuCnrPmPLoc72125379;     CqLUQmArbLFfAukuCnrPmPLoc72125379 = CqLUQmArbLFfAukuCnrPmPLoc67054603;     CqLUQmArbLFfAukuCnrPmPLoc67054603 = CqLUQmArbLFfAukuCnrPmPLoc52698146;     CqLUQmArbLFfAukuCnrPmPLoc52698146 = CqLUQmArbLFfAukuCnrPmPLoc78344652;     CqLUQmArbLFfAukuCnrPmPLoc78344652 = CqLUQmArbLFfAukuCnrPmPLoc85488983;     CqLUQmArbLFfAukuCnrPmPLoc85488983 = CqLUQmArbLFfAukuCnrPmPLoc51152549;     CqLUQmArbLFfAukuCnrPmPLoc51152549 = CqLUQmArbLFfAukuCnrPmPLoc17154873;     CqLUQmArbLFfAukuCnrPmPLoc17154873 = CqLUQmArbLFfAukuCnrPmPLoc55671044;     CqLUQmArbLFfAukuCnrPmPLoc55671044 = CqLUQmArbLFfAukuCnrPmPLoc46397590;     CqLUQmArbLFfAukuCnrPmPLoc46397590 = CqLUQmArbLFfAukuCnrPmPLoc23594722;     CqLUQmArbLFfAukuCnrPmPLoc23594722 = CqLUQmArbLFfAukuCnrPmPLoc91100495;     CqLUQmArbLFfAukuCnrPmPLoc91100495 = CqLUQmArbLFfAukuCnrPmPLoc17912776;     CqLUQmArbLFfAukuCnrPmPLoc17912776 = CqLUQmArbLFfAukuCnrPmPLoc28635635;     CqLUQmArbLFfAukuCnrPmPLoc28635635 = CqLUQmArbLFfAukuCnrPmPLoc62846165;     CqLUQmArbLFfAukuCnrPmPLoc62846165 = CqLUQmArbLFfAukuCnrPmPLoc67157402;     CqLUQmArbLFfAukuCnrPmPLoc67157402 = CqLUQmArbLFfAukuCnrPmPLoc36307939;     CqLUQmArbLFfAukuCnrPmPLoc36307939 = CqLUQmArbLFfAukuCnrPmPLoc83649565;     CqLUQmArbLFfAukuCnrPmPLoc83649565 = CqLUQmArbLFfAukuCnrPmPLoc60660280;     CqLUQmArbLFfAukuCnrPmPLoc60660280 = CqLUQmArbLFfAukuCnrPmPLoc48170637;     CqLUQmArbLFfAukuCnrPmPLoc48170637 = CqLUQmArbLFfAukuCnrPmPLoc78980061;     CqLUQmArbLFfAukuCnrPmPLoc78980061 = CqLUQmArbLFfAukuCnrPmPLoc14068419;     CqLUQmArbLFfAukuCnrPmPLoc14068419 = CqLUQmArbLFfAukuCnrPmPLoc43792966;     CqLUQmArbLFfAukuCnrPmPLoc43792966 = CqLUQmArbLFfAukuCnrPmPLoc8411488;     CqLUQmArbLFfAukuCnrPmPLoc8411488 = CqLUQmArbLFfAukuCnrPmPLoc54593324;     CqLUQmArbLFfAukuCnrPmPLoc54593324 = CqLUQmArbLFfAukuCnrPmPLoc22094014;     CqLUQmArbLFfAukuCnrPmPLoc22094014 = CqLUQmArbLFfAukuCnrPmPLoc79968675;     CqLUQmArbLFfAukuCnrPmPLoc79968675 = CqLUQmArbLFfAukuCnrPmPLoc6697141;     CqLUQmArbLFfAukuCnrPmPLoc6697141 = CqLUQmArbLFfAukuCnrPmPLoc94386501;     CqLUQmArbLFfAukuCnrPmPLoc94386501 = CqLUQmArbLFfAukuCnrPmPLoc54425562;     CqLUQmArbLFfAukuCnrPmPLoc54425562 = CqLUQmArbLFfAukuCnrPmPLoc35703659;     CqLUQmArbLFfAukuCnrPmPLoc35703659 = CqLUQmArbLFfAukuCnrPmPLoc29267739;     CqLUQmArbLFfAukuCnrPmPLoc29267739 = CqLUQmArbLFfAukuCnrPmPLoc98929773;     CqLUQmArbLFfAukuCnrPmPLoc98929773 = CqLUQmArbLFfAukuCnrPmPLoc27238993;     CqLUQmArbLFfAukuCnrPmPLoc27238993 = CqLUQmArbLFfAukuCnrPmPLoc25461514;     CqLUQmArbLFfAukuCnrPmPLoc25461514 = CqLUQmArbLFfAukuCnrPmPLoc75789157;     CqLUQmArbLFfAukuCnrPmPLoc75789157 = CqLUQmArbLFfAukuCnrPmPLoc16900485;     CqLUQmArbLFfAukuCnrPmPLoc16900485 = CqLUQmArbLFfAukuCnrPmPLoc96552565;     CqLUQmArbLFfAukuCnrPmPLoc96552565 = CqLUQmArbLFfAukuCnrPmPLoc199966;     CqLUQmArbLFfAukuCnrPmPLoc199966 = CqLUQmArbLFfAukuCnrPmPLoc23525479;     CqLUQmArbLFfAukuCnrPmPLoc23525479 = CqLUQmArbLFfAukuCnrPmPLoc44793807;     CqLUQmArbLFfAukuCnrPmPLoc44793807 = CqLUQmArbLFfAukuCnrPmPLoc72100101;     CqLUQmArbLFfAukuCnrPmPLoc72100101 = CqLUQmArbLFfAukuCnrPmPLoc73487890;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void HwTIiwwWUZzjyAPEltAwcNXmrWTGtzYFlBdjWrnbxZUtWkNXGgjTkTbtZ57202936() {     long gQMdqdUBtxxXfhuGZzDtdPHJw8946859 = -318013904;    long gQMdqdUBtxxXfhuGZzDtdPHJw62807119 = -663567446;    long gQMdqdUBtxxXfhuGZzDtdPHJw642231 = -514026015;    long gQMdqdUBtxxXfhuGZzDtdPHJw66411991 = -846958083;    long gQMdqdUBtxxXfhuGZzDtdPHJw38327037 = -317764599;    long gQMdqdUBtxxXfhuGZzDtdPHJw49069235 = -102410408;    long gQMdqdUBtxxXfhuGZzDtdPHJw6703280 = -275511021;    long gQMdqdUBtxxXfhuGZzDtdPHJw52104298 = -861040200;    long gQMdqdUBtxxXfhuGZzDtdPHJw1059761 = -179499502;    long gQMdqdUBtxxXfhuGZzDtdPHJw87345358 = -179943534;    long gQMdqdUBtxxXfhuGZzDtdPHJw97170868 = -327326184;    long gQMdqdUBtxxXfhuGZzDtdPHJw65957412 = -234399238;    long gQMdqdUBtxxXfhuGZzDtdPHJw48053048 = -275565263;    long gQMdqdUBtxxXfhuGZzDtdPHJw9816472 = -910438101;    long gQMdqdUBtxxXfhuGZzDtdPHJw53642834 = -91768468;    long gQMdqdUBtxxXfhuGZzDtdPHJw23713788 = 9262665;    long gQMdqdUBtxxXfhuGZzDtdPHJw29994714 = -447821515;    long gQMdqdUBtxxXfhuGZzDtdPHJw10520894 = -454671052;    long gQMdqdUBtxxXfhuGZzDtdPHJw51662819 = -155840033;    long gQMdqdUBtxxXfhuGZzDtdPHJw79395868 = -937551574;    long gQMdqdUBtxxXfhuGZzDtdPHJw75281046 = -406822605;    long gQMdqdUBtxxXfhuGZzDtdPHJw73096267 = 27064001;    long gQMdqdUBtxxXfhuGZzDtdPHJw14642372 = -519998951;    long gQMdqdUBtxxXfhuGZzDtdPHJw62027980 = -473227793;    long gQMdqdUBtxxXfhuGZzDtdPHJw82144959 = -10107249;    long gQMdqdUBtxxXfhuGZzDtdPHJw20614560 = -791165196;    long gQMdqdUBtxxXfhuGZzDtdPHJw6212334 = -771368810;    long gQMdqdUBtxxXfhuGZzDtdPHJw84076152 = -212145090;    long gQMdqdUBtxxXfhuGZzDtdPHJw58296299 = 78731288;    long gQMdqdUBtxxXfhuGZzDtdPHJw19586584 = -597198057;    long gQMdqdUBtxxXfhuGZzDtdPHJw39873329 = -634034889;    long gQMdqdUBtxxXfhuGZzDtdPHJw79657280 = -364488603;    long gQMdqdUBtxxXfhuGZzDtdPHJw21936231 = -10450846;    long gQMdqdUBtxxXfhuGZzDtdPHJw93169239 = -989014253;    long gQMdqdUBtxxXfhuGZzDtdPHJw98889340 = -844610638;    long gQMdqdUBtxxXfhuGZzDtdPHJw55908666 = -949826842;    long gQMdqdUBtxxXfhuGZzDtdPHJw71671528 = -923810742;    long gQMdqdUBtxxXfhuGZzDtdPHJw96738546 = -356322005;    long gQMdqdUBtxxXfhuGZzDtdPHJw78305098 = -95676367;    long gQMdqdUBtxxXfhuGZzDtdPHJw48226620 = -745544609;    long gQMdqdUBtxxXfhuGZzDtdPHJw82702318 = -164745087;    long gQMdqdUBtxxXfhuGZzDtdPHJw67909744 = -439487718;    long gQMdqdUBtxxXfhuGZzDtdPHJw98397840 = -163331506;    long gQMdqdUBtxxXfhuGZzDtdPHJw36077694 = -596335624;    long gQMdqdUBtxxXfhuGZzDtdPHJw89271432 = -979247582;    long gQMdqdUBtxxXfhuGZzDtdPHJw6019918 = -580417663;    long gQMdqdUBtxxXfhuGZzDtdPHJw85468586 = -260804687;    long gQMdqdUBtxxXfhuGZzDtdPHJw55106584 = -952375249;    long gQMdqdUBtxxXfhuGZzDtdPHJw11647070 = -141712698;    long gQMdqdUBtxxXfhuGZzDtdPHJw14063660 = -850195759;    long gQMdqdUBtxxXfhuGZzDtdPHJw14855222 = -891351380;    long gQMdqdUBtxxXfhuGZzDtdPHJw98078429 = -730209740;    long gQMdqdUBtxxXfhuGZzDtdPHJw16068909 = -557988675;    long gQMdqdUBtxxXfhuGZzDtdPHJw71284504 = -87786120;    long gQMdqdUBtxxXfhuGZzDtdPHJw81921889 = -803841121;    long gQMdqdUBtxxXfhuGZzDtdPHJw35850592 = -245077906;    long gQMdqdUBtxxXfhuGZzDtdPHJw48164748 = -43568496;    long gQMdqdUBtxxXfhuGZzDtdPHJw38614251 = 59201777;    long gQMdqdUBtxxXfhuGZzDtdPHJw84267032 = -736850835;    long gQMdqdUBtxxXfhuGZzDtdPHJw17712477 = -526599403;    long gQMdqdUBtxxXfhuGZzDtdPHJw42856901 = -331041599;    long gQMdqdUBtxxXfhuGZzDtdPHJw22627127 = 36634068;    long gQMdqdUBtxxXfhuGZzDtdPHJw93807998 = -839771488;    long gQMdqdUBtxxXfhuGZzDtdPHJw81473177 = -582301445;    long gQMdqdUBtxxXfhuGZzDtdPHJw47472029 = -545908645;    long gQMdqdUBtxxXfhuGZzDtdPHJw17513589 = -962837582;    long gQMdqdUBtxxXfhuGZzDtdPHJw44021181 = -123948393;    long gQMdqdUBtxxXfhuGZzDtdPHJw54883808 = -286551011;    long gQMdqdUBtxxXfhuGZzDtdPHJw10927132 = 34172537;    long gQMdqdUBtxxXfhuGZzDtdPHJw97734168 = -141941627;    long gQMdqdUBtxxXfhuGZzDtdPHJw52042260 = -66926593;    long gQMdqdUBtxxXfhuGZzDtdPHJw33256168 = 8500489;    long gQMdqdUBtxxXfhuGZzDtdPHJw32215795 = -258994686;    long gQMdqdUBtxxXfhuGZzDtdPHJw3436200 = -410295425;    long gQMdqdUBtxxXfhuGZzDtdPHJw96693549 = -672806487;    long gQMdqdUBtxxXfhuGZzDtdPHJw7371302 = -967334888;    long gQMdqdUBtxxXfhuGZzDtdPHJw74698426 = -809604494;    long gQMdqdUBtxxXfhuGZzDtdPHJw78564678 = -923663327;    long gQMdqdUBtxxXfhuGZzDtdPHJw72756547 = -493980211;    long gQMdqdUBtxxXfhuGZzDtdPHJw76125041 = -429689586;    long gQMdqdUBtxxXfhuGZzDtdPHJw35145974 = -430360510;    long gQMdqdUBtxxXfhuGZzDtdPHJw51105749 = -818993562;    long gQMdqdUBtxxXfhuGZzDtdPHJw72429083 = 29567608;    long gQMdqdUBtxxXfhuGZzDtdPHJw44232640 = -71072954;    long gQMdqdUBtxxXfhuGZzDtdPHJw4731363 = -705846678;    long gQMdqdUBtxxXfhuGZzDtdPHJw41794899 = -903825149;    long gQMdqdUBtxxXfhuGZzDtdPHJw63588371 = -806499928;    long gQMdqdUBtxxXfhuGZzDtdPHJw50651727 = -922664727;    long gQMdqdUBtxxXfhuGZzDtdPHJw11247350 = -85173133;    long gQMdqdUBtxxXfhuGZzDtdPHJw63038748 = -499532733;    long gQMdqdUBtxxXfhuGZzDtdPHJw7743919 = -806258347;    long gQMdqdUBtxxXfhuGZzDtdPHJw33057278 = -883012520;    long gQMdqdUBtxxXfhuGZzDtdPHJw12471514 = -619471170;    long gQMdqdUBtxxXfhuGZzDtdPHJw60592621 = -569076964;    long gQMdqdUBtxxXfhuGZzDtdPHJw5369719 = -314503010;    long gQMdqdUBtxxXfhuGZzDtdPHJw60075191 = -101379156;    long gQMdqdUBtxxXfhuGZzDtdPHJw74101746 = -599716230;    long gQMdqdUBtxxXfhuGZzDtdPHJw16924663 = -581030061;    long gQMdqdUBtxxXfhuGZzDtdPHJw88605664 = 49573020;    long gQMdqdUBtxxXfhuGZzDtdPHJw71757843 = -318013904;     gQMdqdUBtxxXfhuGZzDtdPHJw8946859 = gQMdqdUBtxxXfhuGZzDtdPHJw62807119;     gQMdqdUBtxxXfhuGZzDtdPHJw62807119 = gQMdqdUBtxxXfhuGZzDtdPHJw642231;     gQMdqdUBtxxXfhuGZzDtdPHJw642231 = gQMdqdUBtxxXfhuGZzDtdPHJw66411991;     gQMdqdUBtxxXfhuGZzDtdPHJw66411991 = gQMdqdUBtxxXfhuGZzDtdPHJw38327037;     gQMdqdUBtxxXfhuGZzDtdPHJw38327037 = gQMdqdUBtxxXfhuGZzDtdPHJw49069235;     gQMdqdUBtxxXfhuGZzDtdPHJw49069235 = gQMdqdUBtxxXfhuGZzDtdPHJw6703280;     gQMdqdUBtxxXfhuGZzDtdPHJw6703280 = gQMdqdUBtxxXfhuGZzDtdPHJw52104298;     gQMdqdUBtxxXfhuGZzDtdPHJw52104298 = gQMdqdUBtxxXfhuGZzDtdPHJw1059761;     gQMdqdUBtxxXfhuGZzDtdPHJw1059761 = gQMdqdUBtxxXfhuGZzDtdPHJw87345358;     gQMdqdUBtxxXfhuGZzDtdPHJw87345358 = gQMdqdUBtxxXfhuGZzDtdPHJw97170868;     gQMdqdUBtxxXfhuGZzDtdPHJw97170868 = gQMdqdUBtxxXfhuGZzDtdPHJw65957412;     gQMdqdUBtxxXfhuGZzDtdPHJw65957412 = gQMdqdUBtxxXfhuGZzDtdPHJw48053048;     gQMdqdUBtxxXfhuGZzDtdPHJw48053048 = gQMdqdUBtxxXfhuGZzDtdPHJw9816472;     gQMdqdUBtxxXfhuGZzDtdPHJw9816472 = gQMdqdUBtxxXfhuGZzDtdPHJw53642834;     gQMdqdUBtxxXfhuGZzDtdPHJw53642834 = gQMdqdUBtxxXfhuGZzDtdPHJw23713788;     gQMdqdUBtxxXfhuGZzDtdPHJw23713788 = gQMdqdUBtxxXfhuGZzDtdPHJw29994714;     gQMdqdUBtxxXfhuGZzDtdPHJw29994714 = gQMdqdUBtxxXfhuGZzDtdPHJw10520894;     gQMdqdUBtxxXfhuGZzDtdPHJw10520894 = gQMdqdUBtxxXfhuGZzDtdPHJw51662819;     gQMdqdUBtxxXfhuGZzDtdPHJw51662819 = gQMdqdUBtxxXfhuGZzDtdPHJw79395868;     gQMdqdUBtxxXfhuGZzDtdPHJw79395868 = gQMdqdUBtxxXfhuGZzDtdPHJw75281046;     gQMdqdUBtxxXfhuGZzDtdPHJw75281046 = gQMdqdUBtxxXfhuGZzDtdPHJw73096267;     gQMdqdUBtxxXfhuGZzDtdPHJw73096267 = gQMdqdUBtxxXfhuGZzDtdPHJw14642372;     gQMdqdUBtxxXfhuGZzDtdPHJw14642372 = gQMdqdUBtxxXfhuGZzDtdPHJw62027980;     gQMdqdUBtxxXfhuGZzDtdPHJw62027980 = gQMdqdUBtxxXfhuGZzDtdPHJw82144959;     gQMdqdUBtxxXfhuGZzDtdPHJw82144959 = gQMdqdUBtxxXfhuGZzDtdPHJw20614560;     gQMdqdUBtxxXfhuGZzDtdPHJw20614560 = gQMdqdUBtxxXfhuGZzDtdPHJw6212334;     gQMdqdUBtxxXfhuGZzDtdPHJw6212334 = gQMdqdUBtxxXfhuGZzDtdPHJw84076152;     gQMdqdUBtxxXfhuGZzDtdPHJw84076152 = gQMdqdUBtxxXfhuGZzDtdPHJw58296299;     gQMdqdUBtxxXfhuGZzDtdPHJw58296299 = gQMdqdUBtxxXfhuGZzDtdPHJw19586584;     gQMdqdUBtxxXfhuGZzDtdPHJw19586584 = gQMdqdUBtxxXfhuGZzDtdPHJw39873329;     gQMdqdUBtxxXfhuGZzDtdPHJw39873329 = gQMdqdUBtxxXfhuGZzDtdPHJw79657280;     gQMdqdUBtxxXfhuGZzDtdPHJw79657280 = gQMdqdUBtxxXfhuGZzDtdPHJw21936231;     gQMdqdUBtxxXfhuGZzDtdPHJw21936231 = gQMdqdUBtxxXfhuGZzDtdPHJw93169239;     gQMdqdUBtxxXfhuGZzDtdPHJw93169239 = gQMdqdUBtxxXfhuGZzDtdPHJw98889340;     gQMdqdUBtxxXfhuGZzDtdPHJw98889340 = gQMdqdUBtxxXfhuGZzDtdPHJw55908666;     gQMdqdUBtxxXfhuGZzDtdPHJw55908666 = gQMdqdUBtxxXfhuGZzDtdPHJw71671528;     gQMdqdUBtxxXfhuGZzDtdPHJw71671528 = gQMdqdUBtxxXfhuGZzDtdPHJw96738546;     gQMdqdUBtxxXfhuGZzDtdPHJw96738546 = gQMdqdUBtxxXfhuGZzDtdPHJw78305098;     gQMdqdUBtxxXfhuGZzDtdPHJw78305098 = gQMdqdUBtxxXfhuGZzDtdPHJw48226620;     gQMdqdUBtxxXfhuGZzDtdPHJw48226620 = gQMdqdUBtxxXfhuGZzDtdPHJw82702318;     gQMdqdUBtxxXfhuGZzDtdPHJw82702318 = gQMdqdUBtxxXfhuGZzDtdPHJw67909744;     gQMdqdUBtxxXfhuGZzDtdPHJw67909744 = gQMdqdUBtxxXfhuGZzDtdPHJw98397840;     gQMdqdUBtxxXfhuGZzDtdPHJw98397840 = gQMdqdUBtxxXfhuGZzDtdPHJw36077694;     gQMdqdUBtxxXfhuGZzDtdPHJw36077694 = gQMdqdUBtxxXfhuGZzDtdPHJw89271432;     gQMdqdUBtxxXfhuGZzDtdPHJw89271432 = gQMdqdUBtxxXfhuGZzDtdPHJw6019918;     gQMdqdUBtxxXfhuGZzDtdPHJw6019918 = gQMdqdUBtxxXfhuGZzDtdPHJw85468586;     gQMdqdUBtxxXfhuGZzDtdPHJw85468586 = gQMdqdUBtxxXfhuGZzDtdPHJw55106584;     gQMdqdUBtxxXfhuGZzDtdPHJw55106584 = gQMdqdUBtxxXfhuGZzDtdPHJw11647070;     gQMdqdUBtxxXfhuGZzDtdPHJw11647070 = gQMdqdUBtxxXfhuGZzDtdPHJw14063660;     gQMdqdUBtxxXfhuGZzDtdPHJw14063660 = gQMdqdUBtxxXfhuGZzDtdPHJw14855222;     gQMdqdUBtxxXfhuGZzDtdPHJw14855222 = gQMdqdUBtxxXfhuGZzDtdPHJw98078429;     gQMdqdUBtxxXfhuGZzDtdPHJw98078429 = gQMdqdUBtxxXfhuGZzDtdPHJw16068909;     gQMdqdUBtxxXfhuGZzDtdPHJw16068909 = gQMdqdUBtxxXfhuGZzDtdPHJw71284504;     gQMdqdUBtxxXfhuGZzDtdPHJw71284504 = gQMdqdUBtxxXfhuGZzDtdPHJw81921889;     gQMdqdUBtxxXfhuGZzDtdPHJw81921889 = gQMdqdUBtxxXfhuGZzDtdPHJw35850592;     gQMdqdUBtxxXfhuGZzDtdPHJw35850592 = gQMdqdUBtxxXfhuGZzDtdPHJw48164748;     gQMdqdUBtxxXfhuGZzDtdPHJw48164748 = gQMdqdUBtxxXfhuGZzDtdPHJw38614251;     gQMdqdUBtxxXfhuGZzDtdPHJw38614251 = gQMdqdUBtxxXfhuGZzDtdPHJw84267032;     gQMdqdUBtxxXfhuGZzDtdPHJw84267032 = gQMdqdUBtxxXfhuGZzDtdPHJw17712477;     gQMdqdUBtxxXfhuGZzDtdPHJw17712477 = gQMdqdUBtxxXfhuGZzDtdPHJw42856901;     gQMdqdUBtxxXfhuGZzDtdPHJw42856901 = gQMdqdUBtxxXfhuGZzDtdPHJw22627127;     gQMdqdUBtxxXfhuGZzDtdPHJw22627127 = gQMdqdUBtxxXfhuGZzDtdPHJw93807998;     gQMdqdUBtxxXfhuGZzDtdPHJw93807998 = gQMdqdUBtxxXfhuGZzDtdPHJw81473177;     gQMdqdUBtxxXfhuGZzDtdPHJw81473177 = gQMdqdUBtxxXfhuGZzDtdPHJw47472029;     gQMdqdUBtxxXfhuGZzDtdPHJw47472029 = gQMdqdUBtxxXfhuGZzDtdPHJw17513589;     gQMdqdUBtxxXfhuGZzDtdPHJw17513589 = gQMdqdUBtxxXfhuGZzDtdPHJw44021181;     gQMdqdUBtxxXfhuGZzDtdPHJw44021181 = gQMdqdUBtxxXfhuGZzDtdPHJw54883808;     gQMdqdUBtxxXfhuGZzDtdPHJw54883808 = gQMdqdUBtxxXfhuGZzDtdPHJw10927132;     gQMdqdUBtxxXfhuGZzDtdPHJw10927132 = gQMdqdUBtxxXfhuGZzDtdPHJw97734168;     gQMdqdUBtxxXfhuGZzDtdPHJw97734168 = gQMdqdUBtxxXfhuGZzDtdPHJw52042260;     gQMdqdUBtxxXfhuGZzDtdPHJw52042260 = gQMdqdUBtxxXfhuGZzDtdPHJw33256168;     gQMdqdUBtxxXfhuGZzDtdPHJw33256168 = gQMdqdUBtxxXfhuGZzDtdPHJw32215795;     gQMdqdUBtxxXfhuGZzDtdPHJw32215795 = gQMdqdUBtxxXfhuGZzDtdPHJw3436200;     gQMdqdUBtxxXfhuGZzDtdPHJw3436200 = gQMdqdUBtxxXfhuGZzDtdPHJw96693549;     gQMdqdUBtxxXfhuGZzDtdPHJw96693549 = gQMdqdUBtxxXfhuGZzDtdPHJw7371302;     gQMdqdUBtxxXfhuGZzDtdPHJw7371302 = gQMdqdUBtxxXfhuGZzDtdPHJw74698426;     gQMdqdUBtxxXfhuGZzDtdPHJw74698426 = gQMdqdUBtxxXfhuGZzDtdPHJw78564678;     gQMdqdUBtxxXfhuGZzDtdPHJw78564678 = gQMdqdUBtxxXfhuGZzDtdPHJw72756547;     gQMdqdUBtxxXfhuGZzDtdPHJw72756547 = gQMdqdUBtxxXfhuGZzDtdPHJw76125041;     gQMdqdUBtxxXfhuGZzDtdPHJw76125041 = gQMdqdUBtxxXfhuGZzDtdPHJw35145974;     gQMdqdUBtxxXfhuGZzDtdPHJw35145974 = gQMdqdUBtxxXfhuGZzDtdPHJw51105749;     gQMdqdUBtxxXfhuGZzDtdPHJw51105749 = gQMdqdUBtxxXfhuGZzDtdPHJw72429083;     gQMdqdUBtxxXfhuGZzDtdPHJw72429083 = gQMdqdUBtxxXfhuGZzDtdPHJw44232640;     gQMdqdUBtxxXfhuGZzDtdPHJw44232640 = gQMdqdUBtxxXfhuGZzDtdPHJw4731363;     gQMdqdUBtxxXfhuGZzDtdPHJw4731363 = gQMdqdUBtxxXfhuGZzDtdPHJw41794899;     gQMdqdUBtxxXfhuGZzDtdPHJw41794899 = gQMdqdUBtxxXfhuGZzDtdPHJw63588371;     gQMdqdUBtxxXfhuGZzDtdPHJw63588371 = gQMdqdUBtxxXfhuGZzDtdPHJw50651727;     gQMdqdUBtxxXfhuGZzDtdPHJw50651727 = gQMdqdUBtxxXfhuGZzDtdPHJw11247350;     gQMdqdUBtxxXfhuGZzDtdPHJw11247350 = gQMdqdUBtxxXfhuGZzDtdPHJw63038748;     gQMdqdUBtxxXfhuGZzDtdPHJw63038748 = gQMdqdUBtxxXfhuGZzDtdPHJw7743919;     gQMdqdUBtxxXfhuGZzDtdPHJw7743919 = gQMdqdUBtxxXfhuGZzDtdPHJw33057278;     gQMdqdUBtxxXfhuGZzDtdPHJw33057278 = gQMdqdUBtxxXfhuGZzDtdPHJw12471514;     gQMdqdUBtxxXfhuGZzDtdPHJw12471514 = gQMdqdUBtxxXfhuGZzDtdPHJw60592621;     gQMdqdUBtxxXfhuGZzDtdPHJw60592621 = gQMdqdUBtxxXfhuGZzDtdPHJw5369719;     gQMdqdUBtxxXfhuGZzDtdPHJw5369719 = gQMdqdUBtxxXfhuGZzDtdPHJw60075191;     gQMdqdUBtxxXfhuGZzDtdPHJw60075191 = gQMdqdUBtxxXfhuGZzDtdPHJw74101746;     gQMdqdUBtxxXfhuGZzDtdPHJw74101746 = gQMdqdUBtxxXfhuGZzDtdPHJw16924663;     gQMdqdUBtxxXfhuGZzDtdPHJw16924663 = gQMdqdUBtxxXfhuGZzDtdPHJw88605664;     gQMdqdUBtxxXfhuGZzDtdPHJw88605664 = gQMdqdUBtxxXfhuGZzDtdPHJw71757843;     gQMdqdUBtxxXfhuGZzDtdPHJw71757843 = gQMdqdUBtxxXfhuGZzDtdPHJw8946859;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void OphEXYNwWuivGKFPzkYOXvJCapQXoHNCnpqTWLzlEYxYcRWvSCYqYsmSg72252004() {     long fdhHpIOggIRUmtolmKzykZITU15063965 = -429915793;    long fdhHpIOggIRUmtolmKzykZITU6180399 = -373167226;    long fdhHpIOggIRUmtolmKzykZITU16684415 = -664858936;    long fdhHpIOggIRUmtolmKzykZITU93486772 = 62293286;    long fdhHpIOggIRUmtolmKzykZITU7222526 = -838414471;    long fdhHpIOggIRUmtolmKzykZITU40486437 = -366906643;    long fdhHpIOggIRUmtolmKzykZITU67192246 = -414475998;    long fdhHpIOggIRUmtolmKzykZITU1864189 = -47914113;    long fdhHpIOggIRUmtolmKzykZITU65702256 = 52467833;    long fdhHpIOggIRUmtolmKzykZITU28575018 = -508919011;    long fdhHpIOggIRUmtolmKzykZITU57281159 = -204763771;    long fdhHpIOggIRUmtolmKzykZITU97780454 = -678805440;    long fdhHpIOggIRUmtolmKzykZITU34262166 = -715456352;    long fdhHpIOggIRUmtolmKzykZITU92960148 = -342676669;    long fdhHpIOggIRUmtolmKzykZITU49385261 = -782230634;    long fdhHpIOggIRUmtolmKzykZITU65219182 = 36263122;    long fdhHpIOggIRUmtolmKzykZITU23830717 = 35633372;    long fdhHpIOggIRUmtolmKzykZITU7574047 = -120193695;    long fdhHpIOggIRUmtolmKzykZITU13492661 = -561609130;    long fdhHpIOggIRUmtolmKzykZITU59946033 = -194454493;    long fdhHpIOggIRUmtolmKzykZITU63834239 = -262310061;    long fdhHpIOggIRUmtolmKzykZITU59617290 = -980865715;    long fdhHpIOggIRUmtolmKzykZITU50233164 = -266516437;    long fdhHpIOggIRUmtolmKzykZITU46020354 = -695532781;    long fdhHpIOggIRUmtolmKzykZITU25844609 = -383303282;    long fdhHpIOggIRUmtolmKzykZITU45336236 = -669820520;    long fdhHpIOggIRUmtolmKzykZITU4672112 = -672031013;    long fdhHpIOggIRUmtolmKzykZITU97183278 = -278074043;    long fdhHpIOggIRUmtolmKzykZITU24428555 = -143651417;    long fdhHpIOggIRUmtolmKzykZITU88202220 = -414668925;    long fdhHpIOggIRUmtolmKzykZITU32115879 = -547355827;    long fdhHpIOggIRUmtolmKzykZITU77267901 = -73935418;    long fdhHpIOggIRUmtolmKzykZITU31647180 = 96935783;    long fdhHpIOggIRUmtolmKzykZITU87999803 = -740556018;    long fdhHpIOggIRUmtolmKzykZITU60363992 = -383343744;    long fdhHpIOggIRUmtolmKzykZITU24634579 = -63852949;    long fdhHpIOggIRUmtolmKzykZITU52933463 = -877446612;    long fdhHpIOggIRUmtolmKzykZITU30828759 = -127828014;    long fdhHpIOggIRUmtolmKzykZITU51915352 = -89599864;    long fdhHpIOggIRUmtolmKzykZITU35728558 = -118983831;    long fdhHpIOggIRUmtolmKzykZITU88371542 = -230018981;    long fdhHpIOggIRUmtolmKzykZITU60202 = -709629996;    long fdhHpIOggIRUmtolmKzykZITU76464818 = -244136090;    long fdhHpIOggIRUmtolmKzykZITU23485434 = -615678562;    long fdhHpIOggIRUmtolmKzykZITU1223898 = -641145736;    long fdhHpIOggIRUmtolmKzykZITU17959113 = -565633780;    long fdhHpIOggIRUmtolmKzykZITU3247161 = -379580224;    long fdhHpIOggIRUmtolmKzykZITU63063525 = -962270781;    long fdhHpIOggIRUmtolmKzykZITU21322799 = -227449686;    long fdhHpIOggIRUmtolmKzykZITU26975313 = -937206567;    long fdhHpIOggIRUmtolmKzykZITU50555900 = -733645051;    long fdhHpIOggIRUmtolmKzykZITU8888150 = -530936061;    long fdhHpIOggIRUmtolmKzykZITU64317366 = -349778263;    long fdhHpIOggIRUmtolmKzykZITU67253384 = -408256265;    long fdhHpIOggIRUmtolmKzykZITU8417765 = -404372903;    long fdhHpIOggIRUmtolmKzykZITU55446675 = -449050079;    long fdhHpIOggIRUmtolmKzykZITU55947235 = -6650789;    long fdhHpIOggIRUmtolmKzykZITU70664061 = -969326156;    long fdhHpIOggIRUmtolmKzykZITU67642163 = -554403432;    long fdhHpIOggIRUmtolmKzykZITU61886290 = -68593951;    long fdhHpIOggIRUmtolmKzykZITU35814325 = -694875631;    long fdhHpIOggIRUmtolmKzykZITU70008968 = -36401955;    long fdhHpIOggIRUmtolmKzykZITU77435634 = -904262697;    long fdhHpIOggIRUmtolmKzykZITU77500036 = -532863243;    long fdhHpIOggIRUmtolmKzykZITU96459139 = -961563184;    long fdhHpIOggIRUmtolmKzykZITU80013257 = -30828353;    long fdhHpIOggIRUmtolmKzykZITU66133275 = -675741224;    long fdhHpIOggIRUmtolmKzykZITU46262363 = -974900334;    long fdhHpIOggIRUmtolmKzykZITU32596156 = -959332926;    long fdhHpIOggIRUmtolmKzykZITU24750682 = -618377686;    long fdhHpIOggIRUmtolmKzykZITU12285719 = -86290267;    long fdhHpIOggIRUmtolmKzykZITU93001958 = -836538614;    long fdhHpIOggIRUmtolmKzykZITU55658694 = 69406169;    long fdhHpIOggIRUmtolmKzykZITU77764103 = -342625299;    long fdhHpIOggIRUmtolmKzykZITU71574490 = -964435513;    long fdhHpIOggIRUmtolmKzykZITU63774038 = -552680065;    long fdhHpIOggIRUmtolmKzykZITU83152472 = -636729626;    long fdhHpIOggIRUmtolmKzykZITU26747730 = -650837876;    long fdhHpIOggIRUmtolmKzykZITU44796456 = 45612955;    long fdhHpIOggIRUmtolmKzykZITU7885497 = -817669503;    long fdhHpIOggIRUmtolmKzykZITU42089075 = -190240296;    long fdhHpIOggIRUmtolmKzykZITU41608587 = -709760232;    long fdhHpIOggIRUmtolmKzykZITU75860479 = 49375642;    long fdhHpIOggIRUmtolmKzykZITU97453242 = -206444850;    long fdhHpIOggIRUmtolmKzykZITU37646321 = -681023874;    long fdhHpIOggIRUmtolmKzykZITU23227730 = 83580233;    long fdhHpIOggIRUmtolmKzykZITU12950536 = -724157156;    long fdhHpIOggIRUmtolmKzykZITU64393795 = -494807952;    long fdhHpIOggIRUmtolmKzykZITU79582039 = -236183116;    long fdhHpIOggIRUmtolmKzykZITU4917318 = -934293666;    long fdhHpIOggIRUmtolmKzykZITU68687344 = 42797840;    long fdhHpIOggIRUmtolmKzykZITU82269402 = -908120456;    long fdhHpIOggIRUmtolmKzykZITU63186595 = -573424583;    long fdhHpIOggIRUmtolmKzykZITU90029061 = 78994087;    long fdhHpIOggIRUmtolmKzykZITU99914232 = -424108201;    long fdhHpIOggIRUmtolmKzykZITU18362575 = -93617026;    long fdhHpIOggIRUmtolmKzykZITU22624568 = -805367300;    long fdhHpIOggIRUmtolmKzykZITU98964782 = -711272847;    long fdhHpIOggIRUmtolmKzykZITU27026295 = -654115379;    long fdhHpIOggIRUmtolmKzykZITU21210640 = -429915793;     fdhHpIOggIRUmtolmKzykZITU15063965 = fdhHpIOggIRUmtolmKzykZITU6180399;     fdhHpIOggIRUmtolmKzykZITU6180399 = fdhHpIOggIRUmtolmKzykZITU16684415;     fdhHpIOggIRUmtolmKzykZITU16684415 = fdhHpIOggIRUmtolmKzykZITU93486772;     fdhHpIOggIRUmtolmKzykZITU93486772 = fdhHpIOggIRUmtolmKzykZITU7222526;     fdhHpIOggIRUmtolmKzykZITU7222526 = fdhHpIOggIRUmtolmKzykZITU40486437;     fdhHpIOggIRUmtolmKzykZITU40486437 = fdhHpIOggIRUmtolmKzykZITU67192246;     fdhHpIOggIRUmtolmKzykZITU67192246 = fdhHpIOggIRUmtolmKzykZITU1864189;     fdhHpIOggIRUmtolmKzykZITU1864189 = fdhHpIOggIRUmtolmKzykZITU65702256;     fdhHpIOggIRUmtolmKzykZITU65702256 = fdhHpIOggIRUmtolmKzykZITU28575018;     fdhHpIOggIRUmtolmKzykZITU28575018 = fdhHpIOggIRUmtolmKzykZITU57281159;     fdhHpIOggIRUmtolmKzykZITU57281159 = fdhHpIOggIRUmtolmKzykZITU97780454;     fdhHpIOggIRUmtolmKzykZITU97780454 = fdhHpIOggIRUmtolmKzykZITU34262166;     fdhHpIOggIRUmtolmKzykZITU34262166 = fdhHpIOggIRUmtolmKzykZITU92960148;     fdhHpIOggIRUmtolmKzykZITU92960148 = fdhHpIOggIRUmtolmKzykZITU49385261;     fdhHpIOggIRUmtolmKzykZITU49385261 = fdhHpIOggIRUmtolmKzykZITU65219182;     fdhHpIOggIRUmtolmKzykZITU65219182 = fdhHpIOggIRUmtolmKzykZITU23830717;     fdhHpIOggIRUmtolmKzykZITU23830717 = fdhHpIOggIRUmtolmKzykZITU7574047;     fdhHpIOggIRUmtolmKzykZITU7574047 = fdhHpIOggIRUmtolmKzykZITU13492661;     fdhHpIOggIRUmtolmKzykZITU13492661 = fdhHpIOggIRUmtolmKzykZITU59946033;     fdhHpIOggIRUmtolmKzykZITU59946033 = fdhHpIOggIRUmtolmKzykZITU63834239;     fdhHpIOggIRUmtolmKzykZITU63834239 = fdhHpIOggIRUmtolmKzykZITU59617290;     fdhHpIOggIRUmtolmKzykZITU59617290 = fdhHpIOggIRUmtolmKzykZITU50233164;     fdhHpIOggIRUmtolmKzykZITU50233164 = fdhHpIOggIRUmtolmKzykZITU46020354;     fdhHpIOggIRUmtolmKzykZITU46020354 = fdhHpIOggIRUmtolmKzykZITU25844609;     fdhHpIOggIRUmtolmKzykZITU25844609 = fdhHpIOggIRUmtolmKzykZITU45336236;     fdhHpIOggIRUmtolmKzykZITU45336236 = fdhHpIOggIRUmtolmKzykZITU4672112;     fdhHpIOggIRUmtolmKzykZITU4672112 = fdhHpIOggIRUmtolmKzykZITU97183278;     fdhHpIOggIRUmtolmKzykZITU97183278 = fdhHpIOggIRUmtolmKzykZITU24428555;     fdhHpIOggIRUmtolmKzykZITU24428555 = fdhHpIOggIRUmtolmKzykZITU88202220;     fdhHpIOggIRUmtolmKzykZITU88202220 = fdhHpIOggIRUmtolmKzykZITU32115879;     fdhHpIOggIRUmtolmKzykZITU32115879 = fdhHpIOggIRUmtolmKzykZITU77267901;     fdhHpIOggIRUmtolmKzykZITU77267901 = fdhHpIOggIRUmtolmKzykZITU31647180;     fdhHpIOggIRUmtolmKzykZITU31647180 = fdhHpIOggIRUmtolmKzykZITU87999803;     fdhHpIOggIRUmtolmKzykZITU87999803 = fdhHpIOggIRUmtolmKzykZITU60363992;     fdhHpIOggIRUmtolmKzykZITU60363992 = fdhHpIOggIRUmtolmKzykZITU24634579;     fdhHpIOggIRUmtolmKzykZITU24634579 = fdhHpIOggIRUmtolmKzykZITU52933463;     fdhHpIOggIRUmtolmKzykZITU52933463 = fdhHpIOggIRUmtolmKzykZITU30828759;     fdhHpIOggIRUmtolmKzykZITU30828759 = fdhHpIOggIRUmtolmKzykZITU51915352;     fdhHpIOggIRUmtolmKzykZITU51915352 = fdhHpIOggIRUmtolmKzykZITU35728558;     fdhHpIOggIRUmtolmKzykZITU35728558 = fdhHpIOggIRUmtolmKzykZITU88371542;     fdhHpIOggIRUmtolmKzykZITU88371542 = fdhHpIOggIRUmtolmKzykZITU60202;     fdhHpIOggIRUmtolmKzykZITU60202 = fdhHpIOggIRUmtolmKzykZITU76464818;     fdhHpIOggIRUmtolmKzykZITU76464818 = fdhHpIOggIRUmtolmKzykZITU23485434;     fdhHpIOggIRUmtolmKzykZITU23485434 = fdhHpIOggIRUmtolmKzykZITU1223898;     fdhHpIOggIRUmtolmKzykZITU1223898 = fdhHpIOggIRUmtolmKzykZITU17959113;     fdhHpIOggIRUmtolmKzykZITU17959113 = fdhHpIOggIRUmtolmKzykZITU3247161;     fdhHpIOggIRUmtolmKzykZITU3247161 = fdhHpIOggIRUmtolmKzykZITU63063525;     fdhHpIOggIRUmtolmKzykZITU63063525 = fdhHpIOggIRUmtolmKzykZITU21322799;     fdhHpIOggIRUmtolmKzykZITU21322799 = fdhHpIOggIRUmtolmKzykZITU26975313;     fdhHpIOggIRUmtolmKzykZITU26975313 = fdhHpIOggIRUmtolmKzykZITU50555900;     fdhHpIOggIRUmtolmKzykZITU50555900 = fdhHpIOggIRUmtolmKzykZITU8888150;     fdhHpIOggIRUmtolmKzykZITU8888150 = fdhHpIOggIRUmtolmKzykZITU64317366;     fdhHpIOggIRUmtolmKzykZITU64317366 = fdhHpIOggIRUmtolmKzykZITU67253384;     fdhHpIOggIRUmtolmKzykZITU67253384 = fdhHpIOggIRUmtolmKzykZITU8417765;     fdhHpIOggIRUmtolmKzykZITU8417765 = fdhHpIOggIRUmtolmKzykZITU55446675;     fdhHpIOggIRUmtolmKzykZITU55446675 = fdhHpIOggIRUmtolmKzykZITU55947235;     fdhHpIOggIRUmtolmKzykZITU55947235 = fdhHpIOggIRUmtolmKzykZITU70664061;     fdhHpIOggIRUmtolmKzykZITU70664061 = fdhHpIOggIRUmtolmKzykZITU67642163;     fdhHpIOggIRUmtolmKzykZITU67642163 = fdhHpIOggIRUmtolmKzykZITU61886290;     fdhHpIOggIRUmtolmKzykZITU61886290 = fdhHpIOggIRUmtolmKzykZITU35814325;     fdhHpIOggIRUmtolmKzykZITU35814325 = fdhHpIOggIRUmtolmKzykZITU70008968;     fdhHpIOggIRUmtolmKzykZITU70008968 = fdhHpIOggIRUmtolmKzykZITU77435634;     fdhHpIOggIRUmtolmKzykZITU77435634 = fdhHpIOggIRUmtolmKzykZITU77500036;     fdhHpIOggIRUmtolmKzykZITU77500036 = fdhHpIOggIRUmtolmKzykZITU96459139;     fdhHpIOggIRUmtolmKzykZITU96459139 = fdhHpIOggIRUmtolmKzykZITU80013257;     fdhHpIOggIRUmtolmKzykZITU80013257 = fdhHpIOggIRUmtolmKzykZITU66133275;     fdhHpIOggIRUmtolmKzykZITU66133275 = fdhHpIOggIRUmtolmKzykZITU46262363;     fdhHpIOggIRUmtolmKzykZITU46262363 = fdhHpIOggIRUmtolmKzykZITU32596156;     fdhHpIOggIRUmtolmKzykZITU32596156 = fdhHpIOggIRUmtolmKzykZITU24750682;     fdhHpIOggIRUmtolmKzykZITU24750682 = fdhHpIOggIRUmtolmKzykZITU12285719;     fdhHpIOggIRUmtolmKzykZITU12285719 = fdhHpIOggIRUmtolmKzykZITU93001958;     fdhHpIOggIRUmtolmKzykZITU93001958 = fdhHpIOggIRUmtolmKzykZITU55658694;     fdhHpIOggIRUmtolmKzykZITU55658694 = fdhHpIOggIRUmtolmKzykZITU77764103;     fdhHpIOggIRUmtolmKzykZITU77764103 = fdhHpIOggIRUmtolmKzykZITU71574490;     fdhHpIOggIRUmtolmKzykZITU71574490 = fdhHpIOggIRUmtolmKzykZITU63774038;     fdhHpIOggIRUmtolmKzykZITU63774038 = fdhHpIOggIRUmtolmKzykZITU83152472;     fdhHpIOggIRUmtolmKzykZITU83152472 = fdhHpIOggIRUmtolmKzykZITU26747730;     fdhHpIOggIRUmtolmKzykZITU26747730 = fdhHpIOggIRUmtolmKzykZITU44796456;     fdhHpIOggIRUmtolmKzykZITU44796456 = fdhHpIOggIRUmtolmKzykZITU7885497;     fdhHpIOggIRUmtolmKzykZITU7885497 = fdhHpIOggIRUmtolmKzykZITU42089075;     fdhHpIOggIRUmtolmKzykZITU42089075 = fdhHpIOggIRUmtolmKzykZITU41608587;     fdhHpIOggIRUmtolmKzykZITU41608587 = fdhHpIOggIRUmtolmKzykZITU75860479;     fdhHpIOggIRUmtolmKzykZITU75860479 = fdhHpIOggIRUmtolmKzykZITU97453242;     fdhHpIOggIRUmtolmKzykZITU97453242 = fdhHpIOggIRUmtolmKzykZITU37646321;     fdhHpIOggIRUmtolmKzykZITU37646321 = fdhHpIOggIRUmtolmKzykZITU23227730;     fdhHpIOggIRUmtolmKzykZITU23227730 = fdhHpIOggIRUmtolmKzykZITU12950536;     fdhHpIOggIRUmtolmKzykZITU12950536 = fdhHpIOggIRUmtolmKzykZITU64393795;     fdhHpIOggIRUmtolmKzykZITU64393795 = fdhHpIOggIRUmtolmKzykZITU79582039;     fdhHpIOggIRUmtolmKzykZITU79582039 = fdhHpIOggIRUmtolmKzykZITU4917318;     fdhHpIOggIRUmtolmKzykZITU4917318 = fdhHpIOggIRUmtolmKzykZITU68687344;     fdhHpIOggIRUmtolmKzykZITU68687344 = fdhHpIOggIRUmtolmKzykZITU82269402;     fdhHpIOggIRUmtolmKzykZITU82269402 = fdhHpIOggIRUmtolmKzykZITU63186595;     fdhHpIOggIRUmtolmKzykZITU63186595 = fdhHpIOggIRUmtolmKzykZITU90029061;     fdhHpIOggIRUmtolmKzykZITU90029061 = fdhHpIOggIRUmtolmKzykZITU99914232;     fdhHpIOggIRUmtolmKzykZITU99914232 = fdhHpIOggIRUmtolmKzykZITU18362575;     fdhHpIOggIRUmtolmKzykZITU18362575 = fdhHpIOggIRUmtolmKzykZITU22624568;     fdhHpIOggIRUmtolmKzykZITU22624568 = fdhHpIOggIRUmtolmKzykZITU98964782;     fdhHpIOggIRUmtolmKzykZITU98964782 = fdhHpIOggIRUmtolmKzykZITU27026295;     fdhHpIOggIRUmtolmKzykZITU27026295 = fdhHpIOggIRUmtolmKzykZITU21210640;     fdhHpIOggIRUmtolmKzykZITU21210640 = fdhHpIOggIRUmtolmKzykZITU15063965;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void jrnCxvpHEBcnHqxnGcMIHMauHnlKPLfouiRDAHvjFxqFSwwbwOsiFBlXR39543603() {     long suKKfrsVotYZumygcDJWUbLqJ50522934 = -896192693;    long suKKfrsVotYZumygcDJWUbLqJ19452477 = -253718833;    long suKKfrsVotYZumygcDJWUbLqJ54070891 = -330526011;    long suKKfrsVotYZumygcDJWUbLqJ65710127 = -858857785;    long suKKfrsVotYZumygcDJWUbLqJ63507795 = -944013316;    long suKKfrsVotYZumygcDJWUbLqJ76709309 = -629254539;    long suKKfrsVotYZumygcDJWUbLqJ77849652 = -259201732;    long suKKfrsVotYZumygcDJWUbLqJ63995749 = -792148253;    long suKKfrsVotYZumygcDJWUbLqJ67219861 = -435863574;    long suKKfrsVotYZumygcDJWUbLqJ43477730 = -173606009;    long suKKfrsVotYZumygcDJWUbLqJ95462894 = -6771500;    long suKKfrsVotYZumygcDJWUbLqJ98348603 = -542926212;    long suKKfrsVotYZumygcDJWUbLqJ72496811 = -167468857;    long suKKfrsVotYZumygcDJWUbLqJ46101011 = -319040078;    long suKKfrsVotYZumygcDJWUbLqJ7579777 = -185655649;    long suKKfrsVotYZumygcDJWUbLqJ48760483 = -699548485;    long suKKfrsVotYZumygcDJWUbLqJ79666652 = -491341181;    long suKKfrsVotYZumygcDJWUbLqJ7334238 = -193621764;    long suKKfrsVotYZumygcDJWUbLqJ14042991 = -878172551;    long suKKfrsVotYZumygcDJWUbLqJ53783252 = -621015559;    long suKKfrsVotYZumygcDJWUbLqJ76921102 = 80415251;    long suKKfrsVotYZumygcDJWUbLqJ63038815 = 32497991;    long suKKfrsVotYZumygcDJWUbLqJ20758544 = 95851378;    long suKKfrsVotYZumygcDJWUbLqJ39813299 = -106357385;    long suKKfrsVotYZumygcDJWUbLqJ33862561 = -407288480;    long suKKfrsVotYZumygcDJWUbLqJ56034407 = -358397326;    long suKKfrsVotYZumygcDJWUbLqJ65092686 = -478315154;    long suKKfrsVotYZumygcDJWUbLqJ37911703 = -447846218;    long suKKfrsVotYZumygcDJWUbLqJ71096769 = -717746219;    long suKKfrsVotYZumygcDJWUbLqJ93735631 = -449176095;    long suKKfrsVotYZumygcDJWUbLqJ50699110 = 663685;    long suKKfrsVotYZumygcDJWUbLqJ15090921 = -946906833;    long suKKfrsVotYZumygcDJWUbLqJ43865190 = -50660194;    long suKKfrsVotYZumygcDJWUbLqJ17748230 = -805249832;    long suKKfrsVotYZumygcDJWUbLqJ26172446 = -334443994;    long suKKfrsVotYZumygcDJWUbLqJ76195422 = -278418255;    long suKKfrsVotYZumygcDJWUbLqJ2345280 = -742142652;    long suKKfrsVotYZumygcDJWUbLqJ82044162 = -110483596;    long suKKfrsVotYZumygcDJWUbLqJ82305913 = -840476140;    long suKKfrsVotYZumygcDJWUbLqJ90 = -684246377;    long suKKfrsVotYZumygcDJWUbLqJ21823150 = 782105;    long suKKfrsVotYZumygcDJWUbLqJ89425328 = -304175287;    long suKKfrsVotYZumygcDJWUbLqJ65848197 = -897316875;    long suKKfrsVotYZumygcDJWUbLqJ63616772 = -120010972;    long suKKfrsVotYZumygcDJWUbLqJ1240356 = -467656898;    long suKKfrsVotYZumygcDJWUbLqJ63920441 = -604557412;    long suKKfrsVotYZumygcDJWUbLqJ22592324 = -863566585;    long suKKfrsVotYZumygcDJWUbLqJ80789837 = -28797375;    long suKKfrsVotYZumygcDJWUbLqJ44215465 = -991186566;    long suKKfrsVotYZumygcDJWUbLqJ51504902 = -328233383;    long suKKfrsVotYZumygcDJWUbLqJ31326624 = -607921609;    long suKKfrsVotYZumygcDJWUbLqJ92373621 = -744588407;    long suKKfrsVotYZumygcDJWUbLqJ32938515 = -105823817;    long suKKfrsVotYZumygcDJWUbLqJ83245231 = -599764765;    long suKKfrsVotYZumygcDJWUbLqJ62622501 = -750863049;    long suKKfrsVotYZumygcDJWUbLqJ87484118 = -828690684;    long suKKfrsVotYZumygcDJWUbLqJ98693933 = -249570212;    long suKKfrsVotYZumygcDJWUbLqJ14257593 = -124168627;    long suKKfrsVotYZumygcDJWUbLqJ31847567 = -351569305;    long suKKfrsVotYZumygcDJWUbLqJ7473388 = -485615990;    long suKKfrsVotYZumygcDJWUbLqJ11616623 = -50939386;    long suKKfrsVotYZumygcDJWUbLqJ39937949 = -811355515;    long suKKfrsVotYZumygcDJWUbLqJ92898980 = 25597965;    long suKKfrsVotYZumygcDJWUbLqJ73484230 = -986687479;    long suKKfrsVotYZumygcDJWUbLqJ92778619 = -74269695;    long suKKfrsVotYZumygcDJWUbLqJ80371973 = -59864668;    long suKKfrsVotYZumygcDJWUbLqJ54483413 = -392266018;    long suKKfrsVotYZumygcDJWUbLqJ54748582 = -362219025;    long suKKfrsVotYZumygcDJWUbLqJ19928566 = -984596085;    long suKKfrsVotYZumygcDJWUbLqJ31384355 = -907237395;    long suKKfrsVotYZumygcDJWUbLqJ46415203 = -957405834;    long suKKfrsVotYZumygcDJWUbLqJ97622490 = -280857586;    long suKKfrsVotYZumygcDJWUbLqJ25028325 = -353145624;    long suKKfrsVotYZumygcDJWUbLqJ14042902 = -93926174;    long suKKfrsVotYZumygcDJWUbLqJ31960102 = -521797664;    long suKKfrsVotYZumygcDJWUbLqJ87495774 = -615409463;    long suKKfrsVotYZumygcDJWUbLqJ97190618 = -70185134;    long suKKfrsVotYZumygcDJWUbLqJ57141771 = -784137650;    long suKKfrsVotYZumygcDJWUbLqJ38572943 = -638700488;    long suKKfrsVotYZumygcDJWUbLqJ69942119 = -802731069;    long suKKfrsVotYZumygcDJWUbLqJ33442083 = -494830742;    long suKKfrsVotYZumygcDJWUbLqJ84302849 = -349517780;    long suKKfrsVotYZumygcDJWUbLqJ93696238 = -456659652;    long suKKfrsVotYZumygcDJWUbLqJ19591868 = -289512837;    long suKKfrsVotYZumygcDJWUbLqJ62409008 = -841254487;    long suKKfrsVotYZumygcDJWUbLqJ58325488 = -254747908;    long suKKfrsVotYZumygcDJWUbLqJ82152405 = -741083016;    long suKKfrsVotYZumygcDJWUbLqJ60619959 = -450895430;    long suKKfrsVotYZumygcDJWUbLqJ55125729 = 45613217;    long suKKfrsVotYZumygcDJWUbLqJ38688328 = -505753310;    long suKKfrsVotYZumygcDJWUbLqJ77501489 = 71151956;    long suKKfrsVotYZumygcDJWUbLqJ88087687 = -517974025;    long suKKfrsVotYZumygcDJWUbLqJ50196595 = -758914291;    long suKKfrsVotYZumygcDJWUbLqJ74832526 = -254860151;    long suKKfrsVotYZumygcDJWUbLqJ88383466 = -533306992;    long suKKfrsVotYZumygcDJWUbLqJ81885201 = -187862381;    long suKKfrsVotYZumygcDJWUbLqJ96526348 = -229773253;    long suKKfrsVotYZumygcDJWUbLqJ92363966 = -910629397;    long suKKfrsVotYZumygcDJWUbLqJ70838152 = 54258722;    long suKKfrsVotYZumygcDJWUbLqJ20868382 = -896192693;     suKKfrsVotYZumygcDJWUbLqJ50522934 = suKKfrsVotYZumygcDJWUbLqJ19452477;     suKKfrsVotYZumygcDJWUbLqJ19452477 = suKKfrsVotYZumygcDJWUbLqJ54070891;     suKKfrsVotYZumygcDJWUbLqJ54070891 = suKKfrsVotYZumygcDJWUbLqJ65710127;     suKKfrsVotYZumygcDJWUbLqJ65710127 = suKKfrsVotYZumygcDJWUbLqJ63507795;     suKKfrsVotYZumygcDJWUbLqJ63507795 = suKKfrsVotYZumygcDJWUbLqJ76709309;     suKKfrsVotYZumygcDJWUbLqJ76709309 = suKKfrsVotYZumygcDJWUbLqJ77849652;     suKKfrsVotYZumygcDJWUbLqJ77849652 = suKKfrsVotYZumygcDJWUbLqJ63995749;     suKKfrsVotYZumygcDJWUbLqJ63995749 = suKKfrsVotYZumygcDJWUbLqJ67219861;     suKKfrsVotYZumygcDJWUbLqJ67219861 = suKKfrsVotYZumygcDJWUbLqJ43477730;     suKKfrsVotYZumygcDJWUbLqJ43477730 = suKKfrsVotYZumygcDJWUbLqJ95462894;     suKKfrsVotYZumygcDJWUbLqJ95462894 = suKKfrsVotYZumygcDJWUbLqJ98348603;     suKKfrsVotYZumygcDJWUbLqJ98348603 = suKKfrsVotYZumygcDJWUbLqJ72496811;     suKKfrsVotYZumygcDJWUbLqJ72496811 = suKKfrsVotYZumygcDJWUbLqJ46101011;     suKKfrsVotYZumygcDJWUbLqJ46101011 = suKKfrsVotYZumygcDJWUbLqJ7579777;     suKKfrsVotYZumygcDJWUbLqJ7579777 = suKKfrsVotYZumygcDJWUbLqJ48760483;     suKKfrsVotYZumygcDJWUbLqJ48760483 = suKKfrsVotYZumygcDJWUbLqJ79666652;     suKKfrsVotYZumygcDJWUbLqJ79666652 = suKKfrsVotYZumygcDJWUbLqJ7334238;     suKKfrsVotYZumygcDJWUbLqJ7334238 = suKKfrsVotYZumygcDJWUbLqJ14042991;     suKKfrsVotYZumygcDJWUbLqJ14042991 = suKKfrsVotYZumygcDJWUbLqJ53783252;     suKKfrsVotYZumygcDJWUbLqJ53783252 = suKKfrsVotYZumygcDJWUbLqJ76921102;     suKKfrsVotYZumygcDJWUbLqJ76921102 = suKKfrsVotYZumygcDJWUbLqJ63038815;     suKKfrsVotYZumygcDJWUbLqJ63038815 = suKKfrsVotYZumygcDJWUbLqJ20758544;     suKKfrsVotYZumygcDJWUbLqJ20758544 = suKKfrsVotYZumygcDJWUbLqJ39813299;     suKKfrsVotYZumygcDJWUbLqJ39813299 = suKKfrsVotYZumygcDJWUbLqJ33862561;     suKKfrsVotYZumygcDJWUbLqJ33862561 = suKKfrsVotYZumygcDJWUbLqJ56034407;     suKKfrsVotYZumygcDJWUbLqJ56034407 = suKKfrsVotYZumygcDJWUbLqJ65092686;     suKKfrsVotYZumygcDJWUbLqJ65092686 = suKKfrsVotYZumygcDJWUbLqJ37911703;     suKKfrsVotYZumygcDJWUbLqJ37911703 = suKKfrsVotYZumygcDJWUbLqJ71096769;     suKKfrsVotYZumygcDJWUbLqJ71096769 = suKKfrsVotYZumygcDJWUbLqJ93735631;     suKKfrsVotYZumygcDJWUbLqJ93735631 = suKKfrsVotYZumygcDJWUbLqJ50699110;     suKKfrsVotYZumygcDJWUbLqJ50699110 = suKKfrsVotYZumygcDJWUbLqJ15090921;     suKKfrsVotYZumygcDJWUbLqJ15090921 = suKKfrsVotYZumygcDJWUbLqJ43865190;     suKKfrsVotYZumygcDJWUbLqJ43865190 = suKKfrsVotYZumygcDJWUbLqJ17748230;     suKKfrsVotYZumygcDJWUbLqJ17748230 = suKKfrsVotYZumygcDJWUbLqJ26172446;     suKKfrsVotYZumygcDJWUbLqJ26172446 = suKKfrsVotYZumygcDJWUbLqJ76195422;     suKKfrsVotYZumygcDJWUbLqJ76195422 = suKKfrsVotYZumygcDJWUbLqJ2345280;     suKKfrsVotYZumygcDJWUbLqJ2345280 = suKKfrsVotYZumygcDJWUbLqJ82044162;     suKKfrsVotYZumygcDJWUbLqJ82044162 = suKKfrsVotYZumygcDJWUbLqJ82305913;     suKKfrsVotYZumygcDJWUbLqJ82305913 = suKKfrsVotYZumygcDJWUbLqJ90;     suKKfrsVotYZumygcDJWUbLqJ90 = suKKfrsVotYZumygcDJWUbLqJ21823150;     suKKfrsVotYZumygcDJWUbLqJ21823150 = suKKfrsVotYZumygcDJWUbLqJ89425328;     suKKfrsVotYZumygcDJWUbLqJ89425328 = suKKfrsVotYZumygcDJWUbLqJ65848197;     suKKfrsVotYZumygcDJWUbLqJ65848197 = suKKfrsVotYZumygcDJWUbLqJ63616772;     suKKfrsVotYZumygcDJWUbLqJ63616772 = suKKfrsVotYZumygcDJWUbLqJ1240356;     suKKfrsVotYZumygcDJWUbLqJ1240356 = suKKfrsVotYZumygcDJWUbLqJ63920441;     suKKfrsVotYZumygcDJWUbLqJ63920441 = suKKfrsVotYZumygcDJWUbLqJ22592324;     suKKfrsVotYZumygcDJWUbLqJ22592324 = suKKfrsVotYZumygcDJWUbLqJ80789837;     suKKfrsVotYZumygcDJWUbLqJ80789837 = suKKfrsVotYZumygcDJWUbLqJ44215465;     suKKfrsVotYZumygcDJWUbLqJ44215465 = suKKfrsVotYZumygcDJWUbLqJ51504902;     suKKfrsVotYZumygcDJWUbLqJ51504902 = suKKfrsVotYZumygcDJWUbLqJ31326624;     suKKfrsVotYZumygcDJWUbLqJ31326624 = suKKfrsVotYZumygcDJWUbLqJ92373621;     suKKfrsVotYZumygcDJWUbLqJ92373621 = suKKfrsVotYZumygcDJWUbLqJ32938515;     suKKfrsVotYZumygcDJWUbLqJ32938515 = suKKfrsVotYZumygcDJWUbLqJ83245231;     suKKfrsVotYZumygcDJWUbLqJ83245231 = suKKfrsVotYZumygcDJWUbLqJ62622501;     suKKfrsVotYZumygcDJWUbLqJ62622501 = suKKfrsVotYZumygcDJWUbLqJ87484118;     suKKfrsVotYZumygcDJWUbLqJ87484118 = suKKfrsVotYZumygcDJWUbLqJ98693933;     suKKfrsVotYZumygcDJWUbLqJ98693933 = suKKfrsVotYZumygcDJWUbLqJ14257593;     suKKfrsVotYZumygcDJWUbLqJ14257593 = suKKfrsVotYZumygcDJWUbLqJ31847567;     suKKfrsVotYZumygcDJWUbLqJ31847567 = suKKfrsVotYZumygcDJWUbLqJ7473388;     suKKfrsVotYZumygcDJWUbLqJ7473388 = suKKfrsVotYZumygcDJWUbLqJ11616623;     suKKfrsVotYZumygcDJWUbLqJ11616623 = suKKfrsVotYZumygcDJWUbLqJ39937949;     suKKfrsVotYZumygcDJWUbLqJ39937949 = suKKfrsVotYZumygcDJWUbLqJ92898980;     suKKfrsVotYZumygcDJWUbLqJ92898980 = suKKfrsVotYZumygcDJWUbLqJ73484230;     suKKfrsVotYZumygcDJWUbLqJ73484230 = suKKfrsVotYZumygcDJWUbLqJ92778619;     suKKfrsVotYZumygcDJWUbLqJ92778619 = suKKfrsVotYZumygcDJWUbLqJ80371973;     suKKfrsVotYZumygcDJWUbLqJ80371973 = suKKfrsVotYZumygcDJWUbLqJ54483413;     suKKfrsVotYZumygcDJWUbLqJ54483413 = suKKfrsVotYZumygcDJWUbLqJ54748582;     suKKfrsVotYZumygcDJWUbLqJ54748582 = suKKfrsVotYZumygcDJWUbLqJ19928566;     suKKfrsVotYZumygcDJWUbLqJ19928566 = suKKfrsVotYZumygcDJWUbLqJ31384355;     suKKfrsVotYZumygcDJWUbLqJ31384355 = suKKfrsVotYZumygcDJWUbLqJ46415203;     suKKfrsVotYZumygcDJWUbLqJ46415203 = suKKfrsVotYZumygcDJWUbLqJ97622490;     suKKfrsVotYZumygcDJWUbLqJ97622490 = suKKfrsVotYZumygcDJWUbLqJ25028325;     suKKfrsVotYZumygcDJWUbLqJ25028325 = suKKfrsVotYZumygcDJWUbLqJ14042902;     suKKfrsVotYZumygcDJWUbLqJ14042902 = suKKfrsVotYZumygcDJWUbLqJ31960102;     suKKfrsVotYZumygcDJWUbLqJ31960102 = suKKfrsVotYZumygcDJWUbLqJ87495774;     suKKfrsVotYZumygcDJWUbLqJ87495774 = suKKfrsVotYZumygcDJWUbLqJ97190618;     suKKfrsVotYZumygcDJWUbLqJ97190618 = suKKfrsVotYZumygcDJWUbLqJ57141771;     suKKfrsVotYZumygcDJWUbLqJ57141771 = suKKfrsVotYZumygcDJWUbLqJ38572943;     suKKfrsVotYZumygcDJWUbLqJ38572943 = suKKfrsVotYZumygcDJWUbLqJ69942119;     suKKfrsVotYZumygcDJWUbLqJ69942119 = suKKfrsVotYZumygcDJWUbLqJ33442083;     suKKfrsVotYZumygcDJWUbLqJ33442083 = suKKfrsVotYZumygcDJWUbLqJ84302849;     suKKfrsVotYZumygcDJWUbLqJ84302849 = suKKfrsVotYZumygcDJWUbLqJ93696238;     suKKfrsVotYZumygcDJWUbLqJ93696238 = suKKfrsVotYZumygcDJWUbLqJ19591868;     suKKfrsVotYZumygcDJWUbLqJ19591868 = suKKfrsVotYZumygcDJWUbLqJ62409008;     suKKfrsVotYZumygcDJWUbLqJ62409008 = suKKfrsVotYZumygcDJWUbLqJ58325488;     suKKfrsVotYZumygcDJWUbLqJ58325488 = suKKfrsVotYZumygcDJWUbLqJ82152405;     suKKfrsVotYZumygcDJWUbLqJ82152405 = suKKfrsVotYZumygcDJWUbLqJ60619959;     suKKfrsVotYZumygcDJWUbLqJ60619959 = suKKfrsVotYZumygcDJWUbLqJ55125729;     suKKfrsVotYZumygcDJWUbLqJ55125729 = suKKfrsVotYZumygcDJWUbLqJ38688328;     suKKfrsVotYZumygcDJWUbLqJ38688328 = suKKfrsVotYZumygcDJWUbLqJ77501489;     suKKfrsVotYZumygcDJWUbLqJ77501489 = suKKfrsVotYZumygcDJWUbLqJ88087687;     suKKfrsVotYZumygcDJWUbLqJ88087687 = suKKfrsVotYZumygcDJWUbLqJ50196595;     suKKfrsVotYZumygcDJWUbLqJ50196595 = suKKfrsVotYZumygcDJWUbLqJ74832526;     suKKfrsVotYZumygcDJWUbLqJ74832526 = suKKfrsVotYZumygcDJWUbLqJ88383466;     suKKfrsVotYZumygcDJWUbLqJ88383466 = suKKfrsVotYZumygcDJWUbLqJ81885201;     suKKfrsVotYZumygcDJWUbLqJ81885201 = suKKfrsVotYZumygcDJWUbLqJ96526348;     suKKfrsVotYZumygcDJWUbLqJ96526348 = suKKfrsVotYZumygcDJWUbLqJ92363966;     suKKfrsVotYZumygcDJWUbLqJ92363966 = suKKfrsVotYZumygcDJWUbLqJ70838152;     suKKfrsVotYZumygcDJWUbLqJ70838152 = suKKfrsVotYZumygcDJWUbLqJ20868382;     suKKfrsVotYZumygcDJWUbLqJ20868382 = suKKfrsVotYZumygcDJWUbLqJ50522934;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void vqABavyHBTWMKrMMqkTZwBwUodolSGOaQhQhRrOBpGJivXGRTjlYVsptu54592671() {     long fNwHMouEvvcbeuzWRkqsNZRXW56640040 = 91905418;    long fNwHMouEvvcbeuzWRkqsNZRXW62825756 = 36681386;    long fNwHMouEvvcbeuzWRkqsNZRXW70113074 = -481358932;    long fNwHMouEvvcbeuzWRkqsNZRXW92784908 = 50393585;    long fNwHMouEvvcbeuzWRkqsNZRXW32403284 = -364663187;    long fNwHMouEvvcbeuzWRkqsNZRXW68126511 = -893750774;    long fNwHMouEvvcbeuzWRkqsNZRXW38338618 = -398166709;    long fNwHMouEvvcbeuzWRkqsNZRXW13755641 = 20977833;    long fNwHMouEvvcbeuzWRkqsNZRXW31862357 = -203896240;    long fNwHMouEvvcbeuzWRkqsNZRXW84707389 = -502581487;    long fNwHMouEvvcbeuzWRkqsNZRXW55573184 = -984209086;    long fNwHMouEvvcbeuzWRkqsNZRXW30171646 = -987332414;    long fNwHMouEvvcbeuzWRkqsNZRXW58705930 = -607359945;    long fNwHMouEvvcbeuzWRkqsNZRXW29244688 = -851278646;    long fNwHMouEvvcbeuzWRkqsNZRXW3322204 = -876117816;    long fNwHMouEvvcbeuzWRkqsNZRXW90265876 = -672548028;    long fNwHMouEvvcbeuzWRkqsNZRXW73502655 = -7886294;    long fNwHMouEvvcbeuzWRkqsNZRXW4387391 = -959144406;    long fNwHMouEvvcbeuzWRkqsNZRXW75872832 = -183941648;    long fNwHMouEvvcbeuzWRkqsNZRXW34333416 = -977918478;    long fNwHMouEvvcbeuzWRkqsNZRXW65474296 = -875072205;    long fNwHMouEvvcbeuzWRkqsNZRXW49559839 = -975431725;    long fNwHMouEvvcbeuzWRkqsNZRXW56349335 = -750666108;    long fNwHMouEvvcbeuzWRkqsNZRXW23805673 = -328662373;    long fNwHMouEvvcbeuzWRkqsNZRXW77562210 = -780484513;    long fNwHMouEvvcbeuzWRkqsNZRXW80756082 = -237052650;    long fNwHMouEvvcbeuzWRkqsNZRXW63552464 = -378977357;    long fNwHMouEvvcbeuzWRkqsNZRXW51018828 = -513775171;    long fNwHMouEvvcbeuzWRkqsNZRXW37229025 = -940128924;    long fNwHMouEvvcbeuzWRkqsNZRXW62351268 = -266646963;    long fNwHMouEvvcbeuzWRkqsNZRXW42941660 = 87342747;    long fNwHMouEvvcbeuzWRkqsNZRXW12701542 = -656353649;    long fNwHMouEvvcbeuzWRkqsNZRXW53576139 = 56726436;    long fNwHMouEvvcbeuzWRkqsNZRXW12578794 = -556791597;    long fNwHMouEvvcbeuzWRkqsNZRXW87647098 = -973177100;    long fNwHMouEvvcbeuzWRkqsNZRXW44921336 = -492444363;    long fNwHMouEvvcbeuzWRkqsNZRXW83607214 = -695778521;    long fNwHMouEvvcbeuzWRkqsNZRXW16134375 = -981989605;    long fNwHMouEvvcbeuzWRkqsNZRXW55916167 = -834399637;    long fNwHMouEvvcbeuzWRkqsNZRXW87502027 = -57685600;    long fNwHMouEvvcbeuzWRkqsNZRXW27492374 = -64491789;    long fNwHMouEvvcbeuzWRkqsNZRXW21575786 = -574317565;    long fNwHMouEvvcbeuzWRkqsNZRXW43915175 = -978121459;    long fNwHMouEvvcbeuzWRkqsNZRXW51024512 = -139353910;    long fNwHMouEvvcbeuzWRkqsNZRXW13192821 = -129555052;    long fNwHMouEvvcbeuzWRkqsNZRXW75859636 = -589773528;    long fNwHMouEvvcbeuzWRkqsNZRXW40370899 = -982342123;    long fNwHMouEvvcbeuzWRkqsNZRXW88746778 = -38692907;    long fNwHMouEvvcbeuzWRkqsNZRXW53891194 = 23076445;    long fNwHMouEvvcbeuzWRkqsNZRXW64416554 = -415244191;    long fNwHMouEvvcbeuzWRkqsNZRXW67027301 = -450215280;    long fNwHMouEvvcbeuzWRkqsNZRXW3183341 = -545314727;    long fNwHMouEvvcbeuzWRkqsNZRXW81186972 = -997613405;    long fNwHMouEvvcbeuzWRkqsNZRXW79214111 = -920234910;    long fNwHMouEvvcbeuzWRkqsNZRXW89118375 = -351394831;    long fNwHMouEvvcbeuzWRkqsNZRXW7080202 = 67337143;    long fNwHMouEvvcbeuzWRkqsNZRXW6476422 = -212652506;    long fNwHMouEvvcbeuzWRkqsNZRXW46307402 = -52696560;    long fNwHMouEvvcbeuzWRkqsNZRXW15222698 = -169121903;    long fNwHMouEvvcbeuzWRkqsNZRXW51647201 = -27610538;    long fNwHMouEvvcbeuzWRkqsNZRXW4574048 = -414773418;    long fNwHMouEvvcbeuzWRkqsNZRXW87319789 = -884391538;    long fNwHMouEvvcbeuzWRkqsNZRXW76526615 = -38893243;    long fNwHMouEvvcbeuzWRkqsNZRXW69511089 = -937249278;    long fNwHMouEvvcbeuzWRkqsNZRXW41765730 = -489924234;    long fNwHMouEvvcbeuzWRkqsNZRXW42871642 = -227855438;    long fNwHMouEvvcbeuzWRkqsNZRXW76595507 = -944058850;    long fNwHMouEvvcbeuzWRkqsNZRXW46127136 = 49431651;    long fNwHMouEvvcbeuzWRkqsNZRXW41597590 = -878101547;    long fNwHMouEvvcbeuzWRkqsNZRXW58400868 = -283673454;    long fNwHMouEvvcbeuzWRkqsNZRXW6658663 = -976769507;    long fNwHMouEvvcbeuzWRkqsNZRXW57368281 = -25896689;    long fNwHMouEvvcbeuzWRkqsNZRXW48471224 = -24744770;    long fNwHMouEvvcbeuzWRkqsNZRXW88370805 = -26256048;    long fNwHMouEvvcbeuzWRkqsNZRXW6841043 = -813426690;    long fNwHMouEvvcbeuzWRkqsNZRXW43898511 = -200754640;    long fNwHMouEvvcbeuzWRkqsNZRXW5644664 = -997310267;    long fNwHMouEvvcbeuzWRkqsNZRXW5324823 = -511312198;    long fNwHMouEvvcbeuzWRkqsNZRXW10612852 = -99107321;    long fNwHMouEvvcbeuzWRkqsNZRXW1702575 = -90710985;    long fNwHMouEvvcbeuzWRkqsNZRXW40385184 = -254710528;    long fNwHMouEvvcbeuzWRkqsNZRXW74805686 = -240284450;    long fNwHMouEvvcbeuzWRkqsNZRXW97127634 = -436851617;    long fNwHMouEvvcbeuzWRkqsNZRXW72812470 = -424884733;    long fNwHMouEvvcbeuzWRkqsNZRXW95323966 = -816431683;    long fNwHMouEvvcbeuzWRkqsNZRXW39758319 = -367342526;    long fNwHMouEvvcbeuzWRkqsNZRXW31514570 = -658740244;    long fNwHMouEvvcbeuzWRkqsNZRXW74362027 = -23038655;    long fNwHMouEvvcbeuzWRkqsNZRXW23460419 = -105396766;    long fNwHMouEvvcbeuzWRkqsNZRXW80566896 = -940514243;    long fNwHMouEvvcbeuzWRkqsNZRXW38444915 = -179791857;    long fNwHMouEvvcbeuzWRkqsNZRXW37299812 = -543081962;    long fNwHMouEvvcbeuzWRkqsNZRXW911678 = -712867703;    long fNwHMouEvvcbeuzWRkqsNZRXW4268967 = -706789100;    long fNwHMouEvvcbeuzWRkqsNZRXW82927980 = -642912183;    long fNwHMouEvvcbeuzWRkqsNZRXW40172584 = -180100252;    long fNwHMouEvvcbeuzWRkqsNZRXW45049170 = -435424322;    long fNwHMouEvvcbeuzWRkqsNZRXW74404086 = 59127818;    long fNwHMouEvvcbeuzWRkqsNZRXW9258783 = -649429676;    long fNwHMouEvvcbeuzWRkqsNZRXW70321178 = 91905418;     fNwHMouEvvcbeuzWRkqsNZRXW56640040 = fNwHMouEvvcbeuzWRkqsNZRXW62825756;     fNwHMouEvvcbeuzWRkqsNZRXW62825756 = fNwHMouEvvcbeuzWRkqsNZRXW70113074;     fNwHMouEvvcbeuzWRkqsNZRXW70113074 = fNwHMouEvvcbeuzWRkqsNZRXW92784908;     fNwHMouEvvcbeuzWRkqsNZRXW92784908 = fNwHMouEvvcbeuzWRkqsNZRXW32403284;     fNwHMouEvvcbeuzWRkqsNZRXW32403284 = fNwHMouEvvcbeuzWRkqsNZRXW68126511;     fNwHMouEvvcbeuzWRkqsNZRXW68126511 = fNwHMouEvvcbeuzWRkqsNZRXW38338618;     fNwHMouEvvcbeuzWRkqsNZRXW38338618 = fNwHMouEvvcbeuzWRkqsNZRXW13755641;     fNwHMouEvvcbeuzWRkqsNZRXW13755641 = fNwHMouEvvcbeuzWRkqsNZRXW31862357;     fNwHMouEvvcbeuzWRkqsNZRXW31862357 = fNwHMouEvvcbeuzWRkqsNZRXW84707389;     fNwHMouEvvcbeuzWRkqsNZRXW84707389 = fNwHMouEvvcbeuzWRkqsNZRXW55573184;     fNwHMouEvvcbeuzWRkqsNZRXW55573184 = fNwHMouEvvcbeuzWRkqsNZRXW30171646;     fNwHMouEvvcbeuzWRkqsNZRXW30171646 = fNwHMouEvvcbeuzWRkqsNZRXW58705930;     fNwHMouEvvcbeuzWRkqsNZRXW58705930 = fNwHMouEvvcbeuzWRkqsNZRXW29244688;     fNwHMouEvvcbeuzWRkqsNZRXW29244688 = fNwHMouEvvcbeuzWRkqsNZRXW3322204;     fNwHMouEvvcbeuzWRkqsNZRXW3322204 = fNwHMouEvvcbeuzWRkqsNZRXW90265876;     fNwHMouEvvcbeuzWRkqsNZRXW90265876 = fNwHMouEvvcbeuzWRkqsNZRXW73502655;     fNwHMouEvvcbeuzWRkqsNZRXW73502655 = fNwHMouEvvcbeuzWRkqsNZRXW4387391;     fNwHMouEvvcbeuzWRkqsNZRXW4387391 = fNwHMouEvvcbeuzWRkqsNZRXW75872832;     fNwHMouEvvcbeuzWRkqsNZRXW75872832 = fNwHMouEvvcbeuzWRkqsNZRXW34333416;     fNwHMouEvvcbeuzWRkqsNZRXW34333416 = fNwHMouEvvcbeuzWRkqsNZRXW65474296;     fNwHMouEvvcbeuzWRkqsNZRXW65474296 = fNwHMouEvvcbeuzWRkqsNZRXW49559839;     fNwHMouEvvcbeuzWRkqsNZRXW49559839 = fNwHMouEvvcbeuzWRkqsNZRXW56349335;     fNwHMouEvvcbeuzWRkqsNZRXW56349335 = fNwHMouEvvcbeuzWRkqsNZRXW23805673;     fNwHMouEvvcbeuzWRkqsNZRXW23805673 = fNwHMouEvvcbeuzWRkqsNZRXW77562210;     fNwHMouEvvcbeuzWRkqsNZRXW77562210 = fNwHMouEvvcbeuzWRkqsNZRXW80756082;     fNwHMouEvvcbeuzWRkqsNZRXW80756082 = fNwHMouEvvcbeuzWRkqsNZRXW63552464;     fNwHMouEvvcbeuzWRkqsNZRXW63552464 = fNwHMouEvvcbeuzWRkqsNZRXW51018828;     fNwHMouEvvcbeuzWRkqsNZRXW51018828 = fNwHMouEvvcbeuzWRkqsNZRXW37229025;     fNwHMouEvvcbeuzWRkqsNZRXW37229025 = fNwHMouEvvcbeuzWRkqsNZRXW62351268;     fNwHMouEvvcbeuzWRkqsNZRXW62351268 = fNwHMouEvvcbeuzWRkqsNZRXW42941660;     fNwHMouEvvcbeuzWRkqsNZRXW42941660 = fNwHMouEvvcbeuzWRkqsNZRXW12701542;     fNwHMouEvvcbeuzWRkqsNZRXW12701542 = fNwHMouEvvcbeuzWRkqsNZRXW53576139;     fNwHMouEvvcbeuzWRkqsNZRXW53576139 = fNwHMouEvvcbeuzWRkqsNZRXW12578794;     fNwHMouEvvcbeuzWRkqsNZRXW12578794 = fNwHMouEvvcbeuzWRkqsNZRXW87647098;     fNwHMouEvvcbeuzWRkqsNZRXW87647098 = fNwHMouEvvcbeuzWRkqsNZRXW44921336;     fNwHMouEvvcbeuzWRkqsNZRXW44921336 = fNwHMouEvvcbeuzWRkqsNZRXW83607214;     fNwHMouEvvcbeuzWRkqsNZRXW83607214 = fNwHMouEvvcbeuzWRkqsNZRXW16134375;     fNwHMouEvvcbeuzWRkqsNZRXW16134375 = fNwHMouEvvcbeuzWRkqsNZRXW55916167;     fNwHMouEvvcbeuzWRkqsNZRXW55916167 = fNwHMouEvvcbeuzWRkqsNZRXW87502027;     fNwHMouEvvcbeuzWRkqsNZRXW87502027 = fNwHMouEvvcbeuzWRkqsNZRXW27492374;     fNwHMouEvvcbeuzWRkqsNZRXW27492374 = fNwHMouEvvcbeuzWRkqsNZRXW21575786;     fNwHMouEvvcbeuzWRkqsNZRXW21575786 = fNwHMouEvvcbeuzWRkqsNZRXW43915175;     fNwHMouEvvcbeuzWRkqsNZRXW43915175 = fNwHMouEvvcbeuzWRkqsNZRXW51024512;     fNwHMouEvvcbeuzWRkqsNZRXW51024512 = fNwHMouEvvcbeuzWRkqsNZRXW13192821;     fNwHMouEvvcbeuzWRkqsNZRXW13192821 = fNwHMouEvvcbeuzWRkqsNZRXW75859636;     fNwHMouEvvcbeuzWRkqsNZRXW75859636 = fNwHMouEvvcbeuzWRkqsNZRXW40370899;     fNwHMouEvvcbeuzWRkqsNZRXW40370899 = fNwHMouEvvcbeuzWRkqsNZRXW88746778;     fNwHMouEvvcbeuzWRkqsNZRXW88746778 = fNwHMouEvvcbeuzWRkqsNZRXW53891194;     fNwHMouEvvcbeuzWRkqsNZRXW53891194 = fNwHMouEvvcbeuzWRkqsNZRXW64416554;     fNwHMouEvvcbeuzWRkqsNZRXW64416554 = fNwHMouEvvcbeuzWRkqsNZRXW67027301;     fNwHMouEvvcbeuzWRkqsNZRXW67027301 = fNwHMouEvvcbeuzWRkqsNZRXW3183341;     fNwHMouEvvcbeuzWRkqsNZRXW3183341 = fNwHMouEvvcbeuzWRkqsNZRXW81186972;     fNwHMouEvvcbeuzWRkqsNZRXW81186972 = fNwHMouEvvcbeuzWRkqsNZRXW79214111;     fNwHMouEvvcbeuzWRkqsNZRXW79214111 = fNwHMouEvvcbeuzWRkqsNZRXW89118375;     fNwHMouEvvcbeuzWRkqsNZRXW89118375 = fNwHMouEvvcbeuzWRkqsNZRXW7080202;     fNwHMouEvvcbeuzWRkqsNZRXW7080202 = fNwHMouEvvcbeuzWRkqsNZRXW6476422;     fNwHMouEvvcbeuzWRkqsNZRXW6476422 = fNwHMouEvvcbeuzWRkqsNZRXW46307402;     fNwHMouEvvcbeuzWRkqsNZRXW46307402 = fNwHMouEvvcbeuzWRkqsNZRXW15222698;     fNwHMouEvvcbeuzWRkqsNZRXW15222698 = fNwHMouEvvcbeuzWRkqsNZRXW51647201;     fNwHMouEvvcbeuzWRkqsNZRXW51647201 = fNwHMouEvvcbeuzWRkqsNZRXW4574048;     fNwHMouEvvcbeuzWRkqsNZRXW4574048 = fNwHMouEvvcbeuzWRkqsNZRXW87319789;     fNwHMouEvvcbeuzWRkqsNZRXW87319789 = fNwHMouEvvcbeuzWRkqsNZRXW76526615;     fNwHMouEvvcbeuzWRkqsNZRXW76526615 = fNwHMouEvvcbeuzWRkqsNZRXW69511089;     fNwHMouEvvcbeuzWRkqsNZRXW69511089 = fNwHMouEvvcbeuzWRkqsNZRXW41765730;     fNwHMouEvvcbeuzWRkqsNZRXW41765730 = fNwHMouEvvcbeuzWRkqsNZRXW42871642;     fNwHMouEvvcbeuzWRkqsNZRXW42871642 = fNwHMouEvvcbeuzWRkqsNZRXW76595507;     fNwHMouEvvcbeuzWRkqsNZRXW76595507 = fNwHMouEvvcbeuzWRkqsNZRXW46127136;     fNwHMouEvvcbeuzWRkqsNZRXW46127136 = fNwHMouEvvcbeuzWRkqsNZRXW41597590;     fNwHMouEvvcbeuzWRkqsNZRXW41597590 = fNwHMouEvvcbeuzWRkqsNZRXW58400868;     fNwHMouEvvcbeuzWRkqsNZRXW58400868 = fNwHMouEvvcbeuzWRkqsNZRXW6658663;     fNwHMouEvvcbeuzWRkqsNZRXW6658663 = fNwHMouEvvcbeuzWRkqsNZRXW57368281;     fNwHMouEvvcbeuzWRkqsNZRXW57368281 = fNwHMouEvvcbeuzWRkqsNZRXW48471224;     fNwHMouEvvcbeuzWRkqsNZRXW48471224 = fNwHMouEvvcbeuzWRkqsNZRXW88370805;     fNwHMouEvvcbeuzWRkqsNZRXW88370805 = fNwHMouEvvcbeuzWRkqsNZRXW6841043;     fNwHMouEvvcbeuzWRkqsNZRXW6841043 = fNwHMouEvvcbeuzWRkqsNZRXW43898511;     fNwHMouEvvcbeuzWRkqsNZRXW43898511 = fNwHMouEvvcbeuzWRkqsNZRXW5644664;     fNwHMouEvvcbeuzWRkqsNZRXW5644664 = fNwHMouEvvcbeuzWRkqsNZRXW5324823;     fNwHMouEvvcbeuzWRkqsNZRXW5324823 = fNwHMouEvvcbeuzWRkqsNZRXW10612852;     fNwHMouEvvcbeuzWRkqsNZRXW10612852 = fNwHMouEvvcbeuzWRkqsNZRXW1702575;     fNwHMouEvvcbeuzWRkqsNZRXW1702575 = fNwHMouEvvcbeuzWRkqsNZRXW40385184;     fNwHMouEvvcbeuzWRkqsNZRXW40385184 = fNwHMouEvvcbeuzWRkqsNZRXW74805686;     fNwHMouEvvcbeuzWRkqsNZRXW74805686 = fNwHMouEvvcbeuzWRkqsNZRXW97127634;     fNwHMouEvvcbeuzWRkqsNZRXW97127634 = fNwHMouEvvcbeuzWRkqsNZRXW72812470;     fNwHMouEvvcbeuzWRkqsNZRXW72812470 = fNwHMouEvvcbeuzWRkqsNZRXW95323966;     fNwHMouEvvcbeuzWRkqsNZRXW95323966 = fNwHMouEvvcbeuzWRkqsNZRXW39758319;     fNwHMouEvvcbeuzWRkqsNZRXW39758319 = fNwHMouEvvcbeuzWRkqsNZRXW31514570;     fNwHMouEvvcbeuzWRkqsNZRXW31514570 = fNwHMouEvvcbeuzWRkqsNZRXW74362027;     fNwHMouEvvcbeuzWRkqsNZRXW74362027 = fNwHMouEvvcbeuzWRkqsNZRXW23460419;     fNwHMouEvvcbeuzWRkqsNZRXW23460419 = fNwHMouEvvcbeuzWRkqsNZRXW80566896;     fNwHMouEvvcbeuzWRkqsNZRXW80566896 = fNwHMouEvvcbeuzWRkqsNZRXW38444915;     fNwHMouEvvcbeuzWRkqsNZRXW38444915 = fNwHMouEvvcbeuzWRkqsNZRXW37299812;     fNwHMouEvvcbeuzWRkqsNZRXW37299812 = fNwHMouEvvcbeuzWRkqsNZRXW911678;     fNwHMouEvvcbeuzWRkqsNZRXW911678 = fNwHMouEvvcbeuzWRkqsNZRXW4268967;     fNwHMouEvvcbeuzWRkqsNZRXW4268967 = fNwHMouEvvcbeuzWRkqsNZRXW82927980;     fNwHMouEvvcbeuzWRkqsNZRXW82927980 = fNwHMouEvvcbeuzWRkqsNZRXW40172584;     fNwHMouEvvcbeuzWRkqsNZRXW40172584 = fNwHMouEvvcbeuzWRkqsNZRXW45049170;     fNwHMouEvvcbeuzWRkqsNZRXW45049170 = fNwHMouEvvcbeuzWRkqsNZRXW74404086;     fNwHMouEvvcbeuzWRkqsNZRXW74404086 = fNwHMouEvvcbeuzWRkqsNZRXW9258783;     fNwHMouEvvcbeuzWRkqsNZRXW9258783 = fNwHMouEvvcbeuzWRkqsNZRXW70321178;     fNwHMouEvvcbeuzWRkqsNZRXW70321178 = fNwHMouEvvcbeuzWRkqsNZRXW56640040;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void KwPvSueebiUOYoGoJxBLaEsyEHJAlUQUjzRbtxKoMADOiqdqxHlIljaFD21884271() {     long QrKkdtGRAeZXfuLmNyZAdPOeT92099008 = -374371482;    long QrKkdtGRAeZXfuLmNyZAdPOeT76097835 = -943870220;    long QrKkdtGRAeZXfuLmNyZAdPOeT7499552 = -147026007;    long QrKkdtGRAeZXfuLmNyZAdPOeT65008263 = -870757486;    long QrKkdtGRAeZXfuLmNyZAdPOeT88688552 = -470262033;    long QrKkdtGRAeZXfuLmNyZAdPOeT4349384 = -56098669;    long QrKkdtGRAeZXfuLmNyZAdPOeT48996024 = -242892443;    long QrKkdtGRAeZXfuLmNyZAdPOeT75887201 = -723256307;    long QrKkdtGRAeZXfuLmNyZAdPOeT33379962 = -692227647;    long QrKkdtGRAeZXfuLmNyZAdPOeT99610101 = -167268485;    long QrKkdtGRAeZXfuLmNyZAdPOeT93754919 = -786216816;    long QrKkdtGRAeZXfuLmNyZAdPOeT30739794 = -851453185;    long QrKkdtGRAeZXfuLmNyZAdPOeT96940575 = -59372450;    long QrKkdtGRAeZXfuLmNyZAdPOeT82385551 = -827642056;    long QrKkdtGRAeZXfuLmNyZAdPOeT61516720 = -279542831;    long QrKkdtGRAeZXfuLmNyZAdPOeT73807177 = -308359635;    long QrKkdtGRAeZXfuLmNyZAdPOeT29338592 = -534860846;    long QrKkdtGRAeZXfuLmNyZAdPOeT4147583 = 67427525;    long QrKkdtGRAeZXfuLmNyZAdPOeT76423162 = -500505069;    long QrKkdtGRAeZXfuLmNyZAdPOeT28170635 = -304479544;    long QrKkdtGRAeZXfuLmNyZAdPOeT78561158 = -532346894;    long QrKkdtGRAeZXfuLmNyZAdPOeT52981364 = 37931981;    long QrKkdtGRAeZXfuLmNyZAdPOeT26874715 = -388298292;    long QrKkdtGRAeZXfuLmNyZAdPOeT17598618 = -839486977;    long QrKkdtGRAeZXfuLmNyZAdPOeT85580161 = -804469711;    long QrKkdtGRAeZXfuLmNyZAdPOeT91454254 = 74370543;    long QrKkdtGRAeZXfuLmNyZAdPOeT23973038 = -185261498;    long QrKkdtGRAeZXfuLmNyZAdPOeT91747253 = -683547346;    long QrKkdtGRAeZXfuLmNyZAdPOeT83897239 = -414223726;    long QrKkdtGRAeZXfuLmNyZAdPOeT67884678 = -301154133;    long QrKkdtGRAeZXfuLmNyZAdPOeT61524891 = -464637740;    long QrKkdtGRAeZXfuLmNyZAdPOeT50524560 = -429325063;    long QrKkdtGRAeZXfuLmNyZAdPOeT65794150 = -90869542;    long QrKkdtGRAeZXfuLmNyZAdPOeT42327221 = -621485410;    long QrKkdtGRAeZXfuLmNyZAdPOeT53455552 = -924277350;    long QrKkdtGRAeZXfuLmNyZAdPOeT96482179 = -707009668;    long QrKkdtGRAeZXfuLmNyZAdPOeT33019031 = -560474562;    long QrKkdtGRAeZXfuLmNyZAdPOeT67349778 = -964645186;    long QrKkdtGRAeZXfuLmNyZAdPOeT86306729 = -485275914;    long QrKkdtGRAeZXfuLmNyZAdPOeT51773560 = -622948146;    long QrKkdtGRAeZXfuLmNyZAdPOeT60943982 = -933690704;    long QrKkdtGRAeZXfuLmNyZAdPOeT10940912 = -168862856;    long QrKkdtGRAeZXfuLmNyZAdPOeT33298554 = -531302245;    long QrKkdtGRAeZXfuLmNyZAdPOeT91155850 = -743686320;    long QrKkdtGRAeZXfuLmNyZAdPOeT13209280 = 43933787;    long QrKkdtGRAeZXfuLmNyZAdPOeT21820965 = -628697161;    long QrKkdtGRAeZXfuLmNyZAdPOeT59716062 = -366328483;    long QrKkdtGRAeZXfuLmNyZAdPOeT6473090 = -205219500;    long QrKkdtGRAeZXfuLmNyZAdPOeT76783860 = -740660435;    long QrKkdtGRAeZXfuLmNyZAdPOeT88946143 = -906271007;    long QrKkdtGRAeZXfuLmNyZAdPOeT47798025 = -324491838;    long QrKkdtGRAeZXfuLmNyZAdPOeT86668813 = -758967074;    long QrKkdtGRAeZXfuLmNyZAdPOeT49808121 = -753658959;    long QrKkdtGRAeZXfuLmNyZAdPOeT95205958 = -11743410;    long QrKkdtGRAeZXfuLmNyZAdPOeT43323112 = -697884977;    long QrKkdtGRAeZXfuLmNyZAdPOeT39117645 = -312303463;    long QrKkdtGRAeZXfuLmNyZAdPOeT49223120 = -455571928;    long QrKkdtGRAeZXfuLmNyZAdPOeT89900933 = -307539031;    long QrKkdtGRAeZXfuLmNyZAdPOeT79428101 = 33712224;    long QrKkdtGRAeZXfuLmNyZAdPOeT97234298 = -444632577;    long QrKkdtGRAeZXfuLmNyZAdPOeT80376345 = -870837172;    long QrKkdtGRAeZXfuLmNyZAdPOeT57248771 = -559345098;    long QrKkdtGRAeZXfuLmNyZAdPOeT91989961 = -209032581;    long QrKkdtGRAeZXfuLmNyZAdPOeT65495283 = -291073514;    long QrKkdtGRAeZXfuLmNyZAdPOeT38085210 = -702630745;    long QrKkdtGRAeZXfuLmNyZAdPOeT43230359 = -256891753;    long QrKkdtGRAeZXfuLmNyZAdPOeT64945644 = -660583644;    long QrKkdtGRAeZXfuLmNyZAdPOeT54613355 = -437887040;    long QrKkdtGRAeZXfuLmNyZAdPOeT28930000 = -903364706;    long QrKkdtGRAeZXfuLmNyZAdPOeT65034540 = -572533163;    long QrKkdtGRAeZXfuLmNyZAdPOeT40788147 = -747885074;    long QrKkdtGRAeZXfuLmNyZAdPOeT61988813 = -570215661;    long QrKkdtGRAeZXfuLmNyZAdPOeT17840854 = -447296562;    long QrKkdtGRAeZXfuLmNyZAdPOeT24649603 = -877556924;    long QrKkdtGRAeZXfuLmNyZAdPOeT67226653 = -370788841;    long QrKkdtGRAeZXfuLmNyZAdPOeT67620246 = -263484038;    long QrKkdtGRAeZXfuLmNyZAdPOeT19682810 = -430765775;    long QrKkdtGRAeZXfuLmNyZAdPOeT35718864 = -644611973;    long QrKkdtGRAeZXfuLmNyZAdPOeT4389339 = -783420764;    long QrKkdtGRAeZXfuLmNyZAdPOeT63759197 = -75772551;    long QrKkdtGRAeZXfuLmNyZAdPOeT31738192 = -559300974;    long QrKkdtGRAeZXfuLmNyZAdPOeT17499949 = -980041998;    long QrKkdtGRAeZXfuLmNyZAdPOeT14963394 = -942886911;    long QrKkdtGRAeZXfuLmNyZAdPOeT94951095 = -507952720;    long QrKkdtGRAeZXfuLmNyZAdPOeT20086654 = -976662296;    long QrKkdtGRAeZXfuLmNyZAdPOeT74856077 = -705670666;    long QrKkdtGRAeZXfuLmNyZAdPOeT716440 = -675666105;    long QrKkdtGRAeZXfuLmNyZAdPOeT70588192 = 20873868;    long QrKkdtGRAeZXfuLmNyZAdPOeT99004108 = -923600434;    long QrKkdtGRAeZXfuLmNyZAdPOeT14337907 = -511973888;    long QrKkdtGRAeZXfuLmNyZAdPOeT47259060 = -151437741;    long QrKkdtGRAeZXfuLmNyZAdPOeT43118097 = -152935531;    long QrKkdtGRAeZXfuLmNyZAdPOeT87921676 = -898357411;    long QrKkdtGRAeZXfuLmNyZAdPOeT89072430 = 59356663;    long QrKkdtGRAeZXfuLmNyZAdPOeT71397214 = -752110974;    long QrKkdtGRAeZXfuLmNyZAdPOeT3695211 = -274345606;    long QrKkdtGRAeZXfuLmNyZAdPOeT18950951 = -959830275;    long QrKkdtGRAeZXfuLmNyZAdPOeT67803270 = -140228732;    long QrKkdtGRAeZXfuLmNyZAdPOeT53070641 = 58944425;    long QrKkdtGRAeZXfuLmNyZAdPOeT69978921 = -374371482;     QrKkdtGRAeZXfuLmNyZAdPOeT92099008 = QrKkdtGRAeZXfuLmNyZAdPOeT76097835;     QrKkdtGRAeZXfuLmNyZAdPOeT76097835 = QrKkdtGRAeZXfuLmNyZAdPOeT7499552;     QrKkdtGRAeZXfuLmNyZAdPOeT7499552 = QrKkdtGRAeZXfuLmNyZAdPOeT65008263;     QrKkdtGRAeZXfuLmNyZAdPOeT65008263 = QrKkdtGRAeZXfuLmNyZAdPOeT88688552;     QrKkdtGRAeZXfuLmNyZAdPOeT88688552 = QrKkdtGRAeZXfuLmNyZAdPOeT4349384;     QrKkdtGRAeZXfuLmNyZAdPOeT4349384 = QrKkdtGRAeZXfuLmNyZAdPOeT48996024;     QrKkdtGRAeZXfuLmNyZAdPOeT48996024 = QrKkdtGRAeZXfuLmNyZAdPOeT75887201;     QrKkdtGRAeZXfuLmNyZAdPOeT75887201 = QrKkdtGRAeZXfuLmNyZAdPOeT33379962;     QrKkdtGRAeZXfuLmNyZAdPOeT33379962 = QrKkdtGRAeZXfuLmNyZAdPOeT99610101;     QrKkdtGRAeZXfuLmNyZAdPOeT99610101 = QrKkdtGRAeZXfuLmNyZAdPOeT93754919;     QrKkdtGRAeZXfuLmNyZAdPOeT93754919 = QrKkdtGRAeZXfuLmNyZAdPOeT30739794;     QrKkdtGRAeZXfuLmNyZAdPOeT30739794 = QrKkdtGRAeZXfuLmNyZAdPOeT96940575;     QrKkdtGRAeZXfuLmNyZAdPOeT96940575 = QrKkdtGRAeZXfuLmNyZAdPOeT82385551;     QrKkdtGRAeZXfuLmNyZAdPOeT82385551 = QrKkdtGRAeZXfuLmNyZAdPOeT61516720;     QrKkdtGRAeZXfuLmNyZAdPOeT61516720 = QrKkdtGRAeZXfuLmNyZAdPOeT73807177;     QrKkdtGRAeZXfuLmNyZAdPOeT73807177 = QrKkdtGRAeZXfuLmNyZAdPOeT29338592;     QrKkdtGRAeZXfuLmNyZAdPOeT29338592 = QrKkdtGRAeZXfuLmNyZAdPOeT4147583;     QrKkdtGRAeZXfuLmNyZAdPOeT4147583 = QrKkdtGRAeZXfuLmNyZAdPOeT76423162;     QrKkdtGRAeZXfuLmNyZAdPOeT76423162 = QrKkdtGRAeZXfuLmNyZAdPOeT28170635;     QrKkdtGRAeZXfuLmNyZAdPOeT28170635 = QrKkdtGRAeZXfuLmNyZAdPOeT78561158;     QrKkdtGRAeZXfuLmNyZAdPOeT78561158 = QrKkdtGRAeZXfuLmNyZAdPOeT52981364;     QrKkdtGRAeZXfuLmNyZAdPOeT52981364 = QrKkdtGRAeZXfuLmNyZAdPOeT26874715;     QrKkdtGRAeZXfuLmNyZAdPOeT26874715 = QrKkdtGRAeZXfuLmNyZAdPOeT17598618;     QrKkdtGRAeZXfuLmNyZAdPOeT17598618 = QrKkdtGRAeZXfuLmNyZAdPOeT85580161;     QrKkdtGRAeZXfuLmNyZAdPOeT85580161 = QrKkdtGRAeZXfuLmNyZAdPOeT91454254;     QrKkdtGRAeZXfuLmNyZAdPOeT91454254 = QrKkdtGRAeZXfuLmNyZAdPOeT23973038;     QrKkdtGRAeZXfuLmNyZAdPOeT23973038 = QrKkdtGRAeZXfuLmNyZAdPOeT91747253;     QrKkdtGRAeZXfuLmNyZAdPOeT91747253 = QrKkdtGRAeZXfuLmNyZAdPOeT83897239;     QrKkdtGRAeZXfuLmNyZAdPOeT83897239 = QrKkdtGRAeZXfuLmNyZAdPOeT67884678;     QrKkdtGRAeZXfuLmNyZAdPOeT67884678 = QrKkdtGRAeZXfuLmNyZAdPOeT61524891;     QrKkdtGRAeZXfuLmNyZAdPOeT61524891 = QrKkdtGRAeZXfuLmNyZAdPOeT50524560;     QrKkdtGRAeZXfuLmNyZAdPOeT50524560 = QrKkdtGRAeZXfuLmNyZAdPOeT65794150;     QrKkdtGRAeZXfuLmNyZAdPOeT65794150 = QrKkdtGRAeZXfuLmNyZAdPOeT42327221;     QrKkdtGRAeZXfuLmNyZAdPOeT42327221 = QrKkdtGRAeZXfuLmNyZAdPOeT53455552;     QrKkdtGRAeZXfuLmNyZAdPOeT53455552 = QrKkdtGRAeZXfuLmNyZAdPOeT96482179;     QrKkdtGRAeZXfuLmNyZAdPOeT96482179 = QrKkdtGRAeZXfuLmNyZAdPOeT33019031;     QrKkdtGRAeZXfuLmNyZAdPOeT33019031 = QrKkdtGRAeZXfuLmNyZAdPOeT67349778;     QrKkdtGRAeZXfuLmNyZAdPOeT67349778 = QrKkdtGRAeZXfuLmNyZAdPOeT86306729;     QrKkdtGRAeZXfuLmNyZAdPOeT86306729 = QrKkdtGRAeZXfuLmNyZAdPOeT51773560;     QrKkdtGRAeZXfuLmNyZAdPOeT51773560 = QrKkdtGRAeZXfuLmNyZAdPOeT60943982;     QrKkdtGRAeZXfuLmNyZAdPOeT60943982 = QrKkdtGRAeZXfuLmNyZAdPOeT10940912;     QrKkdtGRAeZXfuLmNyZAdPOeT10940912 = QrKkdtGRAeZXfuLmNyZAdPOeT33298554;     QrKkdtGRAeZXfuLmNyZAdPOeT33298554 = QrKkdtGRAeZXfuLmNyZAdPOeT91155850;     QrKkdtGRAeZXfuLmNyZAdPOeT91155850 = QrKkdtGRAeZXfuLmNyZAdPOeT13209280;     QrKkdtGRAeZXfuLmNyZAdPOeT13209280 = QrKkdtGRAeZXfuLmNyZAdPOeT21820965;     QrKkdtGRAeZXfuLmNyZAdPOeT21820965 = QrKkdtGRAeZXfuLmNyZAdPOeT59716062;     QrKkdtGRAeZXfuLmNyZAdPOeT59716062 = QrKkdtGRAeZXfuLmNyZAdPOeT6473090;     QrKkdtGRAeZXfuLmNyZAdPOeT6473090 = QrKkdtGRAeZXfuLmNyZAdPOeT76783860;     QrKkdtGRAeZXfuLmNyZAdPOeT76783860 = QrKkdtGRAeZXfuLmNyZAdPOeT88946143;     QrKkdtGRAeZXfuLmNyZAdPOeT88946143 = QrKkdtGRAeZXfuLmNyZAdPOeT47798025;     QrKkdtGRAeZXfuLmNyZAdPOeT47798025 = QrKkdtGRAeZXfuLmNyZAdPOeT86668813;     QrKkdtGRAeZXfuLmNyZAdPOeT86668813 = QrKkdtGRAeZXfuLmNyZAdPOeT49808121;     QrKkdtGRAeZXfuLmNyZAdPOeT49808121 = QrKkdtGRAeZXfuLmNyZAdPOeT95205958;     QrKkdtGRAeZXfuLmNyZAdPOeT95205958 = QrKkdtGRAeZXfuLmNyZAdPOeT43323112;     QrKkdtGRAeZXfuLmNyZAdPOeT43323112 = QrKkdtGRAeZXfuLmNyZAdPOeT39117645;     QrKkdtGRAeZXfuLmNyZAdPOeT39117645 = QrKkdtGRAeZXfuLmNyZAdPOeT49223120;     QrKkdtGRAeZXfuLmNyZAdPOeT49223120 = QrKkdtGRAeZXfuLmNyZAdPOeT89900933;     QrKkdtGRAeZXfuLmNyZAdPOeT89900933 = QrKkdtGRAeZXfuLmNyZAdPOeT79428101;     QrKkdtGRAeZXfuLmNyZAdPOeT79428101 = QrKkdtGRAeZXfuLmNyZAdPOeT97234298;     QrKkdtGRAeZXfuLmNyZAdPOeT97234298 = QrKkdtGRAeZXfuLmNyZAdPOeT80376345;     QrKkdtGRAeZXfuLmNyZAdPOeT80376345 = QrKkdtGRAeZXfuLmNyZAdPOeT57248771;     QrKkdtGRAeZXfuLmNyZAdPOeT57248771 = QrKkdtGRAeZXfuLmNyZAdPOeT91989961;     QrKkdtGRAeZXfuLmNyZAdPOeT91989961 = QrKkdtGRAeZXfuLmNyZAdPOeT65495283;     QrKkdtGRAeZXfuLmNyZAdPOeT65495283 = QrKkdtGRAeZXfuLmNyZAdPOeT38085210;     QrKkdtGRAeZXfuLmNyZAdPOeT38085210 = QrKkdtGRAeZXfuLmNyZAdPOeT43230359;     QrKkdtGRAeZXfuLmNyZAdPOeT43230359 = QrKkdtGRAeZXfuLmNyZAdPOeT64945644;     QrKkdtGRAeZXfuLmNyZAdPOeT64945644 = QrKkdtGRAeZXfuLmNyZAdPOeT54613355;     QrKkdtGRAeZXfuLmNyZAdPOeT54613355 = QrKkdtGRAeZXfuLmNyZAdPOeT28930000;     QrKkdtGRAeZXfuLmNyZAdPOeT28930000 = QrKkdtGRAeZXfuLmNyZAdPOeT65034540;     QrKkdtGRAeZXfuLmNyZAdPOeT65034540 = QrKkdtGRAeZXfuLmNyZAdPOeT40788147;     QrKkdtGRAeZXfuLmNyZAdPOeT40788147 = QrKkdtGRAeZXfuLmNyZAdPOeT61988813;     QrKkdtGRAeZXfuLmNyZAdPOeT61988813 = QrKkdtGRAeZXfuLmNyZAdPOeT17840854;     QrKkdtGRAeZXfuLmNyZAdPOeT17840854 = QrKkdtGRAeZXfuLmNyZAdPOeT24649603;     QrKkdtGRAeZXfuLmNyZAdPOeT24649603 = QrKkdtGRAeZXfuLmNyZAdPOeT67226653;     QrKkdtGRAeZXfuLmNyZAdPOeT67226653 = QrKkdtGRAeZXfuLmNyZAdPOeT67620246;     QrKkdtGRAeZXfuLmNyZAdPOeT67620246 = QrKkdtGRAeZXfuLmNyZAdPOeT19682810;     QrKkdtGRAeZXfuLmNyZAdPOeT19682810 = QrKkdtGRAeZXfuLmNyZAdPOeT35718864;     QrKkdtGRAeZXfuLmNyZAdPOeT35718864 = QrKkdtGRAeZXfuLmNyZAdPOeT4389339;     QrKkdtGRAeZXfuLmNyZAdPOeT4389339 = QrKkdtGRAeZXfuLmNyZAdPOeT63759197;     QrKkdtGRAeZXfuLmNyZAdPOeT63759197 = QrKkdtGRAeZXfuLmNyZAdPOeT31738192;     QrKkdtGRAeZXfuLmNyZAdPOeT31738192 = QrKkdtGRAeZXfuLmNyZAdPOeT17499949;     QrKkdtGRAeZXfuLmNyZAdPOeT17499949 = QrKkdtGRAeZXfuLmNyZAdPOeT14963394;     QrKkdtGRAeZXfuLmNyZAdPOeT14963394 = QrKkdtGRAeZXfuLmNyZAdPOeT94951095;     QrKkdtGRAeZXfuLmNyZAdPOeT94951095 = QrKkdtGRAeZXfuLmNyZAdPOeT20086654;     QrKkdtGRAeZXfuLmNyZAdPOeT20086654 = QrKkdtGRAeZXfuLmNyZAdPOeT74856077;     QrKkdtGRAeZXfuLmNyZAdPOeT74856077 = QrKkdtGRAeZXfuLmNyZAdPOeT716440;     QrKkdtGRAeZXfuLmNyZAdPOeT716440 = QrKkdtGRAeZXfuLmNyZAdPOeT70588192;     QrKkdtGRAeZXfuLmNyZAdPOeT70588192 = QrKkdtGRAeZXfuLmNyZAdPOeT99004108;     QrKkdtGRAeZXfuLmNyZAdPOeT99004108 = QrKkdtGRAeZXfuLmNyZAdPOeT14337907;     QrKkdtGRAeZXfuLmNyZAdPOeT14337907 = QrKkdtGRAeZXfuLmNyZAdPOeT47259060;     QrKkdtGRAeZXfuLmNyZAdPOeT47259060 = QrKkdtGRAeZXfuLmNyZAdPOeT43118097;     QrKkdtGRAeZXfuLmNyZAdPOeT43118097 = QrKkdtGRAeZXfuLmNyZAdPOeT87921676;     QrKkdtGRAeZXfuLmNyZAdPOeT87921676 = QrKkdtGRAeZXfuLmNyZAdPOeT89072430;     QrKkdtGRAeZXfuLmNyZAdPOeT89072430 = QrKkdtGRAeZXfuLmNyZAdPOeT71397214;     QrKkdtGRAeZXfuLmNyZAdPOeT71397214 = QrKkdtGRAeZXfuLmNyZAdPOeT3695211;     QrKkdtGRAeZXfuLmNyZAdPOeT3695211 = QrKkdtGRAeZXfuLmNyZAdPOeT18950951;     QrKkdtGRAeZXfuLmNyZAdPOeT18950951 = QrKkdtGRAeZXfuLmNyZAdPOeT67803270;     QrKkdtGRAeZXfuLmNyZAdPOeT67803270 = QrKkdtGRAeZXfuLmNyZAdPOeT53070641;     QrKkdtGRAeZXfuLmNyZAdPOeT53070641 = QrKkdtGRAeZXfuLmNyZAdPOeT69978921;     QrKkdtGRAeZXfuLmNyZAdPOeT69978921 = QrKkdtGRAeZXfuLmNyZAdPOeT92099008;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void olCSZpiXWdEMEAdIelrCKbPqGmxreKnXQsGMjVIWcetjxKrjhPXVhGDMV36933339() {     long MMmsqtMqhwLtRYIcUagiftvvO98216115 = -486273370;    long MMmsqtMqhwLtRYIcUagiftvvO19471115 = -653470001;    long MMmsqtMqhwLtRYIcUagiftvvO23541735 = -297858929;    long MMmsqtMqhwLtRYIcUagiftvvO92083043 = 38493883;    long MMmsqtMqhwLtRYIcUagiftvvO57584041 = -990911904;    long MMmsqtMqhwLtRYIcUagiftvvO95766585 = -320594904;    long MMmsqtMqhwLtRYIcUagiftvvO9484991 = -381857420;    long MMmsqtMqhwLtRYIcUagiftvvO25647092 = 89869780;    long MMmsqtMqhwLtRYIcUagiftvvO98022457 = -460260312;    long MMmsqtMqhwLtRYIcUagiftvvO40839760 = -496243962;    long MMmsqtMqhwLtRYIcUagiftvvO53865209 = -663654402;    long MMmsqtMqhwLtRYIcUagiftvvO62562837 = -195859387;    long MMmsqtMqhwLtRYIcUagiftvvO83149694 = -499263539;    long MMmsqtMqhwLtRYIcUagiftvvO65529228 = -259880623;    long MMmsqtMqhwLtRYIcUagiftvvO57259147 = -970004997;    long MMmsqtMqhwLtRYIcUagiftvvO15312571 = -281359178;    long MMmsqtMqhwLtRYIcUagiftvvO23174595 = -51405959;    long MMmsqtMqhwLtRYIcUagiftvvO1200736 = -698095118;    long MMmsqtMqhwLtRYIcUagiftvvO38253005 = -906274166;    long MMmsqtMqhwLtRYIcUagiftvvO8720800 = -661382464;    long MMmsqtMqhwLtRYIcUagiftvvO67114352 = -387834349;    long MMmsqtMqhwLtRYIcUagiftvvO39502387 = -969997736;    long MMmsqtMqhwLtRYIcUagiftvvO62465507 = -134815779;    long MMmsqtMqhwLtRYIcUagiftvvO1590992 = 38208035;    long MMmsqtMqhwLtRYIcUagiftvvO29279812 = -77665744;    long MMmsqtMqhwLtRYIcUagiftvvO16175930 = -904284780;    long MMmsqtMqhwLtRYIcUagiftvvO22432817 = -85923701;    long MMmsqtMqhwLtRYIcUagiftvvO4854379 = -749476299;    long MMmsqtMqhwLtRYIcUagiftvvO50029495 = -636606431;    long MMmsqtMqhwLtRYIcUagiftvvO36500316 = -118625001;    long MMmsqtMqhwLtRYIcUagiftvvO53767440 = -377958678;    long MMmsqtMqhwLtRYIcUagiftvvO48135182 = -138771879;    long MMmsqtMqhwLtRYIcUagiftvvO75505098 = 16517088;    long MMmsqtMqhwLtRYIcUagiftvvO37157785 = -373027176;    long MMmsqtMqhwLtRYIcUagiftvvO14930204 = -463010456;    long MMmsqtMqhwLtRYIcUagiftvvO65208093 = -921035776;    long MMmsqtMqhwLtRYIcUagiftvvO14280966 = -514110431;    long MMmsqtMqhwLtRYIcUagiftvvO1439991 = -736151196;    long MMmsqtMqhwLtRYIcUagiftvvO59916982 = -479199410;    long MMmsqtMqhwLtRYIcUagiftvvO39275497 = 3612631;    long MMmsqtMqhwLtRYIcUagiftvvO66613206 = -998964598;    long MMmsqtMqhwLtRYIcUagiftvvO43091369 = -439005134;    long MMmsqtMqhwLtRYIcUagiftvvO11365532 = -612106829;    long MMmsqtMqhwLtRYIcUagiftvvO78563591 = -763029258;    long MMmsqtMqhwLtRYIcUagiftvvO25161745 = -717964368;    long MMmsqtMqhwLtRYIcUagiftvvO33760160 = -613913277;    long MMmsqtMqhwLtRYIcUagiftvvO77494636 = -485104021;    long MMmsqtMqhwLtRYIcUagiftvvO14430031 = -215115033;    long MMmsqtMqhwLtRYIcUagiftvvO86459588 = -826397423;    long MMmsqtMqhwLtRYIcUagiftvvO1857797 = -993281815;    long MMmsqtMqhwLtRYIcUagiftvvO83498703 = -166785509;    long MMmsqtMqhwLtRYIcUagiftvvO97478532 = -559693394;    long MMmsqtMqhwLtRYIcUagiftvvO98056578 = -545448547;    long MMmsqtMqhwLtRYIcUagiftvvO91174838 = -332213555;    long MMmsqtMqhwLtRYIcUagiftvvO69818986 = -298416760;    long MMmsqtMqhwLtRYIcUagiftvvO58713728 = -516275635;    long MMmsqtMqhwLtRYIcUagiftvvO57005608 = -418654222;    long MMmsqtMqhwLtRYIcUagiftvvO21950744 = -236066964;    long MMmsqtMqhwLtRYIcUagiftvvO62803232 = -883840373;    long MMmsqtMqhwLtRYIcUagiftvvO41408112 = 13372875;    long MMmsqtMqhwLtRYIcUagiftvvO73333769 = -134671204;    long MMmsqtMqhwLtRYIcUagiftvvO4630612 = -632381122;    long MMmsqtMqhwLtRYIcUagiftvvO75617597 = -273523790;    long MMmsqtMqhwLtRYIcUagiftvvO61522142 = -241635312;    long MMmsqtMqhwLtRYIcUagiftvvO87072320 = -18285285;    long MMmsqtMqhwLtRYIcUagiftvvO5730028 = -424882524;    long MMmsqtMqhwLtRYIcUagiftvvO87057738 = -112376476;    long MMmsqtMqhwLtRYIcUagiftvvO45991909 = -26236364;    long MMmsqtMqhwLtRYIcUagiftvvO50599024 = -796870168;    long MMmsqtMqhwLtRYIcUagiftvvO92051054 = 51030778;    long MMmsqtMqhwLtRYIcUagiftvvO1031606 = -767248748;    long MMmsqtMqhwLtRYIcUagiftvvO21734604 = -315254764;    long MMmsqtMqhwLtRYIcUagiftvvO41283753 = -118895708;    long MMmsqtMqhwLtRYIcUagiftvvO98977507 = -809886798;    long MMmsqtMqhwLtRYIcUagiftvvO42107594 = -662417866;    long MMmsqtMqhwLtRYIcUagiftvvO24022983 = -948829216;    long MMmsqtMqhwLtRYIcUagiftvvO28136856 = -257890907;    long MMmsqtMqhwLtRYIcUagiftvvO83901915 = -371786521;    long MMmsqtMqhwLtRYIcUagiftvvO76429247 = -243827597;    long MMmsqtMqhwLtRYIcUagiftvvO95519652 = -463752468;    long MMmsqtMqhwLtRYIcUagiftvvO38681293 = -319180760;    long MMmsqtMqhwLtRYIcUagiftvvO8002786 = -870808668;    long MMmsqtMqhwLtRYIcUagiftvvO18394790 = -923078877;    long MMmsqtMqhwLtRYIcUagiftvvO48171699 = -643324617;    long MMmsqtMqhwLtRYIcUagiftvvO53001612 = -951839492;    long MMmsqtMqhwLtRYIcUagiftvvO56288907 = -818265284;    long MMmsqtMqhwLtRYIcUagiftvvO50078604 = -593323332;    long MMmsqtMqhwLtRYIcUagiftvvO84330260 = -651269358;    long MMmsqtMqhwLtRYIcUagiftvvO67338798 = 25389584;    long MMmsqtMqhwLtRYIcUagiftvvO56216475 = -946734821;    long MMmsqtMqhwLtRYIcUagiftvvO8202486 = -402381555;    long MMmsqtMqhwLtRYIcUagiftvvO92330221 = -178043467;    long MMmsqtMqhwLtRYIcUagiftvvO38636759 = -852310823;    long MMmsqtMqhwLtRYIcUagiftvvO18508871 = -392572286;    long MMmsqtMqhwLtRYIcUagiftvvO65941728 = -861716165;    long MMmsqtMqhwLtRYIcUagiftvvO61982594 = -266583477;    long MMmsqtMqhwLtRYIcUagiftvvO67473772 = -65481345;    long MMmsqtMqhwLtRYIcUagiftvvO49843390 = -270471517;    long MMmsqtMqhwLtRYIcUagiftvvO91491271 = -644743974;    long MMmsqtMqhwLtRYIcUagiftvvO19431718 = -486273370;     MMmsqtMqhwLtRYIcUagiftvvO98216115 = MMmsqtMqhwLtRYIcUagiftvvO19471115;     MMmsqtMqhwLtRYIcUagiftvvO19471115 = MMmsqtMqhwLtRYIcUagiftvvO23541735;     MMmsqtMqhwLtRYIcUagiftvvO23541735 = MMmsqtMqhwLtRYIcUagiftvvO92083043;     MMmsqtMqhwLtRYIcUagiftvvO92083043 = MMmsqtMqhwLtRYIcUagiftvvO57584041;     MMmsqtMqhwLtRYIcUagiftvvO57584041 = MMmsqtMqhwLtRYIcUagiftvvO95766585;     MMmsqtMqhwLtRYIcUagiftvvO95766585 = MMmsqtMqhwLtRYIcUagiftvvO9484991;     MMmsqtMqhwLtRYIcUagiftvvO9484991 = MMmsqtMqhwLtRYIcUagiftvvO25647092;     MMmsqtMqhwLtRYIcUagiftvvO25647092 = MMmsqtMqhwLtRYIcUagiftvvO98022457;     MMmsqtMqhwLtRYIcUagiftvvO98022457 = MMmsqtMqhwLtRYIcUagiftvvO40839760;     MMmsqtMqhwLtRYIcUagiftvvO40839760 = MMmsqtMqhwLtRYIcUagiftvvO53865209;     MMmsqtMqhwLtRYIcUagiftvvO53865209 = MMmsqtMqhwLtRYIcUagiftvvO62562837;     MMmsqtMqhwLtRYIcUagiftvvO62562837 = MMmsqtMqhwLtRYIcUagiftvvO83149694;     MMmsqtMqhwLtRYIcUagiftvvO83149694 = MMmsqtMqhwLtRYIcUagiftvvO65529228;     MMmsqtMqhwLtRYIcUagiftvvO65529228 = MMmsqtMqhwLtRYIcUagiftvvO57259147;     MMmsqtMqhwLtRYIcUagiftvvO57259147 = MMmsqtMqhwLtRYIcUagiftvvO15312571;     MMmsqtMqhwLtRYIcUagiftvvO15312571 = MMmsqtMqhwLtRYIcUagiftvvO23174595;     MMmsqtMqhwLtRYIcUagiftvvO23174595 = MMmsqtMqhwLtRYIcUagiftvvO1200736;     MMmsqtMqhwLtRYIcUagiftvvO1200736 = MMmsqtMqhwLtRYIcUagiftvvO38253005;     MMmsqtMqhwLtRYIcUagiftvvO38253005 = MMmsqtMqhwLtRYIcUagiftvvO8720800;     MMmsqtMqhwLtRYIcUagiftvvO8720800 = MMmsqtMqhwLtRYIcUagiftvvO67114352;     MMmsqtMqhwLtRYIcUagiftvvO67114352 = MMmsqtMqhwLtRYIcUagiftvvO39502387;     MMmsqtMqhwLtRYIcUagiftvvO39502387 = MMmsqtMqhwLtRYIcUagiftvvO62465507;     MMmsqtMqhwLtRYIcUagiftvvO62465507 = MMmsqtMqhwLtRYIcUagiftvvO1590992;     MMmsqtMqhwLtRYIcUagiftvvO1590992 = MMmsqtMqhwLtRYIcUagiftvvO29279812;     MMmsqtMqhwLtRYIcUagiftvvO29279812 = MMmsqtMqhwLtRYIcUagiftvvO16175930;     MMmsqtMqhwLtRYIcUagiftvvO16175930 = MMmsqtMqhwLtRYIcUagiftvvO22432817;     MMmsqtMqhwLtRYIcUagiftvvO22432817 = MMmsqtMqhwLtRYIcUagiftvvO4854379;     MMmsqtMqhwLtRYIcUagiftvvO4854379 = MMmsqtMqhwLtRYIcUagiftvvO50029495;     MMmsqtMqhwLtRYIcUagiftvvO50029495 = MMmsqtMqhwLtRYIcUagiftvvO36500316;     MMmsqtMqhwLtRYIcUagiftvvO36500316 = MMmsqtMqhwLtRYIcUagiftvvO53767440;     MMmsqtMqhwLtRYIcUagiftvvO53767440 = MMmsqtMqhwLtRYIcUagiftvvO48135182;     MMmsqtMqhwLtRYIcUagiftvvO48135182 = MMmsqtMqhwLtRYIcUagiftvvO75505098;     MMmsqtMqhwLtRYIcUagiftvvO75505098 = MMmsqtMqhwLtRYIcUagiftvvO37157785;     MMmsqtMqhwLtRYIcUagiftvvO37157785 = MMmsqtMqhwLtRYIcUagiftvvO14930204;     MMmsqtMqhwLtRYIcUagiftvvO14930204 = MMmsqtMqhwLtRYIcUagiftvvO65208093;     MMmsqtMqhwLtRYIcUagiftvvO65208093 = MMmsqtMqhwLtRYIcUagiftvvO14280966;     MMmsqtMqhwLtRYIcUagiftvvO14280966 = MMmsqtMqhwLtRYIcUagiftvvO1439991;     MMmsqtMqhwLtRYIcUagiftvvO1439991 = MMmsqtMqhwLtRYIcUagiftvvO59916982;     MMmsqtMqhwLtRYIcUagiftvvO59916982 = MMmsqtMqhwLtRYIcUagiftvvO39275497;     MMmsqtMqhwLtRYIcUagiftvvO39275497 = MMmsqtMqhwLtRYIcUagiftvvO66613206;     MMmsqtMqhwLtRYIcUagiftvvO66613206 = MMmsqtMqhwLtRYIcUagiftvvO43091369;     MMmsqtMqhwLtRYIcUagiftvvO43091369 = MMmsqtMqhwLtRYIcUagiftvvO11365532;     MMmsqtMqhwLtRYIcUagiftvvO11365532 = MMmsqtMqhwLtRYIcUagiftvvO78563591;     MMmsqtMqhwLtRYIcUagiftvvO78563591 = MMmsqtMqhwLtRYIcUagiftvvO25161745;     MMmsqtMqhwLtRYIcUagiftvvO25161745 = MMmsqtMqhwLtRYIcUagiftvvO33760160;     MMmsqtMqhwLtRYIcUagiftvvO33760160 = MMmsqtMqhwLtRYIcUagiftvvO77494636;     MMmsqtMqhwLtRYIcUagiftvvO77494636 = MMmsqtMqhwLtRYIcUagiftvvO14430031;     MMmsqtMqhwLtRYIcUagiftvvO14430031 = MMmsqtMqhwLtRYIcUagiftvvO86459588;     MMmsqtMqhwLtRYIcUagiftvvO86459588 = MMmsqtMqhwLtRYIcUagiftvvO1857797;     MMmsqtMqhwLtRYIcUagiftvvO1857797 = MMmsqtMqhwLtRYIcUagiftvvO83498703;     MMmsqtMqhwLtRYIcUagiftvvO83498703 = MMmsqtMqhwLtRYIcUagiftvvO97478532;     MMmsqtMqhwLtRYIcUagiftvvO97478532 = MMmsqtMqhwLtRYIcUagiftvvO98056578;     MMmsqtMqhwLtRYIcUagiftvvO98056578 = MMmsqtMqhwLtRYIcUagiftvvO91174838;     MMmsqtMqhwLtRYIcUagiftvvO91174838 = MMmsqtMqhwLtRYIcUagiftvvO69818986;     MMmsqtMqhwLtRYIcUagiftvvO69818986 = MMmsqtMqhwLtRYIcUagiftvvO58713728;     MMmsqtMqhwLtRYIcUagiftvvO58713728 = MMmsqtMqhwLtRYIcUagiftvvO57005608;     MMmsqtMqhwLtRYIcUagiftvvO57005608 = MMmsqtMqhwLtRYIcUagiftvvO21950744;     MMmsqtMqhwLtRYIcUagiftvvO21950744 = MMmsqtMqhwLtRYIcUagiftvvO62803232;     MMmsqtMqhwLtRYIcUagiftvvO62803232 = MMmsqtMqhwLtRYIcUagiftvvO41408112;     MMmsqtMqhwLtRYIcUagiftvvO41408112 = MMmsqtMqhwLtRYIcUagiftvvO73333769;     MMmsqtMqhwLtRYIcUagiftvvO73333769 = MMmsqtMqhwLtRYIcUagiftvvO4630612;     MMmsqtMqhwLtRYIcUagiftvvO4630612 = MMmsqtMqhwLtRYIcUagiftvvO75617597;     MMmsqtMqhwLtRYIcUagiftvvO75617597 = MMmsqtMqhwLtRYIcUagiftvvO61522142;     MMmsqtMqhwLtRYIcUagiftvvO61522142 = MMmsqtMqhwLtRYIcUagiftvvO87072320;     MMmsqtMqhwLtRYIcUagiftvvO87072320 = MMmsqtMqhwLtRYIcUagiftvvO5730028;     MMmsqtMqhwLtRYIcUagiftvvO5730028 = MMmsqtMqhwLtRYIcUagiftvvO87057738;     MMmsqtMqhwLtRYIcUagiftvvO87057738 = MMmsqtMqhwLtRYIcUagiftvvO45991909;     MMmsqtMqhwLtRYIcUagiftvvO45991909 = MMmsqtMqhwLtRYIcUagiftvvO50599024;     MMmsqtMqhwLtRYIcUagiftvvO50599024 = MMmsqtMqhwLtRYIcUagiftvvO92051054;     MMmsqtMqhwLtRYIcUagiftvvO92051054 = MMmsqtMqhwLtRYIcUagiftvvO1031606;     MMmsqtMqhwLtRYIcUagiftvvO1031606 = MMmsqtMqhwLtRYIcUagiftvvO21734604;     MMmsqtMqhwLtRYIcUagiftvvO21734604 = MMmsqtMqhwLtRYIcUagiftvvO41283753;     MMmsqtMqhwLtRYIcUagiftvvO41283753 = MMmsqtMqhwLtRYIcUagiftvvO98977507;     MMmsqtMqhwLtRYIcUagiftvvO98977507 = MMmsqtMqhwLtRYIcUagiftvvO42107594;     MMmsqtMqhwLtRYIcUagiftvvO42107594 = MMmsqtMqhwLtRYIcUagiftvvO24022983;     MMmsqtMqhwLtRYIcUagiftvvO24022983 = MMmsqtMqhwLtRYIcUagiftvvO28136856;     MMmsqtMqhwLtRYIcUagiftvvO28136856 = MMmsqtMqhwLtRYIcUagiftvvO83901915;     MMmsqtMqhwLtRYIcUagiftvvO83901915 = MMmsqtMqhwLtRYIcUagiftvvO76429247;     MMmsqtMqhwLtRYIcUagiftvvO76429247 = MMmsqtMqhwLtRYIcUagiftvvO95519652;     MMmsqtMqhwLtRYIcUagiftvvO95519652 = MMmsqtMqhwLtRYIcUagiftvvO38681293;     MMmsqtMqhwLtRYIcUagiftvvO38681293 = MMmsqtMqhwLtRYIcUagiftvvO8002786;     MMmsqtMqhwLtRYIcUagiftvvO8002786 = MMmsqtMqhwLtRYIcUagiftvvO18394790;     MMmsqtMqhwLtRYIcUagiftvvO18394790 = MMmsqtMqhwLtRYIcUagiftvvO48171699;     MMmsqtMqhwLtRYIcUagiftvvO48171699 = MMmsqtMqhwLtRYIcUagiftvvO53001612;     MMmsqtMqhwLtRYIcUagiftvvO53001612 = MMmsqtMqhwLtRYIcUagiftvvO56288907;     MMmsqtMqhwLtRYIcUagiftvvO56288907 = MMmsqtMqhwLtRYIcUagiftvvO50078604;     MMmsqtMqhwLtRYIcUagiftvvO50078604 = MMmsqtMqhwLtRYIcUagiftvvO84330260;     MMmsqtMqhwLtRYIcUagiftvvO84330260 = MMmsqtMqhwLtRYIcUagiftvvO67338798;     MMmsqtMqhwLtRYIcUagiftvvO67338798 = MMmsqtMqhwLtRYIcUagiftvvO56216475;     MMmsqtMqhwLtRYIcUagiftvvO56216475 = MMmsqtMqhwLtRYIcUagiftvvO8202486;     MMmsqtMqhwLtRYIcUagiftvvO8202486 = MMmsqtMqhwLtRYIcUagiftvvO92330221;     MMmsqtMqhwLtRYIcUagiftvvO92330221 = MMmsqtMqhwLtRYIcUagiftvvO38636759;     MMmsqtMqhwLtRYIcUagiftvvO38636759 = MMmsqtMqhwLtRYIcUagiftvvO18508871;     MMmsqtMqhwLtRYIcUagiftvvO18508871 = MMmsqtMqhwLtRYIcUagiftvvO65941728;     MMmsqtMqhwLtRYIcUagiftvvO65941728 = MMmsqtMqhwLtRYIcUagiftvvO61982594;     MMmsqtMqhwLtRYIcUagiftvvO61982594 = MMmsqtMqhwLtRYIcUagiftvvO67473772;     MMmsqtMqhwLtRYIcUagiftvvO67473772 = MMmsqtMqhwLtRYIcUagiftvvO49843390;     MMmsqtMqhwLtRYIcUagiftvvO49843390 = MMmsqtMqhwLtRYIcUagiftvvO91491271;     MMmsqtMqhwLtRYIcUagiftvvO91491271 = MMmsqtMqhwLtRYIcUagiftvvO19431718;     MMmsqtMqhwLtRYIcUagiftvvO19431718 = MMmsqtMqhwLtRYIcUagiftvvO98216115;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void bavtdyDpwXoRmOvwiTLeTdFEpaljikWTKpqVuQwbapYdbwTZxWHTVRKyV4224938() {     long qDDMUHMBVGxYZCRWkEdEbctGL33675084 = -952550270;    long qDDMUHMBVGxYZCRWkEdEbctGL32743193 = -534021607;    long qDDMUHMBVGxYZCRWkEdEbctGL60928212 = 36473996;    long qDDMUHMBVGxYZCRWkEdEbctGL64306398 = -882657188;    long qDDMUHMBVGxYZCRWkEdEbctGL13869311 = 3489251;    long qDDMUHMBVGxYZCRWkEdEbctGL31989458 = -582942800;    long qDDMUHMBVGxYZCRWkEdEbctGL20142397 = -226583155;    long qDDMUHMBVGxYZCRWkEdEbctGL87778653 = -654364361;    long qDDMUHMBVGxYZCRWkEdEbctGL99540062 = -948591719;    long qDDMUHMBVGxYZCRWkEdEbctGL55742472 = -160930960;    long qDDMUHMBVGxYZCRWkEdEbctGL92046944 = -465662132;    long qDDMUHMBVGxYZCRWkEdEbctGL63130985 = -59980158;    long qDDMUHMBVGxYZCRWkEdEbctGL21384340 = 48723956;    long qDDMUHMBVGxYZCRWkEdEbctGL18670091 = -236244033;    long qDDMUHMBVGxYZCRWkEdEbctGL15453663 = -373430012;    long qDDMUHMBVGxYZCRWkEdEbctGL98853871 = 82829214;    long qDDMUHMBVGxYZCRWkEdEbctGL79010530 = -578380512;    long qDDMUHMBVGxYZCRWkEdEbctGL960928 = -771523186;    long qDDMUHMBVGxYZCRWkEdEbctGL38803334 = -122837588;    long qDDMUHMBVGxYZCRWkEdEbctGL2558019 = 12056470;    long qDDMUHMBVGxYZCRWkEdEbctGL80201215 = -45109038;    long qDDMUHMBVGxYZCRWkEdEbctGL42923912 = 43365970;    long qDDMUHMBVGxYZCRWkEdEbctGL32990887 = -872447963;    long qDDMUHMBVGxYZCRWkEdEbctGL95383936 = -472616569;    long qDDMUHMBVGxYZCRWkEdEbctGL37297763 = -101650943;    long qDDMUHMBVGxYZCRWkEdEbctGL26874102 = -592861587;    long qDDMUHMBVGxYZCRWkEdEbctGL82853390 = -992207841;    long qDDMUHMBVGxYZCRWkEdEbctGL45582804 = -919248474;    long qDDMUHMBVGxYZCRWkEdEbctGL96697709 = -110701233;    long qDDMUHMBVGxYZCRWkEdEbctGL42033726 = -153132171;    long qDDMUHMBVGxYZCRWkEdEbctGL72350672 = -929939165;    long qDDMUHMBVGxYZCRWkEdEbctGL85958200 = 88256707;    long qDDMUHMBVGxYZCRWkEdEbctGL87723109 = -131078889;    long qDDMUHMBVGxYZCRWkEdEbctGL66906211 = -437720989;    long qDDMUHMBVGxYZCRWkEdEbctGL80738657 = -414110706;    long qDDMUHMBVGxYZCRWkEdEbctGL16768937 = -35601082;    long qDDMUHMBVGxYZCRWkEdEbctGL63692782 = -378806472;    long qDDMUHMBVGxYZCRWkEdEbctGL52655394 = -718806777;    long qDDMUHMBVGxYZCRWkEdEbctGL90307544 = -130075687;    long qDDMUHMBVGxYZCRWkEdEbctGL3547030 = -561649915;    long qDDMUHMBVGxYZCRWkEdEbctGL64814 = -768163512;    long qDDMUHMBVGxYZCRWkEdEbctGL32456496 = -33550425;    long qDDMUHMBVGxYZCRWkEdEbctGL748911 = -165287615;    long qDDMUHMBVGxYZCRWkEdEbctGL18694930 = -267361668;    long qDDMUHMBVGxYZCRWkEdEbctGL25178203 = -544475529;    long qDDMUHMBVGxYZCRWkEdEbctGL79721488 = -652836909;    long qDDMUHMBVGxYZCRWkEdEbctGL96839800 = -969090381;    long qDDMUHMBVGxYZCRWkEdEbctGL32156343 = -381641626;    long qDDMUHMBVGxYZCRWkEdEbctGL9352255 = -490134303;    long qDDMUHMBVGxYZCRWkEdEbctGL26387386 = -384308630;    long qDDMUHMBVGxYZCRWkEdEbctGL64269427 = -41062066;    long qDDMUHMBVGxYZCRWkEdEbctGL80964005 = -773345740;    long qDDMUHMBVGxYZCRWkEdEbctGL66677726 = -301494101;    long qDDMUHMBVGxYZCRWkEdEbctGL7166685 = -523722055;    long qDDMUHMBVGxYZCRWkEdEbctGL24023723 = -644906906;    long qDDMUHMBVGxYZCRWkEdEbctGL90751171 = -895916241;    long qDDMUHMBVGxYZCRWkEdEbctGL99752306 = -661573644;    long qDDMUHMBVGxYZCRWkEdEbctGL65544275 = -490909435;    long qDDMUHMBVGxYZCRWkEdEbctGL27008636 = -681006246;    long qDDMUHMBVGxYZCRWkEdEbctGL86995209 = -403649163;    long qDDMUHMBVGxYZCRWkEdEbctGL49136067 = -590734959;    long qDDMUHMBVGxYZCRWkEdEbctGL74559593 = -307334681;    long qDDMUHMBVGxYZCRWkEdEbctGL91080943 = -443663128;    long qDDMUHMBVGxYZCRWkEdEbctGL57506336 = -695459549;    long qDDMUHMBVGxYZCRWkEdEbctGL83391800 = -230991796;    long qDDMUHMBVGxYZCRWkEdEbctGL6088744 = -453918839;    long qDDMUHMBVGxYZCRWkEdEbctGL75407876 = -928901270;    long qDDMUHMBVGxYZCRWkEdEbctGL54478128 = -513555055;    long qDDMUHMBVGxYZCRWkEdEbctGL37931434 = -822133327;    long qDDMUHMBVGxYZCRWkEdEbctGL98684726 = -237828931;    long qDDMUHMBVGxYZCRWkEdEbctGL35161090 = -538364314;    long qDDMUHMBVGxYZCRWkEdEbctGL26355137 = -859573735;    long qDDMUHMBVGxYZCRWkEdEbctGL10653383 = -541447500;    long qDDMUHMBVGxYZCRWkEdEbctGL35256305 = -561187673;    long qDDMUHMBVGxYZCRWkEdEbctGL2493205 = -219780018;    long qDDMUHMBVGxYZCRWkEdEbctGL47744719 = 88441387;    long qDDMUHMBVGxYZCRWkEdEbctGL42175002 = -791346415;    long qDDMUHMBVGxYZCRWkEdEbctGL14295957 = -505086296;    long qDDMUHMBVGxYZCRWkEdEbctGL70205733 = -928141040;    long qDDMUHMBVGxYZCRWkEdEbctGL57576275 = -448814034;    long qDDMUHMBVGxYZCRWkEdEbctGL30034301 = -623771206;    long qDDMUHMBVGxYZCRWkEdEbctGL50697048 = -510566216;    long qDDMUHMBVGxYZCRWkEdEbctGL36230549 = -329114171;    long qDDMUHMBVGxYZCRWkEdEbctGL70310324 = -726392603;    long qDDMUHMBVGxYZCRWkEdEbctGL77764299 = -12070105;    long qDDMUHMBVGxYZCRWkEdEbctGL91386666 = -56593425;    long qDDMUHMBVGxYZCRWkEdEbctGL19280474 = -610249193;    long qDDMUHMBVGxYZCRWkEdEbctGL80556424 = -607356835;    long qDDMUHMBVGxYZCRWkEdEbctGL42882488 = -792814084;    long qDDMUHMBVGxYZCRWkEdEbctGL89987485 = -518194466;    long qDDMUHMBVGxYZCRWkEdEbctGL17016631 = -374027438;    long qDDMUHMBVGxYZCRWkEdEbctGL98148506 = -887897037;    long qDDMUHMBVGxYZCRWkEdEbctGL25646759 = 62199468;    long qDDMUHMBVGxYZCRWkEdEbctGL3312336 = -726426524;    long qDDMUHMBVGxYZCRWkEdEbctGL54410962 = -970914956;    long qDDMUHMBVGxYZCRWkEdEbctGL25505220 = -360828831;    long qDDMUHMBVGxYZCRWkEdEbctGL41375552 = -589887298;    long qDDMUHMBVGxYZCRWkEdEbctGL43242574 = -469828067;    long qDDMUHMBVGxYZCRWkEdEbctGL35303129 = 63630127;    long qDDMUHMBVGxYZCRWkEdEbctGL19089460 = -952550270;     qDDMUHMBVGxYZCRWkEdEbctGL33675084 = qDDMUHMBVGxYZCRWkEdEbctGL32743193;     qDDMUHMBVGxYZCRWkEdEbctGL32743193 = qDDMUHMBVGxYZCRWkEdEbctGL60928212;     qDDMUHMBVGxYZCRWkEdEbctGL60928212 = qDDMUHMBVGxYZCRWkEdEbctGL64306398;     qDDMUHMBVGxYZCRWkEdEbctGL64306398 = qDDMUHMBVGxYZCRWkEdEbctGL13869311;     qDDMUHMBVGxYZCRWkEdEbctGL13869311 = qDDMUHMBVGxYZCRWkEdEbctGL31989458;     qDDMUHMBVGxYZCRWkEdEbctGL31989458 = qDDMUHMBVGxYZCRWkEdEbctGL20142397;     qDDMUHMBVGxYZCRWkEdEbctGL20142397 = qDDMUHMBVGxYZCRWkEdEbctGL87778653;     qDDMUHMBVGxYZCRWkEdEbctGL87778653 = qDDMUHMBVGxYZCRWkEdEbctGL99540062;     qDDMUHMBVGxYZCRWkEdEbctGL99540062 = qDDMUHMBVGxYZCRWkEdEbctGL55742472;     qDDMUHMBVGxYZCRWkEdEbctGL55742472 = qDDMUHMBVGxYZCRWkEdEbctGL92046944;     qDDMUHMBVGxYZCRWkEdEbctGL92046944 = qDDMUHMBVGxYZCRWkEdEbctGL63130985;     qDDMUHMBVGxYZCRWkEdEbctGL63130985 = qDDMUHMBVGxYZCRWkEdEbctGL21384340;     qDDMUHMBVGxYZCRWkEdEbctGL21384340 = qDDMUHMBVGxYZCRWkEdEbctGL18670091;     qDDMUHMBVGxYZCRWkEdEbctGL18670091 = qDDMUHMBVGxYZCRWkEdEbctGL15453663;     qDDMUHMBVGxYZCRWkEdEbctGL15453663 = qDDMUHMBVGxYZCRWkEdEbctGL98853871;     qDDMUHMBVGxYZCRWkEdEbctGL98853871 = qDDMUHMBVGxYZCRWkEdEbctGL79010530;     qDDMUHMBVGxYZCRWkEdEbctGL79010530 = qDDMUHMBVGxYZCRWkEdEbctGL960928;     qDDMUHMBVGxYZCRWkEdEbctGL960928 = qDDMUHMBVGxYZCRWkEdEbctGL38803334;     qDDMUHMBVGxYZCRWkEdEbctGL38803334 = qDDMUHMBVGxYZCRWkEdEbctGL2558019;     qDDMUHMBVGxYZCRWkEdEbctGL2558019 = qDDMUHMBVGxYZCRWkEdEbctGL80201215;     qDDMUHMBVGxYZCRWkEdEbctGL80201215 = qDDMUHMBVGxYZCRWkEdEbctGL42923912;     qDDMUHMBVGxYZCRWkEdEbctGL42923912 = qDDMUHMBVGxYZCRWkEdEbctGL32990887;     qDDMUHMBVGxYZCRWkEdEbctGL32990887 = qDDMUHMBVGxYZCRWkEdEbctGL95383936;     qDDMUHMBVGxYZCRWkEdEbctGL95383936 = qDDMUHMBVGxYZCRWkEdEbctGL37297763;     qDDMUHMBVGxYZCRWkEdEbctGL37297763 = qDDMUHMBVGxYZCRWkEdEbctGL26874102;     qDDMUHMBVGxYZCRWkEdEbctGL26874102 = qDDMUHMBVGxYZCRWkEdEbctGL82853390;     qDDMUHMBVGxYZCRWkEdEbctGL82853390 = qDDMUHMBVGxYZCRWkEdEbctGL45582804;     qDDMUHMBVGxYZCRWkEdEbctGL45582804 = qDDMUHMBVGxYZCRWkEdEbctGL96697709;     qDDMUHMBVGxYZCRWkEdEbctGL96697709 = qDDMUHMBVGxYZCRWkEdEbctGL42033726;     qDDMUHMBVGxYZCRWkEdEbctGL42033726 = qDDMUHMBVGxYZCRWkEdEbctGL72350672;     qDDMUHMBVGxYZCRWkEdEbctGL72350672 = qDDMUHMBVGxYZCRWkEdEbctGL85958200;     qDDMUHMBVGxYZCRWkEdEbctGL85958200 = qDDMUHMBVGxYZCRWkEdEbctGL87723109;     qDDMUHMBVGxYZCRWkEdEbctGL87723109 = qDDMUHMBVGxYZCRWkEdEbctGL66906211;     qDDMUHMBVGxYZCRWkEdEbctGL66906211 = qDDMUHMBVGxYZCRWkEdEbctGL80738657;     qDDMUHMBVGxYZCRWkEdEbctGL80738657 = qDDMUHMBVGxYZCRWkEdEbctGL16768937;     qDDMUHMBVGxYZCRWkEdEbctGL16768937 = qDDMUHMBVGxYZCRWkEdEbctGL63692782;     qDDMUHMBVGxYZCRWkEdEbctGL63692782 = qDDMUHMBVGxYZCRWkEdEbctGL52655394;     qDDMUHMBVGxYZCRWkEdEbctGL52655394 = qDDMUHMBVGxYZCRWkEdEbctGL90307544;     qDDMUHMBVGxYZCRWkEdEbctGL90307544 = qDDMUHMBVGxYZCRWkEdEbctGL3547030;     qDDMUHMBVGxYZCRWkEdEbctGL3547030 = qDDMUHMBVGxYZCRWkEdEbctGL64814;     qDDMUHMBVGxYZCRWkEdEbctGL64814 = qDDMUHMBVGxYZCRWkEdEbctGL32456496;     qDDMUHMBVGxYZCRWkEdEbctGL32456496 = qDDMUHMBVGxYZCRWkEdEbctGL748911;     qDDMUHMBVGxYZCRWkEdEbctGL748911 = qDDMUHMBVGxYZCRWkEdEbctGL18694930;     qDDMUHMBVGxYZCRWkEdEbctGL18694930 = qDDMUHMBVGxYZCRWkEdEbctGL25178203;     qDDMUHMBVGxYZCRWkEdEbctGL25178203 = qDDMUHMBVGxYZCRWkEdEbctGL79721488;     qDDMUHMBVGxYZCRWkEdEbctGL79721488 = qDDMUHMBVGxYZCRWkEdEbctGL96839800;     qDDMUHMBVGxYZCRWkEdEbctGL96839800 = qDDMUHMBVGxYZCRWkEdEbctGL32156343;     qDDMUHMBVGxYZCRWkEdEbctGL32156343 = qDDMUHMBVGxYZCRWkEdEbctGL9352255;     qDDMUHMBVGxYZCRWkEdEbctGL9352255 = qDDMUHMBVGxYZCRWkEdEbctGL26387386;     qDDMUHMBVGxYZCRWkEdEbctGL26387386 = qDDMUHMBVGxYZCRWkEdEbctGL64269427;     qDDMUHMBVGxYZCRWkEdEbctGL64269427 = qDDMUHMBVGxYZCRWkEdEbctGL80964005;     qDDMUHMBVGxYZCRWkEdEbctGL80964005 = qDDMUHMBVGxYZCRWkEdEbctGL66677726;     qDDMUHMBVGxYZCRWkEdEbctGL66677726 = qDDMUHMBVGxYZCRWkEdEbctGL7166685;     qDDMUHMBVGxYZCRWkEdEbctGL7166685 = qDDMUHMBVGxYZCRWkEdEbctGL24023723;     qDDMUHMBVGxYZCRWkEdEbctGL24023723 = qDDMUHMBVGxYZCRWkEdEbctGL90751171;     qDDMUHMBVGxYZCRWkEdEbctGL90751171 = qDDMUHMBVGxYZCRWkEdEbctGL99752306;     qDDMUHMBVGxYZCRWkEdEbctGL99752306 = qDDMUHMBVGxYZCRWkEdEbctGL65544275;     qDDMUHMBVGxYZCRWkEdEbctGL65544275 = qDDMUHMBVGxYZCRWkEdEbctGL27008636;     qDDMUHMBVGxYZCRWkEdEbctGL27008636 = qDDMUHMBVGxYZCRWkEdEbctGL86995209;     qDDMUHMBVGxYZCRWkEdEbctGL86995209 = qDDMUHMBVGxYZCRWkEdEbctGL49136067;     qDDMUHMBVGxYZCRWkEdEbctGL49136067 = qDDMUHMBVGxYZCRWkEdEbctGL74559593;     qDDMUHMBVGxYZCRWkEdEbctGL74559593 = qDDMUHMBVGxYZCRWkEdEbctGL91080943;     qDDMUHMBVGxYZCRWkEdEbctGL91080943 = qDDMUHMBVGxYZCRWkEdEbctGL57506336;     qDDMUHMBVGxYZCRWkEdEbctGL57506336 = qDDMUHMBVGxYZCRWkEdEbctGL83391800;     qDDMUHMBVGxYZCRWkEdEbctGL83391800 = qDDMUHMBVGxYZCRWkEdEbctGL6088744;     qDDMUHMBVGxYZCRWkEdEbctGL6088744 = qDDMUHMBVGxYZCRWkEdEbctGL75407876;     qDDMUHMBVGxYZCRWkEdEbctGL75407876 = qDDMUHMBVGxYZCRWkEdEbctGL54478128;     qDDMUHMBVGxYZCRWkEdEbctGL54478128 = qDDMUHMBVGxYZCRWkEdEbctGL37931434;     qDDMUHMBVGxYZCRWkEdEbctGL37931434 = qDDMUHMBVGxYZCRWkEdEbctGL98684726;     qDDMUHMBVGxYZCRWkEdEbctGL98684726 = qDDMUHMBVGxYZCRWkEdEbctGL35161090;     qDDMUHMBVGxYZCRWkEdEbctGL35161090 = qDDMUHMBVGxYZCRWkEdEbctGL26355137;     qDDMUHMBVGxYZCRWkEdEbctGL26355137 = qDDMUHMBVGxYZCRWkEdEbctGL10653383;     qDDMUHMBVGxYZCRWkEdEbctGL10653383 = qDDMUHMBVGxYZCRWkEdEbctGL35256305;     qDDMUHMBVGxYZCRWkEdEbctGL35256305 = qDDMUHMBVGxYZCRWkEdEbctGL2493205;     qDDMUHMBVGxYZCRWkEdEbctGL2493205 = qDDMUHMBVGxYZCRWkEdEbctGL47744719;     qDDMUHMBVGxYZCRWkEdEbctGL47744719 = qDDMUHMBVGxYZCRWkEdEbctGL42175002;     qDDMUHMBVGxYZCRWkEdEbctGL42175002 = qDDMUHMBVGxYZCRWkEdEbctGL14295957;     qDDMUHMBVGxYZCRWkEdEbctGL14295957 = qDDMUHMBVGxYZCRWkEdEbctGL70205733;     qDDMUHMBVGxYZCRWkEdEbctGL70205733 = qDDMUHMBVGxYZCRWkEdEbctGL57576275;     qDDMUHMBVGxYZCRWkEdEbctGL57576275 = qDDMUHMBVGxYZCRWkEdEbctGL30034301;     qDDMUHMBVGxYZCRWkEdEbctGL30034301 = qDDMUHMBVGxYZCRWkEdEbctGL50697048;     qDDMUHMBVGxYZCRWkEdEbctGL50697048 = qDDMUHMBVGxYZCRWkEdEbctGL36230549;     qDDMUHMBVGxYZCRWkEdEbctGL36230549 = qDDMUHMBVGxYZCRWkEdEbctGL70310324;     qDDMUHMBVGxYZCRWkEdEbctGL70310324 = qDDMUHMBVGxYZCRWkEdEbctGL77764299;     qDDMUHMBVGxYZCRWkEdEbctGL77764299 = qDDMUHMBVGxYZCRWkEdEbctGL91386666;     qDDMUHMBVGxYZCRWkEdEbctGL91386666 = qDDMUHMBVGxYZCRWkEdEbctGL19280474;     qDDMUHMBVGxYZCRWkEdEbctGL19280474 = qDDMUHMBVGxYZCRWkEdEbctGL80556424;     qDDMUHMBVGxYZCRWkEdEbctGL80556424 = qDDMUHMBVGxYZCRWkEdEbctGL42882488;     qDDMUHMBVGxYZCRWkEdEbctGL42882488 = qDDMUHMBVGxYZCRWkEdEbctGL89987485;     qDDMUHMBVGxYZCRWkEdEbctGL89987485 = qDDMUHMBVGxYZCRWkEdEbctGL17016631;     qDDMUHMBVGxYZCRWkEdEbctGL17016631 = qDDMUHMBVGxYZCRWkEdEbctGL98148506;     qDDMUHMBVGxYZCRWkEdEbctGL98148506 = qDDMUHMBVGxYZCRWkEdEbctGL25646759;     qDDMUHMBVGxYZCRWkEdEbctGL25646759 = qDDMUHMBVGxYZCRWkEdEbctGL3312336;     qDDMUHMBVGxYZCRWkEdEbctGL3312336 = qDDMUHMBVGxYZCRWkEdEbctGL54410962;     qDDMUHMBVGxYZCRWkEdEbctGL54410962 = qDDMUHMBVGxYZCRWkEdEbctGL25505220;     qDDMUHMBVGxYZCRWkEdEbctGL25505220 = qDDMUHMBVGxYZCRWkEdEbctGL41375552;     qDDMUHMBVGxYZCRWkEdEbctGL41375552 = qDDMUHMBVGxYZCRWkEdEbctGL43242574;     qDDMUHMBVGxYZCRWkEdEbctGL43242574 = qDDMUHMBVGxYZCRWkEdEbctGL35303129;     qDDMUHMBVGxYZCRWkEdEbctGL35303129 = qDDMUHMBVGxYZCRWkEdEbctGL19089460;     qDDMUHMBVGxYZCRWkEdEbctGL19089460 = qDDMUHMBVGxYZCRWkEdEbctGL33675084;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void AXgWcCqCniyWCaCuyDgGijNHZLMRLZIjrmZSmVbZsIbNtfNqHBJTQtsQK19274006() {     long ZxRqZrNaPePBjHccGNZHzNtxV39792191 = 35547841;    long ZxRqZrNaPePBjHccGNZHzNtxV76116472 = -243621388;    long ZxRqZrNaPePBjHccGNZHzNtxV76970395 = -114358925;    long ZxRqZrNaPePBjHccGNZHzNtxV91381179 = 26594182;    long ZxRqZrNaPePBjHccGNZHzNtxV82764799 = -517160621;    long ZxRqZrNaPePBjHccGNZHzNtxV23406660 = -847439035;    long ZxRqZrNaPePBjHccGNZHzNtxV80631362 = -365548132;    long ZxRqZrNaPePBjHccGNZHzNtxV37538544 = -941238274;    long ZxRqZrNaPePBjHccGNZHzNtxV64182558 = -716624385;    long ZxRqZrNaPePBjHccGNZHzNtxV96972131 = -489906438;    long ZxRqZrNaPePBjHccGNZHzNtxV52157234 = -343099718;    long ZxRqZrNaPePBjHccGNZHzNtxV94954027 = -504386360;    long ZxRqZrNaPePBjHccGNZHzNtxV7593458 = -391167133;    long ZxRqZrNaPePBjHccGNZHzNtxV1813768 = -768482601;    long ZxRqZrNaPePBjHccGNZHzNtxV11196090 = 36107821;    long ZxRqZrNaPePBjHccGNZHzNtxV40359266 = -990170329;    long ZxRqZrNaPePBjHccGNZHzNtxV72846533 = -94925625;    long ZxRqZrNaPePBjHccGNZHzNtxV98014080 = -437045829;    long ZxRqZrNaPePBjHccGNZHzNtxV633177 = -528606684;    long ZxRqZrNaPePBjHccGNZHzNtxV83108183 = -344846449;    long ZxRqZrNaPePBjHccGNZHzNtxV68754408 = 99403507;    long ZxRqZrNaPePBjHccGNZHzNtxV29444936 = -964563746;    long ZxRqZrNaPePBjHccGNZHzNtxV68581678 = -618965450;    long ZxRqZrNaPePBjHccGNZHzNtxV79376310 = -694921557;    long ZxRqZrNaPePBjHccGNZHzNtxV80997413 = -474846976;    long ZxRqZrNaPePBjHccGNZHzNtxV51595777 = -471516910;    long ZxRqZrNaPePBjHccGNZHzNtxV81313168 = -892870044;    long ZxRqZrNaPePBjHccGNZHzNtxV58689929 = -985177427;    long ZxRqZrNaPePBjHccGNZHzNtxV62829965 = -333083938;    long ZxRqZrNaPePBjHccGNZHzNtxV10649363 = 29396961;    long ZxRqZrNaPePBjHccGNZHzNtxV64593221 = -843260103;    long ZxRqZrNaPePBjHccGNZHzNtxV83568822 = -721190109;    long ZxRqZrNaPePBjHccGNZHzNtxV97434057 = -23692260;    long ZxRqZrNaPePBjHccGNZHzNtxV61736775 = -189262754;    long ZxRqZrNaPePBjHccGNZHzNtxV42213309 = 47156188;    long ZxRqZrNaPePBjHccGNZHzNtxV85494850 = -249627189;    long ZxRqZrNaPePBjHccGNZHzNtxV44954717 = -332442341;    long ZxRqZrNaPePBjHccGNZHzNtxV86745606 = -490312787;    long ZxRqZrNaPePBjHccGNZHzNtxV63917798 = -123999184;    long ZxRqZrNaPePBjHccGNZHzNtxV91048967 = 64910863;    long ZxRqZrNaPePBjHccGNZHzNtxV5734038 = -833437406;    long ZxRqZrNaPePBjHccGNZHzNtxV64606953 = -303692703;    long ZxRqZrNaPePBjHccGNZHzNtxV78815888 = -246092199;    long ZxRqZrNaPePBjHccGNZHzNtxV6102670 = -286704607;    long ZxRqZrNaPePBjHccGNZHzNtxV37130668 = -206373683;    long ZxRqZrNaPePBjHccGNZHzNtxV91660683 = -638053026;    long ZxRqZrNaPePBjHccGNZHzNtxV14618375 = 12134081;    long ZxRqZrNaPePBjHccGNZHzNtxV40113284 = -391537159;    long ZxRqZrNaPePBjHccGNZHzNtxV19027984 = -575871291;    long ZxRqZrNaPePBjHccGNZHzNtxV39299038 = -471319439;    long ZxRqZrNaPePBjHccGNZHzNtxV99970105 = -983355738;    long ZxRqZrNaPePBjHccGNZHzNtxV91773724 = -574072061;    long ZxRqZrNaPePBjHccGNZHzNtxV14926184 = -93283688;    long ZxRqZrNaPePBjHccGNZHzNtxV3135566 = -844192200;    long ZxRqZrNaPePBjHccGNZHzNtxV50519597 = -245438688;    long ZxRqZrNaPePBjHccGNZHzNtxV10347255 = 111587;    long ZxRqZrNaPePBjHccGNZHzNtxV7534794 = -624655938;    long ZxRqZrNaPePBjHccGNZHzNtxV97594084 = -419437369;    long ZxRqZrNaPePBjHccGNZHzNtxV10383767 = -498558843;    long ZxRqZrNaPePBjHccGNZHzNtxV31169022 = 54356289;    long ZxRqZrNaPePBjHccGNZHzNtxV42093492 = -954568991;    long ZxRqZrNaPePBjHccGNZHzNtxV21941434 = -380370705;    long ZxRqZrNaPePBjHccGNZHzNtxV74708579 = -508154336;    long ZxRqZrNaPePBjHccGNZHzNtxV53533195 = -646021347;    long ZxRqZrNaPePBjHccGNZHzNtxV32378911 = -646646335;    long ZxRqZrNaPePBjHccGNZHzNtxV68588412 = -621909610;    long ZxRqZrNaPePBjHccGNZHzNtxV97519970 = -380694101;    long ZxRqZrNaPePBjHccGNZHzNtxV45856683 = -101904379;    long ZxRqZrNaPePBjHccGNZHzNtxV59600458 = -715638789;    long ZxRqZrNaPePBjHccGNZHzNtxV25701240 = -714264990;    long ZxRqZrNaPePBjHccGNZHzNtxV95404549 = -557727988;    long ZxRqZrNaPePBjHccGNZHzNtxV86100927 = -604612839;    long ZxRqZrNaPePBjHccGNZHzNtxV34096282 = -213046646;    long ZxRqZrNaPePBjHccGNZHzNtxV9584209 = -493517548;    long ZxRqZrNaPePBjHccGNZHzNtxV77374145 = -511409043;    long ZxRqZrNaPePBjHccGNZHzNtxV4147456 = -596903791;    long ZxRqZrNaPePBjHccGNZHzNtxV50629047 = -618471548;    long ZxRqZrNaPePBjHccGNZHzNtxV62479008 = -232260844;    long ZxRqZrNaPePBjHccGNZHzNtxV42245642 = -388547874;    long ZxRqZrNaPePBjHccGNZHzNtxV89336730 = -836793951;    long ZxRqZrNaPePBjHccGNZHzNtxV36977402 = -383650991;    long ZxRqZrNaPePBjHccGNZHzNtxV41199885 = -401332886;    long ZxRqZrNaPePBjHccGNZHzNtxV39661945 = -309306137;    long ZxRqZrNaPePBjHccGNZHzNtxV23530927 = -861764500;    long ZxRqZrNaPePBjHccGNZHzNtxV10679258 = 12752699;    long ZxRqZrNaPePBjHccGNZHzNtxV72819496 = -169188043;    long ZxRqZrNaPePBjHccGNZHzNtxV68642638 = -527906421;    long ZxRqZrNaPePBjHccGNZHzNtxV94298492 = -179500060;    long ZxRqZrNaPePBjHccGNZHzNtxV11217178 = -943824067;    long ZxRqZrNaPePBjHccGNZHzNtxV31866055 = -952955399;    long ZxRqZrNaPePBjHccGNZHzNtxV77960056 = -624971252;    long ZxRqZrNaPePBjHccGNZHzNtxV47360632 = -913004973;    long ZxRqZrNaPePBjHccGNZHzNtxV76361840 = -991753944;    long ZxRqZrNaPePBjHccGNZHzNtxV32748776 = -78355473;    long ZxRqZrNaPePBjHccGNZHzNtxV48955476 = 19479853;    long ZxRqZrNaPePBjHccGNZHzNtxV83792603 = -353066702;    long ZxRqZrNaPePBjHccGNZHzNtxV89898373 = -795538367;    long ZxRqZrNaPePBjHccGNZHzNtxV25282694 = -600070852;    long ZxRqZrNaPePBjHccGNZHzNtxV73723759 = -640058272;    long ZxRqZrNaPePBjHccGNZHzNtxV68542256 = 35547841;     ZxRqZrNaPePBjHccGNZHzNtxV39792191 = ZxRqZrNaPePBjHccGNZHzNtxV76116472;     ZxRqZrNaPePBjHccGNZHzNtxV76116472 = ZxRqZrNaPePBjHccGNZHzNtxV76970395;     ZxRqZrNaPePBjHccGNZHzNtxV76970395 = ZxRqZrNaPePBjHccGNZHzNtxV91381179;     ZxRqZrNaPePBjHccGNZHzNtxV91381179 = ZxRqZrNaPePBjHccGNZHzNtxV82764799;     ZxRqZrNaPePBjHccGNZHzNtxV82764799 = ZxRqZrNaPePBjHccGNZHzNtxV23406660;     ZxRqZrNaPePBjHccGNZHzNtxV23406660 = ZxRqZrNaPePBjHccGNZHzNtxV80631362;     ZxRqZrNaPePBjHccGNZHzNtxV80631362 = ZxRqZrNaPePBjHccGNZHzNtxV37538544;     ZxRqZrNaPePBjHccGNZHzNtxV37538544 = ZxRqZrNaPePBjHccGNZHzNtxV64182558;     ZxRqZrNaPePBjHccGNZHzNtxV64182558 = ZxRqZrNaPePBjHccGNZHzNtxV96972131;     ZxRqZrNaPePBjHccGNZHzNtxV96972131 = ZxRqZrNaPePBjHccGNZHzNtxV52157234;     ZxRqZrNaPePBjHccGNZHzNtxV52157234 = ZxRqZrNaPePBjHccGNZHzNtxV94954027;     ZxRqZrNaPePBjHccGNZHzNtxV94954027 = ZxRqZrNaPePBjHccGNZHzNtxV7593458;     ZxRqZrNaPePBjHccGNZHzNtxV7593458 = ZxRqZrNaPePBjHccGNZHzNtxV1813768;     ZxRqZrNaPePBjHccGNZHzNtxV1813768 = ZxRqZrNaPePBjHccGNZHzNtxV11196090;     ZxRqZrNaPePBjHccGNZHzNtxV11196090 = ZxRqZrNaPePBjHccGNZHzNtxV40359266;     ZxRqZrNaPePBjHccGNZHzNtxV40359266 = ZxRqZrNaPePBjHccGNZHzNtxV72846533;     ZxRqZrNaPePBjHccGNZHzNtxV72846533 = ZxRqZrNaPePBjHccGNZHzNtxV98014080;     ZxRqZrNaPePBjHccGNZHzNtxV98014080 = ZxRqZrNaPePBjHccGNZHzNtxV633177;     ZxRqZrNaPePBjHccGNZHzNtxV633177 = ZxRqZrNaPePBjHccGNZHzNtxV83108183;     ZxRqZrNaPePBjHccGNZHzNtxV83108183 = ZxRqZrNaPePBjHccGNZHzNtxV68754408;     ZxRqZrNaPePBjHccGNZHzNtxV68754408 = ZxRqZrNaPePBjHccGNZHzNtxV29444936;     ZxRqZrNaPePBjHccGNZHzNtxV29444936 = ZxRqZrNaPePBjHccGNZHzNtxV68581678;     ZxRqZrNaPePBjHccGNZHzNtxV68581678 = ZxRqZrNaPePBjHccGNZHzNtxV79376310;     ZxRqZrNaPePBjHccGNZHzNtxV79376310 = ZxRqZrNaPePBjHccGNZHzNtxV80997413;     ZxRqZrNaPePBjHccGNZHzNtxV80997413 = ZxRqZrNaPePBjHccGNZHzNtxV51595777;     ZxRqZrNaPePBjHccGNZHzNtxV51595777 = ZxRqZrNaPePBjHccGNZHzNtxV81313168;     ZxRqZrNaPePBjHccGNZHzNtxV81313168 = ZxRqZrNaPePBjHccGNZHzNtxV58689929;     ZxRqZrNaPePBjHccGNZHzNtxV58689929 = ZxRqZrNaPePBjHccGNZHzNtxV62829965;     ZxRqZrNaPePBjHccGNZHzNtxV62829965 = ZxRqZrNaPePBjHccGNZHzNtxV10649363;     ZxRqZrNaPePBjHccGNZHzNtxV10649363 = ZxRqZrNaPePBjHccGNZHzNtxV64593221;     ZxRqZrNaPePBjHccGNZHzNtxV64593221 = ZxRqZrNaPePBjHccGNZHzNtxV83568822;     ZxRqZrNaPePBjHccGNZHzNtxV83568822 = ZxRqZrNaPePBjHccGNZHzNtxV97434057;     ZxRqZrNaPePBjHccGNZHzNtxV97434057 = ZxRqZrNaPePBjHccGNZHzNtxV61736775;     ZxRqZrNaPePBjHccGNZHzNtxV61736775 = ZxRqZrNaPePBjHccGNZHzNtxV42213309;     ZxRqZrNaPePBjHccGNZHzNtxV42213309 = ZxRqZrNaPePBjHccGNZHzNtxV85494850;     ZxRqZrNaPePBjHccGNZHzNtxV85494850 = ZxRqZrNaPePBjHccGNZHzNtxV44954717;     ZxRqZrNaPePBjHccGNZHzNtxV44954717 = ZxRqZrNaPePBjHccGNZHzNtxV86745606;     ZxRqZrNaPePBjHccGNZHzNtxV86745606 = ZxRqZrNaPePBjHccGNZHzNtxV63917798;     ZxRqZrNaPePBjHccGNZHzNtxV63917798 = ZxRqZrNaPePBjHccGNZHzNtxV91048967;     ZxRqZrNaPePBjHccGNZHzNtxV91048967 = ZxRqZrNaPePBjHccGNZHzNtxV5734038;     ZxRqZrNaPePBjHccGNZHzNtxV5734038 = ZxRqZrNaPePBjHccGNZHzNtxV64606953;     ZxRqZrNaPePBjHccGNZHzNtxV64606953 = ZxRqZrNaPePBjHccGNZHzNtxV78815888;     ZxRqZrNaPePBjHccGNZHzNtxV78815888 = ZxRqZrNaPePBjHccGNZHzNtxV6102670;     ZxRqZrNaPePBjHccGNZHzNtxV6102670 = ZxRqZrNaPePBjHccGNZHzNtxV37130668;     ZxRqZrNaPePBjHccGNZHzNtxV37130668 = ZxRqZrNaPePBjHccGNZHzNtxV91660683;     ZxRqZrNaPePBjHccGNZHzNtxV91660683 = ZxRqZrNaPePBjHccGNZHzNtxV14618375;     ZxRqZrNaPePBjHccGNZHzNtxV14618375 = ZxRqZrNaPePBjHccGNZHzNtxV40113284;     ZxRqZrNaPePBjHccGNZHzNtxV40113284 = ZxRqZrNaPePBjHccGNZHzNtxV19027984;     ZxRqZrNaPePBjHccGNZHzNtxV19027984 = ZxRqZrNaPePBjHccGNZHzNtxV39299038;     ZxRqZrNaPePBjHccGNZHzNtxV39299038 = ZxRqZrNaPePBjHccGNZHzNtxV99970105;     ZxRqZrNaPePBjHccGNZHzNtxV99970105 = ZxRqZrNaPePBjHccGNZHzNtxV91773724;     ZxRqZrNaPePBjHccGNZHzNtxV91773724 = ZxRqZrNaPePBjHccGNZHzNtxV14926184;     ZxRqZrNaPePBjHccGNZHzNtxV14926184 = ZxRqZrNaPePBjHccGNZHzNtxV3135566;     ZxRqZrNaPePBjHccGNZHzNtxV3135566 = ZxRqZrNaPePBjHccGNZHzNtxV50519597;     ZxRqZrNaPePBjHccGNZHzNtxV50519597 = ZxRqZrNaPePBjHccGNZHzNtxV10347255;     ZxRqZrNaPePBjHccGNZHzNtxV10347255 = ZxRqZrNaPePBjHccGNZHzNtxV7534794;     ZxRqZrNaPePBjHccGNZHzNtxV7534794 = ZxRqZrNaPePBjHccGNZHzNtxV97594084;     ZxRqZrNaPePBjHccGNZHzNtxV97594084 = ZxRqZrNaPePBjHccGNZHzNtxV10383767;     ZxRqZrNaPePBjHccGNZHzNtxV10383767 = ZxRqZrNaPePBjHccGNZHzNtxV31169022;     ZxRqZrNaPePBjHccGNZHzNtxV31169022 = ZxRqZrNaPePBjHccGNZHzNtxV42093492;     ZxRqZrNaPePBjHccGNZHzNtxV42093492 = ZxRqZrNaPePBjHccGNZHzNtxV21941434;     ZxRqZrNaPePBjHccGNZHzNtxV21941434 = ZxRqZrNaPePBjHccGNZHzNtxV74708579;     ZxRqZrNaPePBjHccGNZHzNtxV74708579 = ZxRqZrNaPePBjHccGNZHzNtxV53533195;     ZxRqZrNaPePBjHccGNZHzNtxV53533195 = ZxRqZrNaPePBjHccGNZHzNtxV32378911;     ZxRqZrNaPePBjHccGNZHzNtxV32378911 = ZxRqZrNaPePBjHccGNZHzNtxV68588412;     ZxRqZrNaPePBjHccGNZHzNtxV68588412 = ZxRqZrNaPePBjHccGNZHzNtxV97519970;     ZxRqZrNaPePBjHccGNZHzNtxV97519970 = ZxRqZrNaPePBjHccGNZHzNtxV45856683;     ZxRqZrNaPePBjHccGNZHzNtxV45856683 = ZxRqZrNaPePBjHccGNZHzNtxV59600458;     ZxRqZrNaPePBjHccGNZHzNtxV59600458 = ZxRqZrNaPePBjHccGNZHzNtxV25701240;     ZxRqZrNaPePBjHccGNZHzNtxV25701240 = ZxRqZrNaPePBjHccGNZHzNtxV95404549;     ZxRqZrNaPePBjHccGNZHzNtxV95404549 = ZxRqZrNaPePBjHccGNZHzNtxV86100927;     ZxRqZrNaPePBjHccGNZHzNtxV86100927 = ZxRqZrNaPePBjHccGNZHzNtxV34096282;     ZxRqZrNaPePBjHccGNZHzNtxV34096282 = ZxRqZrNaPePBjHccGNZHzNtxV9584209;     ZxRqZrNaPePBjHccGNZHzNtxV9584209 = ZxRqZrNaPePBjHccGNZHzNtxV77374145;     ZxRqZrNaPePBjHccGNZHzNtxV77374145 = ZxRqZrNaPePBjHccGNZHzNtxV4147456;     ZxRqZrNaPePBjHccGNZHzNtxV4147456 = ZxRqZrNaPePBjHccGNZHzNtxV50629047;     ZxRqZrNaPePBjHccGNZHzNtxV50629047 = ZxRqZrNaPePBjHccGNZHzNtxV62479008;     ZxRqZrNaPePBjHccGNZHzNtxV62479008 = ZxRqZrNaPePBjHccGNZHzNtxV42245642;     ZxRqZrNaPePBjHccGNZHzNtxV42245642 = ZxRqZrNaPePBjHccGNZHzNtxV89336730;     ZxRqZrNaPePBjHccGNZHzNtxV89336730 = ZxRqZrNaPePBjHccGNZHzNtxV36977402;     ZxRqZrNaPePBjHccGNZHzNtxV36977402 = ZxRqZrNaPePBjHccGNZHzNtxV41199885;     ZxRqZrNaPePBjHccGNZHzNtxV41199885 = ZxRqZrNaPePBjHccGNZHzNtxV39661945;     ZxRqZrNaPePBjHccGNZHzNtxV39661945 = ZxRqZrNaPePBjHccGNZHzNtxV23530927;     ZxRqZrNaPePBjHccGNZHzNtxV23530927 = ZxRqZrNaPePBjHccGNZHzNtxV10679258;     ZxRqZrNaPePBjHccGNZHzNtxV10679258 = ZxRqZrNaPePBjHccGNZHzNtxV72819496;     ZxRqZrNaPePBjHccGNZHzNtxV72819496 = ZxRqZrNaPePBjHccGNZHzNtxV68642638;     ZxRqZrNaPePBjHccGNZHzNtxV68642638 = ZxRqZrNaPePBjHccGNZHzNtxV94298492;     ZxRqZrNaPePBjHccGNZHzNtxV94298492 = ZxRqZrNaPePBjHccGNZHzNtxV11217178;     ZxRqZrNaPePBjHccGNZHzNtxV11217178 = ZxRqZrNaPePBjHccGNZHzNtxV31866055;     ZxRqZrNaPePBjHccGNZHzNtxV31866055 = ZxRqZrNaPePBjHccGNZHzNtxV77960056;     ZxRqZrNaPePBjHccGNZHzNtxV77960056 = ZxRqZrNaPePBjHccGNZHzNtxV47360632;     ZxRqZrNaPePBjHccGNZHzNtxV47360632 = ZxRqZrNaPePBjHccGNZHzNtxV76361840;     ZxRqZrNaPePBjHccGNZHzNtxV76361840 = ZxRqZrNaPePBjHccGNZHzNtxV32748776;     ZxRqZrNaPePBjHccGNZHzNtxV32748776 = ZxRqZrNaPePBjHccGNZHzNtxV48955476;     ZxRqZrNaPePBjHccGNZHzNtxV48955476 = ZxRqZrNaPePBjHccGNZHzNtxV83792603;     ZxRqZrNaPePBjHccGNZHzNtxV83792603 = ZxRqZrNaPePBjHccGNZHzNtxV89898373;     ZxRqZrNaPePBjHccGNZHzNtxV89898373 = ZxRqZrNaPePBjHccGNZHzNtxV25282694;     ZxRqZrNaPePBjHccGNZHzNtxV25282694 = ZxRqZrNaPePBjHccGNZHzNtxV73723759;     ZxRqZrNaPePBjHccGNZHzNtxV73723759 = ZxRqZrNaPePBjHccGNZHzNtxV68542256;     ZxRqZrNaPePBjHccGNZHzNtxV68542256 = ZxRqZrNaPePBjHccGNZHzNtxV39792191;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void kAehojYOPpFCQoIIaDaZmJQyHmSfyburUmBqgVmHhOtfaYHqnNrIsQXbj86565605() {     long fZCQtPouOidnRbERSsXPkXjfc75251159 = -430729059;    long fZCQtPouOidnRbERSsXPkXjfc89388550 = -124172995;    long fZCQtPouOidnRbERSsXPkXjfc14356873 = -880026000;    long fZCQtPouOidnRbERSsXPkXjfc63604534 = -894556890;    long fZCQtPouOidnRbERSsXPkXjfc39050068 = -622759466;    long fZCQtPouOidnRbERSsXPkXjfc59629532 = -9786930;    long fZCQtPouOidnRbERSsXPkXjfc91288769 = -210273866;    long fZCQtPouOidnRbERSsXPkXjfc99670105 = -585472414;    long fZCQtPouOidnRbERSsXPkXjfc65700163 = -104955792;    long fZCQtPouOidnRbERSsXPkXjfc11874844 = -154593436;    long fZCQtPouOidnRbERSsXPkXjfc90338969 = -145107447;    long fZCQtPouOidnRbERSsXPkXjfc95522176 = -368507132;    long fZCQtPouOidnRbERSsXPkXjfc45828103 = -943179638;    long fZCQtPouOidnRbERSsXPkXjfc54954631 = -744846010;    long fZCQtPouOidnRbERSsXPkXjfc69390606 = -467317194;    long fZCQtPouOidnRbERSsXPkXjfc23900567 = -625981936;    long fZCQtPouOidnRbERSsXPkXjfc28682470 = -621900177;    long fZCQtPouOidnRbERSsXPkXjfc97774271 = -510473897;    long fZCQtPouOidnRbERSsXPkXjfc1183507 = -845170106;    long fZCQtPouOidnRbERSsXPkXjfc76945401 = -771407515;    long fZCQtPouOidnRbERSsXPkXjfc81841271 = -657871182;    long fZCQtPouOidnRbERSsXPkXjfc32866461 = 48799960;    long fZCQtPouOidnRbERSsXPkXjfc39107058 = -256597634;    long fZCQtPouOidnRbERSsXPkXjfc73169256 = -105746161;    long fZCQtPouOidnRbERSsXPkXjfc89015364 = -498832174;    long fZCQtPouOidnRbERSsXPkXjfc62293948 = -160093717;    long fZCQtPouOidnRbERSsXPkXjfc41733743 = -699154185;    long fZCQtPouOidnRbERSsXPkXjfc99418353 = -54949602;    long fZCQtPouOidnRbERSsXPkXjfc9498180 = -907178740;    long fZCQtPouOidnRbERSsXPkXjfc16182774 = -5110209;    long fZCQtPouOidnRbERSsXPkXjfc83176453 = -295240590;    long fZCQtPouOidnRbERSsXPkXjfc21391841 = -494161523;    long fZCQtPouOidnRbERSsXPkXjfc9652069 = -171288237;    long fZCQtPouOidnRbERSsXPkXjfc91485201 = -253956568;    long fZCQtPouOidnRbERSsXPkXjfc8021763 = 96055938;    long fZCQtPouOidnRbERSsXPkXjfc37055694 = -464192495;    long fZCQtPouOidnRbERSsXPkXjfc94366533 = -197138381;    long fZCQtPouOidnRbERSsXPkXjfc37961010 = -472968368;    long fZCQtPouOidnRbERSsXPkXjfc94308359 = -874875460;    long fZCQtPouOidnRbERSsXPkXjfc55320500 = -500351683;    long fZCQtPouOidnRbERSsXPkXjfc39185645 = -602636320;    long fZCQtPouOidnRbERSsXPkXjfc53972079 = -998237994;    long fZCQtPouOidnRbERSsXPkXjfc68199267 = -899272985;    long fZCQtPouOidnRbERSsXPkXjfc46234008 = -891037017;    long fZCQtPouOidnRbERSsXPkXjfc37147127 = -32884845;    long fZCQtPouOidnRbERSsXPkXjfc37622012 = -676976658;    long fZCQtPouOidnRbERSsXPkXjfc33963538 = -471852280;    long fZCQtPouOidnRbERSsXPkXjfc57839595 = -558063752;    long fZCQtPouOidnRbERSsXPkXjfc41920650 = -239608171;    long fZCQtPouOidnRbERSsXPkXjfc63828627 = -962346254;    long fZCQtPouOidnRbERSsXPkXjfc80740829 = -857632295;    long fZCQtPouOidnRbERSsXPkXjfc75259197 = -787724407;    long fZCQtPouOidnRbERSsXPkXjfc83547332 = -949329242;    long fZCQtPouOidnRbERSsXPkXjfc19127412 = 64299301;    long fZCQtPouOidnRbERSsXPkXjfc4724334 = -591928834;    long fZCQtPouOidnRbERSsXPkXjfc42384699 = -379529019;    long fZCQtPouOidnRbERSsXPkXjfc50281493 = -867575361;    long fZCQtPouOidnRbERSsXPkXjfc41187616 = -674279839;    long fZCQtPouOidnRbERSsXPkXjfc74589170 = -295724716;    long fZCQtPouOidnRbERSsXPkXjfc76756120 = -362665750;    long fZCQtPouOidnRbERSsXPkXjfc17895790 = -310632745;    long fZCQtPouOidnRbERSsXPkXjfc91870415 = -55324265;    long fZCQtPouOidnRbERSsXPkXjfc90171925 = -678293674;    long fZCQtPouOidnRbERSsXPkXjfc49517389 = 154417;    long fZCQtPouOidnRbERSsXPkXjfc28698391 = -859352846;    long fZCQtPouOidnRbERSsXPkXjfc68947128 = -650945925;    long fZCQtPouOidnRbERSsXPkXjfc85870107 = -97218895;    long fZCQtPouOidnRbERSsXPkXjfc54342901 = -589223070;    long fZCQtPouOidnRbERSsXPkXjfc46932868 = -740901948;    long fZCQtPouOidnRbERSsXPkXjfc32334913 = 96875301;    long fZCQtPouOidnRbERSsXPkXjfc29534034 = -328843555;    long fZCQtPouOidnRbERSsXPkXjfc90721459 = -48931810;    long fZCQtPouOidnRbERSsXPkXjfc3465913 = -635598438;    long fZCQtPouOidnRbERSsXPkXjfc45863007 = -244818423;    long fZCQtPouOidnRbERSsXPkXjfc37759756 = -68771195;    long fZCQtPouOidnRbERSsXPkXjfc27869192 = -659633189;    long fZCQtPouOidnRbERSsXPkXjfc64667194 = -51927056;    long fZCQtPouOidnRbERSsXPkXjfc92873050 = -365560618;    long fZCQtPouOidnRbERSsXPkXjfc36022129 = 27138683;    long fZCQtPouOidnRbERSsXPkXjfc51393353 = -821855517;    long fZCQtPouOidnRbERSsXPkXjfc28330410 = -688241438;    long fZCQtPouOidnRbERSsXPkXjfc83894147 = -41090434;    long fZCQtPouOidnRbERSsXPkXjfc57497704 = -815341431;    long fZCQtPouOidnRbERSsXPkXjfc45669552 = -944832486;    long fZCQtPouOidnRbERSsXPkXjfc35441944 = -147477914;    long fZCQtPouOidnRbERSsXPkXjfc7917256 = -507516184;    long fZCQtPouOidnRbERSsXPkXjfc37844509 = -544832281;    long fZCQtPouOidnRbERSsXPkXjfc90524656 = -135587538;    long fZCQtPouOidnRbERSsXPkXjfc86760868 = -662027735;    long fZCQtPouOidnRbERSsXPkXjfc65637064 = -524415044;    long fZCQtPouOidnRbERSsXPkXjfc86774201 = -596617135;    long fZCQtPouOidnRbERSsXPkXjfc53178917 = -522858543;    long fZCQtPouOidnRbERSsXPkXjfc63371840 = -77243652;    long fZCQtPouOidnRbERSsXPkXjfc17552240 = -412209711;    long fZCQtPouOidnRbERSsXPkXjfc37424710 = -89718938;    long fZCQtPouOidnRbERSsXPkXjfc47315230 = -447312056;    long fZCQtPouOidnRbERSsXPkXjfc63800154 = -219944320;    long fZCQtPouOidnRbERSsXPkXjfc18681878 = -799427402;    long fZCQtPouOidnRbERSsXPkXjfc17535617 = 68315829;    long fZCQtPouOidnRbERSsXPkXjfc68199998 = -430729059;     fZCQtPouOidnRbERSsXPkXjfc75251159 = fZCQtPouOidnRbERSsXPkXjfc89388550;     fZCQtPouOidnRbERSsXPkXjfc89388550 = fZCQtPouOidnRbERSsXPkXjfc14356873;     fZCQtPouOidnRbERSsXPkXjfc14356873 = fZCQtPouOidnRbERSsXPkXjfc63604534;     fZCQtPouOidnRbERSsXPkXjfc63604534 = fZCQtPouOidnRbERSsXPkXjfc39050068;     fZCQtPouOidnRbERSsXPkXjfc39050068 = fZCQtPouOidnRbERSsXPkXjfc59629532;     fZCQtPouOidnRbERSsXPkXjfc59629532 = fZCQtPouOidnRbERSsXPkXjfc91288769;     fZCQtPouOidnRbERSsXPkXjfc91288769 = fZCQtPouOidnRbERSsXPkXjfc99670105;     fZCQtPouOidnRbERSsXPkXjfc99670105 = fZCQtPouOidnRbERSsXPkXjfc65700163;     fZCQtPouOidnRbERSsXPkXjfc65700163 = fZCQtPouOidnRbERSsXPkXjfc11874844;     fZCQtPouOidnRbERSsXPkXjfc11874844 = fZCQtPouOidnRbERSsXPkXjfc90338969;     fZCQtPouOidnRbERSsXPkXjfc90338969 = fZCQtPouOidnRbERSsXPkXjfc95522176;     fZCQtPouOidnRbERSsXPkXjfc95522176 = fZCQtPouOidnRbERSsXPkXjfc45828103;     fZCQtPouOidnRbERSsXPkXjfc45828103 = fZCQtPouOidnRbERSsXPkXjfc54954631;     fZCQtPouOidnRbERSsXPkXjfc54954631 = fZCQtPouOidnRbERSsXPkXjfc69390606;     fZCQtPouOidnRbERSsXPkXjfc69390606 = fZCQtPouOidnRbERSsXPkXjfc23900567;     fZCQtPouOidnRbERSsXPkXjfc23900567 = fZCQtPouOidnRbERSsXPkXjfc28682470;     fZCQtPouOidnRbERSsXPkXjfc28682470 = fZCQtPouOidnRbERSsXPkXjfc97774271;     fZCQtPouOidnRbERSsXPkXjfc97774271 = fZCQtPouOidnRbERSsXPkXjfc1183507;     fZCQtPouOidnRbERSsXPkXjfc1183507 = fZCQtPouOidnRbERSsXPkXjfc76945401;     fZCQtPouOidnRbERSsXPkXjfc76945401 = fZCQtPouOidnRbERSsXPkXjfc81841271;     fZCQtPouOidnRbERSsXPkXjfc81841271 = fZCQtPouOidnRbERSsXPkXjfc32866461;     fZCQtPouOidnRbERSsXPkXjfc32866461 = fZCQtPouOidnRbERSsXPkXjfc39107058;     fZCQtPouOidnRbERSsXPkXjfc39107058 = fZCQtPouOidnRbERSsXPkXjfc73169256;     fZCQtPouOidnRbERSsXPkXjfc73169256 = fZCQtPouOidnRbERSsXPkXjfc89015364;     fZCQtPouOidnRbERSsXPkXjfc89015364 = fZCQtPouOidnRbERSsXPkXjfc62293948;     fZCQtPouOidnRbERSsXPkXjfc62293948 = fZCQtPouOidnRbERSsXPkXjfc41733743;     fZCQtPouOidnRbERSsXPkXjfc41733743 = fZCQtPouOidnRbERSsXPkXjfc99418353;     fZCQtPouOidnRbERSsXPkXjfc99418353 = fZCQtPouOidnRbERSsXPkXjfc9498180;     fZCQtPouOidnRbERSsXPkXjfc9498180 = fZCQtPouOidnRbERSsXPkXjfc16182774;     fZCQtPouOidnRbERSsXPkXjfc16182774 = fZCQtPouOidnRbERSsXPkXjfc83176453;     fZCQtPouOidnRbERSsXPkXjfc83176453 = fZCQtPouOidnRbERSsXPkXjfc21391841;     fZCQtPouOidnRbERSsXPkXjfc21391841 = fZCQtPouOidnRbERSsXPkXjfc9652069;     fZCQtPouOidnRbERSsXPkXjfc9652069 = fZCQtPouOidnRbERSsXPkXjfc91485201;     fZCQtPouOidnRbERSsXPkXjfc91485201 = fZCQtPouOidnRbERSsXPkXjfc8021763;     fZCQtPouOidnRbERSsXPkXjfc8021763 = fZCQtPouOidnRbERSsXPkXjfc37055694;     fZCQtPouOidnRbERSsXPkXjfc37055694 = fZCQtPouOidnRbERSsXPkXjfc94366533;     fZCQtPouOidnRbERSsXPkXjfc94366533 = fZCQtPouOidnRbERSsXPkXjfc37961010;     fZCQtPouOidnRbERSsXPkXjfc37961010 = fZCQtPouOidnRbERSsXPkXjfc94308359;     fZCQtPouOidnRbERSsXPkXjfc94308359 = fZCQtPouOidnRbERSsXPkXjfc55320500;     fZCQtPouOidnRbERSsXPkXjfc55320500 = fZCQtPouOidnRbERSsXPkXjfc39185645;     fZCQtPouOidnRbERSsXPkXjfc39185645 = fZCQtPouOidnRbERSsXPkXjfc53972079;     fZCQtPouOidnRbERSsXPkXjfc53972079 = fZCQtPouOidnRbERSsXPkXjfc68199267;     fZCQtPouOidnRbERSsXPkXjfc68199267 = fZCQtPouOidnRbERSsXPkXjfc46234008;     fZCQtPouOidnRbERSsXPkXjfc46234008 = fZCQtPouOidnRbERSsXPkXjfc37147127;     fZCQtPouOidnRbERSsXPkXjfc37147127 = fZCQtPouOidnRbERSsXPkXjfc37622012;     fZCQtPouOidnRbERSsXPkXjfc37622012 = fZCQtPouOidnRbERSsXPkXjfc33963538;     fZCQtPouOidnRbERSsXPkXjfc33963538 = fZCQtPouOidnRbERSsXPkXjfc57839595;     fZCQtPouOidnRbERSsXPkXjfc57839595 = fZCQtPouOidnRbERSsXPkXjfc41920650;     fZCQtPouOidnRbERSsXPkXjfc41920650 = fZCQtPouOidnRbERSsXPkXjfc63828627;     fZCQtPouOidnRbERSsXPkXjfc63828627 = fZCQtPouOidnRbERSsXPkXjfc80740829;     fZCQtPouOidnRbERSsXPkXjfc80740829 = fZCQtPouOidnRbERSsXPkXjfc75259197;     fZCQtPouOidnRbERSsXPkXjfc75259197 = fZCQtPouOidnRbERSsXPkXjfc83547332;     fZCQtPouOidnRbERSsXPkXjfc83547332 = fZCQtPouOidnRbERSsXPkXjfc19127412;     fZCQtPouOidnRbERSsXPkXjfc19127412 = fZCQtPouOidnRbERSsXPkXjfc4724334;     fZCQtPouOidnRbERSsXPkXjfc4724334 = fZCQtPouOidnRbERSsXPkXjfc42384699;     fZCQtPouOidnRbERSsXPkXjfc42384699 = fZCQtPouOidnRbERSsXPkXjfc50281493;     fZCQtPouOidnRbERSsXPkXjfc50281493 = fZCQtPouOidnRbERSsXPkXjfc41187616;     fZCQtPouOidnRbERSsXPkXjfc41187616 = fZCQtPouOidnRbERSsXPkXjfc74589170;     fZCQtPouOidnRbERSsXPkXjfc74589170 = fZCQtPouOidnRbERSsXPkXjfc76756120;     fZCQtPouOidnRbERSsXPkXjfc76756120 = fZCQtPouOidnRbERSsXPkXjfc17895790;     fZCQtPouOidnRbERSsXPkXjfc17895790 = fZCQtPouOidnRbERSsXPkXjfc91870415;     fZCQtPouOidnRbERSsXPkXjfc91870415 = fZCQtPouOidnRbERSsXPkXjfc90171925;     fZCQtPouOidnRbERSsXPkXjfc90171925 = fZCQtPouOidnRbERSsXPkXjfc49517389;     fZCQtPouOidnRbERSsXPkXjfc49517389 = fZCQtPouOidnRbERSsXPkXjfc28698391;     fZCQtPouOidnRbERSsXPkXjfc28698391 = fZCQtPouOidnRbERSsXPkXjfc68947128;     fZCQtPouOidnRbERSsXPkXjfc68947128 = fZCQtPouOidnRbERSsXPkXjfc85870107;     fZCQtPouOidnRbERSsXPkXjfc85870107 = fZCQtPouOidnRbERSsXPkXjfc54342901;     fZCQtPouOidnRbERSsXPkXjfc54342901 = fZCQtPouOidnRbERSsXPkXjfc46932868;     fZCQtPouOidnRbERSsXPkXjfc46932868 = fZCQtPouOidnRbERSsXPkXjfc32334913;     fZCQtPouOidnRbERSsXPkXjfc32334913 = fZCQtPouOidnRbERSsXPkXjfc29534034;     fZCQtPouOidnRbERSsXPkXjfc29534034 = fZCQtPouOidnRbERSsXPkXjfc90721459;     fZCQtPouOidnRbERSsXPkXjfc90721459 = fZCQtPouOidnRbERSsXPkXjfc3465913;     fZCQtPouOidnRbERSsXPkXjfc3465913 = fZCQtPouOidnRbERSsXPkXjfc45863007;     fZCQtPouOidnRbERSsXPkXjfc45863007 = fZCQtPouOidnRbERSsXPkXjfc37759756;     fZCQtPouOidnRbERSsXPkXjfc37759756 = fZCQtPouOidnRbERSsXPkXjfc27869192;     fZCQtPouOidnRbERSsXPkXjfc27869192 = fZCQtPouOidnRbERSsXPkXjfc64667194;     fZCQtPouOidnRbERSsXPkXjfc64667194 = fZCQtPouOidnRbERSsXPkXjfc92873050;     fZCQtPouOidnRbERSsXPkXjfc92873050 = fZCQtPouOidnRbERSsXPkXjfc36022129;     fZCQtPouOidnRbERSsXPkXjfc36022129 = fZCQtPouOidnRbERSsXPkXjfc51393353;     fZCQtPouOidnRbERSsXPkXjfc51393353 = fZCQtPouOidnRbERSsXPkXjfc28330410;     fZCQtPouOidnRbERSsXPkXjfc28330410 = fZCQtPouOidnRbERSsXPkXjfc83894147;     fZCQtPouOidnRbERSsXPkXjfc83894147 = fZCQtPouOidnRbERSsXPkXjfc57497704;     fZCQtPouOidnRbERSsXPkXjfc57497704 = fZCQtPouOidnRbERSsXPkXjfc45669552;     fZCQtPouOidnRbERSsXPkXjfc45669552 = fZCQtPouOidnRbERSsXPkXjfc35441944;     fZCQtPouOidnRbERSsXPkXjfc35441944 = fZCQtPouOidnRbERSsXPkXjfc7917256;     fZCQtPouOidnRbERSsXPkXjfc7917256 = fZCQtPouOidnRbERSsXPkXjfc37844509;     fZCQtPouOidnRbERSsXPkXjfc37844509 = fZCQtPouOidnRbERSsXPkXjfc90524656;     fZCQtPouOidnRbERSsXPkXjfc90524656 = fZCQtPouOidnRbERSsXPkXjfc86760868;     fZCQtPouOidnRbERSsXPkXjfc86760868 = fZCQtPouOidnRbERSsXPkXjfc65637064;     fZCQtPouOidnRbERSsXPkXjfc65637064 = fZCQtPouOidnRbERSsXPkXjfc86774201;     fZCQtPouOidnRbERSsXPkXjfc86774201 = fZCQtPouOidnRbERSsXPkXjfc53178917;     fZCQtPouOidnRbERSsXPkXjfc53178917 = fZCQtPouOidnRbERSsXPkXjfc63371840;     fZCQtPouOidnRbERSsXPkXjfc63371840 = fZCQtPouOidnRbERSsXPkXjfc17552240;     fZCQtPouOidnRbERSsXPkXjfc17552240 = fZCQtPouOidnRbERSsXPkXjfc37424710;     fZCQtPouOidnRbERSsXPkXjfc37424710 = fZCQtPouOidnRbERSsXPkXjfc47315230;     fZCQtPouOidnRbERSsXPkXjfc47315230 = fZCQtPouOidnRbERSsXPkXjfc63800154;     fZCQtPouOidnRbERSsXPkXjfc63800154 = fZCQtPouOidnRbERSsXPkXjfc18681878;     fZCQtPouOidnRbERSsXPkXjfc18681878 = fZCQtPouOidnRbERSsXPkXjfc17535617;     fZCQtPouOidnRbERSsXPkXjfc17535617 = fZCQtPouOidnRbERSsXPkXjfc68199998;     fZCQtPouOidnRbERSsXPkXjfc68199998 = fZCQtPouOidnRbERSsXPkXjfc75251159;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void YejcYnfzsGIxfMCoxjdGnezuLuUvkGBchKKjwNvzMtAGnuiLPnDGLFDuf1614673() {     long pQeSkOlFfQUBTrjodutetGRLJ81368265 = -542630948;    long pQeSkOlFfQUBTrjodutetGRLJ32761830 = -933772775;    long pQeSkOlFfQUBTrjodutetGRLJ30399056 = 69141079;    long pQeSkOlFfQUBTrjodutetGRLJ90679315 = 14694480;    long pQeSkOlFfQUBTrjodutetGRLJ7945557 = -43409337;    long pQeSkOlFfQUBTrjodutetGRLJ51046734 = -274283165;    long pQeSkOlFfQUBTrjodutetGRLJ51777735 = -349238843;    long pQeSkOlFfQUBTrjodutetGRLJ49429996 = -872346327;    long pQeSkOlFfQUBTrjodutetGRLJ30342659 = -972988458;    long pQeSkOlFfQUBTrjodutetGRLJ53104503 = -483568913;    long pQeSkOlFfQUBTrjodutetGRLJ50449260 = -22545034;    long pQeSkOlFfQUBTrjodutetGRLJ27345219 = -812913334;    long pQeSkOlFfQUBTrjodutetGRLJ32037222 = -283070726;    long pQeSkOlFfQUBTrjodutetGRLJ38098308 = -177084578;    long pQeSkOlFfQUBTrjodutetGRLJ65133033 = -57779360;    long pQeSkOlFfQUBTrjodutetGRLJ65405960 = -598981479;    long pQeSkOlFfQUBTrjodutetGRLJ22518473 = -138445290;    long pQeSkOlFfQUBTrjodutetGRLJ94827424 = -175996540;    long pQeSkOlFfQUBTrjodutetGRLJ63013348 = -150939203;    long pQeSkOlFfQUBTrjodutetGRLJ57495566 = -28310434;    long pQeSkOlFfQUBTrjodutetGRLJ70394464 = -513358638;    long pQeSkOlFfQUBTrjodutetGRLJ19387485 = -959129757;    long pQeSkOlFfQUBTrjodutetGRLJ74697850 = -3115121;    long pQeSkOlFfQUBTrjodutetGRLJ57161630 = -328051149;    long pQeSkOlFfQUBTrjodutetGRLJ32715014 = -872028207;    long pQeSkOlFfQUBTrjodutetGRLJ87015623 = -38749040;    long pQeSkOlFfQUBTrjodutetGRLJ40193521 = -599816388;    long pQeSkOlFfQUBTrjodutetGRLJ12525480 = -120878555;    long pQeSkOlFfQUBTrjodutetGRLJ75630435 = -29561445;    long pQeSkOlFfQUBTrjodutetGRLJ84798410 = -922581076;    long pQeSkOlFfQUBTrjodutetGRLJ75419002 = -208561528;    long pQeSkOlFfQUBTrjodutetGRLJ19002463 = -203608339;    long pQeSkOlFfQUBTrjodutetGRLJ19363017 = -63901607;    long pQeSkOlFfQUBTrjodutetGRLJ86315766 = -5498333;    long pQeSkOlFfQUBTrjodutetGRLJ69496415 = -542677168;    long pQeSkOlFfQUBTrjodutetGRLJ5781607 = -678218603;    long pQeSkOlFfQUBTrjodutetGRLJ75628468 = -150774251;    long pQeSkOlFfQUBTrjodutetGRLJ72051222 = -244474377;    long pQeSkOlFfQUBTrjodutetGRLJ67918613 = -868798957;    long pQeSkOlFfQUBTrjodutetGRLJ42822437 = -973790906;    long pQeSkOlFfQUBTrjodutetGRLJ44854869 = -667910215;    long pQeSkOlFfQUBTrjodutetGRLJ86122536 = -168380272;    long pQeSkOlFfQUBTrjodutetGRLJ46266245 = -980077569;    long pQeSkOlFfQUBTrjodutetGRLJ33641748 = -910379955;    long pQeSkOlFfQUBTrjodutetGRLJ49099592 = -794782999;    long pQeSkOlFfQUBTrjodutetGRLJ49561207 = -662192774;    long pQeSkOlFfQUBTrjodutetGRLJ51742113 = -590627817;    long pQeSkOlFfQUBTrjodutetGRLJ65796536 = -567959285;    long pQeSkOlFfQUBTrjodutetGRLJ51596379 = -325345159;    long pQeSkOlFfQUBTrjodutetGRLJ76740280 = 50642938;    long pQeSkOlFfQUBTrjodutetGRLJ16441508 = -699925966;    long pQeSkOlFfQUBTrjodutetGRLJ86068916 = -588450727;    long pQeSkOlFfQUBTrjodutetGRLJ31795790 = -741118830;    long pQeSkOlFfQUBTrjodutetGRLJ15096292 = -256170844;    long pQeSkOlFfQUBTrjodutetGRLJ31220209 = -192460616;    long pQeSkOlFfQUBTrjodutetGRLJ61980781 = -583501191;    long pQeSkOlFfQUBTrjodutetGRLJ58063980 = -830657655;    long pQeSkOlFfQUBTrjodutetGRLJ73237426 = -602807773;    long pQeSkOlFfQUBTrjodutetGRLJ57964301 = -113277314;    long pQeSkOlFfQUBTrjodutetGRLJ20929933 = 95339702;    long pQeSkOlFfQUBTrjodutetGRLJ10853214 = -674466777;    long pQeSkOlFfQUBTrjodutetGRLJ39252256 = -128360288;    long pQeSkOlFfQUBTrjodutetGRLJ73799560 = -742784883;    long pQeSkOlFfQUBTrjodutetGRLJ45544248 = 49592618;    long pQeSkOlFfQUBTrjodutetGRLJ77685501 = -175007385;    long pQeSkOlFfQUBTrjodutetGRLJ31446797 = -818936696;    long pQeSkOlFfQUBTrjodutetGRLJ7982202 = -649011727;    long pQeSkOlFfQUBTrjodutetGRLJ45721456 = -177572394;    long pQeSkOlFfQUBTrjodutetGRLJ68601893 = -634407410;    long pQeSkOlFfQUBTrjodutetGRLJ59351426 = -379560758;    long pQeSkOlFfQUBTrjodutetGRLJ89777492 = -348207228;    long pQeSkOlFfQUBTrjodutetGRLJ50467250 = -893970913;    long pQeSkOlFfQUBTrjodutetGRLJ26908812 = -307197584;    long pQeSkOlFfQUBTrjodutetGRLJ20190911 = -177148297;    long pQeSkOlFfQUBTrjodutetGRLJ12640698 = -360400220;    long pQeSkOlFfQUBTrjodutetGRLJ84271927 = -244978366;    long pQeSkOlFfQUBTrjodutetGRLJ73121239 = -979052188;    long pQeSkOlFfQUBTrjodutetGRLJ41056102 = -92735167;    long pQeSkOlFfQUBTrjodutetGRLJ8062038 = -533268150;    long pQeSkOlFfQUBTrjodutetGRLJ83153807 = -109835433;    long pQeSkOlFfQUBTrjodutetGRLJ35273511 = -448121223;    long pQeSkOlFfQUBTrjodutetGRLJ74396984 = 68142896;    long pQeSkOlFfQUBTrjodutetGRLJ60929100 = -795533396;    long pQeSkOlFfQUBTrjodutetGRLJ98890155 = 19795617;    long pQeSkOlFfQUBTrjodutetGRLJ68356903 = -122655111;    long pQeSkOlFfQUBTrjodutetGRLJ89350085 = -620110802;    long pQeSkOlFfQUBTrjodutetGRLJ87206672 = -462489509;    long pQeSkOlFfQUBTrjodutetGRLJ4266725 = -807730763;    long pQeSkOlFfQUBTrjodutetGRLJ55095558 = -813037717;    long pQeSkOlFfQUBTrjodutetGRLJ7515634 = -959175977;    long pQeSkOlFfQUBTrjodutetGRLJ47717627 = -847560949;    long pQeSkOlFfQUBTrjodutetGRLJ2391042 = -547966479;    long pQeSkOlFfQUBTrjodutetGRLJ14086922 = -31197064;    long pQeSkOlFfQUBTrjodutetGRLJ46988680 = -864138659;    long pQeSkOlFfQUBTrjodutetGRLJ31969224 = -199324129;    long pQeSkOlFfQUBTrjodutetGRLJ5602614 = -439549927;    long pQeSkOlFfQUBTrjodutetGRLJ12322976 = -425595390;    long pQeSkOlFfQUBTrjodutetGRLJ721998 = -929670188;    long pQeSkOlFfQUBTrjodutetGRLJ55956247 = -635372570;    long pQeSkOlFfQUBTrjodutetGRLJ17652796 = -542630948;     pQeSkOlFfQUBTrjodutetGRLJ81368265 = pQeSkOlFfQUBTrjodutetGRLJ32761830;     pQeSkOlFfQUBTrjodutetGRLJ32761830 = pQeSkOlFfQUBTrjodutetGRLJ30399056;     pQeSkOlFfQUBTrjodutetGRLJ30399056 = pQeSkOlFfQUBTrjodutetGRLJ90679315;     pQeSkOlFfQUBTrjodutetGRLJ90679315 = pQeSkOlFfQUBTrjodutetGRLJ7945557;     pQeSkOlFfQUBTrjodutetGRLJ7945557 = pQeSkOlFfQUBTrjodutetGRLJ51046734;     pQeSkOlFfQUBTrjodutetGRLJ51046734 = pQeSkOlFfQUBTrjodutetGRLJ51777735;     pQeSkOlFfQUBTrjodutetGRLJ51777735 = pQeSkOlFfQUBTrjodutetGRLJ49429996;     pQeSkOlFfQUBTrjodutetGRLJ49429996 = pQeSkOlFfQUBTrjodutetGRLJ30342659;     pQeSkOlFfQUBTrjodutetGRLJ30342659 = pQeSkOlFfQUBTrjodutetGRLJ53104503;     pQeSkOlFfQUBTrjodutetGRLJ53104503 = pQeSkOlFfQUBTrjodutetGRLJ50449260;     pQeSkOlFfQUBTrjodutetGRLJ50449260 = pQeSkOlFfQUBTrjodutetGRLJ27345219;     pQeSkOlFfQUBTrjodutetGRLJ27345219 = pQeSkOlFfQUBTrjodutetGRLJ32037222;     pQeSkOlFfQUBTrjodutetGRLJ32037222 = pQeSkOlFfQUBTrjodutetGRLJ38098308;     pQeSkOlFfQUBTrjodutetGRLJ38098308 = pQeSkOlFfQUBTrjodutetGRLJ65133033;     pQeSkOlFfQUBTrjodutetGRLJ65133033 = pQeSkOlFfQUBTrjodutetGRLJ65405960;     pQeSkOlFfQUBTrjodutetGRLJ65405960 = pQeSkOlFfQUBTrjodutetGRLJ22518473;     pQeSkOlFfQUBTrjodutetGRLJ22518473 = pQeSkOlFfQUBTrjodutetGRLJ94827424;     pQeSkOlFfQUBTrjodutetGRLJ94827424 = pQeSkOlFfQUBTrjodutetGRLJ63013348;     pQeSkOlFfQUBTrjodutetGRLJ63013348 = pQeSkOlFfQUBTrjodutetGRLJ57495566;     pQeSkOlFfQUBTrjodutetGRLJ57495566 = pQeSkOlFfQUBTrjodutetGRLJ70394464;     pQeSkOlFfQUBTrjodutetGRLJ70394464 = pQeSkOlFfQUBTrjodutetGRLJ19387485;     pQeSkOlFfQUBTrjodutetGRLJ19387485 = pQeSkOlFfQUBTrjodutetGRLJ74697850;     pQeSkOlFfQUBTrjodutetGRLJ74697850 = pQeSkOlFfQUBTrjodutetGRLJ57161630;     pQeSkOlFfQUBTrjodutetGRLJ57161630 = pQeSkOlFfQUBTrjodutetGRLJ32715014;     pQeSkOlFfQUBTrjodutetGRLJ32715014 = pQeSkOlFfQUBTrjodutetGRLJ87015623;     pQeSkOlFfQUBTrjodutetGRLJ87015623 = pQeSkOlFfQUBTrjodutetGRLJ40193521;     pQeSkOlFfQUBTrjodutetGRLJ40193521 = pQeSkOlFfQUBTrjodutetGRLJ12525480;     pQeSkOlFfQUBTrjodutetGRLJ12525480 = pQeSkOlFfQUBTrjodutetGRLJ75630435;     pQeSkOlFfQUBTrjodutetGRLJ75630435 = pQeSkOlFfQUBTrjodutetGRLJ84798410;     pQeSkOlFfQUBTrjodutetGRLJ84798410 = pQeSkOlFfQUBTrjodutetGRLJ75419002;     pQeSkOlFfQUBTrjodutetGRLJ75419002 = pQeSkOlFfQUBTrjodutetGRLJ19002463;     pQeSkOlFfQUBTrjodutetGRLJ19002463 = pQeSkOlFfQUBTrjodutetGRLJ19363017;     pQeSkOlFfQUBTrjodutetGRLJ19363017 = pQeSkOlFfQUBTrjodutetGRLJ86315766;     pQeSkOlFfQUBTrjodutetGRLJ86315766 = pQeSkOlFfQUBTrjodutetGRLJ69496415;     pQeSkOlFfQUBTrjodutetGRLJ69496415 = pQeSkOlFfQUBTrjodutetGRLJ5781607;     pQeSkOlFfQUBTrjodutetGRLJ5781607 = pQeSkOlFfQUBTrjodutetGRLJ75628468;     pQeSkOlFfQUBTrjodutetGRLJ75628468 = pQeSkOlFfQUBTrjodutetGRLJ72051222;     pQeSkOlFfQUBTrjodutetGRLJ72051222 = pQeSkOlFfQUBTrjodutetGRLJ67918613;     pQeSkOlFfQUBTrjodutetGRLJ67918613 = pQeSkOlFfQUBTrjodutetGRLJ42822437;     pQeSkOlFfQUBTrjodutetGRLJ42822437 = pQeSkOlFfQUBTrjodutetGRLJ44854869;     pQeSkOlFfQUBTrjodutetGRLJ44854869 = pQeSkOlFfQUBTrjodutetGRLJ86122536;     pQeSkOlFfQUBTrjodutetGRLJ86122536 = pQeSkOlFfQUBTrjodutetGRLJ46266245;     pQeSkOlFfQUBTrjodutetGRLJ46266245 = pQeSkOlFfQUBTrjodutetGRLJ33641748;     pQeSkOlFfQUBTrjodutetGRLJ33641748 = pQeSkOlFfQUBTrjodutetGRLJ49099592;     pQeSkOlFfQUBTrjodutetGRLJ49099592 = pQeSkOlFfQUBTrjodutetGRLJ49561207;     pQeSkOlFfQUBTrjodutetGRLJ49561207 = pQeSkOlFfQUBTrjodutetGRLJ51742113;     pQeSkOlFfQUBTrjodutetGRLJ51742113 = pQeSkOlFfQUBTrjodutetGRLJ65796536;     pQeSkOlFfQUBTrjodutetGRLJ65796536 = pQeSkOlFfQUBTrjodutetGRLJ51596379;     pQeSkOlFfQUBTrjodutetGRLJ51596379 = pQeSkOlFfQUBTrjodutetGRLJ76740280;     pQeSkOlFfQUBTrjodutetGRLJ76740280 = pQeSkOlFfQUBTrjodutetGRLJ16441508;     pQeSkOlFfQUBTrjodutetGRLJ16441508 = pQeSkOlFfQUBTrjodutetGRLJ86068916;     pQeSkOlFfQUBTrjodutetGRLJ86068916 = pQeSkOlFfQUBTrjodutetGRLJ31795790;     pQeSkOlFfQUBTrjodutetGRLJ31795790 = pQeSkOlFfQUBTrjodutetGRLJ15096292;     pQeSkOlFfQUBTrjodutetGRLJ15096292 = pQeSkOlFfQUBTrjodutetGRLJ31220209;     pQeSkOlFfQUBTrjodutetGRLJ31220209 = pQeSkOlFfQUBTrjodutetGRLJ61980781;     pQeSkOlFfQUBTrjodutetGRLJ61980781 = pQeSkOlFfQUBTrjodutetGRLJ58063980;     pQeSkOlFfQUBTrjodutetGRLJ58063980 = pQeSkOlFfQUBTrjodutetGRLJ73237426;     pQeSkOlFfQUBTrjodutetGRLJ73237426 = pQeSkOlFfQUBTrjodutetGRLJ57964301;     pQeSkOlFfQUBTrjodutetGRLJ57964301 = pQeSkOlFfQUBTrjodutetGRLJ20929933;     pQeSkOlFfQUBTrjodutetGRLJ20929933 = pQeSkOlFfQUBTrjodutetGRLJ10853214;     pQeSkOlFfQUBTrjodutetGRLJ10853214 = pQeSkOlFfQUBTrjodutetGRLJ39252256;     pQeSkOlFfQUBTrjodutetGRLJ39252256 = pQeSkOlFfQUBTrjodutetGRLJ73799560;     pQeSkOlFfQUBTrjodutetGRLJ73799560 = pQeSkOlFfQUBTrjodutetGRLJ45544248;     pQeSkOlFfQUBTrjodutetGRLJ45544248 = pQeSkOlFfQUBTrjodutetGRLJ77685501;     pQeSkOlFfQUBTrjodutetGRLJ77685501 = pQeSkOlFfQUBTrjodutetGRLJ31446797;     pQeSkOlFfQUBTrjodutetGRLJ31446797 = pQeSkOlFfQUBTrjodutetGRLJ7982202;     pQeSkOlFfQUBTrjodutetGRLJ7982202 = pQeSkOlFfQUBTrjodutetGRLJ45721456;     pQeSkOlFfQUBTrjodutetGRLJ45721456 = pQeSkOlFfQUBTrjodutetGRLJ68601893;     pQeSkOlFfQUBTrjodutetGRLJ68601893 = pQeSkOlFfQUBTrjodutetGRLJ59351426;     pQeSkOlFfQUBTrjodutetGRLJ59351426 = pQeSkOlFfQUBTrjodutetGRLJ89777492;     pQeSkOlFfQUBTrjodutetGRLJ89777492 = pQeSkOlFfQUBTrjodutetGRLJ50467250;     pQeSkOlFfQUBTrjodutetGRLJ50467250 = pQeSkOlFfQUBTrjodutetGRLJ26908812;     pQeSkOlFfQUBTrjodutetGRLJ26908812 = pQeSkOlFfQUBTrjodutetGRLJ20190911;     pQeSkOlFfQUBTrjodutetGRLJ20190911 = pQeSkOlFfQUBTrjodutetGRLJ12640698;     pQeSkOlFfQUBTrjodutetGRLJ12640698 = pQeSkOlFfQUBTrjodutetGRLJ84271927;     pQeSkOlFfQUBTrjodutetGRLJ84271927 = pQeSkOlFfQUBTrjodutetGRLJ73121239;     pQeSkOlFfQUBTrjodutetGRLJ73121239 = pQeSkOlFfQUBTrjodutetGRLJ41056102;     pQeSkOlFfQUBTrjodutetGRLJ41056102 = pQeSkOlFfQUBTrjodutetGRLJ8062038;     pQeSkOlFfQUBTrjodutetGRLJ8062038 = pQeSkOlFfQUBTrjodutetGRLJ83153807;     pQeSkOlFfQUBTrjodutetGRLJ83153807 = pQeSkOlFfQUBTrjodutetGRLJ35273511;     pQeSkOlFfQUBTrjodutetGRLJ35273511 = pQeSkOlFfQUBTrjodutetGRLJ74396984;     pQeSkOlFfQUBTrjodutetGRLJ74396984 = pQeSkOlFfQUBTrjodutetGRLJ60929100;     pQeSkOlFfQUBTrjodutetGRLJ60929100 = pQeSkOlFfQUBTrjodutetGRLJ98890155;     pQeSkOlFfQUBTrjodutetGRLJ98890155 = pQeSkOlFfQUBTrjodutetGRLJ68356903;     pQeSkOlFfQUBTrjodutetGRLJ68356903 = pQeSkOlFfQUBTrjodutetGRLJ89350085;     pQeSkOlFfQUBTrjodutetGRLJ89350085 = pQeSkOlFfQUBTrjodutetGRLJ87206672;     pQeSkOlFfQUBTrjodutetGRLJ87206672 = pQeSkOlFfQUBTrjodutetGRLJ4266725;     pQeSkOlFfQUBTrjodutetGRLJ4266725 = pQeSkOlFfQUBTrjodutetGRLJ55095558;     pQeSkOlFfQUBTrjodutetGRLJ55095558 = pQeSkOlFfQUBTrjodutetGRLJ7515634;     pQeSkOlFfQUBTrjodutetGRLJ7515634 = pQeSkOlFfQUBTrjodutetGRLJ47717627;     pQeSkOlFfQUBTrjodutetGRLJ47717627 = pQeSkOlFfQUBTrjodutetGRLJ2391042;     pQeSkOlFfQUBTrjodutetGRLJ2391042 = pQeSkOlFfQUBTrjodutetGRLJ14086922;     pQeSkOlFfQUBTrjodutetGRLJ14086922 = pQeSkOlFfQUBTrjodutetGRLJ46988680;     pQeSkOlFfQUBTrjodutetGRLJ46988680 = pQeSkOlFfQUBTrjodutetGRLJ31969224;     pQeSkOlFfQUBTrjodutetGRLJ31969224 = pQeSkOlFfQUBTrjodutetGRLJ5602614;     pQeSkOlFfQUBTrjodutetGRLJ5602614 = pQeSkOlFfQUBTrjodutetGRLJ12322976;     pQeSkOlFfQUBTrjodutetGRLJ12322976 = pQeSkOlFfQUBTrjodutetGRLJ721998;     pQeSkOlFfQUBTrjodutetGRLJ721998 = pQeSkOlFfQUBTrjodutetGRLJ55956247;     pQeSkOlFfQUBTrjodutetGRLJ55956247 = pQeSkOlFfQUBTrjodutetGRLJ17652796;     pQeSkOlFfQUBTrjodutetGRLJ17652796 = pQeSkOlFfQUBTrjodutetGRLJ81368265;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void hVAGFZupuUxwbKzwgBcBdFtCFViNzomkAXgxiSsFzBkjYwuULsLDWebbc68906272() {     long yBkrgqFhMwDdBNNIXCcUJeIbO16827234 = 91092153;    long yBkrgqFhMwDdBNNIXCcUJeIbO46033908 = -814324382;    long yBkrgqFhMwDdBNNIXCcUJeIbO67785532 = -696525996;    long yBkrgqFhMwDdBNNIXCcUJeIbO62902670 = -906456591;    long yBkrgqFhMwDdBNNIXCcUJeIbO64230826 = -149008183;    long yBkrgqFhMwDdBNNIXCcUJeIbO87269606 = -536631060;    long yBkrgqFhMwDdBNNIXCcUJeIbO62435141 = -193964577;    long yBkrgqFhMwDdBNNIXCcUJeIbO11561557 = -516580468;    long yBkrgqFhMwDdBNNIXCcUJeIbO31860264 = -361319865;    long yBkrgqFhMwDdBNNIXCcUJeIbO68007215 = -148255911;    long yBkrgqFhMwDdBNNIXCcUJeIbO88630994 = -924552763;    long yBkrgqFhMwDdBNNIXCcUJeIbO27913367 = -677034105;    long yBkrgqFhMwDdBNNIXCcUJeIbO70271867 = -835083231;    long yBkrgqFhMwDdBNNIXCcUJeIbO91239170 = -153447987;    long yBkrgqFhMwDdBNNIXCcUJeIbO23327550 = -561204375;    long yBkrgqFhMwDdBNNIXCcUJeIbO48947261 = -234793086;    long yBkrgqFhMwDdBNNIXCcUJeIbO78354408 = -665419843;    long yBkrgqFhMwDdBNNIXCcUJeIbO94587616 = -249424609;    long yBkrgqFhMwDdBNNIXCcUJeIbO63563678 = -467502624;    long yBkrgqFhMwDdBNNIXCcUJeIbO51332785 = -454871500;    long yBkrgqFhMwDdBNNIXCcUJeIbO83481327 = -170633326;    long yBkrgqFhMwDdBNNIXCcUJeIbO22809009 = 54233949;    long yBkrgqFhMwDdBNNIXCcUJeIbO45223230 = -740747305;    long yBkrgqFhMwDdBNNIXCcUJeIbO50954575 = -838875753;    long yBkrgqFhMwDdBNNIXCcUJeIbO40732966 = -896013405;    long yBkrgqFhMwDdBNNIXCcUJeIbO97713795 = -827325847;    long yBkrgqFhMwDdBNNIXCcUJeIbO614095 = -406100529;    long yBkrgqFhMwDdBNNIXCcUJeIbO53253904 = -290650730;    long yBkrgqFhMwDdBNNIXCcUJeIbO22298650 = -603656247;    long yBkrgqFhMwDdBNNIXCcUJeIbO90331821 = -957088247;    long yBkrgqFhMwDdBNNIXCcUJeIbO94002234 = -760542015;    long yBkrgqFhMwDdBNNIXCcUJeIbO56825481 = 23420247;    long yBkrgqFhMwDdBNNIXCcUJeIbO31581028 = -211497584;    long yBkrgqFhMwDdBNNIXCcUJeIbO16064193 = -70192147;    long yBkrgqFhMwDdBNNIXCcUJeIbO35304869 = -493777419;    long yBkrgqFhMwDdBNNIXCcUJeIbO57342451 = -892783909;    long yBkrgqFhMwDdBNNIXCcUJeIbO25040285 = -15470291;    long yBkrgqFhMwDdBNNIXCcUJeIbO23266626 = -227129958;    long yBkrgqFhMwDdBNNIXCcUJeIbO98309174 = -519675233;    long yBkrgqFhMwDdBNNIXCcUJeIbO7093970 = -439053452;    long yBkrgqFhMwDdBNNIXCcUJeIbO78306476 = -437109129;    long yBkrgqFhMwDdBNNIXCcUJeIbO75487663 = -862925563;    long yBkrgqFhMwDdBNNIXCcUJeIbO35649624 = -533258355;    long yBkrgqFhMwDdBNNIXCcUJeIbO73773086 = -414712365;    long yBkrgqFhMwDdBNNIXCcUJeIbO49116051 = -621294161;    long yBkrgqFhMwDdBNNIXCcUJeIbO95522535 = -701116406;    long yBkrgqFhMwDdBNNIXCcUJeIbO71087276 = 25385822;    long yBkrgqFhMwDdBNNIXCcUJeIbO83522848 = -734485878;    long yBkrgqFhMwDdBNNIXCcUJeIbO74489045 = 10917960;    long yBkrgqFhMwDdBNNIXCcUJeIbO1269870 = -440383878;    long yBkrgqFhMwDdBNNIXCcUJeIbO97212231 = -574202524;    long yBkrgqFhMwDdBNNIXCcUJeIbO69554389 = -802103074;    long yBkrgqFhMwDdBNNIXCcUJeIbO416939 = -497164384;    long yBkrgqFhMwDdBNNIXCcUJeIbO31088139 = -447679344;    long yBkrgqFhMwDdBNNIXCcUJeIbO85424944 = -538950762;    long yBkrgqFhMwDdBNNIXCcUJeIbO94018225 = -963141797;    long yBkrgqFhMwDdBNNIXCcUJeIbO810679 = 26422923;    long yBkrgqFhMwDdBNNIXCcUJeIbO16830958 = -857650244;    long yBkrgqFhMwDdBNNIXCcUJeIbO22169705 = 89556813;    long yBkrgqFhMwDdBNNIXCcUJeIbO66517030 = -321682336;    long yBkrgqFhMwDdBNNIXCcUJeIbO86655511 = -30530532;    long yBkrgqFhMwDdBNNIXCcUJeIbO9181238 = -903313848;    long yBkrgqFhMwDdBNNIXCcUJeIbO89262907 = -912924221;    long yBkrgqFhMwDdBNNIXCcUJeIbO41528442 = -404231618;    long yBkrgqFhMwDdBNNIXCcUJeIbO74004981 = -387713896;    long yBkrgqFhMwDdBNNIXCcUJeIbO31805513 = -847973011;    long yBkrgqFhMwDdBNNIXCcUJeIbO96332339 = -365536521;    long yBkrgqFhMwDdBNNIXCcUJeIbO54207675 = -664891085;    long yBkrgqFhMwDdBNNIXCcUJeIbO55934302 = -659670569;    long yBkrgqFhMwDdBNNIXCcUJeIbO65985098 = -668420467;    long yBkrgqFhMwDdBNNIXCcUJeIbO23906977 = -119322795;    long yBkrgqFhMwDdBNNIXCcUJeIbO55087782 = -338289885;    long yBkrgqFhMwDdBNNIXCcUJeIbO96278441 = -729749376;    long yBkrgqFhMwDdBNNIXCcUJeIbO56469708 = 71550827;    long yBkrgqFhMwDdBNNIXCcUJeIbO73026308 = 82237628;    long yBkrgqFhMwDdBNNIXCcUJeIbO7993664 = -307707764;    long yBkrgqFhMwDdBNNIXCcUJeIbO87159385 = -412507696;    long yBkrgqFhMwDdBNNIXCcUJeIbO71450143 = -226034941;    long yBkrgqFhMwDdBNNIXCcUJeIbO1838525 = -117581593;    long yBkrgqFhMwDdBNNIXCcUJeIbO45210431 = -94896999;    long yBkrgqFhMwDdBNNIXCcUJeIbO26626519 = -752711670;    long yBkrgqFhMwDdBNNIXCcUJeIbO17091247 = -671614651;    long yBkrgqFhMwDdBNNIXCcUJeIbO78764859 = -201568691;    long yBkrgqFhMwDdBNNIXCcUJeIbO21028781 = -63272370;    long yBkrgqFhMwDdBNNIXCcUJeIbO93119589 = -282885724;    long yBkrgqFhMwDdBNNIXCcUJeIbO24447845 = -958438942;    long yBkrgqFhMwDdBNNIXCcUJeIbO56408543 = -479415370;    long yBkrgqFhMwDdBNNIXCcUJeIbO492890 = -763818241;    long yBkrgqFhMwDdBNNIXCcUJeIbO30639248 = -531241385;    long yBkrgqFhMwDdBNNIXCcUJeIbO41286643 = -530635622;    long yBkrgqFhMwDdBNNIXCcUJeIbO56531772 = -819206832;    long yBkrgqFhMwDdBNNIXCcUJeIbO8209327 = -157820048;    long yBkrgqFhMwDdBNNIXCcUJeIbO1096922 = -216686772;    long yBkrgqFhMwDdBNNIXCcUJeIbO31792144 = -97992897;    long yBkrgqFhMwDdBNNIXCcUJeIbO20438458 = -308522921;    long yBkrgqFhMwDdBNNIXCcUJeIbO69125239 = -533795281;    long yBkrgqFhMwDdBNNIXCcUJeIbO86224756 = -950001343;    long yBkrgqFhMwDdBNNIXCcUJeIbO94121181 = -29026737;    long yBkrgqFhMwDdBNNIXCcUJeIbO99768105 = 73001531;    long yBkrgqFhMwDdBNNIXCcUJeIbO17310538 = 91092153;     yBkrgqFhMwDdBNNIXCcUJeIbO16827234 = yBkrgqFhMwDdBNNIXCcUJeIbO46033908;     yBkrgqFhMwDdBNNIXCcUJeIbO46033908 = yBkrgqFhMwDdBNNIXCcUJeIbO67785532;     yBkrgqFhMwDdBNNIXCcUJeIbO67785532 = yBkrgqFhMwDdBNNIXCcUJeIbO62902670;     yBkrgqFhMwDdBNNIXCcUJeIbO62902670 = yBkrgqFhMwDdBNNIXCcUJeIbO64230826;     yBkrgqFhMwDdBNNIXCcUJeIbO64230826 = yBkrgqFhMwDdBNNIXCcUJeIbO87269606;     yBkrgqFhMwDdBNNIXCcUJeIbO87269606 = yBkrgqFhMwDdBNNIXCcUJeIbO62435141;     yBkrgqFhMwDdBNNIXCcUJeIbO62435141 = yBkrgqFhMwDdBNNIXCcUJeIbO11561557;     yBkrgqFhMwDdBNNIXCcUJeIbO11561557 = yBkrgqFhMwDdBNNIXCcUJeIbO31860264;     yBkrgqFhMwDdBNNIXCcUJeIbO31860264 = yBkrgqFhMwDdBNNIXCcUJeIbO68007215;     yBkrgqFhMwDdBNNIXCcUJeIbO68007215 = yBkrgqFhMwDdBNNIXCcUJeIbO88630994;     yBkrgqFhMwDdBNNIXCcUJeIbO88630994 = yBkrgqFhMwDdBNNIXCcUJeIbO27913367;     yBkrgqFhMwDdBNNIXCcUJeIbO27913367 = yBkrgqFhMwDdBNNIXCcUJeIbO70271867;     yBkrgqFhMwDdBNNIXCcUJeIbO70271867 = yBkrgqFhMwDdBNNIXCcUJeIbO91239170;     yBkrgqFhMwDdBNNIXCcUJeIbO91239170 = yBkrgqFhMwDdBNNIXCcUJeIbO23327550;     yBkrgqFhMwDdBNNIXCcUJeIbO23327550 = yBkrgqFhMwDdBNNIXCcUJeIbO48947261;     yBkrgqFhMwDdBNNIXCcUJeIbO48947261 = yBkrgqFhMwDdBNNIXCcUJeIbO78354408;     yBkrgqFhMwDdBNNIXCcUJeIbO78354408 = yBkrgqFhMwDdBNNIXCcUJeIbO94587616;     yBkrgqFhMwDdBNNIXCcUJeIbO94587616 = yBkrgqFhMwDdBNNIXCcUJeIbO63563678;     yBkrgqFhMwDdBNNIXCcUJeIbO63563678 = yBkrgqFhMwDdBNNIXCcUJeIbO51332785;     yBkrgqFhMwDdBNNIXCcUJeIbO51332785 = yBkrgqFhMwDdBNNIXCcUJeIbO83481327;     yBkrgqFhMwDdBNNIXCcUJeIbO83481327 = yBkrgqFhMwDdBNNIXCcUJeIbO22809009;     yBkrgqFhMwDdBNNIXCcUJeIbO22809009 = yBkrgqFhMwDdBNNIXCcUJeIbO45223230;     yBkrgqFhMwDdBNNIXCcUJeIbO45223230 = yBkrgqFhMwDdBNNIXCcUJeIbO50954575;     yBkrgqFhMwDdBNNIXCcUJeIbO50954575 = yBkrgqFhMwDdBNNIXCcUJeIbO40732966;     yBkrgqFhMwDdBNNIXCcUJeIbO40732966 = yBkrgqFhMwDdBNNIXCcUJeIbO97713795;     yBkrgqFhMwDdBNNIXCcUJeIbO97713795 = yBkrgqFhMwDdBNNIXCcUJeIbO614095;     yBkrgqFhMwDdBNNIXCcUJeIbO614095 = yBkrgqFhMwDdBNNIXCcUJeIbO53253904;     yBkrgqFhMwDdBNNIXCcUJeIbO53253904 = yBkrgqFhMwDdBNNIXCcUJeIbO22298650;     yBkrgqFhMwDdBNNIXCcUJeIbO22298650 = yBkrgqFhMwDdBNNIXCcUJeIbO90331821;     yBkrgqFhMwDdBNNIXCcUJeIbO90331821 = yBkrgqFhMwDdBNNIXCcUJeIbO94002234;     yBkrgqFhMwDdBNNIXCcUJeIbO94002234 = yBkrgqFhMwDdBNNIXCcUJeIbO56825481;     yBkrgqFhMwDdBNNIXCcUJeIbO56825481 = yBkrgqFhMwDdBNNIXCcUJeIbO31581028;     yBkrgqFhMwDdBNNIXCcUJeIbO31581028 = yBkrgqFhMwDdBNNIXCcUJeIbO16064193;     yBkrgqFhMwDdBNNIXCcUJeIbO16064193 = yBkrgqFhMwDdBNNIXCcUJeIbO35304869;     yBkrgqFhMwDdBNNIXCcUJeIbO35304869 = yBkrgqFhMwDdBNNIXCcUJeIbO57342451;     yBkrgqFhMwDdBNNIXCcUJeIbO57342451 = yBkrgqFhMwDdBNNIXCcUJeIbO25040285;     yBkrgqFhMwDdBNNIXCcUJeIbO25040285 = yBkrgqFhMwDdBNNIXCcUJeIbO23266626;     yBkrgqFhMwDdBNNIXCcUJeIbO23266626 = yBkrgqFhMwDdBNNIXCcUJeIbO98309174;     yBkrgqFhMwDdBNNIXCcUJeIbO98309174 = yBkrgqFhMwDdBNNIXCcUJeIbO7093970;     yBkrgqFhMwDdBNNIXCcUJeIbO7093970 = yBkrgqFhMwDdBNNIXCcUJeIbO78306476;     yBkrgqFhMwDdBNNIXCcUJeIbO78306476 = yBkrgqFhMwDdBNNIXCcUJeIbO75487663;     yBkrgqFhMwDdBNNIXCcUJeIbO75487663 = yBkrgqFhMwDdBNNIXCcUJeIbO35649624;     yBkrgqFhMwDdBNNIXCcUJeIbO35649624 = yBkrgqFhMwDdBNNIXCcUJeIbO73773086;     yBkrgqFhMwDdBNNIXCcUJeIbO73773086 = yBkrgqFhMwDdBNNIXCcUJeIbO49116051;     yBkrgqFhMwDdBNNIXCcUJeIbO49116051 = yBkrgqFhMwDdBNNIXCcUJeIbO95522535;     yBkrgqFhMwDdBNNIXCcUJeIbO95522535 = yBkrgqFhMwDdBNNIXCcUJeIbO71087276;     yBkrgqFhMwDdBNNIXCcUJeIbO71087276 = yBkrgqFhMwDdBNNIXCcUJeIbO83522848;     yBkrgqFhMwDdBNNIXCcUJeIbO83522848 = yBkrgqFhMwDdBNNIXCcUJeIbO74489045;     yBkrgqFhMwDdBNNIXCcUJeIbO74489045 = yBkrgqFhMwDdBNNIXCcUJeIbO1269870;     yBkrgqFhMwDdBNNIXCcUJeIbO1269870 = yBkrgqFhMwDdBNNIXCcUJeIbO97212231;     yBkrgqFhMwDdBNNIXCcUJeIbO97212231 = yBkrgqFhMwDdBNNIXCcUJeIbO69554389;     yBkrgqFhMwDdBNNIXCcUJeIbO69554389 = yBkrgqFhMwDdBNNIXCcUJeIbO416939;     yBkrgqFhMwDdBNNIXCcUJeIbO416939 = yBkrgqFhMwDdBNNIXCcUJeIbO31088139;     yBkrgqFhMwDdBNNIXCcUJeIbO31088139 = yBkrgqFhMwDdBNNIXCcUJeIbO85424944;     yBkrgqFhMwDdBNNIXCcUJeIbO85424944 = yBkrgqFhMwDdBNNIXCcUJeIbO94018225;     yBkrgqFhMwDdBNNIXCcUJeIbO94018225 = yBkrgqFhMwDdBNNIXCcUJeIbO810679;     yBkrgqFhMwDdBNNIXCcUJeIbO810679 = yBkrgqFhMwDdBNNIXCcUJeIbO16830958;     yBkrgqFhMwDdBNNIXCcUJeIbO16830958 = yBkrgqFhMwDdBNNIXCcUJeIbO22169705;     yBkrgqFhMwDdBNNIXCcUJeIbO22169705 = yBkrgqFhMwDdBNNIXCcUJeIbO66517030;     yBkrgqFhMwDdBNNIXCcUJeIbO66517030 = yBkrgqFhMwDdBNNIXCcUJeIbO86655511;     yBkrgqFhMwDdBNNIXCcUJeIbO86655511 = yBkrgqFhMwDdBNNIXCcUJeIbO9181238;     yBkrgqFhMwDdBNNIXCcUJeIbO9181238 = yBkrgqFhMwDdBNNIXCcUJeIbO89262907;     yBkrgqFhMwDdBNNIXCcUJeIbO89262907 = yBkrgqFhMwDdBNNIXCcUJeIbO41528442;     yBkrgqFhMwDdBNNIXCcUJeIbO41528442 = yBkrgqFhMwDdBNNIXCcUJeIbO74004981;     yBkrgqFhMwDdBNNIXCcUJeIbO74004981 = yBkrgqFhMwDdBNNIXCcUJeIbO31805513;     yBkrgqFhMwDdBNNIXCcUJeIbO31805513 = yBkrgqFhMwDdBNNIXCcUJeIbO96332339;     yBkrgqFhMwDdBNNIXCcUJeIbO96332339 = yBkrgqFhMwDdBNNIXCcUJeIbO54207675;     yBkrgqFhMwDdBNNIXCcUJeIbO54207675 = yBkrgqFhMwDdBNNIXCcUJeIbO55934302;     yBkrgqFhMwDdBNNIXCcUJeIbO55934302 = yBkrgqFhMwDdBNNIXCcUJeIbO65985098;     yBkrgqFhMwDdBNNIXCcUJeIbO65985098 = yBkrgqFhMwDdBNNIXCcUJeIbO23906977;     yBkrgqFhMwDdBNNIXCcUJeIbO23906977 = yBkrgqFhMwDdBNNIXCcUJeIbO55087782;     yBkrgqFhMwDdBNNIXCcUJeIbO55087782 = yBkrgqFhMwDdBNNIXCcUJeIbO96278441;     yBkrgqFhMwDdBNNIXCcUJeIbO96278441 = yBkrgqFhMwDdBNNIXCcUJeIbO56469708;     yBkrgqFhMwDdBNNIXCcUJeIbO56469708 = yBkrgqFhMwDdBNNIXCcUJeIbO73026308;     yBkrgqFhMwDdBNNIXCcUJeIbO73026308 = yBkrgqFhMwDdBNNIXCcUJeIbO7993664;     yBkrgqFhMwDdBNNIXCcUJeIbO7993664 = yBkrgqFhMwDdBNNIXCcUJeIbO87159385;     yBkrgqFhMwDdBNNIXCcUJeIbO87159385 = yBkrgqFhMwDdBNNIXCcUJeIbO71450143;     yBkrgqFhMwDdBNNIXCcUJeIbO71450143 = yBkrgqFhMwDdBNNIXCcUJeIbO1838525;     yBkrgqFhMwDdBNNIXCcUJeIbO1838525 = yBkrgqFhMwDdBNNIXCcUJeIbO45210431;     yBkrgqFhMwDdBNNIXCcUJeIbO45210431 = yBkrgqFhMwDdBNNIXCcUJeIbO26626519;     yBkrgqFhMwDdBNNIXCcUJeIbO26626519 = yBkrgqFhMwDdBNNIXCcUJeIbO17091247;     yBkrgqFhMwDdBNNIXCcUJeIbO17091247 = yBkrgqFhMwDdBNNIXCcUJeIbO78764859;     yBkrgqFhMwDdBNNIXCcUJeIbO78764859 = yBkrgqFhMwDdBNNIXCcUJeIbO21028781;     yBkrgqFhMwDdBNNIXCcUJeIbO21028781 = yBkrgqFhMwDdBNNIXCcUJeIbO93119589;     yBkrgqFhMwDdBNNIXCcUJeIbO93119589 = yBkrgqFhMwDdBNNIXCcUJeIbO24447845;     yBkrgqFhMwDdBNNIXCcUJeIbO24447845 = yBkrgqFhMwDdBNNIXCcUJeIbO56408543;     yBkrgqFhMwDdBNNIXCcUJeIbO56408543 = yBkrgqFhMwDdBNNIXCcUJeIbO492890;     yBkrgqFhMwDdBNNIXCcUJeIbO492890 = yBkrgqFhMwDdBNNIXCcUJeIbO30639248;     yBkrgqFhMwDdBNNIXCcUJeIbO30639248 = yBkrgqFhMwDdBNNIXCcUJeIbO41286643;     yBkrgqFhMwDdBNNIXCcUJeIbO41286643 = yBkrgqFhMwDdBNNIXCcUJeIbO56531772;     yBkrgqFhMwDdBNNIXCcUJeIbO56531772 = yBkrgqFhMwDdBNNIXCcUJeIbO8209327;     yBkrgqFhMwDdBNNIXCcUJeIbO8209327 = yBkrgqFhMwDdBNNIXCcUJeIbO1096922;     yBkrgqFhMwDdBNNIXCcUJeIbO1096922 = yBkrgqFhMwDdBNNIXCcUJeIbO31792144;     yBkrgqFhMwDdBNNIXCcUJeIbO31792144 = yBkrgqFhMwDdBNNIXCcUJeIbO20438458;     yBkrgqFhMwDdBNNIXCcUJeIbO20438458 = yBkrgqFhMwDdBNNIXCcUJeIbO69125239;     yBkrgqFhMwDdBNNIXCcUJeIbO69125239 = yBkrgqFhMwDdBNNIXCcUJeIbO86224756;     yBkrgqFhMwDdBNNIXCcUJeIbO86224756 = yBkrgqFhMwDdBNNIXCcUJeIbO94121181;     yBkrgqFhMwDdBNNIXCcUJeIbO94121181 = yBkrgqFhMwDdBNNIXCcUJeIbO99768105;     yBkrgqFhMwDdBNNIXCcUJeIbO99768105 = yBkrgqFhMwDdBNNIXCcUJeIbO17310538;     yBkrgqFhMwDdBNNIXCcUJeIbO17310538 = yBkrgqFhMwDdBNNIXCcUJeIbO16827234;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void RCinpjobkXEqxmFffkmMuJhGJlILPwSkaGXyhbbhmwpayVnLTrrrBvDIU83955340() {     long ceDbdMnETQqPHxDJFZyTGHnyx22944341 = -20809736;    long ceDbdMnETQqPHxDJFZyTGHnyx89407187 = -523924163;    long ceDbdMnETQqPHxDJFZyTGHnyx83827716 = -847358917;    long ceDbdMnETQqPHxDJFZyTGHnyx89977450 = 2794778;    long ceDbdMnETQqPHxDJFZyTGHnyx33126315 = -669658054;    long ceDbdMnETQqPHxDJFZyTGHnyx78686808 = -801127295;    long ceDbdMnETQqPHxDJFZyTGHnyx22924108 = -332929554;    long ceDbdMnETQqPHxDJFZyTGHnyx61321448 = -803454381;    long ceDbdMnETQqPHxDJFZyTGHnyx96502759 = -129352530;    long ceDbdMnETQqPHxDJFZyTGHnyx9236875 = -477231389;    long ceDbdMnETQqPHxDJFZyTGHnyx48741285 = -801990350;    long ceDbdMnETQqPHxDJFZyTGHnyx59736409 = -21440307;    long ceDbdMnETQqPHxDJFZyTGHnyx56480986 = -174974320;    long ceDbdMnETQqPHxDJFZyTGHnyx74382847 = -685686555;    long ceDbdMnETQqPHxDJFZyTGHnyx19069976 = -151666542;    long ceDbdMnETQqPHxDJFZyTGHnyx90452655 = -207792629;    long ceDbdMnETQqPHxDJFZyTGHnyx72190411 = -181964956;    long ceDbdMnETQqPHxDJFZyTGHnyx91640769 = 85052749;    long ceDbdMnETQqPHxDJFZyTGHnyx25393520 = -873271721;    long ceDbdMnETQqPHxDJFZyTGHnyx31882950 = -811774420;    long ceDbdMnETQqPHxDJFZyTGHnyx72034520 = -26120782;    long ceDbdMnETQqPHxDJFZyTGHnyx9330033 = -953695767;    long ceDbdMnETQqPHxDJFZyTGHnyx80814021 = -487264792;    long ceDbdMnETQqPHxDJFZyTGHnyx34946949 = 38819259;    long ceDbdMnETQqPHxDJFZyTGHnyx84432615 = -169209438;    long ceDbdMnETQqPHxDJFZyTGHnyx22435471 = -705981170;    long ceDbdMnETQqPHxDJFZyTGHnyx99073872 = -306762732;    long ceDbdMnETQqPHxDJFZyTGHnyx66361029 = -356579683;    long ceDbdMnETQqPHxDJFZyTGHnyx88430905 = -826038952;    long ceDbdMnETQqPHxDJFZyTGHnyx58947458 = -774559114;    long ceDbdMnETQqPHxDJFZyTGHnyx86244783 = -673862953;    long ceDbdMnETQqPHxDJFZyTGHnyx54436103 = -786026569;    long ceDbdMnETQqPHxDJFZyTGHnyx41291976 = -104110955;    long ceDbdMnETQqPHxDJFZyTGHnyx10894757 = -921733912;    long ceDbdMnETQqPHxDJFZyTGHnyx96779520 = -32510524;    long ceDbdMnETQqPHxDJFZyTGHnyx26068364 = -6810016;    long ceDbdMnETQqPHxDJFZyTGHnyx6302219 = 30893839;    long ceDbdMnETQqPHxDJFZyTGHnyx57356838 = 1364032;    long ceDbdMnETQqPHxDJFZyTGHnyx71919428 = -513598730;    long ceDbdMnETQqPHxDJFZyTGHnyx94595907 = -912492675;    long ceDbdMnETQqPHxDJFZyTGHnyx83975700 = -502383023;    long ceDbdMnETQqPHxDJFZyTGHnyx7638121 = -33067841;    long ceDbdMnETQqPHxDJFZyTGHnyx13716602 = -614062939;    long ceDbdMnETQqPHxDJFZyTGHnyx61180827 = -434055303;    long ceDbdMnETQqPHxDJFZyTGHnyx61068516 = -283192315;    long ceDbdMnETQqPHxDJFZyTGHnyx7461730 = -686332523;    long ceDbdMnETQqPHxDJFZyTGHnyx88865850 = -93389715;    long ceDbdMnETQqPHxDJFZyTGHnyx91479789 = -744381410;    long ceDbdMnETQqPHxDJFZyTGHnyx84164774 = -74819028;    long ceDbdMnETQqPHxDJFZyTGHnyx14181522 = -527394686;    long ceDbdMnETQqPHxDJFZyTGHnyx32912910 = -416496195;    long ceDbdMnETQqPHxDJFZyTGHnyx80364108 = -602829394;    long ceDbdMnETQqPHxDJFZyTGHnyx48665396 = -288953972;    long ceDbdMnETQqPHxDJFZyTGHnyx27057019 = -768149489;    long ceDbdMnETQqPHxDJFZyTGHnyx11920820 = -139482544;    long ceDbdMnETQqPHxDJFZyTGHnyx13614309 = -67113970;    long ceDbdMnETQqPHxDJFZyTGHnyx8593167 = 63340629;    long ceDbdMnETQqPHxDJFZyTGHnyx48880768 = -786178177;    long ceDbdMnETQqPHxDJFZyTGHnyx5544836 = -827995784;    long ceDbdMnETQqPHxDJFZyTGHnyx10690844 = -963676884;    long ceDbdMnETQqPHxDJFZyTGHnyx79612936 = -394364564;    long ceDbdMnETQqPHxDJFZyTGHnyx56563078 = -976349872;    long ceDbdMnETQqPHxDJFZyTGHnyx72890542 = -977415430;    long ceDbdMnETQqPHxDJFZyTGHnyx37555301 = -354793416;    long ceDbdMnETQqPHxDJFZyTGHnyx22992092 = -803368436;    long ceDbdMnETQqPHxDJFZyTGHnyx94305181 = 84036218;    long ceDbdMnETQqPHxDJFZyTGHnyx18444434 = -917329353;    long ceDbdMnETQqPHxDJFZyTGHnyx45586229 = -253240409;    long ceDbdMnETQqPHxDJFZyTGHnyx77603327 = -553176031;    long ceDbdMnETQqPHxDJFZyTGHnyx93001612 = -44856526;    long ceDbdMnETQqPHxDJFZyTGHnyx84150436 = -138686469;    long ceDbdMnETQqPHxDJFZyTGHnyx14833573 = -83328988;    long ceDbdMnETQqPHxDJFZyTGHnyx19721341 = -401348522;    long ceDbdMnETQqPHxDJFZyTGHnyx30797612 = -960779047;    long ceDbdMnETQqPHxDJFZyTGHnyx47907249 = -209391397;    long ceDbdMnETQqPHxDJFZyTGHnyx64396400 = -993052941;    long ceDbdMnETQqPHxDJFZyTGHnyx95613430 = -239632829;    long ceDbdMnETQqPHxDJFZyTGHnyx19633195 = 46790510;    long ceDbdMnETQqPHxDJFZyTGHnyx73878433 = -677988426;    long ceDbdMnETQqPHxDJFZyTGHnyx76970885 = -482876916;    long ceDbdMnETQqPHxDJFZyTGHnyx33569620 = -512591455;    long ceDbdMnETQqPHxDJFZyTGHnyx7594084 = -562381322;    long ceDbdMnETQqPHxDJFZyTGHnyx82196255 = -181760656;    long ceDbdMnETQqPHxDJFZyTGHnyx74249383 = -198644266;    long ceDbdMnETQqPHxDJFZyTGHnyx26034549 = -258062920;    long ceDbdMnETQqPHxDJFZyTGHnyx5880675 = 28966440;    long ceDbdMnETQqPHxDJFZyTGHnyx5770708 = -397072598;    long ceDbdMnETQqPHxDJFZyTGHnyx14234958 = -335961466;    long ceDbdMnETQqPHxDJFZyTGHnyx98973937 = -682251368;    long ceDbdMnETQqPHxDJFZyTGHnyx83165212 = -965396555;    long ceDbdMnETQqPHxDJFZyTGHnyx17475198 = 29849354;    long ceDbdMnETQqPHxDJFZyTGHnyx57421451 = -182927985;    long ceDbdMnETQqPHxDJFZyTGHnyx51812003 = -170640185;    long ceDbdMnETQqPHxDJFZyTGHnyx61228585 = -549921846;    long ceDbdMnETQqPHxDJFZyTGHnyx14982972 = -418128111;    long ceDbdMnETQqPHxDJFZyTGHnyx27412623 = -526033152;    long ceDbdMnETQqPHxDJFZyTGHnyx34747578 = -55652412;    long ceDbdMnETQqPHxDJFZyTGHnyx76161300 = -159269523;    long ceDbdMnETQqPHxDJFZyTGHnyx38188736 = -630686868;    long ceDbdMnETQqPHxDJFZyTGHnyx66763334 = -20809736;     ceDbdMnETQqPHxDJFZyTGHnyx22944341 = ceDbdMnETQqPHxDJFZyTGHnyx89407187;     ceDbdMnETQqPHxDJFZyTGHnyx89407187 = ceDbdMnETQqPHxDJFZyTGHnyx83827716;     ceDbdMnETQqPHxDJFZyTGHnyx83827716 = ceDbdMnETQqPHxDJFZyTGHnyx89977450;     ceDbdMnETQqPHxDJFZyTGHnyx89977450 = ceDbdMnETQqPHxDJFZyTGHnyx33126315;     ceDbdMnETQqPHxDJFZyTGHnyx33126315 = ceDbdMnETQqPHxDJFZyTGHnyx78686808;     ceDbdMnETQqPHxDJFZyTGHnyx78686808 = ceDbdMnETQqPHxDJFZyTGHnyx22924108;     ceDbdMnETQqPHxDJFZyTGHnyx22924108 = ceDbdMnETQqPHxDJFZyTGHnyx61321448;     ceDbdMnETQqPHxDJFZyTGHnyx61321448 = ceDbdMnETQqPHxDJFZyTGHnyx96502759;     ceDbdMnETQqPHxDJFZyTGHnyx96502759 = ceDbdMnETQqPHxDJFZyTGHnyx9236875;     ceDbdMnETQqPHxDJFZyTGHnyx9236875 = ceDbdMnETQqPHxDJFZyTGHnyx48741285;     ceDbdMnETQqPHxDJFZyTGHnyx48741285 = ceDbdMnETQqPHxDJFZyTGHnyx59736409;     ceDbdMnETQqPHxDJFZyTGHnyx59736409 = ceDbdMnETQqPHxDJFZyTGHnyx56480986;     ceDbdMnETQqPHxDJFZyTGHnyx56480986 = ceDbdMnETQqPHxDJFZyTGHnyx74382847;     ceDbdMnETQqPHxDJFZyTGHnyx74382847 = ceDbdMnETQqPHxDJFZyTGHnyx19069976;     ceDbdMnETQqPHxDJFZyTGHnyx19069976 = ceDbdMnETQqPHxDJFZyTGHnyx90452655;     ceDbdMnETQqPHxDJFZyTGHnyx90452655 = ceDbdMnETQqPHxDJFZyTGHnyx72190411;     ceDbdMnETQqPHxDJFZyTGHnyx72190411 = ceDbdMnETQqPHxDJFZyTGHnyx91640769;     ceDbdMnETQqPHxDJFZyTGHnyx91640769 = ceDbdMnETQqPHxDJFZyTGHnyx25393520;     ceDbdMnETQqPHxDJFZyTGHnyx25393520 = ceDbdMnETQqPHxDJFZyTGHnyx31882950;     ceDbdMnETQqPHxDJFZyTGHnyx31882950 = ceDbdMnETQqPHxDJFZyTGHnyx72034520;     ceDbdMnETQqPHxDJFZyTGHnyx72034520 = ceDbdMnETQqPHxDJFZyTGHnyx9330033;     ceDbdMnETQqPHxDJFZyTGHnyx9330033 = ceDbdMnETQqPHxDJFZyTGHnyx80814021;     ceDbdMnETQqPHxDJFZyTGHnyx80814021 = ceDbdMnETQqPHxDJFZyTGHnyx34946949;     ceDbdMnETQqPHxDJFZyTGHnyx34946949 = ceDbdMnETQqPHxDJFZyTGHnyx84432615;     ceDbdMnETQqPHxDJFZyTGHnyx84432615 = ceDbdMnETQqPHxDJFZyTGHnyx22435471;     ceDbdMnETQqPHxDJFZyTGHnyx22435471 = ceDbdMnETQqPHxDJFZyTGHnyx99073872;     ceDbdMnETQqPHxDJFZyTGHnyx99073872 = ceDbdMnETQqPHxDJFZyTGHnyx66361029;     ceDbdMnETQqPHxDJFZyTGHnyx66361029 = ceDbdMnETQqPHxDJFZyTGHnyx88430905;     ceDbdMnETQqPHxDJFZyTGHnyx88430905 = ceDbdMnETQqPHxDJFZyTGHnyx58947458;     ceDbdMnETQqPHxDJFZyTGHnyx58947458 = ceDbdMnETQqPHxDJFZyTGHnyx86244783;     ceDbdMnETQqPHxDJFZyTGHnyx86244783 = ceDbdMnETQqPHxDJFZyTGHnyx54436103;     ceDbdMnETQqPHxDJFZyTGHnyx54436103 = ceDbdMnETQqPHxDJFZyTGHnyx41291976;     ceDbdMnETQqPHxDJFZyTGHnyx41291976 = ceDbdMnETQqPHxDJFZyTGHnyx10894757;     ceDbdMnETQqPHxDJFZyTGHnyx10894757 = ceDbdMnETQqPHxDJFZyTGHnyx96779520;     ceDbdMnETQqPHxDJFZyTGHnyx96779520 = ceDbdMnETQqPHxDJFZyTGHnyx26068364;     ceDbdMnETQqPHxDJFZyTGHnyx26068364 = ceDbdMnETQqPHxDJFZyTGHnyx6302219;     ceDbdMnETQqPHxDJFZyTGHnyx6302219 = ceDbdMnETQqPHxDJFZyTGHnyx57356838;     ceDbdMnETQqPHxDJFZyTGHnyx57356838 = ceDbdMnETQqPHxDJFZyTGHnyx71919428;     ceDbdMnETQqPHxDJFZyTGHnyx71919428 = ceDbdMnETQqPHxDJFZyTGHnyx94595907;     ceDbdMnETQqPHxDJFZyTGHnyx94595907 = ceDbdMnETQqPHxDJFZyTGHnyx83975700;     ceDbdMnETQqPHxDJFZyTGHnyx83975700 = ceDbdMnETQqPHxDJFZyTGHnyx7638121;     ceDbdMnETQqPHxDJFZyTGHnyx7638121 = ceDbdMnETQqPHxDJFZyTGHnyx13716602;     ceDbdMnETQqPHxDJFZyTGHnyx13716602 = ceDbdMnETQqPHxDJFZyTGHnyx61180827;     ceDbdMnETQqPHxDJFZyTGHnyx61180827 = ceDbdMnETQqPHxDJFZyTGHnyx61068516;     ceDbdMnETQqPHxDJFZyTGHnyx61068516 = ceDbdMnETQqPHxDJFZyTGHnyx7461730;     ceDbdMnETQqPHxDJFZyTGHnyx7461730 = ceDbdMnETQqPHxDJFZyTGHnyx88865850;     ceDbdMnETQqPHxDJFZyTGHnyx88865850 = ceDbdMnETQqPHxDJFZyTGHnyx91479789;     ceDbdMnETQqPHxDJFZyTGHnyx91479789 = ceDbdMnETQqPHxDJFZyTGHnyx84164774;     ceDbdMnETQqPHxDJFZyTGHnyx84164774 = ceDbdMnETQqPHxDJFZyTGHnyx14181522;     ceDbdMnETQqPHxDJFZyTGHnyx14181522 = ceDbdMnETQqPHxDJFZyTGHnyx32912910;     ceDbdMnETQqPHxDJFZyTGHnyx32912910 = ceDbdMnETQqPHxDJFZyTGHnyx80364108;     ceDbdMnETQqPHxDJFZyTGHnyx80364108 = ceDbdMnETQqPHxDJFZyTGHnyx48665396;     ceDbdMnETQqPHxDJFZyTGHnyx48665396 = ceDbdMnETQqPHxDJFZyTGHnyx27057019;     ceDbdMnETQqPHxDJFZyTGHnyx27057019 = ceDbdMnETQqPHxDJFZyTGHnyx11920820;     ceDbdMnETQqPHxDJFZyTGHnyx11920820 = ceDbdMnETQqPHxDJFZyTGHnyx13614309;     ceDbdMnETQqPHxDJFZyTGHnyx13614309 = ceDbdMnETQqPHxDJFZyTGHnyx8593167;     ceDbdMnETQqPHxDJFZyTGHnyx8593167 = ceDbdMnETQqPHxDJFZyTGHnyx48880768;     ceDbdMnETQqPHxDJFZyTGHnyx48880768 = ceDbdMnETQqPHxDJFZyTGHnyx5544836;     ceDbdMnETQqPHxDJFZyTGHnyx5544836 = ceDbdMnETQqPHxDJFZyTGHnyx10690844;     ceDbdMnETQqPHxDJFZyTGHnyx10690844 = ceDbdMnETQqPHxDJFZyTGHnyx79612936;     ceDbdMnETQqPHxDJFZyTGHnyx79612936 = ceDbdMnETQqPHxDJFZyTGHnyx56563078;     ceDbdMnETQqPHxDJFZyTGHnyx56563078 = ceDbdMnETQqPHxDJFZyTGHnyx72890542;     ceDbdMnETQqPHxDJFZyTGHnyx72890542 = ceDbdMnETQqPHxDJFZyTGHnyx37555301;     ceDbdMnETQqPHxDJFZyTGHnyx37555301 = ceDbdMnETQqPHxDJFZyTGHnyx22992092;     ceDbdMnETQqPHxDJFZyTGHnyx22992092 = ceDbdMnETQqPHxDJFZyTGHnyx94305181;     ceDbdMnETQqPHxDJFZyTGHnyx94305181 = ceDbdMnETQqPHxDJFZyTGHnyx18444434;     ceDbdMnETQqPHxDJFZyTGHnyx18444434 = ceDbdMnETQqPHxDJFZyTGHnyx45586229;     ceDbdMnETQqPHxDJFZyTGHnyx45586229 = ceDbdMnETQqPHxDJFZyTGHnyx77603327;     ceDbdMnETQqPHxDJFZyTGHnyx77603327 = ceDbdMnETQqPHxDJFZyTGHnyx93001612;     ceDbdMnETQqPHxDJFZyTGHnyx93001612 = ceDbdMnETQqPHxDJFZyTGHnyx84150436;     ceDbdMnETQqPHxDJFZyTGHnyx84150436 = ceDbdMnETQqPHxDJFZyTGHnyx14833573;     ceDbdMnETQqPHxDJFZyTGHnyx14833573 = ceDbdMnETQqPHxDJFZyTGHnyx19721341;     ceDbdMnETQqPHxDJFZyTGHnyx19721341 = ceDbdMnETQqPHxDJFZyTGHnyx30797612;     ceDbdMnETQqPHxDJFZyTGHnyx30797612 = ceDbdMnETQqPHxDJFZyTGHnyx47907249;     ceDbdMnETQqPHxDJFZyTGHnyx47907249 = ceDbdMnETQqPHxDJFZyTGHnyx64396400;     ceDbdMnETQqPHxDJFZyTGHnyx64396400 = ceDbdMnETQqPHxDJFZyTGHnyx95613430;     ceDbdMnETQqPHxDJFZyTGHnyx95613430 = ceDbdMnETQqPHxDJFZyTGHnyx19633195;     ceDbdMnETQqPHxDJFZyTGHnyx19633195 = ceDbdMnETQqPHxDJFZyTGHnyx73878433;     ceDbdMnETQqPHxDJFZyTGHnyx73878433 = ceDbdMnETQqPHxDJFZyTGHnyx76970885;     ceDbdMnETQqPHxDJFZyTGHnyx76970885 = ceDbdMnETQqPHxDJFZyTGHnyx33569620;     ceDbdMnETQqPHxDJFZyTGHnyx33569620 = ceDbdMnETQqPHxDJFZyTGHnyx7594084;     ceDbdMnETQqPHxDJFZyTGHnyx7594084 = ceDbdMnETQqPHxDJFZyTGHnyx82196255;     ceDbdMnETQqPHxDJFZyTGHnyx82196255 = ceDbdMnETQqPHxDJFZyTGHnyx74249383;     ceDbdMnETQqPHxDJFZyTGHnyx74249383 = ceDbdMnETQqPHxDJFZyTGHnyx26034549;     ceDbdMnETQqPHxDJFZyTGHnyx26034549 = ceDbdMnETQqPHxDJFZyTGHnyx5880675;     ceDbdMnETQqPHxDJFZyTGHnyx5880675 = ceDbdMnETQqPHxDJFZyTGHnyx5770708;     ceDbdMnETQqPHxDJFZyTGHnyx5770708 = ceDbdMnETQqPHxDJFZyTGHnyx14234958;     ceDbdMnETQqPHxDJFZyTGHnyx14234958 = ceDbdMnETQqPHxDJFZyTGHnyx98973937;     ceDbdMnETQqPHxDJFZyTGHnyx98973937 = ceDbdMnETQqPHxDJFZyTGHnyx83165212;     ceDbdMnETQqPHxDJFZyTGHnyx83165212 = ceDbdMnETQqPHxDJFZyTGHnyx17475198;     ceDbdMnETQqPHxDJFZyTGHnyx17475198 = ceDbdMnETQqPHxDJFZyTGHnyx57421451;     ceDbdMnETQqPHxDJFZyTGHnyx57421451 = ceDbdMnETQqPHxDJFZyTGHnyx51812003;     ceDbdMnETQqPHxDJFZyTGHnyx51812003 = ceDbdMnETQqPHxDJFZyTGHnyx61228585;     ceDbdMnETQqPHxDJFZyTGHnyx61228585 = ceDbdMnETQqPHxDJFZyTGHnyx14982972;     ceDbdMnETQqPHxDJFZyTGHnyx14982972 = ceDbdMnETQqPHxDJFZyTGHnyx27412623;     ceDbdMnETQqPHxDJFZyTGHnyx27412623 = ceDbdMnETQqPHxDJFZyTGHnyx34747578;     ceDbdMnETQqPHxDJFZyTGHnyx34747578 = ceDbdMnETQqPHxDJFZyTGHnyx76161300;     ceDbdMnETQqPHxDJFZyTGHnyx76161300 = ceDbdMnETQqPHxDJFZyTGHnyx38188736;     ceDbdMnETQqPHxDJFZyTGHnyx38188736 = ceDbdMnETQqPHxDJFZyTGHnyx66763334;     ceDbdMnETQqPHxDJFZyTGHnyx66763334 = ceDbdMnETQqPHxDJFZyTGHnyx22944341;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void jmNtEsBrDrsBTEbdHSakqYJpbIbPNZnHysZaerNGSvpmIxOoJvLwEsrLd51246939() {     long YRwRmedElDafByQFUSujWhdun58403309 = -487086636;    long YRwRmedElDafByQFUSujWhdun2679267 = -404475769;    long YRwRmedElDafByQFUSujWhdun21214193 = -513025992;    long YRwRmedElDafByQFUSujWhdun62200805 = -918356293;    long YRwRmedElDafByQFUSujWhdun89411583 = -775256899;    long YRwRmedElDafByQFUSujWhdun14909681 = 36524809;    long YRwRmedElDafByQFUSujWhdun33581514 = -177655289;    long YRwRmedElDafByQFUSujWhdun23453009 = -447688521;    long YRwRmedElDafByQFUSujWhdun98020364 = -617683937;    long YRwRmedElDafByQFUSujWhdun24139587 = -141918387;    long YRwRmedElDafByQFUSujWhdun86923019 = -603998079;    long YRwRmedElDafByQFUSujWhdun60304558 = -985561078;    long YRwRmedElDafByQFUSujWhdun94715631 = -726986825;    long YRwRmedElDafByQFUSujWhdun27523711 = -662049964;    long YRwRmedElDafByQFUSujWhdun77264492 = -655091557;    long YRwRmedElDafByQFUSujWhdun73993956 = -943604236;    long YRwRmedElDafByQFUSujWhdun28026348 = -708939508;    long YRwRmedElDafByQFUSujWhdun91400960 = 11624680;    long YRwRmedElDafByQFUSujWhdun25943850 = -89835142;    long YRwRmedElDafByQFUSujWhdun25720168 = -138335485;    long YRwRmedElDafByQFUSujWhdun85121383 = -783395471;    long YRwRmedElDafByQFUSujWhdun12751558 = 59667939;    long YRwRmedElDafByQFUSujWhdun51339401 = -124896976;    long YRwRmedElDafByQFUSujWhdun28739894 = -472005345;    long YRwRmedElDafByQFUSujWhdun92450566 = -193194637;    long YRwRmedElDafByQFUSujWhdun33133643 = -394557977;    long YRwRmedElDafByQFUSujWhdun59494447 = -113046873;    long YRwRmedElDafByQFUSujWhdun7089455 = -526351858;    long YRwRmedElDafByQFUSujWhdun35099120 = -300133754;    long YRwRmedElDafByQFUSujWhdun64480869 = -809066285;    long YRwRmedElDafByQFUSujWhdun4828016 = -125843440;    long YRwRmedElDafByQFUSujWhdun92259121 = -558997983;    long YRwRmedElDafByQFUSujWhdun53509987 = -251706932;    long YRwRmedElDafByQFUSujWhdun40643183 = -986427725;    long YRwRmedElDafByQFUSujWhdun62587974 = 16389225;    long YRwRmedElDafByQFUSujWhdun77629207 = -221375322;    long YRwRmedElDafByQFUSujWhdun55714035 = -933802201;    long YRwRmedElDafByQFUSujWhdun8572242 = 18708451;    long YRwRmedElDafByQFUSujWhdun2309991 = -164475006;    long YRwRmedElDafByQFUSujWhdun58867439 = -377755221;    long YRwRmedElDafByQFUSujWhdun17427309 = -271581937;    long YRwRmedElDafByQFUSujWhdun97003247 = -727613132;    long YRwRmedElDafByQFUSujWhdun3099981 = -167243725;    long YRwRmedElDafByQFUSujWhdun1312166 = 61612287;    long YRwRmedElDafByQFUSujWhdun61084974 = -109703476;    long YRwRmedElDafByQFUSujWhdun53423058 = -725256155;    long YRwRmedElDafByQFUSujWhdun8211015 = -577376076;    long YRwRmedElDafByQFUSujWhdun9206101 = -910908004;    long YRwRmedElDafByQFUSujWhdun7057440 = -838555908;    long YRwRmedElDafByQFUSujWhdun38711111 = 81578498;    long YRwRmedElDafByQFUSujWhdun13683634 = -290772753;    long YRwRmedElDafByQFUSujWhdun63849581 = -816481740;    long YRwRmedElDafByQFUSujWhdun17286545 = -44999526;    long YRwRmedElDafByQFUSujWhdun43048865 = -959657989;    long YRwRmedElDafByQFUSujWhdun66125556 = -485972690;    long YRwRmedElDafByQFUSujWhdun45651752 = -446754575;    long YRwRmedElDafByQFUSujWhdun51339865 = -179578793;    long YRwRmedElDafByQFUSujWhdun92474299 = 58979352;    long YRwRmedElDafByQFUSujWhdun69750239 = -625161657;    long YRwRmedElDafByQFUSujWhdun56277941 = -280698923;    long YRwRmedElDafByQFUSujWhdun55415234 = -850428318;    long YRwRmedElDafByQFUSujWhdun26492059 = -651303431;    long YRwRmedElDafByQFUSujWhdun88353888 = -47554768;    long YRwRmedElDafByQFUSujWhdun33539495 = -808617653;    long YRwRmedElDafByQFUSujWhdun19311572 = 83925053;    long YRwRmedElDafByQFUSujWhdun94663897 = 54999904;    long YRwRmedElDafByQFUSujWhdun6794571 = -633854147;    long YRwRmedElDafByQFUSujWhdun54072448 = -740559100;    long YRwRmedElDafByQFUSujWhdun64935736 = -578439190;    long YRwRmedElDafByQFUSujWhdun99635284 = -333716235;    long YRwRmedElDafByQFUSujWhdun18279921 = 90197964;    long YRwRmedElDafByQFUSujWhdun19454106 = -627647960;    long YRwRmedElDafByQFUSujWhdun89090970 = -823900314;    long YRwRmedElDafByQFUSujWhdun67076410 = -712079922;    long YRwRmedElDafByQFUSujWhdun8292860 = -866753549;    long YRwRmedElDafByQFUSujWhdun88118136 = 44217661;    long YRwRmedElDafByQFUSujWhdun9651578 = -773088337;    long YRwRmedElDafByQFUSujWhdun50027236 = -86509264;    long YRwRmedElDafByQFUSujWhdun67654919 = -262301869;    long YRwRmedElDafByQFUSujWhdun39027508 = -467938482;    long YRwRmedElDafByQFUSujWhdun24922628 = -817181901;    long YRwRmedElDafByQFUSujWhdun50288346 = -202138869;    long YRwRmedElDafByQFUSujWhdun32015 = -687795950;    long YRwRmedElDafByQFUSujWhdun96388008 = -281712253;    long YRwRmedElDafByQFUSujWhdun50797235 = -418293533;    long YRwRmedElDafByQFUSujWhdun40978434 = -309361701;    long YRwRmedElDafByQFUSujWhdun74972577 = -413998458;    long YRwRmedElDafByQFUSujWhdun10461122 = -292048944;    long YRwRmedElDafByQFUSujWhdun74517627 = -400455035;    long YRwRmedElDafByQFUSujWhdun16936223 = -536856200;    long YRwRmedElDafByQFUSujWhdun26289343 = 58203471;    long YRwRmedElDafByQFUSujWhdun63239736 = -892781554;    long YRwRmedElDafByQFUSujWhdun38822003 = -356129893;    long YRwRmedElDafByQFUSujWhdun46032049 = -883776084;    long YRwRmedElDafByQFUSujWhdun3452206 = -527326903;    long YRwRmedElDafByQFUSujWhdun90935249 = -620278506;    long YRwRmedElDafByQFUSujWhdun8649359 = -580058365;    long YRwRmedElDafByQFUSujWhdun69560485 = -358626072;    long YRwRmedElDafByQFUSujWhdun82000593 = 77687233;    long YRwRmedElDafByQFUSujWhdun66421076 = -487086636;     YRwRmedElDafByQFUSujWhdun58403309 = YRwRmedElDafByQFUSujWhdun2679267;     YRwRmedElDafByQFUSujWhdun2679267 = YRwRmedElDafByQFUSujWhdun21214193;     YRwRmedElDafByQFUSujWhdun21214193 = YRwRmedElDafByQFUSujWhdun62200805;     YRwRmedElDafByQFUSujWhdun62200805 = YRwRmedElDafByQFUSujWhdun89411583;     YRwRmedElDafByQFUSujWhdun89411583 = YRwRmedElDafByQFUSujWhdun14909681;     YRwRmedElDafByQFUSujWhdun14909681 = YRwRmedElDafByQFUSujWhdun33581514;     YRwRmedElDafByQFUSujWhdun33581514 = YRwRmedElDafByQFUSujWhdun23453009;     YRwRmedElDafByQFUSujWhdun23453009 = YRwRmedElDafByQFUSujWhdun98020364;     YRwRmedElDafByQFUSujWhdun98020364 = YRwRmedElDafByQFUSujWhdun24139587;     YRwRmedElDafByQFUSujWhdun24139587 = YRwRmedElDafByQFUSujWhdun86923019;     YRwRmedElDafByQFUSujWhdun86923019 = YRwRmedElDafByQFUSujWhdun60304558;     YRwRmedElDafByQFUSujWhdun60304558 = YRwRmedElDafByQFUSujWhdun94715631;     YRwRmedElDafByQFUSujWhdun94715631 = YRwRmedElDafByQFUSujWhdun27523711;     YRwRmedElDafByQFUSujWhdun27523711 = YRwRmedElDafByQFUSujWhdun77264492;     YRwRmedElDafByQFUSujWhdun77264492 = YRwRmedElDafByQFUSujWhdun73993956;     YRwRmedElDafByQFUSujWhdun73993956 = YRwRmedElDafByQFUSujWhdun28026348;     YRwRmedElDafByQFUSujWhdun28026348 = YRwRmedElDafByQFUSujWhdun91400960;     YRwRmedElDafByQFUSujWhdun91400960 = YRwRmedElDafByQFUSujWhdun25943850;     YRwRmedElDafByQFUSujWhdun25943850 = YRwRmedElDafByQFUSujWhdun25720168;     YRwRmedElDafByQFUSujWhdun25720168 = YRwRmedElDafByQFUSujWhdun85121383;     YRwRmedElDafByQFUSujWhdun85121383 = YRwRmedElDafByQFUSujWhdun12751558;     YRwRmedElDafByQFUSujWhdun12751558 = YRwRmedElDafByQFUSujWhdun51339401;     YRwRmedElDafByQFUSujWhdun51339401 = YRwRmedElDafByQFUSujWhdun28739894;     YRwRmedElDafByQFUSujWhdun28739894 = YRwRmedElDafByQFUSujWhdun92450566;     YRwRmedElDafByQFUSujWhdun92450566 = YRwRmedElDafByQFUSujWhdun33133643;     YRwRmedElDafByQFUSujWhdun33133643 = YRwRmedElDafByQFUSujWhdun59494447;     YRwRmedElDafByQFUSujWhdun59494447 = YRwRmedElDafByQFUSujWhdun7089455;     YRwRmedElDafByQFUSujWhdun7089455 = YRwRmedElDafByQFUSujWhdun35099120;     YRwRmedElDafByQFUSujWhdun35099120 = YRwRmedElDafByQFUSujWhdun64480869;     YRwRmedElDafByQFUSujWhdun64480869 = YRwRmedElDafByQFUSujWhdun4828016;     YRwRmedElDafByQFUSujWhdun4828016 = YRwRmedElDafByQFUSujWhdun92259121;     YRwRmedElDafByQFUSujWhdun92259121 = YRwRmedElDafByQFUSujWhdun53509987;     YRwRmedElDafByQFUSujWhdun53509987 = YRwRmedElDafByQFUSujWhdun40643183;     YRwRmedElDafByQFUSujWhdun40643183 = YRwRmedElDafByQFUSujWhdun62587974;     YRwRmedElDafByQFUSujWhdun62587974 = YRwRmedElDafByQFUSujWhdun77629207;     YRwRmedElDafByQFUSujWhdun77629207 = YRwRmedElDafByQFUSujWhdun55714035;     YRwRmedElDafByQFUSujWhdun55714035 = YRwRmedElDafByQFUSujWhdun8572242;     YRwRmedElDafByQFUSujWhdun8572242 = YRwRmedElDafByQFUSujWhdun2309991;     YRwRmedElDafByQFUSujWhdun2309991 = YRwRmedElDafByQFUSujWhdun58867439;     YRwRmedElDafByQFUSujWhdun58867439 = YRwRmedElDafByQFUSujWhdun17427309;     YRwRmedElDafByQFUSujWhdun17427309 = YRwRmedElDafByQFUSujWhdun97003247;     YRwRmedElDafByQFUSujWhdun97003247 = YRwRmedElDafByQFUSujWhdun3099981;     YRwRmedElDafByQFUSujWhdun3099981 = YRwRmedElDafByQFUSujWhdun1312166;     YRwRmedElDafByQFUSujWhdun1312166 = YRwRmedElDafByQFUSujWhdun61084974;     YRwRmedElDafByQFUSujWhdun61084974 = YRwRmedElDafByQFUSujWhdun53423058;     YRwRmedElDafByQFUSujWhdun53423058 = YRwRmedElDafByQFUSujWhdun8211015;     YRwRmedElDafByQFUSujWhdun8211015 = YRwRmedElDafByQFUSujWhdun9206101;     YRwRmedElDafByQFUSujWhdun9206101 = YRwRmedElDafByQFUSujWhdun7057440;     YRwRmedElDafByQFUSujWhdun7057440 = YRwRmedElDafByQFUSujWhdun38711111;     YRwRmedElDafByQFUSujWhdun38711111 = YRwRmedElDafByQFUSujWhdun13683634;     YRwRmedElDafByQFUSujWhdun13683634 = YRwRmedElDafByQFUSujWhdun63849581;     YRwRmedElDafByQFUSujWhdun63849581 = YRwRmedElDafByQFUSujWhdun17286545;     YRwRmedElDafByQFUSujWhdun17286545 = YRwRmedElDafByQFUSujWhdun43048865;     YRwRmedElDafByQFUSujWhdun43048865 = YRwRmedElDafByQFUSujWhdun66125556;     YRwRmedElDafByQFUSujWhdun66125556 = YRwRmedElDafByQFUSujWhdun45651752;     YRwRmedElDafByQFUSujWhdun45651752 = YRwRmedElDafByQFUSujWhdun51339865;     YRwRmedElDafByQFUSujWhdun51339865 = YRwRmedElDafByQFUSujWhdun92474299;     YRwRmedElDafByQFUSujWhdun92474299 = YRwRmedElDafByQFUSujWhdun69750239;     YRwRmedElDafByQFUSujWhdun69750239 = YRwRmedElDafByQFUSujWhdun56277941;     YRwRmedElDafByQFUSujWhdun56277941 = YRwRmedElDafByQFUSujWhdun55415234;     YRwRmedElDafByQFUSujWhdun55415234 = YRwRmedElDafByQFUSujWhdun26492059;     YRwRmedElDafByQFUSujWhdun26492059 = YRwRmedElDafByQFUSujWhdun88353888;     YRwRmedElDafByQFUSujWhdun88353888 = YRwRmedElDafByQFUSujWhdun33539495;     YRwRmedElDafByQFUSujWhdun33539495 = YRwRmedElDafByQFUSujWhdun19311572;     YRwRmedElDafByQFUSujWhdun19311572 = YRwRmedElDafByQFUSujWhdun94663897;     YRwRmedElDafByQFUSujWhdun94663897 = YRwRmedElDafByQFUSujWhdun6794571;     YRwRmedElDafByQFUSujWhdun6794571 = YRwRmedElDafByQFUSujWhdun54072448;     YRwRmedElDafByQFUSujWhdun54072448 = YRwRmedElDafByQFUSujWhdun64935736;     YRwRmedElDafByQFUSujWhdun64935736 = YRwRmedElDafByQFUSujWhdun99635284;     YRwRmedElDafByQFUSujWhdun99635284 = YRwRmedElDafByQFUSujWhdun18279921;     YRwRmedElDafByQFUSujWhdun18279921 = YRwRmedElDafByQFUSujWhdun19454106;     YRwRmedElDafByQFUSujWhdun19454106 = YRwRmedElDafByQFUSujWhdun89090970;     YRwRmedElDafByQFUSujWhdun89090970 = YRwRmedElDafByQFUSujWhdun67076410;     YRwRmedElDafByQFUSujWhdun67076410 = YRwRmedElDafByQFUSujWhdun8292860;     YRwRmedElDafByQFUSujWhdun8292860 = YRwRmedElDafByQFUSujWhdun88118136;     YRwRmedElDafByQFUSujWhdun88118136 = YRwRmedElDafByQFUSujWhdun9651578;     YRwRmedElDafByQFUSujWhdun9651578 = YRwRmedElDafByQFUSujWhdun50027236;     YRwRmedElDafByQFUSujWhdun50027236 = YRwRmedElDafByQFUSujWhdun67654919;     YRwRmedElDafByQFUSujWhdun67654919 = YRwRmedElDafByQFUSujWhdun39027508;     YRwRmedElDafByQFUSujWhdun39027508 = YRwRmedElDafByQFUSujWhdun24922628;     YRwRmedElDafByQFUSujWhdun24922628 = YRwRmedElDafByQFUSujWhdun50288346;     YRwRmedElDafByQFUSujWhdun50288346 = YRwRmedElDafByQFUSujWhdun32015;     YRwRmedElDafByQFUSujWhdun32015 = YRwRmedElDafByQFUSujWhdun96388008;     YRwRmedElDafByQFUSujWhdun96388008 = YRwRmedElDafByQFUSujWhdun50797235;     YRwRmedElDafByQFUSujWhdun50797235 = YRwRmedElDafByQFUSujWhdun40978434;     YRwRmedElDafByQFUSujWhdun40978434 = YRwRmedElDafByQFUSujWhdun74972577;     YRwRmedElDafByQFUSujWhdun74972577 = YRwRmedElDafByQFUSujWhdun10461122;     YRwRmedElDafByQFUSujWhdun10461122 = YRwRmedElDafByQFUSujWhdun74517627;     YRwRmedElDafByQFUSujWhdun74517627 = YRwRmedElDafByQFUSujWhdun16936223;     YRwRmedElDafByQFUSujWhdun16936223 = YRwRmedElDafByQFUSujWhdun26289343;     YRwRmedElDafByQFUSujWhdun26289343 = YRwRmedElDafByQFUSujWhdun63239736;     YRwRmedElDafByQFUSujWhdun63239736 = YRwRmedElDafByQFUSujWhdun38822003;     YRwRmedElDafByQFUSujWhdun38822003 = YRwRmedElDafByQFUSujWhdun46032049;     YRwRmedElDafByQFUSujWhdun46032049 = YRwRmedElDafByQFUSujWhdun3452206;     YRwRmedElDafByQFUSujWhdun3452206 = YRwRmedElDafByQFUSujWhdun90935249;     YRwRmedElDafByQFUSujWhdun90935249 = YRwRmedElDafByQFUSujWhdun8649359;     YRwRmedElDafByQFUSujWhdun8649359 = YRwRmedElDafByQFUSujWhdun69560485;     YRwRmedElDafByQFUSujWhdun69560485 = YRwRmedElDafByQFUSujWhdun82000593;     YRwRmedElDafByQFUSujWhdun82000593 = YRwRmedElDafByQFUSujWhdun66421076;     YRwRmedElDafByQFUSujWhdun66421076 = YRwRmedElDafByQFUSujWhdun58403309;}
// Junk Finished
